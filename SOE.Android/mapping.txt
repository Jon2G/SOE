# compiler: R8
# compiler_version: 2.2.64
# min_api: 23
# compiler_hash: engineering
# pg_map_id: a9a836b
# common_typos_disable
android.print.PdfLayoutResultCallback -> android.print.PdfLayoutResultCallback:
    12:18:void <clinit>() -> <clinit>
    4:4:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    23:24:void onLayoutCancelled() -> onLayoutCancelled
    31:32:void onLayoutFailed(java.lang.CharSequence) -> onLayoutFailed
    39:40:void onLayoutFinished(android.print.PrintDocumentInfo,boolean) -> onLayoutFinished
android.print.PdfWriteResult -> android.print.PdfWriteResult:
    12:18:void <clinit>() -> <clinit>
    4:4:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onWriteCancelled() -> onWriteCancelled
    39:40:void onWriteFailed(java.lang.CharSequence) -> onWriteFailed
    23:24:void onWriteFinished(android.print.PageRange[]) -> onWriteFinished
android.runtime.JavaProxyThrowable -> android.runtime.JavaProxyThrowable:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void <init>(java.lang.String) -> <init>
    36:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:47:void <init>(java.lang.String,java.lang.Throwable,boolean,boolean) -> <init>
    52:55:void <init>(java.lang.Throwable) -> <init>
    60:63:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    67:69:void monodroidClearReferences() -> monodroidClearReferences
android.runtime.XmlReaderPullParser -> android.runtime.XmlReaderPullParser:
    13:53:void <clinit>() -> <clinit>
    58:61:void <init>() -> <init>
    170:171:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    66:66:int getAttributeCount() -> getAttributeCount
    178:178:java.lang.String getAttributeName(int) -> getAttributeName
    186:186:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    194:194:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    202:202:java.lang.String getAttributeType(int) -> getAttributeType
    210:210:java.lang.String getAttributeValue(int) -> getAttributeValue
    218:218:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    74:74:int getColumnNumber() -> getColumnNumber
    82:82:int getDepth() -> getDepth
    90:90:int getEventType() -> getEventType
    226:226:boolean getFeature(java.lang.String) -> getFeature
    98:98:java.lang.String getInputEncoding() -> getInputEncoding
    122:122:int getLineNumber() -> getLineNumber
    130:130:java.lang.String getName() -> getName
    138:138:java.lang.String getNamespace() -> getNamespace
    234:234:java.lang.String getNamespace(java.lang.String) -> getNamespace
    242:242:int getNamespaceCount(int) -> getNamespaceCount
    250:250:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    258:258:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    146:146:java.lang.String getPositionDescription() -> getPositionDescription
    154:154:java.lang.String getPrefix() -> getPrefix
    266:266:java.lang.Object getProperty(java.lang.String) -> getProperty
    162:162:java.lang.String getText() -> getText
    274:274:char[] getTextCharacters(int[]) -> getTextCharacters
    282:282:boolean isAttributeDefault(int) -> isAttributeDefault
    106:106:boolean isEmptyElementTag() -> isEmptyElementTag
    114:114:boolean isWhitespace() -> isWhitespace
    362:365:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    369:371:void monodroidClearReferences() -> monodroidClearReferences
    290:290:int next() -> next
    298:298:int nextTag() -> nextTag
    306:306:java.lang.String nextText() -> nextText
    314:314:int nextToken() -> nextToken
    322:323:void require(int,java.lang.String,java.lang.String) -> require
    330:331:void setFeature(java.lang.String,boolean) -> setFeature
    338:339:void setInput(java.io.InputStream,java.lang.String) -> setInput
    346:347:void setInput(java.io.Reader) -> setInput
    354:355:void setProperty(java.lang.String,java.lang.Object) -> setProperty
android.runtime.XmlReaderResourceParser -> android.runtime.XmlReaderResourceParser:
    15:73:void <clinit>() -> <clinit>
    78:81:void <init>() -> <init>
    86:87:void close() -> close
    366:367:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    142:142:boolean getAttributeBooleanValue(int,boolean) -> getAttributeBooleanValue
    150:150:boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean) -> getAttributeBooleanValue
    102:102:int getAttributeCount() -> getAttributeCount
    158:158:float getAttributeFloatValue(int,float) -> getAttributeFloatValue
    166:166:float getAttributeFloatValue(java.lang.String,java.lang.String,float) -> getAttributeFloatValue
    174:174:int getAttributeIntValue(int,int) -> getAttributeIntValue
    182:182:int getAttributeIntValue(java.lang.String,java.lang.String,int) -> getAttributeIntValue
    190:190:int getAttributeListValue(int,java.lang.String[],int) -> getAttributeListValue
    198:198:int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int) -> getAttributeListValue
    206:206:java.lang.String getAttributeName(int) -> getAttributeName
    214:214:int getAttributeNameResource(int) -> getAttributeNameResource
    94:94:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    374:374:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    222:222:int getAttributeResourceValue(int,int) -> getAttributeResourceValue
    230:230:int getAttributeResourceValue(java.lang.String,java.lang.String,int) -> getAttributeResourceValue
    382:382:java.lang.String getAttributeType(int) -> getAttributeType
    238:238:int getAttributeUnsignedIntValue(int,int) -> getAttributeUnsignedIntValue
    246:246:int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int) -> getAttributeUnsignedIntValue
    254:254:java.lang.String getAttributeValue(int) -> getAttributeValue
    262:262:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    110:110:java.lang.String getClassAttribute() -> getClassAttribute
    278:278:int getColumnNumber() -> getColumnNumber
    286:286:int getDepth() -> getDepth
    294:294:int getEventType() -> getEventType
    390:390:boolean getFeature(java.lang.String) -> getFeature
    118:118:java.lang.String getIdAttribute() -> getIdAttribute
    270:270:int getIdAttributeResourceValue(int) -> getIdAttributeResourceValue
    302:302:java.lang.String getInputEncoding() -> getInputEncoding
    326:326:int getLineNumber() -> getLineNumber
    334:334:java.lang.String getName() -> getName
    342:342:java.lang.String getNamespace() -> getNamespace
    398:398:java.lang.String getNamespace(java.lang.String) -> getNamespace
    406:406:int getNamespaceCount(int) -> getNamespaceCount
    414:414:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    422:422:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    126:126:java.lang.String getPositionDescription() -> getPositionDescription
    350:350:java.lang.String getPrefix() -> getPrefix
    430:430:java.lang.Object getProperty(java.lang.String) -> getProperty
    134:134:int getStyleAttribute() -> getStyleAttribute
    358:358:java.lang.String getText() -> getText
    438:438:char[] getTextCharacters(int[]) -> getTextCharacters
    446:446:boolean isAttributeDefault(int) -> isAttributeDefault
    310:310:boolean isEmptyElementTag() -> isEmptyElementTag
    318:318:boolean isWhitespace() -> isWhitespace
    526:529:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    533:535:void monodroidClearReferences() -> monodroidClearReferences
    454:454:int next() -> next
    462:462:int nextTag() -> nextTag
    470:470:java.lang.String nextText() -> nextText
    478:478:int nextToken() -> nextToken
    486:487:void require(int,java.lang.String,java.lang.String) -> require
    494:495:void setFeature(java.lang.String,boolean) -> setFeature
    502:503:void setInput(java.io.InputStream,java.lang.String) -> setInput
    510:511:void setInput(java.io.Reader) -> setInput
    518:519:void setProperty(java.lang.String,java.lang.Object) -> setProperty
android.support.customtabs.ICustomTabsCallback$Stub -> android.support.customtabs.ICustomTabsCallback$Stub:
    44:46:void <init>() -> <init>
    53:60:android.support.customtabs.ICustomTabsCallback asInterface(android.os.IBinder) -> asInterface
    68:188:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.customtabs.ICustomTabsCallback$Stub$Proxy -> android.support.customtabs.ICustomTabsCallback$Stub$Proxy:
# {"id":"sourceFile","fileName":"ICustomTabsCallback.java"}
    196:198:void <init>(android.os.IBinder) -> <init>
    201:201:android.os.IBinder asBinder() -> asBinder
android.support.customtabs.ICustomTabsService$Stub -> android.support.customtabs.ICustomTabsService$Stub:
    69:71:void <init>() -> <init>
    89:89:android.os.IBinder asBinder() -> asBinder
    93:318:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesCompatParcelizer -> android.support.v4.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi21Parcelizer -> android.support.v4.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi26Parcelizer -> android.support.v4.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplBaseParcelizer -> android.support.v4.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    115:115:void <clinit>() -> <clinit>
    193:205:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    215:217:void connect() -> connect
    224:225:void disconnect() -> disconnect
    264:264:android.os.Bundle getExtras() -> getExtras
    398:399:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    454:454:android.os.Bundle getNotifyChildrenChangedOptions() -> getNotifyChildrenChangedOptions
    253:253:java.lang.String getRoot() -> getRoot
    239:239:android.content.ComponentName getServiceComponent() -> getServiceComponent
    280:280:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    231:231:boolean isConnected() -> isConnected
    414:421:void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    436:440:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    303:310:void subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    337:347:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    361:365:void unsubscribe(java.lang.String) -> unsubscribe
    380:387:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$Api21Impl -> android.support.v4.media.MediaBrowserCompat$Api21Impl:
    2376:2376:android.media.MediaDescription getDescription(android.media.browse.MediaBrowser$MediaItem) -> getDescription
    2381:2381:int getFlags(android.media.browse.MediaBrowser$MediaItem) -> getFlags
android.support.v4.media.MediaBrowserCompat$CallbackHandler -> android.support.v4.media.MediaBrowserCompat$CallbackHandler:
    2113:2115:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl) -> <init>
    2119:2169:void handleMessage(android.os.Message) -> handleMessage
    2172:2173:void setCallbacksMessenger(android.os.Messenger) -> setCallbacksMessenger
android.support.v4.media.MediaBrowserCompat$ConnectionCallback -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback:
    636:642:void <init>() -> <init>
    653:653:void onConnected() -> onConnected
    672:672:void onConnectionFailed() -> onConnectionFailed
    664:664:void onConnectionSuspended() -> onConnectionSuspended
    675:676:void setInternalConnectionCallback(android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal) -> setInternalConnectionCallback
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackApi21 -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackApi21:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    686:687:void <init>(android.support.v4.media.MediaBrowserCompat$ConnectionCallback) -> <init>
    691:695:void onConnected() -> onConnected
    707:711:void onConnectionFailed() -> onConnectionFailed
    699:703:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
android.support.v4.media.MediaBrowserCompat$CustomActionCallback -> android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    942:942:void <init>() -> <init>
    973:973:void onError(java.lang.String,android.os.Bundle,android.os.Bundle) -> onError
    952:952:void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle) -> onProgressUpdate
    962:962:void onResult(java.lang.String,android.os.Bundle,android.os.Bundle) -> onResult
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    2340:2344:void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler) -> <init>
    2348:2367:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemCallback -> android.support.v4.media.MediaBrowserCompat$ItemCallback:
    872:878:void <init>() -> <init>
    894:894:void onError(java.lang.String) -> onError
    886:886:void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onItemLoaded
android.support.v4.media.MediaBrowserCompat$ItemCallback$ItemCallbackApi23 -> android.support.v4.media.MediaBrowserCompat$ItemCallback$ItemCallbackApi23:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    898:899:void <init>(android.support.v4.media.MediaBrowserCompat$ItemCallback) -> <init>
    908:909:void onError(java.lang.String) -> onError
    903:904:void onItemLoaded(android.media.browse.MediaBrowser$MediaItem) -> onItemLoaded
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2272:2275:void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler) -> <init>
    2279:2293:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21:
    1642:1660:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1664:1665:void connect() -> connect
    1669:1677:void disconnect() -> disconnect
    1698:1698:android.os.Bundle getExtras() -> getExtras
    1796:1834:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    2006:2006:android.os.Bundle getNotifyChildrenChangedOptions() -> getNotifyChildrenChangedOptions
    1692:1692:java.lang.String getRoot() -> getRoot
    1686:1686:android.content.ComponentName getServiceComponent() -> getServiceComponent
    1704:1708:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1681:1681:boolean isConnected() -> isConnected
    1911:1938:void onConnected() -> onConnected
    1951:1951:void onConnectionFailed() -> onConnectionFailed
    1962:1962:void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    1942:1946:void onConnectionSuspended() -> onConnectionSuspended
    1968:2002:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1957:1957:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
    1839:1866:void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    1871:1905:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    1715:1738:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    1742:1792:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1804:1804:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1807:1808:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1813:1813:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1817:1818:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1827:1827:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1830:1831:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1844:1844:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    1848:1849:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1859:1859:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    1862:1863:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1879:1879:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    1882:1883:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1897:1897:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    1900:1901:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23:
    2014:2015:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    2019:2024:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26:
    2031:2032:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    2039:2048:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    2054:2063:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase:
    1014:1041:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1046:1100:void connect() -> connect
    1107:1134:void disconnect() -> disconnect
    1510:1520:void dump() -> dump
    1147:1157:void forceCloseConnection() -> forceCloseConnection
    1187:1191:android.os.Bundle getExtras() -> getExtras
    1271:1299:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    1466:1466:android.os.Bundle getNotifyChildrenChangedOptions() -> getNotifyChildrenChangedOptions
    1177:1181:java.lang.String getRoot() -> getRoot
    1167:1171:android.content.ComponentName getServiceComponent() -> getServiceComponent
    1197:1201:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1473:1485:java.lang.String getStateLabel(int) -> getStateLabel
    1161:1161:boolean isConnected() -> isConnected
    1494:1502:boolean isCurrent(android.os.Messenger,java.lang.String) -> isCurrent
    1398:1416:void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    1424:1462:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1355:1394:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
    1304:1321:void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    1326:1349:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    1208:1228:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    1232:1267:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1052:1052:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1056:1098:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1108:1108:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1112:1132:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1279:1279:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1282:1283:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1292:1292:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1295:1296:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1314:1314:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    1317:1318:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1341:1341:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    1344:1345:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1526:1527:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1621:1631:boolean isCurrent(java.lang.String) -> isCurrent
    1531:1577:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1581:1607:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    1610:1615:void postOrRun(java.lang.Runnable) -> postOrRun
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1531:1531:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName,android.os.IBinder) -> <init>
    1534:1575:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    1581:1581:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName) -> <init>
    1584:1605:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    574:574:void <clinit>() -> <clinit>
    534:543:void <init>(android.support.v4.media.MediaDescriptionCompat,int) -> <init>
    548:551:void <init>(android.os.Parcel) -> <init>
    555:555:int describeContents() -> describeContents
    497:504:android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object) -> fromMediaItem
    518:525:java.util.List fromMediaItemList(java.util.List) -> fromMediaItemList
    616:616:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    592:592:int getFlags() -> getFlags
    625:625:java.lang.String getMediaId() -> getMediaId
    600:600:boolean isBrowsable() -> isBrowsable
    608:608:boolean isPlayable() -> isPlayable
    567:571:java.lang.String toString() -> toString
    560:562:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    575:575:void <init>() -> <init>
    575:575:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    578:578:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    575:575:java.lang.Object[] newArray(int) -> newArray
    583:583:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchCallback -> android.support.v4.media.MediaBrowserCompat$SearchCallback:
    916:916:void <init>() -> <init>
    936:936:void onError(java.lang.String,android.os.Bundle) -> onError
    926:926:void onSearchResult(java.lang.String,android.os.Bundle,java.util.List) -> onSearchResult
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2303:2307:void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler) -> <init>
    2311:2330:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper -> android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper:
    2180:2183:void <init>(android.os.IBinder,android.os.Bundle) -> <init>
    2201:2206:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.os.Messenger) -> addSubscription
    2187:2192:void connect(android.content.Context,android.os.Messenger) -> connect
    2195:2196:void disconnect(android.os.Messenger) -> disconnect
    2219:2223:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,android.os.Messenger) -> getMediaItem
    2227:2232:void registerCallbackMessenger(android.content.Context,android.os.Messenger) -> registerCallbackMessenger
    2211:2215:void removeSubscription(java.lang.String,android.os.IBinder,android.os.Messenger) -> removeSubscription
    2240:2245:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> search
    2249:2254:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> sendCustomAction
    2258:2264:void sendRequest(int,android.os.Bundle,android.os.Messenger) -> sendRequest
    2235:2236:void unregisterCallbackMessenger(android.os.Messenger) -> unregisterCallbackMessenger
android.support.v4.media.MediaBrowserCompat$Subscription -> android.support.v4.media.MediaBrowserCompat$Subscription:
    2070:2073:void <init>() -> <init>
    2088:2093:android.support.v4.media.MediaBrowserCompat$SubscriptionCallback getCallback(android.os.Bundle) -> getCallback
    2084:2084:java.util.List getCallbacks() -> getCallbacks
    2080:2080:java.util.List getOptionsList() -> getOptionsList
    2076:2076:boolean isEmpty() -> isEmpty
    2097:2105:void putCallback(android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> putCallback
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback:
    723:732:void <init>() -> <init>
    741:741:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    754:754:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    766:766:void onError(java.lang.String) -> onError
    781:781:void onError(java.lang.String,android.os.Bundle) -> onError
    784:785:void setSubscription(android.support.v4.media.MediaBrowserCompat$Subscription) -> setSubscription
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$SubscriptionCallbackApi21 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$SubscriptionCallbackApi21:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    789:790:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    823:839:java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    795:814:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    818:819:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$SubscriptionCallbackApi26 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$SubscriptionCallbackApi26:
# {"id":"sourceFile","fileName":"MediaBrowserCompat.java"}
    846:847:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    853:856:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    860:862:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    428:428:void <clinit>() -> <clinit>
    197:206:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    208:219:void <init>(android.os.Parcel) -> <init>
    302:302:int describeContents() -> describeContents
    382:424:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    257:257:java.lang.CharSequence getDescription() -> getDescription
    287:287:android.os.Bundle getExtras() -> getExtras
    267:267:android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    277:277:android.net.Uri getIconUri() -> getIconUri
    338:366:java.lang.Object getMediaDescription() -> getMediaDescription
    227:227:java.lang.String getMediaId() -> getMediaId
    297:297:android.net.Uri getMediaUri() -> getMediaUri
    247:247:java.lang.CharSequence getSubtitle() -> getSubtitle
    237:237:java.lang.CharSequence getTitle() -> getTitle
    323:323:java.lang.String toString() -> toString
    307:319:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    429:429:void <init>() -> <init>
    429:429:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    432:435:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    429:429:java.lang.Object[] newArray(int) -> newArray
    441:441:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Api21Impl -> android.support.v4.media.MediaDescriptionCompat$Api21Impl:
    620:620:android.media.MediaDescription build(android.media.MediaDescription$Builder) -> build
    573:573:android.media.MediaDescription$Builder createBuilder() -> createBuilder
    644:644:java.lang.CharSequence getDescription(android.media.MediaDescription) -> getDescription
    662:662:android.os.Bundle getExtras(android.media.MediaDescription) -> getExtras
    650:650:android.graphics.Bitmap getIconBitmap(android.media.MediaDescription) -> getIconBitmap
    656:656:android.net.Uri getIconUri(android.media.MediaDescription) -> getIconUri
    626:626:java.lang.String getMediaId(android.media.MediaDescription) -> getMediaId
    638:638:java.lang.CharSequence getSubtitle(android.media.MediaDescription) -> getSubtitle
    632:632:java.lang.CharSequence getTitle(android.media.MediaDescription) -> getTitle
    597:598:void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setDescription
    615:616:void setExtras(android.media.MediaDescription$Builder,android.os.Bundle) -> setExtras
    603:604:void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap) -> setIconBitmap
    609:610:void setIconUri(android.media.MediaDescription$Builder,android.net.Uri) -> setIconUri
    579:580:void setMediaId(android.media.MediaDescription$Builder,java.lang.String) -> setMediaId
    591:592:void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setSubtitle
    585:586:void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompat$Api23Impl -> android.support.v4.media.MediaDescriptionCompat$Api23Impl:
    679:679:android.net.Uri getMediaUri(android.media.MediaDescription) -> getMediaUri
    673:674:void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    461:462:void <init>() -> <init>
    562:562:android.support.v4.media.MediaDescriptionCompat build() -> build
    505:506:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    540:541:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    517:518:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    529:530:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    471:472:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    551:552:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    493:494:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    482:483:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    299:632:void <clinit>() -> <clinit>
    359:362:void <init>(android.os.Bundle) -> <init>
    364:366:void <init>(android.os.Parcel) -> <init>
    375:375:boolean containsKey(java.lang.String) -> containsKey
    548:548:int describeContents() -> describeContents
    598:607:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    449:456:android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    581:581:android.os.Bundle getBundle() -> getBundle
    465:543:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    414:414:long getLong(java.lang.String) -> getLong
    622:629:java.lang.Object getMediaMetadata() -> getMediaMetadata
    425:438:android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    399:403:java.lang.String getString(java.lang.String) -> getString
    387:387:java.lang.CharSequence getText(java.lang.String) -> getText
    571:571:java.util.Set keySet() -> keySet
    562:562:int size() -> size
    553:554:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    633:633:void <init>() -> <init>
    633:633:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    636:636:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    633:633:java.lang.Object[] newArray(int) -> newArray
    641:641:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    656:658:void <init>() -> <init>
    667:670:void <init>(android.support.v4.media.MediaMetadataCompat) -> <init>
    684:694:void <init>(android.support.v4.media.MediaMetadataCompat,int) -> <init>
    865:865:android.support.v4.media.MediaMetadataCompat build() -> build
    849:856:android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    790:797:android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    814:827:android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    760:767:android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    723:730:android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    869:875:android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int) -> scaleBitmap
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    133:133:void <clinit>() -> <clinit>
    111:114:void <init>(int,float) -> <init>
    124:124:int describeContents() -> describeContents
    335:365:android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    318:321:float getPercentRating() -> getPercentRating
    378:403:java.lang.Object getRating() -> getRating
    264:264:int getRatingStyle() -> getRatingStyle
    299:308:float getStarRating() -> getStarRating
    273:276:boolean hasHeart() -> hasHeart
    253:253:boolean isRated() -> isRated
    286:289:boolean isThumbUp() -> isThumbUp
    182:182:android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    240:244:android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    210:229:android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    193:193:android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    161:170:android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    118:119:java.lang.String toString() -> toString
    129:131:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    134:134:void <init>() -> <init>
    134:134:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    142:142:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    134:134:java.lang.Object[] newArray(int) -> newArray
    147:147:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.RatingCompat$Api19Impl -> android.support.v4.media.RatingCompat$Api19Impl:
    437:437:float getPercentRating(android.media.Rating) -> getPercentRating
    412:412:int getRatingStyle(android.media.Rating) -> getRatingStyle
    432:432:float getStarRating(android.media.Rating) -> getStarRating
    422:422:boolean hasHeart(android.media.Rating) -> hasHeart
    417:417:boolean isRated(android.media.Rating) -> isRated
    427:427:boolean isThumbUp(android.media.Rating) -> isThumbUp
    442:442:android.media.Rating newHeartRating(boolean) -> newHeartRating
    457:457:android.media.Rating newPercentageRating(float) -> newPercentageRating
    452:452:android.media.Rating newStarRating(int,float) -> newStarRating
    447:447:android.media.Rating newThumbRating(boolean) -> newThumbRating
    462:462:android.media.Rating newUnratedRating(int) -> newUnratedRating
android.support.v4.media.session.IMediaControllerCallback$Default -> android.support.v4.media.session.IMediaControllerCallback$Default:
    13:13:void <init>() -> <init>
    58:58:android.os.IBinder asBinder() -> asBinder
    49:49:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    17:17:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    37:37:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    28:28:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    25:25:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    31:31:void onQueueChanged(java.util.List) -> onQueueChanged
    34:34:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    43:43:void onRepeatModeChanged(int) -> onRepeatModeChanged
    20:20:void onSessionDestroyed() -> onSessionDestroyed
    55:55:void onSessionReady() -> onSessionReady
    52:52:void onShuffleModeChanged(int) -> onShuffleModeChanged
    46:46:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    40:40:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    67:69:void <init>() -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
    76:83:android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    526:526:android.support.v4.media.session.IMediaControllerCallback getDefaultImpl() -> getDefaultImpl
    91:233:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    516:523:boolean setDefaultImpl(android.support.v4.media.session.IMediaControllerCallback) -> setDefaultImpl
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
# {"id":"sourceFile","fileName":"IMediaControllerCallback.java"}
    241:243:void <init>(android.os.IBinder) -> <init>
    246:246:android.os.IBinder asBinder() -> asBinder
    452:465:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    254:274:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    376:395:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    316:335:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    294:313:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    338:351:void onQueueChanged(java.util.List) -> onQueueChanged
    354:373:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    420:433:void onRepeatModeChanged(int) -> onRepeatModeChanged
    277:289:void onSessionDestroyed() -> onSessionDestroyed
    468:481:void onShuffleModeChanged(int) -> onShuffleModeChanged
    398:417:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession$Default -> android.support.v4.media.session.IMediaSession$Default:
    12:12:void <init>() -> <init>
    101:101:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    104:104:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    55:55:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    191:191:android.os.IBinder asBinder() -> asBinder
    158:158:void fastForward() -> fastForward
    77:77:android.os.Bundle getExtras() -> getExtras
    47:47:long getFlags() -> getFlags
    43:43:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    61:61:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    35:35:java.lang.String getPackageName() -> getPackageName
    65:65:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    69:69:java.util.List getQueue() -> getQueue
    73:73:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    81:81:int getRatingType() -> getRatingType
    89:89:int getRepeatMode() -> getRepeatMode
    113:113:android.os.Bundle getSessionInfo() -> getSessionInfo
    97:97:int getShuffleMode() -> getShuffleMode
    39:39:java.lang.String getTag() -> getTag
    51:51:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    85:85:boolean isCaptioningEnabled() -> isCaptioningEnabled
    93:93:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    31:31:boolean isTransportControlEnabled() -> isTransportControlEnabled
    152:152:void next() -> next
    146:146:void pause() -> pause
    131:131:void play() -> play
    134:134:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    137:137:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    140:140:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    119:119:void prepare() -> prepare
    122:122:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    125:125:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    128:128:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    155:155:void previous() -> previous
    167:167:void rate(android.support.v4.media.RatingCompat) -> rate
    170:170:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    25:25:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    107:107:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    110:110:void removeQueueItemAt(int) -> removeQueueItemAt
    161:161:void rewind() -> rewind
    164:164:void seekTo(long) -> seekTo
    18:18:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    188:188:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    21:21:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    176:176:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    173:173:void setPlaybackSpeed(float) -> setPlaybackSpeed
    179:179:void setRepeatMode(int) -> setRepeatMode
    185:185:void setShuffleMode(int) -> setShuffleMode
    182:182:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    58:58:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    143:143:void skipToQueueItem(long) -> skipToQueueItem
    149:149:void stop() -> stop
    28:28:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    200:202:void <init>() -> <init>
    220:220:android.os.IBinder asBinder() -> asBinder
    209:216:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    2051:2051:android.support.v4.media.session.IMediaSession getDefaultImpl() -> getDefaultImpl
    224:823:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    2041:2048:boolean setDefaultImpl(android.support.v4.media.session.IMediaSession) -> setDefaultImpl
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
# {"id":"sourceFile","fileName":"IMediaSession.java"}
    831:833:void <init>(android.os.IBinder) -> <init>
    1336:1358:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    1361:1384:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    1074:1092:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    836:836:android.os.IBinder asBinder() -> asBinder
    1753:1768:void fastForward() -> fastForward
    1211:1232:android.os.Bundle getExtras() -> getExtras
    1029:1045:long getFlags() -> getFlags
    1004:1025:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    1116:1137:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    964:980:java.lang.String getPackageName() -> getPackageName
    1141:1162:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    1166:1182:java.util.List getQueue() -> getQueue
    1186:1207:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    1236:1252:int getRatingType() -> getRatingType
    1276:1292:int getRepeatMode() -> getRepeatMode
    1431:1452:android.os.Bundle getSessionInfo() -> getSessionInfo
    1316:1332:int getShuffleMode() -> getShuffleMode
    1049:1070:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    1256:1272:boolean isCaptioningEnabled() -> isCaptioningEnabled
    1717:1732:void next() -> next
    1681:1696:void pause() -> pause
    1560:1575:void play() -> play
    1578:1601:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    1604:1627:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    1630:1659:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    1458:1473:void prepare() -> prepare
    1476:1499:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    1502:1525:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    1528:1557:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    1735:1750:void previous() -> previous
    1808:1830:void rate(android.support.v4.media.RatingCompat) -> rate
    1833:1862:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    906:922:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    1387:1409:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    1771:1786:void rewind() -> rewind
    1789:1805:void seekTo(long) -> seekTo
    846:876:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    1960:1983:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    879:902:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    1884:1900:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    1865:1881:void setPlaybackSpeed(float) -> setPlaybackSpeed
    1903:1919:void setRepeatMode(int) -> setRepeatMode
    1941:1957:void setShuffleMode(int) -> setShuffleMode
    1095:1113:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    1662:1678:void skipToQueueItem(long) -> skipToQueueItem
    1699:1714:void stop() -> stop
    925:941:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    215:237:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    215:256:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    327:328:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    347:348:void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    545:546:void adjustVolume(int,int) -> adjustVolume
    275:278:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    401:401:android.os.Bundle getExtras() -> getExtras
    472:472:long getFlags() -> getFlags
    182:189:android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity) -> getMediaController
    676:676:java.lang.Object getMediaController() -> getMediaController
    301:301:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    646:646:java.lang.String getPackageName() -> getPackageName
    481:481:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    292:292:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    311:311:java.util.List getQueue() -> getQueue
    394:394:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    423:423:int getRatingType() -> getRatingType
    449:449:int getRepeatMode() -> getRepeatMode
    513:513:androidx.versionedparcelable.VersionedParcelable getSession2Token() -> getSession2Token
    491:491:android.app.PendingIntent getSessionActivity() -> getSessionActivity
    662:662:android.os.Bundle getSessionInfo() -> getSessionInfo
    500:500:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    462:462:int getShuffleMode() -> getShuffleMode
    264:264:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    436:436:boolean isCaptioningEnabled() -> isCaptioningEnabled
    637:637:boolean isSessionReady() -> isSessionReady
    555:556:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    568:580:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    364:365:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    381:388:void removeQueueItemAt(int) -> removeQueueItemAt
    614:618:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    163:168:void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat) -> setMediaController
    528:529:void setVolumeTo(int,int) -> setVolumeTo
    589:601:void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    194:208:void validateCustomAction(java.lang.String,android.os.Bundle) -> validateCustomAction
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    688:695:void <init>() -> <init>
    820:821:void binderDied() -> binderDied
    815:815:android.support.v4.media.session.IMediaControllerCallback getIControllerCallback() -> getIControllerCallback
    776:776:void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    784:784:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    768:768:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    738:738:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    729:729:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    749:749:void onQueueChanged(java.util.List) -> onQueueChanged
    759:759:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    796:796:void onRepeatModeChanged(int) -> onRepeatModeChanged
    710:710:void onSessionDestroyed() -> onSessionDestroyed
    721:721:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    703:703:void onSessionReady() -> onSessionReady
    807:807:void onShuffleModeChanged(int) -> onShuffleModeChanged
    840:845:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
    827:837:void setHandler(android.os.Handler) -> setHandler
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21:
# {"id":"sourceFile","fileName":"MediaControllerCompat.java"}
    852:854:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    926:935:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    917:922:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    893:897:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    880:889:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    901:905:void onQueueChanged(java.util.List) -> onQueueChanged
    909:913:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    858:862:void onSessionDestroyed() -> onSessionDestroyed
    866:876:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
# {"id":"sourceFile","fileName":"MediaControllerCompat.java"}
    1068:1072:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    1077:1124:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
# {"id":"sourceFile","fileName":"MediaControllerCompat.java"}
    941:943:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    995:1000:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    947:951:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1026:1030:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    971:975:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    963:967:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    979:983:void onQueueChanged(java.util.List) -> onQueueChanged
    987:991:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1004:1008:void onRepeatModeChanged(int) -> onRepeatModeChanged
    955:959:void onSessionDestroyed() -> onSessionDestroyed
    1047:1051:void onSessionReady() -> onSessionReady
    1017:1022:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1013:1013:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    1034:1043:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2014:2032:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2123:2131:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    2135:2144:void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    2244:2245:void adjustVolume(int,int) -> adjustVolume
    2079:2079:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    2165:2165:android.os.Bundle getExtras() -> getExtras
    2218:2218:long getFlags() -> getFlags
    2283:2283:java.lang.Object getMediaController() -> getMediaController
    2322:2328:android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity) -> getMediaController
    2111:2112:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    2259:2259:java.lang.String getPackageName() -> getPackageName
    2223:2229:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    2098:2106:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    2117:2118:java.util.List getQueue() -> getQueue
    2160:2160:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    2170:2177:int getRatingType() -> getRatingType
    2194:2201:int getRepeatMode() -> getRepeatMode
    2234:2234:android.app.PendingIntent getSessionActivity() -> getSessionActivity
    2264:2278:android.os.Bundle getSessionInfo() -> getSessionInfo
    2206:2213:int getShuffleMode() -> getShuffleMode
    2084:2092:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    2182:2189:boolean isCaptioningEnabled() -> isCaptioningEnabled
    2254:2254:boolean isSessionReady() -> isSessionReady
    2292:2308:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
    2036:2054:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    2148:2156:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    2287:2288:void requestExtraBinder() -> requestExtraBinder
    2249:2250:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    2312:2318:void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat) -> setMediaController
    2239:2240:void setVolumeTo(int,int) -> setVolumeTo
    2058:2075:void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
# {"id":"sourceFile","fileName":"MediaControllerCompat.java"}
    2335:2337:void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> <init>
    2341:2355:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
# {"id":"sourceFile","fileName":"MediaControllerCompat.java"}
    2360:2361:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2390:2390:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2372:2372:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2378:2378:void onQueueChanged(java.util.List) -> onQueueChanged
    2384:2384:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2366:2366:void onSessionDestroyed() -> onSessionDestroyed
    2396:2396:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi29 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi29:
    2404:2405:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2409:2414:android.os.Bundle getSessionInfo() -> getSessionInfo
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    1506:1508:void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    1593:1602:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    1607:1616:void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    1737:1741:void adjustVolume(int,int) -> adjustVolume
    1540:1548:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    1645:1649:android.os.Bundle getExtras() -> getExtras
    1695:1699:long getFlags() -> getFlags
    1782:1782:java.lang.Object getMediaController() -> getMediaController
    1573:1577:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    1761:1765:java.lang.String getPackageName() -> getPackageName
    1705:1712:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    1563:1567:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    1583:1587:java.util.List getQueue() -> getQueue
    1635:1639:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    1655:1659:int getRatingType() -> getRatingType
    1675:1679:int getRepeatMode() -> getRepeatMode
    1718:1722:android.app.PendingIntent getSessionActivity() -> getSessionActivity
    1771:1777:android.os.Bundle getSessionInfo() -> getSessionInfo
    1685:1689:int getShuffleMode() -> getShuffleMode
    1553:1557:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    1665:1669:boolean isCaptioningEnabled() -> isCaptioningEnabled
    1755:1755:boolean isSessionReady() -> isSessionReady
    1512:1523:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    1621:1630:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    1746:1751:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    1728:1732:void setVolumeTo(int,int) -> setVolumeTo
    1527:1536:void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1380:1382:void <init>(int,int,int,int,int) -> <init>
    1385:1391:void <init>(int,androidx.media.AudioAttributesCompat,int,int,int) -> <init>
    1430:1430:androidx.media.AudioAttributesCompat getAudioAttributes() -> getAudioAttributes
    1417:1417:int getAudioStream() -> getAudioStream
    1463:1463:int getCurrentVolume() -> getCurrentVolume
    1454:1454:int getMaxVolume() -> getMaxVolume
    1403:1403:int getPlaybackType() -> getPlaybackType
    1445:1445:int getVolumeControl() -> getVolumeControl
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    1146:1147:void <init>() -> <init>
    1301:1301:void setPlaybackSpeed(float) -> setPlaybackSpeed
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    2422:2424:void <init>(android.media.session.MediaController$TransportControls) -> <init>
    2477:2478:void fastForward() -> fastForward
    2462:2463:void pause() -> pause
    2457:2458:void play() -> play
    2541:2542:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    2546:2547:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    2551:2559:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    2428:2429:void prepare() -> prepare
    2433:2437:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    2441:2445:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    2449:2453:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    2482:2483:void rewind() -> rewind
    2472:2473:void seekTo(long) -> seekTo
    2568:2570:void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    2574:2576:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    2520:2523:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    2510:2516:void setPlaybackSpeed(float) -> setPlaybackSpeed
    2497:2498:void setRating(android.support.v4.media.RatingCompat) -> setRating
    2502:2506:void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    2527:2530:void setRepeatMode(int) -> setRepeatMode
    2534:2537:void setShuffleMode(int) -> setShuffleMode
    2487:2488:void skipToNext() -> skipToNext
    2492:2493:void skipToPrevious() -> skipToPrevious
    2563:2564:void skipToQueueItem(long) -> skipToQueueItem
    2467:2468:void stop() -> stop
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23:
    2582:2583:void <init>(android.media.session.MediaController$TransportControls) -> <init>
    2587:2588:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24:
    2594:2595:void <init>(android.media.session.MediaController$TransportControls) -> <init>
    2599:2600:void prepare() -> prepare
    2604:2605:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    2609:2610:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    2614:2615:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi29 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi29:
    2621:2622:void <init>(android.media.session.MediaController$TransportControls) -> <init>
    2626:2630:void setPlaybackSpeed(float) -> setPlaybackSpeed
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    1789:1791:void <init>(android.support.v4.media.session.IMediaSession) -> <init>
    1904:1908:void fastForward() -> fastForward
    1877:1881:void pause() -> pause
    1832:1836:void play() -> play
    1841:1845:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    1850:1854:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    1859:1863:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    1796:1800:void prepare() -> prepare
    1805:1809:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    1814:1818:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    1823:1827:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    1922:1926:void rewind() -> rewind
    1895:1899:void seekTo(long) -> seekTo
    1996:1997:void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    2001:2007:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    1970:1974:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    1957:1965:void setPlaybackSpeed(float) -> setPlaybackSpeed
    1940:1944:void setRating(android.support.v4.media.RatingCompat) -> setRating
    1949:1953:void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    1979:1983:void setRepeatMode(int) -> setRepeatMode
    1988:1992:void setShuffleMode(int) -> setShuffleMode
    1913:1917:void skipToNext() -> skipToNext
    1931:1935:void skipToPrevious() -> skipToPrevious
    1868:1872:void skipToQueueItem(long) -> skipToQueueItem
    1886:1890:void stop() -> stop
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    133:134:void <clinit>() -> <clinit>
    476:477:void <init>(android.content.Context,java.lang.String) -> <init>
    502:503:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    538:539:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle) -> <init>
    138:604:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle,androidx.versionedparcelable.VersionedParcelable) -> <init>
    138:609:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> <init>
    1002:1006:void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    1060:1063:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    1038:1050:android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object) -> fromMediaSession
    991:991:java.lang.String getCallingPackage() -> getCallingPackage
    797:797:android.support.v4.media.session.MediaControllerCompat getController() -> getController
    979:979:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> getCurrentControllerInfo
    941:941:java.lang.Object getMediaSession() -> getMediaSession
    955:955:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    787:787:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1092:1120:android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat) -> getStateWithUpdatedPosition
    745:745:boolean isActive() -> isActive
    769:770:void release() -> release
    1015:1019:void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    757:761:void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    733:737:void setActive(boolean) -> setActive
    622:623:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    638:643:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    884:885:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    927:928:void setExtras(android.os.Bundle) -> setExtras
    680:681:void setFlags(int) -> setFlags
    671:672:void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    818:819:void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    806:807:void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    694:695:void setPlaybackToLocal(int) -> setPlaybackToLocal
    713:717:void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> setPlaybackToRemote
    834:848:void setQueue(java.util.List) -> setQueue
    858:859:void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    875:876:void setRatingType(int) -> setRatingType
    900:901:void setRepeatMode(int) -> setRepeatMode
    654:655:void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    915:916:void setShuffleMode(int) -> setShuffleMode
    1075:1085:android.os.Bundle unparcelWithClassLoader(android.os.Bundle) -> unparcelWithClassLoader
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
    586:586:void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    1131:1148:void <init>() -> <init>
    1244:1263:void handleMediaPlayPauseIfPendingOnHandler(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler) -> handleMediaPlayPauseIfPendingOnHandler
    1473:1473:void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onAddQueueItem
    1485:1485:void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> onAddQueueItem
    1171:1171:void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    1463:1463:void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    1355:1355:void onFastForward() -> onFastForward
    1185:1239:boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    1337:1337:void onPause() -> onPause
    1302:1302:void onPlay() -> onPlay
    1309:1309:void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    1318:1318:void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    1324:1324:void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    1270:1270:void onPrepare() -> onPrepare
    1278:1278:void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    1288:1288:void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    1296:1296:void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
    1496:1496:void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onRemoveQueueItem
    1507:1507:void onRemoveQueueItemAt(int) -> onRemoveQueueItemAt
    1361:1361:void onRewind() -> onRewind
    1375:1375:void onSeekTo(long) -> onSeekTo
    1416:1416:void onSetCaptioningEnabled(boolean) -> onSetCaptioningEnabled
    1408:1408:void onSetPlaybackSpeed(float) -> onSetPlaybackSpeed
    1383:1383:void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    1392:1392:void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> onSetRating
    1432:1432:void onSetRepeatMode(int) -> onSetRepeatMode
    1447:1447:void onSetShuffleMode(int) -> onSetShuffleMode
    1343:1343:void onSkipToNext() -> onSkipToNext
    1349:1349:void onSkipToPrevious() -> onSkipToPrevious
    1331:1331:void onSkipToQueueItem(long) -> onSkipToQueueItem
    1367:1367:void onStop() -> onStop
    1151:1159:void setSessionImpl(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler) -> setSessionImpl
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler -> android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    1512:1514:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Looper) -> <init>
    1518:1537:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaSessionCompat$Callback$MediaSessionCallbackApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$MediaSessionCallbackApi21:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    1542:1543:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    1898:1899:void clearCurrentControllerInfo(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> clearCurrentControllerInfo
    1906:1911:android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 getSessionImplIfCallbackIsSet() -> getSessionImplIfCallbackIsSet
    1547:1595:void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    1762:1817:void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    1703:1710:void onFastForward() -> onFastForward
    1599:1606:boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    1670:1677:void onPause() -> onPause
    1611:1618:void onPlay() -> onPlay
    1622:1630:void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    1634:1642:void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    1647:1655:void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    1822:1829:void onPrepare() -> onPrepare
    1834:1842:void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    1847:1855:void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    1860:1868:void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
    1714:1721:void onRewind() -> onRewind
    1736:1743:void onSeekTo(long) -> onSeekTo
    1873:1880:void onSetPlaybackSpeed(float) -> onSetPlaybackSpeed
    1747:1754:void onSetRating(android.media.Rating) -> onSetRating
    1681:1688:void onSkipToNext() -> onSkipToNext
    1692:1699:void onSkipToPrevious() -> onSkipToPrevious
    1659:1666:void onSkipToQueueItem(long) -> onSkipToQueueItem
    1725:1732:void onStop() -> onStop
    1883:1895:void setCurrentControllerInfo(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> setCurrentControllerInfo
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18:
    3643:3643:void <clinit>() -> <clinit>
    3647:3648:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    3689:3693:int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    3701:3714:void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> registerMediaButtonEventReceiver
    3652:3666:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    3670:3685:void setRccState(android.support.v4.media.session.PlaybackStateCompat) -> setRccState
    3719:3724:void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    3657:3657:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18) -> <init>
    3660:3662:void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19:
    3731:3732:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    3766:3789:android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle) -> buildRccMetadata
    3757:3761:int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    3736:3753:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    3741:3741:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19) -> <init>
    3744:3749:void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    3797:3824:void <init>(android.content.Context,java.lang.String,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    3797:3836:void <init>(java.lang.Object) -> <init>
    3839:3839:android.media.session.MediaSession createFwkMediaSession(android.content.Context,java.lang.String,android.os.Bundle) -> createFwkMediaSession
    4087:4089:android.support.v4.media.session.MediaSessionCompat$Callback getCallback() -> getCallback
    4064:4074:java.lang.String getCallingPackage() -> getCallingPackage
    4080:4082:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> getCurrentControllerInfo
    4045:4045:java.lang.Object getMediaSession() -> getMediaSession
    3946:3946:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    4052:4052:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    3925:3925:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    3881:3881:boolean isActive() -> isActive
    3902:3921:void release() -> release
    3886:3898:void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    3876:3877:void setActive(boolean) -> setActive
    3844:3851:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    3992:4004:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    4057:4060:void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> setCurrentControllerInfo
    4040:4041:void setExtras(android.os.Bundle) -> setExtras
    3857:3859:void setFlags(int) -> setFlags
    3963:3964:void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    3951:3954:void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    3930:3942:void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    3864:3867:void setPlaybackToLocal(int) -> setPlaybackToLocal
    3871:3872:void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> setPlaybackToRemote
    3968:3978:void setQueue(java.util.List) -> setQueue
    3982:3983:void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    3987:3988:void setRatingType(int) -> setRatingType
    4008:4020:void setRepeatMode(int) -> setRepeatMode
    3958:3959:void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    4024:4036:void setShuffleMode(int) -> setShuffleMode
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    4092:4092:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> <init>
    4330:4330:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    4336:4336:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    4158:4158:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    4248:4248:void fastForward() -> fastForward
    4360:4360:android.os.Bundle getExtras() -> getExtras
    4146:4146:long getFlags() -> getFlags
    4139:4139:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    4313:4313:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    4122:4122:java.lang.String getPackageName() -> getPackageName
    4318:4318:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    4324:4324:java.util.List getQueue() -> getQueue
    4354:4354:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    4366:4366:int getRatingType() -> getRatingType
    4377:4377:int getRepeatMode() -> getRepeatMode
    4127:4127:android.os.Bundle getSessionInfo() -> getSessionInfo
    4388:4388:int getShuffleMode() -> getShuffleMode
    4133:4133:java.lang.String getTag() -> getTag
    4152:4152:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    4371:4371:boolean isCaptioningEnabled() -> isCaptioningEnabled
    4382:4382:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    4394:4394:boolean isTransportControlEnabled() -> isTransportControlEnabled
    4236:4236:void next() -> next
    4224:4224:void pause() -> pause
    4194:4194:void play() -> play
    4200:4200:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    4206:4206:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    4212:4212:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    4170:4170:void prepare() -> prepare
    4176:4176:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    4182:4182:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    4188:4188:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    4242:4242:void previous() -> previous
    4266:4266:void rate(android.support.v4.media.RatingCompat) -> rate
    4272:4272:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    4107:4112:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    4342:4342:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    4348:4348:void removeQueueItemAt(int) -> removeQueueItemAt
    4254:4254:void rewind() -> rewind
    4260:4260:void seekTo(long) -> seekTo
    4096:4096:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    4307:4307:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    4102:4102:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    4284:4284:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    4278:4278:void setPlaybackSpeed(float) -> setPlaybackSpeed
    4290:4290:void setRepeatMode(int) -> setRepeatMode
    4301:4301:void setShuffleMode(int) -> setShuffleMode
    4296:4296:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    4164:4164:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    4218:4218:void skipToQueueItem(long) -> skipToQueueItem
    4230:4230:void stop() -> stop
    4116:4117:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi22 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi22:
    4403:4404:void <init>(android.content.Context,java.lang.String,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    4407:4408:void <init>(java.lang.Object) -> <init>
    4412:4413:void setRatingType(int) -> setRatingType
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28:
    4420:4421:void <init>(android.content.Context,java.lang.String,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    4424:4425:void <init>(java.lang.Object) -> <init>
    4435:4437:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> getCurrentControllerInfo
    4430:4430:void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> setCurrentControllerInfo
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi29 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi29:
    4445:4446:void <init>(android.content.Context,java.lang.String,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    4449:4451:void <init>(java.lang.Object) -> <init>
    4455:4455:android.media.session.MediaSession createFwkMediaSession(android.content.Context,java.lang.String,android.os.Bundle) -> createFwkMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    2412:2474:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,androidx.versionedparcelable.VersionedParcelable,android.os.Bundle) -> <init>
    2918:2925:void adjustVolume(int,int) -> adjustVolume
    2716:2788:android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle) -> buildRccMetadata
    2881:2883:android.support.v4.media.session.MediaSessionCompat$Callback getCallback() -> getCallback
    2827:2827:java.lang.String getCallingPackage() -> getCallingPackage
    2867:2869:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> getCurrentControllerInfo
    2817:2817:java.lang.Object getMediaSession() -> getMediaSession
    2523:2527:java.lang.String getPackageNameForUid(int) -> getPackageNameForUid
    2628:2630:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    2638:2662:int getRccStateFromState(int) -> getRccStateFromState
    2667:2692:int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    2822:2822:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    2600:2600:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    2581:2581:boolean isActive() -> isActive
    2495:2520:void postToHandler(int,int,int,java.lang.Object,android.os.Bundle) -> postToHandler
    2909:2910:void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> registerMediaButtonEventReceiver
    2591:2596:void release() -> release
    3023:3032:void sendCaptioningEnabled(boolean) -> sendCaptioningEnabled
    2963:2972:void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    3059:3068:void sendExtras(android.os.Bundle) -> sendExtras
    2987:2996:void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    2999:3008:void sendQueue(java.util.List) -> sendQueue
    3011:3020:void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    3035:3044:void sendRepeatMode(int) -> sendRepeatMode
    2950:2960:void sendSessionDestroyed() -> sendSessionDestroyed
    2586:2587:void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    3047:3056:void sendShuffleMode(int) -> sendShuffleMode
    2975:2984:void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    2938:2947:void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    2572:2577:void setActive(boolean) -> setActive
    2478:2492:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    2837:2841:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    2874:2877:void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> setCurrentControllerInfo
    2861:2863:void setExtras(android.os.Bundle) -> setExtras
    2532:2536:void setFlags(int) -> setFlags
    2801:2801:void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    2697:2713:void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    2605:2624:void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    2540:2550:void setPlaybackToLocal(int) -> setPlaybackToLocal
    2554:2568:void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> setPlaybackToRemote
    2805:2807:void setQueue(java.util.List) -> setQueue
    2811:2813:void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    2832:2833:void setRatingType(int) -> setRatingType
    2634:2635:void setRccState(android.support.v4.media.session.PlaybackStateCompat) -> setRccState
    2845:2849:void setRepeatMode(int) -> setRepeatMode
    2793:2796:void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    2853:2857:void setShuffleMode(int) -> setShuffleMode
    2928:2935:void setVolumeTo(int,int) -> setVolumeTo
    2914:2915:void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
    2888:2906:void updateMbrAndRcc() -> updateMbrAndRcc
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    2441:2441:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    2444:2451:void onVolumeChanged(androidx.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    3409:3413:void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> <init>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    3070:3070:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    3319:3320:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    3324:3325:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    3165:3166:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    3240:3241:void fastForward() -> fastForward
    3344:3346:android.os.Bundle getExtras() -> getExtras
    3134:3136:long getFlags() -> getFlags
    3126:3128:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    3296:3296:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    3109:3109:java.lang.String getPackageName() -> getPackageName
    3303:3307:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    3312:3314:java.util.List getQueue() -> getQueue
    3339:3339:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    3352:3352:int getRatingType() -> getRatingType
    3363:3363:int getRepeatMode() -> getRepeatMode
    3115:3115:android.os.Bundle getSessionInfo() -> getSessionInfo
    3374:3374:int getShuffleMode() -> getShuffleMode
    3121:3121:java.lang.String getTag() -> getTag
    3146:3160:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    3357:3357:boolean isCaptioningEnabled() -> isCaptioningEnabled
    3368:3368:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    3380:3380:boolean isTransportControlEnabled() -> isTransportControlEnabled
    3230:3231:void next() -> next
    3220:3221:void pause() -> pause
    3195:3196:void play() -> play
    3200:3201:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    3205:3206:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    3210:3211:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    3384:3385:void postToHandler(int) -> postToHandler
    3388:3389:void postToHandler(int,int) -> postToHandler
    3392:3393:void postToHandler(int,java.lang.Object) -> postToHandler
    3396:3397:void postToHandler(int,java.lang.Object,int) -> postToHandler
    3400:3401:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
    3175:3176:void prepare() -> prepare
    3180:3181:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    3185:3186:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    3190:3191:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    3235:3236:void previous() -> previous
    3255:3256:void rate(android.support.v4.media.RatingCompat) -> rate
    3260:3261:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    3087:3099:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    3329:3330:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    3334:3335:void removeQueueItemAt(int) -> removeQueueItemAt
    3245:3246:void rewind() -> rewind
    3250:3251:void seekTo(long) -> seekTo
    3073:3075:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    3291:3292:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    3079:3080:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    3270:3271:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    3265:3266:void setPlaybackSpeed(float) -> setPlaybackSpeed
    3275:3276:void setRepeatMode(int) -> setRepeatMode
    3285:3286:void setShuffleMode(int) -> setShuffleMode
    3281:3281:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    3170:3171:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    3215:3216:void skipToQueueItem(long) -> skipToQueueItem
    3225:3226:void stop() -> stop
    3103:3104:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    3454:3456:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper) -> <init>
    3460:3586:void handleMessage(android.os.Message) -> handleMessage
    3589:3637:void onMediaButtonEvent(android.view.KeyEvent,android.support.v4.media.session.MediaSessionCompat$Callback) -> onMediaButtonEvent
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    2272:2272:void <clinit>() -> <clinit>
    2161:2162:void <init>(android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    2167:2177:void <init>(android.media.session.MediaSession$QueueItem,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    2179:2182:void <init>(android.os.Parcel) -> <init>
    2206:2206:int describeContents() -> describeContents
    2240:2248:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    2262:2269:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    2188:2188:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    2195:2195:long getQueueId() -> getQueueId
    2220:2226:java.lang.Object getQueueItem() -> getQueueItem
    2288:2288:java.lang.String toString() -> toString
    2200:2202:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    2273:2273:void <init>() -> <init>
    2273:2273:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2277:2277:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    2273:2273:java.lang.Object[] newArray(int) -> newArray
    2282:2282:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl -> android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    2299:2299:android.media.session.MediaSession$QueueItem createQueueItem(android.media.MediaDescription,long) -> createQueueItem
    2304:2304:android.media.MediaDescription getDescription(android.media.session.MediaSession$QueueItem) -> getDescription
    2309:2309:long getQueueId(android.media.session.MediaSession$QueueItem) -> getQueueId
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    2332:2332:void <clinit>() -> <clinit>
    2323:2325:void <init>(android.os.ResultReceiver) -> <init>
    2327:2329:void <init>(android.os.Parcel) -> <init>
    2346:2346:int describeContents() -> describeContents
    2351:2352:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    2332:2332:void <init>() -> <init>
    2332:2332:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2335:2335:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    2332:2332:java.lang.Object[] newArray(int) -> newArray
    2340:2340:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    2117:2117:void <clinit>() -> <clinit>
    1932:1933:void <init>(java.lang.Object) -> <init>
    1936:1937:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    1923:1943:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable) -> <init>
    1987:1987:int describeContents() -> describeContents
    2009:2023:boolean equals(java.lang.Object) -> equals
    2106:2114:android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle) -> fromBundle
    1957:1957:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    1975:1982:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession) -> fromToken
    2044:2046:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    2064:2066:androidx.versionedparcelable.VersionedParcelable getSession2Token() -> getSession2Token
    2036:2036:java.lang.Object getToken() -> getToken
    2001:2004:int hashCode() -> hashCode
    2054:2057:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    2074:2077:void setSession2Token(androidx.versionedparcelable.VersionedParcelable) -> setSession2Token
    2084:2094:android.os.Bundle toBundle() -> toBundle
    1992:1997:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
# {"id":"sourceFile","fileName":"MediaSessionCompat.java"}
    2118:2118:void <init>() -> <init>
    2118:2118:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2122:2127:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    2118:2118:java.lang.Object[] newArray(int) -> newArray
    2132:2132:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    67:67:void <clinit>() -> <clinit>
    36:42:void <init>(int,int,int,int,int) -> <init>
    44:50:void <init>(android.os.Parcel) -> <init>
    54:54:int describeContents() -> describeContents
    59:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    874:874:void <clinit>() -> <clinit>
    566:578:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    580:593:void <init>(android.os.Parcel) -> <init>
    614:614:int describeContents() -> describeContents
    809:842:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    735:735:long getActions() -> getActions
    787:787:long getActiveQueueItemId() -> getActiveQueueItemId
    691:691:long getBufferedPosition() -> getBufferedPosition
    680:682:long getCurrentPosition(java.lang.Long) -> getCurrentPosition
    742:742:java.util.List getCustomActions() -> getCustomActions
    765:765:int getErrorCode() -> getErrorCode
    775:775:java.lang.CharSequence getErrorMessage() -> getErrorMessage
    796:796:android.os.Bundle getExtras() -> getExtras
    668:668:long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    702:702:float getPlaybackSpeed() -> getPlaybackSpeed
    855:871:java.lang.Object getPlaybackState() -> getPlaybackState
    658:658:long getPosition() -> getPosition
    651:651:int getState() -> getState
    529:546:int toKeyCode(long) -> toKeyCode
    597:609:java.lang.String toString() -> toString
    619:631:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    875:875:void <init>() -> <init>
    875:875:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    878:878:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    875:875:java.lang.Object[] newArray(int) -> newArray
    883:883:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$Api21Impl -> android.support.v4.media.session.PlaybackStateCompat$Api21Impl:
    1417:1418:void addCustomAction(android.media.session.PlaybackState$Builder,android.media.session.PlaybackState$CustomAction) -> addCustomAction
    1432:1432:android.media.session.PlaybackState build(android.media.session.PlaybackState$Builder) -> build
    1488:1488:android.media.session.PlaybackState$CustomAction build(android.media.session.PlaybackState$CustomAction$Builder) -> build
    1390:1390:android.media.session.PlaybackState$Builder createBuilder() -> createBuilder
    1478:1478:android.media.session.PlaybackState$CustomAction$Builder createCustomActionBuilder(java.lang.String,java.lang.CharSequence,int) -> createCustomActionBuilder
    1498:1498:java.lang.String getAction(android.media.session.PlaybackState$CustomAction) -> getAction
    1457:1457:long getActions(android.media.session.PlaybackState) -> getActions
    1472:1472:long getActiveQueueItemId(android.media.session.PlaybackState) -> getActiveQueueItemId
    1447:1447:long getBufferedPosition(android.media.session.PlaybackState) -> getBufferedPosition
    1427:1427:java.util.List getCustomActions(android.media.session.PlaybackState) -> getCustomActions
    1462:1462:java.lang.CharSequence getErrorMessage(android.media.session.PlaybackState) -> getErrorMessage
    1493:1493:android.os.Bundle getExtras(android.media.session.PlaybackState$CustomAction) -> getExtras
    1508:1508:int getIcon(android.media.session.PlaybackState$CustomAction) -> getIcon
    1467:1467:long getLastPositionUpdateTime(android.media.session.PlaybackState) -> getLastPositionUpdateTime
    1503:1503:java.lang.CharSequence getName(android.media.session.PlaybackState$CustomAction) -> getName
    1452:1452:float getPlaybackSpeed(android.media.session.PlaybackState) -> getPlaybackSpeed
    1442:1442:long getPosition(android.media.session.PlaybackState) -> getPosition
    1437:1437:int getState(android.media.session.PlaybackState) -> getState
    1406:1407:void setActions(android.media.session.PlaybackState$Builder,long) -> setActions
    1422:1423:void setActiveQueueItemId(android.media.session.PlaybackState$Builder,long) -> setActiveQueueItemId
    1401:1402:void setBufferedPosition(android.media.session.PlaybackState$Builder,long) -> setBufferedPosition
    1411:1412:void setErrorMessage(android.media.session.PlaybackState$Builder,java.lang.CharSequence) -> setErrorMessage
    1483:1484:void setExtras(android.media.session.PlaybackState$CustomAction$Builder,android.os.Bundle) -> setExtras
    1396:1397:void setState(android.media.session.PlaybackState$Builder,int,long,float,long) -> setState
android.support.v4.media.session.PlaybackStateCompat$Api22Impl -> android.support.v4.media.session.PlaybackStateCompat$Api22Impl:
    1523:1523:android.os.Bundle getExtras(android.media.session.PlaybackState) -> getExtras
    1518:1519:void setExtras(android.media.session.PlaybackState$Builder,android.os.Bundle) -> setExtras
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    1114:1131:void <init>() -> <init>
    1114:1153:void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    1301:1301:android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    1316:1321:android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    1378:1378:android.support.v4.media.session.PlaybackStateCompat build() -> build
    1276:1277:android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    1332:1333:android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    1241:1242:android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    1345:1346:android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    1358:1360:android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence) -> setErrorMessage
    1370:1371:android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1187:1187:android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    1226:1230:android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    981:981:void <clinit>() -> <clinit>
    903:908:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    910:915:void <init>(android.os.Parcel) -> <init>
    927:927:int describeContents() -> describeContents
    942:957:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1001:1001:java.lang.String getAction() -> getAction
    971:978:java.lang.Object getCustomAction() -> getCustomAction
    1033:1033:android.os.Bundle getExtras() -> getExtras
    1021:1021:int getIcon() -> getIcon
    1010:1010:java.lang.CharSequence getName() -> getName
    1038:1038:java.lang.String toString() -> toString
    919:923:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
# {"id":"sourceFile","fileName":"PlaybackStateCompat.java"}
    982:982:void <init>() -> <init>
    982:982:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    986:986:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    982:982:java.lang.Object[] newArray(int) -> newArray
    991:991:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
# {"id":"sourceFile","fileName":"PlaybackStateCompat.java"}
    1066:1082:void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    1105:1105:android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
    1094:1095:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:136:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidhud.ProgressWheel -> androidhud.ProgressWheel:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onAttachedToWindow() -> onAttachedToWindow
    54:55:void onDraw(android.graphics.Canvas) -> onDraw
androidhud.ProgressWheel_SpinHandler -> androidhud.ProgressWheel_SpinHandler:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(android.os.Looper) -> <init>
    37:38:void handleMessage(android.os.Message) -> handleMessage
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
androidx.activity.-$$Lambda$ComponentActivity$Mg7-hF6_XzI8jXHyb9wZTvbC5nA -> androidx.activity.-$$Lambda$ComponentActivity$Mg7-hF6_XzI8jXHyb9wZTvbC5nA:
# {"id":"sourceFile","fileName":"lambda"}
androidx.activity.-$$Lambda$ComponentActivity$uMG6y9sMaPUFZmnRrSgWpORKiAI -> androidx.activity.-$$Lambda$ComponentActivity$uMG6y9sMaPUFZmnRrSgWpORKiAI:
# {"id":"sourceFile","fileName":"lambda"}
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    112:284:void <init>() -> <init>
    298:300:void <init>(int) -> <init>
    95:95:void access$001(androidx.activity.ComponentActivity) -> access$001
    415:417:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    445:446:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    496:507:void ensureViewModelStore() -> ensureViewModelStore
    693:693:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    519:529:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    386:388:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    470:470:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    554:554:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    560:560:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    486:491:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    422:425:void initViewTreeOwners() -> initViewTreeOwners
    273:275:android.os.Bundle lambda$new$0() -> lambda$new$0
    278:283:void lambda$new$1(android.content.Context) -> lambda$new$1
    638:641:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    543:544:void onBackPressed() -> onBackPressed
    312:319:void onCreate(android.os.Bundle) -> onCreate
    658:665:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    374:374:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    342:362:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    324:330:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    430:430:android.content.Context peekAvailableContext() -> peekAvailableContext
    673:674:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    682:682:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    451:452:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
    699:719:void reportFullyDrawn() -> reportFullyDrawn
    393:395:void setContentView(int) -> setContentView
    399:401:void setContentView(android.view.View) -> setContentView
    407:409:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    574:575:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    588:589:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    605:607:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    622:624:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    123:123:void <init>(androidx.activity.ComponentActivity) -> <init>
    130:137:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    145:145:void <init>(androidx.activity.ComponentActivity) -> <init>
    153:213:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    159:159:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    162:163:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    200:200:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    203:206:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    231:231:void <init>(androidx.activity.ComponentActivity) -> <init>
    235:242:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    245:245:void <init>(androidx.activity.ComponentActivity) -> <init>
    249:257:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    259:259:void <init>(androidx.activity.ComponentActivity) -> <init>
    263:265:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$Api19Impl -> androidx.activity.ComponentActivity$Api19Impl:
    726:727:void cancelPendingInputEvents(android.view.View) -> cancelPendingInputEvents
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    105:105:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    39:39:void <clinit>() -> <clinit>
    46:48:void <init>(android.app.Activity) -> <init>
    103:114:void initializeReflectiveFields() -> initializeReflectiveFields
    52:97:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    107:108:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    67:68:void <init>() -> <init>
    59:79:void <init>(java.lang.Runnable) -> <init>
    97:98:void addCallback(androidx.activity.OnBackPressedCallback) -> addCallback
    148:155:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:117:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    165:172:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    187:199:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:227:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:252:void cancel() -> cancel
    232:242:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:205:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:211:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:50:void <init>() -> <init>
    73:77:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:109:void clearAvailableContext() -> clearAvailableContext
    97:101:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
    62:62:android.content.Context peekAvailableContext() -> peekAvailableContext
    87:88:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:48:void <init>(int,android.content.Intent) -> <init>
    50:53:void <init>(android.os.Parcel) -> <init>
    105:105:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    87:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
    47:48:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:79:void <init>() -> <init>
    429:431:void bindRcKey(int,java.lang.String) -> bindRcKey
    345:352:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    366:384:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    389:399:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    419:425:int generateRandomNumber() -> generateRandomNumber
    298:330:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    281:290:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    118:162:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    204:221:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    402:408:int registerKey(java.lang.String) -> registerKey
    250:273:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    132:132:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
    137:157:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$2:
    162:162:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract) -> <init>
    178:178:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    165:168:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    172:173:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    221:221:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:237:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    224:227:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    231:232:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    439:442:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    449:452:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    455:457:void addObserver(androidx.lifecycle.LifecycleEventObserver) -> addObserver
    460:464:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    77:82:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:129:void <init>(android.os.Parcel) -> <init>
    146:146:int describeContents() -> describeContents
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
    187:189:void <init>(android.content.IntentSender) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:212:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:229:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
    59:59:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
    75:77:void <init>(java.lang.Object) -> <init>
    83:83:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    198:198:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    245:245:android.content.Intent createIntent(java.lang.String[]) -> createIntent
    158:158:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    205:221:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    229:240:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    86:86:android.content.Intent createIntent(android.content.Context,android.content.Intent) -> createIntent
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
    148:197:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.OptIn -> androidx.annotation.OptIn:
# {"id":"sourceFile","fileName":"OptIn.kt"}
androidx.annotation.RequiresOptIn -> androidx.annotation.RequiresOptIn:
# {"id":"sourceFile","fileName":"RequiresOptIn.kt"}
androidx.annotation.RequiresOptIn$Level -> androidx.annotation.RequiresOptIn$Level:
# {"id":"sourceFile","fileName":"RequiresOptIn.kt"}
    80:80:void <init>(java.lang.String,int) -> <init>
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    58:105:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.annotation.experimental.Experimental -> androidx.annotation.experimental.Experimental:
# {"id":"sourceFile","fileName":"Experimental.kt"}
androidx.annotation.experimental.Experimental$Level -> androidx.annotation.experimental.Experimental$Level:
# {"id":"sourceFile","fileName":"Experimental.kt"}
    80:80:void <init>(java.lang.String,int) -> <init>
androidx.annotation.experimental.UseExperimental -> androidx.annotation.experimental.UseExperimental:
# {"id":"sourceFile","fileName":"UseExperimental.kt"}
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    1242:1715:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1098:1098:boolean collapseActionView() -> collapseActionView
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    1036:1036:float getElevation() -> getElevation
    993:993:int getHideOffset() -> getHideOffset
    859:859:android.content.Context getThemedContext() -> getThemedContext
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    980:980:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    870:870:boolean isTitleTruncated() -> isTitleTruncated
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    1021:1025:void setElevation(float) -> setElevation
    1006:1010:void setHideOffset(int) -> setHideOffset
    966:970:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    950:950:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    911:911:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    847:847:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1047:1047:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    120:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    400:400:boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    499:500:void setActionBarDescription(int) -> setActionBarDescription
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    354:364:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    328:333:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    507:513:void setPosition(float) -> setPosition
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
    282:289:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:533:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:549:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    45:45:void <clinit>() -> <clinit>
    90:93:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    70:86:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    51:65:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    101:135:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    408:416:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
# {"id":"sourceFile","fileName":"AlertController.java"}
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
# {"id":"sourceFile","fileName":"AlertController.java"}
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener -> androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener:
# {"id":"sourceFile","fileName":"AlertController.java"}
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> setButton
    155:156:void setCustomTitle(android.view.View) -> setCustomTitle
    253:254:void setIcon(int) -> setIcon
    262:263:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    271:274:void setIconAttribute(int) -> setIconAttribute
    164:165:void setMessage(java.lang.CharSequence) -> setMessage
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
    172:173:void setView(android.view.View) -> setView
    187:188:void setView(android.view.View,int,int,int,int) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    957:958:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    966:967:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    935:942:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1008:1010:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AlertDialog_IDialogInterfaceOnCancelListenerImplementor -> androidx.appcompat.app.AlertDialog_IDialogInterfaceOnCancelListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCancel(android.content.DialogInterface) -> onCancel
androidx.appcompat.app.AlertDialog_IDialogInterfaceOnClickListenerImplementor -> androidx.appcompat.app.AlertDialog_IDialogInterfaceOnClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.content.DialogInterface,int) -> onClick
androidx.appcompat.app.AlertDialog_IDialogInterfaceOnMultiChoiceClickListenerImplementor -> androidx.appcompat.app.AlertDialog_IDialogInterfaceOnMultiChoiceClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:96:void <init>() -> <init>
    110:112:void <init>(int) -> <init>
    212:214:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:140:void attachBaseContext(android.content.Context) -> attachBaseContext
    650:655:void closeOptionsMenu() -> closeOptionsMenu
    593:599:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    259:259:android.view.View findViewById(int) -> findViewById
    583:586:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    553:553:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    604:607:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    500:500:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:135:void initDelegate() -> initDelegate
    219:222:void initViewTreeOwners() -> initViewTreeOwners
    314:315:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:236:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    540:541:void onContentChanged() -> onContentChanged
    417:418:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    278:280:void onDestroy() -> onDestroy
    633:636:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    264:273:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    564:564:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    664:664:void onNightModeChanged(int) -> onNightModeChanged
    575:576:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:152:void onPostCreate(android.os.Bundle) -> onPostCreate
    240:242:void onPostResume() -> onPostResume
    436:436:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    246:248:void onStart() -> onStart
    252:254:void onStop() -> onStop
    337:337:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    326:326:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    548:548:void onSupportContentChanged() -> onSupportContentChanged
    462:485:boolean onSupportNavigateUp() -> onSupportNavigateUp
    284:286:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    351:351:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    641:646:void openOptionsMenu() -> openOptionsMenu
    616:628:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:196:void setContentView(int) -> setContentView
    200:202:void setContentView(android.view.View) -> setContentView
    206:208:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    183:184:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    391:391:void setSupportProgress(int) -> setSupportProgress
    384:384:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    377:377:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    370:370:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    144:146:void setTheme(int) -> setTheme
    362:362:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    309:310:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    533:534:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    303:303:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    517:517:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:123:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:133:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    166:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:662:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    686:697:void applyDayNightToActiveDelegates() -> applyDayNightToActiveDelegates
    387:387:void attachBaseContext(android.content.Context) -> attachBaseContext
    395:396:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    253:253:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> create
    265:265:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    551:551:int getLocalNightMode() -> getLocalNightMode
    651:651:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    665:669:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:683:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    641:642:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    577:595:void setDefaultNightMode(int) -> setDefaultNightMode
    348:348:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    137:193:void <clinit>() -> <clinit>
    287:288:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    291:292:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    295:296:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    299:300:void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    214:338:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    714:718:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2371:2371:boolean applyDayNight() -> applyDayNight
    2376:2401:boolean applyDayNight(boolean) -> applyDayNight
    1022:1056:void applyFixedSizeWindow() -> applyFixedSizeWindow
    344:471:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    781:805:void attachToWindow(android.view.Window) -> attachToWindow
    2459:2459:int calculateNightMode() -> calculateNightMode
    2076:2101:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1961:1972:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    756:762:void cleanupAutoManagers() -> cleanupAutoManagers
    1975:1976:void closePanel(int) -> closePanel
    1979:2008:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2467:2493:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> createOverrideConfigurationForDayNight
    842:1016:android.view.ViewGroup createSubDecor() -> createSubDecor
    1523:1566:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2345:2367:void dismissPopups() -> dismissPopups
    1455:1473:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2167:2191:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1394:1397:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    808:839:void ensureSubDecor() -> ensureSubDecor
    772:778:void ensureWindow() -> ensureWindow
    2104:2112:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    633:634:android.view.View findViewById(int) -> findViewById
    3378:3481:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    604:615:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2636:2639:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2628:2632:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    3316:3316:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2423:2423:int getLocalNightMode() -> getLocalNightMode
    621:626:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2117:2129:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    537:538:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1141:1145:java.lang.CharSequence getTitle() -> getTitle
    546:546:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    1102:1123:boolean hasWindowFeature(int) -> hasWindowFeature
    550:564:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1836:1853:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1742:1745:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1793:1832:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1597:1606:void installViewFactory() -> installViewFactory
    1220:1224:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2158:2164:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2643:2677:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1390:1390:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2429:2452:int mapNightMode(android.content.Context,int) -> mapNightMode
    1401:1413:boolean onBackPressed() -> onBackPressed
    641:656:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:525:void onCreate(android.os.Bundle) -> onCreate
    1614:1614:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1623:1623:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    726:752:void onDestroy() -> onDestroy
    1504:1517:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2011:2018:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1418:1449:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1477:1500:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2022:2071:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1175:1182:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1187:1188:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1165:1171:void onMenuOpened(int) -> onMenuOpened
    1149:1162:void onPanelClosed(int) -> onPanelClosed
    530:531:void onPostCreate(android.os.Bundle) -> onPostCreate
    679:683:void onPostResume() -> onPostResume
    722:722:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    660:665:void onStart() -> onStart
    669:675:void onStop() -> onStop
    1019:1019:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1644:1739:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    542:542:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2134:2154:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1857:1957:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1749:1790:void reopenMenu(boolean) -> reopenMenu
    1060:1097:boolean requestWindowFeature(int) -> requestWindowFeature
    2327:2337:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    687:692:void setContentView(android.view.View) -> setContentView
    696:701:void setContentView(int) -> setContentView
    705:710:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    1385:1386:void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    2411:2419:void setLocalNightMode(int) -> setLocalNightMode
    568:601:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    766:767:void setTheme(int) -> setTheme
    1128:1137:void setTitle(java.lang.CharSequence) -> setTitle
    1380:1380:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1571:1591:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1192:1215:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1227:1374:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2320:2324:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1628:1639:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2506:2563:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2571:2615:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2202:2308:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2312:2317:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    165:165:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    182:187:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    169:179:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    264:264:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    267:275:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    941:941:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    945:957:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    963:963:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    966:967:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1006:1006:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1008:1008:void onAttachedFromWindow() -> onAttachedFromWindow
    1012:1013:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1282:1282:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1285:1310:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    1293:1293:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1301:1304:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1296:1297:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1335:1335:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1348:1351:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1338:1344:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3320:3321:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3334:3334:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3325:3329:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3339:3340:boolean isNavigationVisible() -> isNavigationVisible
    3354:3358:void setActionBarDescription(int) -> setActionBarDescription
    3345:3350:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2775:2776:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2789:2790:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2780:2784:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2686:2688:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2703:2703:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2692:2692:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2708:2737:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2697:2698:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    2716:2716:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2719:2729:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3497:3497:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3490:3493:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3506:3506:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3516:3522:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3531:3541:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3061:3063:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3067:3068:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3073:3074:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3091:3091:void onContentChanged() -> onContentChanged
    3079:3084:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3122:3124:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3129:3131:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3095:3117:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3188:3197:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3136:3145:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3173:3181:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3155:3166:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3284:3287:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3305:3310:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3292:3295:int getApplyableNightMode() -> getApplyableNightMode
    3300:3301:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3205:3205:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3237:3246:void cleanup() -> cleanup
    3214:3231:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
# {"id":"sourceFile","fileName":"AppCompatDelegateImpl.java"}
    3223:3223:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3226:3227:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3256:3258:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3273:3277:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3263:3263:int getApplyableNightMode() -> getApplyableNightMode
    3268:3269:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    485:486:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3025:3027:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3031:3032:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3055:3055:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3037:3046:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3051:3052:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2858:2862:void <init>(int) -> <init>
    2926:2937:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2865:2868:boolean hasPanelItems() -> hasPanelItems
    2914:2923:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2882:2911:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2741:2742:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2746:2759:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2764:2770:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    53:54:void <init>(android.content.Context) -> <init>
    45:68:void <init>(android.content.Context,int) -> <init>
    45:73:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:143:void dismiss() -> dismiss
    213:214:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    176:179:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    90:90:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    183:189:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:170:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    198:198:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    194:194:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    203:203:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    208:208:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:67:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:87:void <clinit>() -> <clinit>
    73:90:void <init>() -> <init>
    313:329:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    240:240:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    204:204:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    224:224:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    234:234:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    209:209:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    219:219:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    199:199:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    246:246:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    229:229:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    251:251:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    256:256:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    214:214:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    194:194:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    261:261:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    95:189:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    273:273:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    333:351:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    277:304:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    360:383:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    265:269:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    397:400:void <init>(android.view.View,java.lang.String) -> <init>
    404:417:void onClick(android.view.View) -> onClick
    420:447:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
    36:38:void <init>() -> <init>
    45:61:boolean detect(android.util.AttributeSet) -> detect
    108:111:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:103:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    66:83:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.NavItemSelectedListener -> androidx.appcompat.app.NavItemSelectedListener:
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:56:void flush(android.content.res.Resources) -> flush
    60:80:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    52:75:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    495:496:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    335:335:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    341:341:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    347:347:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    353:353:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    429:429:boolean closeOptionsMenu() -> closeOptionsMenu
    441:445:boolean collapseActionView() -> collapseActionView
    505:514:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    296:296:android.view.View getCustomView() -> getCustomView
    324:324:int getDisplayOptions() -> getDisplayOptions
    142:142:float getElevation() -> getElevation
    400:400:int getHeight() -> getHeight
    544:549:android.view.Menu getMenu() -> getMenu
    214:214:int getNavigationItemCount() -> getNavigationItemCount
    311:311:int getNavigationMode() -> getNavigationMode
    209:209:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    383:383:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    306:306:java.lang.CharSequence getSubtitle() -> getSubtitle
    389:389:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    395:395:int getTabCount() -> getTabCount
    147:147:android.content.Context getThemedContext() -> getThemedContext
    301:301:java.lang.CharSequence getTitle() -> getTitle
    78:78:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    414:415:void hide() -> hide
    434:436:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    419:419:boolean isShowing() -> isShowing
    152:152:boolean isTitleTruncated() -> isTitleTruncated
    329:329:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    187:188:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    490:491:void onDestroy() -> onDestroy
    477:484:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    469:472:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    424:424:boolean openOptionsMenu() -> openOptionsMenu
    449:465:void populateOptionsMenu() -> populateOptionsMenu
    371:371:void removeAllTabs() -> removeAllTabs
    500:501:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    359:359:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    365:365:void removeTabAt(int) -> removeTabAt
    377:377:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    291:292:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    83:84:void setCustomView(android.view.View) -> setCustomView
    88:92:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    96:98:void setCustomView(int) -> setCustomView
    173:173:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    276:277:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    255:256:void setDisplayOptions(int) -> setDisplayOptions
    260:262:void setDisplayOptions(int,int) -> setDisplayOptions
    286:287:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    271:272:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    281:282:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    266:267:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    137:138:void setElevation(float) -> setElevation
    167:168:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    177:178:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    157:158:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    162:163:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    133:133:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    102:103:void setIcon(int) -> setIcon
    107:108:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    192:193:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    112:113:void setLogo(int) -> setLogo
    117:118:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    316:320:void setNavigationMode(int) -> setNavigationMode
    197:205:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    183:183:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    128:128:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    123:123:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    244:245:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    249:250:void setSubtitle(int) -> setSubtitle
    219:220:void setTitle(java.lang.CharSequence) -> setTitle
    224:225:void setTitle(int) -> setTitle
    229:230:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    407:408:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    54:54:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    57:58:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    62:62:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    65:65:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    555:556:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    569:579:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    560:564:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    584:585:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    589:589:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    594:602:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    517:519:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    533:539:android.view.View onCreatePanelView(int) -> onCreatePanelView
    523:528:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    85:86:void <clinit>() -> <clinit>
    99:177:void <init>(android.app.Activity,boolean) -> <init>
    99:181:void <init>(android.app.Dialog) -> <init>
    339:340:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    560:561:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    565:566:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    570:576:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    580:586:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    873:909:void animateToMode(boolean) -> animateToMode
    758:763:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    427:435:void cleanupTabs() -> cleanupTabs
    973:977:boolean collapseActionView() -> collapseActionView
    310:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    542:556:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> configureTab
    349:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    835:863:void doHide(boolean) -> doHide
    786:832:void doShow(boolean) -> doShow
    672:673:void enableContentAnimations(boolean) -> enableContentAnimations
    286:307:void ensureTabsExist() -> ensureTabsExist
    496:496:android.view.View getCustomView() -> getCustomView
    235:241:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    516:516:int getDisplayOptions() -> getDisplayOptions
    252:252:float getElevation() -> getElevation
    667:667:int getHeight() -> getHeight
    744:744:int getHideOffset() -> getHideOffset
    1312:1318:int getNavigationItemCount() -> getNavigationItemCount
    511:511:int getNavigationMode() -> getNavigationMode
    1300:1306:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    662:662:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    506:506:java.lang.CharSequence getSubtitle() -> getSubtitle
    1359:1359:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    1324:1324:int getTabCount() -> getTabCount
    919:931:android.content.Context getThemedContext() -> getThemedContext
    501:501:java.lang.CharSequence getTitle() -> getTitle
    703:707:void hide() -> hide
    710:717:void hideForActionMode() -> hideForActionMode
    721:725:void hideForSystem() -> hideForSystem
    193:232:void init(android.view.View) -> init
    739:739:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    867:869:boolean isShowing() -> isShowing
    936:936:boolean isTitleTruncated() -> isTitleTruncated
    590:590:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    257:258:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    961:965:void onContentScrollStarted() -> onContentScrollStarted
    969:969:void onContentScrollStopped() -> onContentScrollStopped
    1400:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    319:320:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    423:424:void removeAllTabs() -> removeAllTabs
    344:345:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    595:596:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    600:621:void removeTabAt(int) -> removeTabAt
    625:658:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    481:482:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    362:364:void setCustomView(int) -> setCustomView
    1284:1285:void setCustomView(android.view.View) -> setCustomView
    1289:1291:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    1393:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    378:379:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    464:468:void setDisplayOptions(int) -> setDisplayOptions
    472:477:void setDisplayOptions(int,int) -> setDisplayOptions
    388:389:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    373:374:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    383:384:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    368:369:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    247:248:void setElevation(float) -> setElevation
    261:283:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    749:754:void setHideOffset(int) -> setHideOffset
    729:735:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    951:952:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    956:957:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    941:942:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    946:947:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    393:394:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1365:1366:void setIcon(int) -> setIcon
    1370:1371:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1295:1296:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    1379:1380:void setLogo(int) -> setLogo
    1384:1385:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    1329:1355:void setNavigationMode(int) -> setNavigationMode
    408:419:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    331:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    492:492:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    486:487:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    403:404:void setSubtitle(int) -> setSubtitle
    459:460:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    398:399:void setTitle(int) -> setTitle
    439:440:void setTitle(java.lang.CharSequence) -> setTitle
    444:445:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    914:914:boolean shouldAnimateContextView() -> shouldAnimateContextView
    677:681:void show() -> show
    684:691:void showForActionMode() -> showForActionMode
    695:699:void showForSystem() -> showForSystem
    521:538:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    769:783:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    991:997:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1058:1063:boolean dispatchOnCreate() -> dispatchOnCreate
    1011:1038:void finish() -> finish
    1115:1115:android.view.View getCustomView() -> getCustomView
    1006:1006:android.view.Menu getMenu() -> getMenu
    1001:1001:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1099:1099:java.lang.CharSequence getSubtitle() -> getSubtitle
    1094:1094:java.lang.CharSequence getTitle() -> getTitle
    1042:1055:void invalidate() -> invalidate
    1110:1110:boolean isTitleOptional() -> isTitleOptional
    1120:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1148:1153:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1068:1070:void setCustomView(android.view.View) -> setCustomView
    1074:1075:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1089:1090:void setSubtitle(int) -> setSubtitle
    1079:1080:void setTitle(java.lang.CharSequence) -> setTitle
    1084:1085:void setTitle(int) -> setTitle
    1104:1106:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    1160:1166:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1181:1181:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1278:1278:java.lang.CharSequence getContentDescription() -> getContentDescription
    1192:1192:android.view.View getCustomView() -> getCustomView
    1212:1212:android.graphics.drawable.Drawable getIcon() -> getIcon
    1217:1217:int getPosition() -> getPosition
    1171:1171:java.lang.Object getTag() -> getTag
    1226:1226:java.lang.CharSequence getText() -> getText
    1259:1260:void select() -> select
    1264:1264:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    1269:1273:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1197:1201:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    1206:1207:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> setCustomView
    1231:1235:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1240:1240:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> setIcon
    1221:1222:void setPosition(int) -> setPosition
    1186:1187:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> setTabListener
    1176:1177:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    1245:1249:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    1254:1254:androidx.appcompat.app.ActionBar$Tab setText(int) -> setText
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    150:159:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:145:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:178:android.util.TypedValue getTypedValue() -> getTypedValue
    112:124:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:189:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    105:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    171:178:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:210:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:500:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:473:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    259:259:boolean isStateful() -> isStateful
    264:272:void jumpToCurrentState() -> jumpToCurrentState
    605:609:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:288:boolean onStateChange(int[]) -> onStateChange
    564:600:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:554:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:350:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:223:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:469:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:372:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:377:void start() -> start
    381:382:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:669:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    712:712:long generateTransitionKey(int,int) -> generateTransitionKey
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:649:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:435:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:440:void start() -> start
    444:445:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:407:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:422:void reverse() -> reverse
    416:417:void start() -> start
    426:427:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:734:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:776:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:750:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    363:363:boolean canReverse() -> canReverse
    360:360:void reverse() -> reverse
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    54:75:void <init>() -> <init>
    535:572:void animate(boolean) -> animate
    594:595:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    600:600:boolean canApplyTheme() -> canApplyTheme
    87:93:void draw(android.graphics.Canvas) -> draw
    153:153:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    605:609:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    577:577:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    415:415:int getCurrentIndex() -> getCurrentIndex
    295:300:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    341:344:int getIntrinsicHeight() -> getIntrinsicHeight
    333:336:int getIntrinsicWidth() -> getIntrinsicWidth
    357:360:int getMinimumHeight() -> getMinimumHeight
    349:352:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    131:134:void getOutline(android.graphics.Outline) -> getOutline
    108:125:boolean getPadding(android.graphics.Rect) -> getPadding
    491:532:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    368:374:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    249:272:void jumpToCurrentState() -> jumpToCurrentState
    614:620:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    328:328:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    315:321:boolean onLevelChange(int) -> onLevelChange
    1207:1208:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    378:381:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    428:481:boolean selectDrawable(int) -> selectDrawable
    138:149:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1156:1167:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    159:165:void setDither(boolean) -> setDither
    276:279:void setHotspot(float,float) -> setHotspot
    283:291:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    392:399:boolean setVisible(boolean,boolean) -> setVisible
    385:388:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    588:589:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    467:467:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    470:472:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl:
    1218:1218:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1226:1227:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1222:1222:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1189:1189:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1193:1196:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1203:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1183:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1177:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    653:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> addChild
    896:909:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    914:929:boolean canApplyTheme() -> canApplyTheme
    1137:1151:boolean canConstantState() -> canConstantState
    1045:1062:void computeConstantSize() -> computeConstantSize
    802:811:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:848:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1018:1021:int getConstantHeight() -> getConstantHeight
    1038:1041:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1028:1031:int getConstantMinimumWidth() -> getConstantMinimumWidth
    969:990:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1008:1011:int getConstantWidth() -> getConstantWidth
    1085:1097:int getOpacity() -> getOpacity
    1126:1131:void growArray(int,int) -> growArray
    793:795:void invalidateCache() -> invalidateCache
    1001:1001:boolean isConstantSize() -> isConstantSize
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    994:995:void setConstantSize(boolean) -> setConstantSize
    1065:1066:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1073:1074:void setExitFadeDuration(int) -> setExitFadeDuration
    852:870:boolean setLayoutDirection(int,int) -> setLayoutDirection
    962:963:void setVariablePadding(boolean) -> setVariablePadding
    880:892:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    222:222:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    162:163:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:109:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:171:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:84:void setAlpha(int) -> setAlpha
    188:189:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    88:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:74:void setDither(boolean) -> setDither
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    213:214:void setHotspot(float,float) -> setHotspot
    218:219:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:199:void setTint(int) -> setTint
    203:204:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:209:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:235:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:179:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    97:152:void <init>(android.content.Context) -> <init>
    326:401:void draw(android.graphics.Canvas) -> draw
    171:171:float getArrowHeadLength() -> getArrowHeadLength
    190:190:float getArrowShaftLength() -> getArrowShaftLength
    197:197:float getBarLength() -> getBarLength
    247:247:float getBarThickness() -> getBarThickness
    227:227:int getColor() -> getColor
    311:311:int getDirection() -> getDirection
    256:256:float getGapSize() -> getGapSize
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> getPaint
    437:437:float getProgress() -> getProgress
    289:289:boolean isSpinEnabled() -> isSpinEnabled
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    160:164:void setArrowHeadLength(float) -> setArrowHeadLength
    180:184:void setArrowShaftLength(float) -> setArrowShaftLength
    206:210:void setBarLength(float) -> setBarLength
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:281:void setDirection(int) -> setDirection
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    414:418:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    391:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    234:253:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    310:314:android.graphics.drawable.Drawable mutate() -> mutate
    397:401:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:339:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:385:void growArray(int,int) -> growArray
    357:364:int indexOfStateSet(int[]) -> indexOfStateSet
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    163:223:void <clinit>() -> <clinit>
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    153:153:boolean isTitleOptional() -> isTitleOptional
    225:225:boolean isUiFocusable() -> isUiFocusable
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:105:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    200:200:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:126:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    161:167:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    147:156:android.content.res.Resources$Theme getTheme() -> getTheme
    142:142:int getThemeResId() -> getThemeResId
    186:195:void initializeTheme() -> initializeTheme
    182:183:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    131:135:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    51:60:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    106:113:void finish() -> finish
    132:132:android.view.View getCustomView() -> getCustomView
    117:117:android.view.Menu getMenu() -> getMenu
    137:137:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    127:127:java.lang.CharSequence getSubtitle() -> getSubtitle
    122:122:java.lang.CharSequence getTitle() -> getTitle
    101:102:void invalidate() -> invalidate
    90:90:boolean isTitleOptional() -> isTitleOptional
    168:168:boolean isUiFocusable() -> isUiFocusable
    142:142:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    162:164:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    95:97:void setCustomView(android.view.View) -> setCustomView
    69:70:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    79:80:void setSubtitle(int) -> setSubtitle
    64:65:void setTitle(java.lang.CharSequence) -> setTitle
    74:75:void setTitle(int) -> setTitle
    84:86:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:137:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:259:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:532:void addItem() -> addItem
    535:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:556:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:527:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:55:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    53:85:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    437:449:void applyIconTint() -> applyIconTint
    371:371:boolean collapseActionView() -> collapseActionView
    366:366:boolean expandActionView() -> expandActionView
    340:340:android.view.ActionProvider getActionProvider() -> getActionProvider
    330:330:android.view.View getActionView() -> getActionView
    94:94:int getAlphabeticModifiers() -> getAlphabeticModifiers
    89:89:char getAlphabeticShortcut() -> getAlphabeticShortcut
    392:392:java.lang.CharSequence getContentDescription() -> getContentDescription
    99:99:int getGroupId() -> getGroupId
    104:104:android.graphics.drawable.Drawable getIcon() -> getIcon
    418:418:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    433:433:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    109:109:android.content.Intent getIntent() -> getIntent
    114:114:int getItemId() -> getItemId
    119:119:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    129:129:int getNumericModifiers() -> getNumericModifiers
    124:124:char getNumericShortcut() -> getNumericShortcut
    134:134:int getOrder() -> getOrder
    139:139:android.view.SubMenu getSubMenu() -> getSubMenu
    350:350:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    144:144:java.lang.CharSequence getTitle() -> getTitle
    149:149:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    403:403:java.lang.CharSequence getTooltipText() -> getTooltipText
    154:154:boolean hasSubMenu() -> hasSubMenu
    376:376:boolean isActionViewExpanded() -> isActionViewExpanded
    159:159:boolean isCheckable() -> isCheckable
    164:164:boolean isChecked() -> isChecked
    169:169:boolean isEnabled() -> isEnabled
    174:174:boolean isVisible() -> isVisible
    315:315:boolean requiresActionButton() -> requiresActionButton
    320:320:boolean requiresOverflow() -> requiresOverflow
    335:335:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    325:325:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    345:345:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    179:180:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    185:187:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    192:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    203:204:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    386:387:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    209:210:android.view.MenuItem setEnabled(boolean) -> setEnabled
    215:218:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    223:226:android.view.MenuItem setIcon(int) -> setIcon
    408:413:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    423:428:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    231:232:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    237:238:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    243:245:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    381:381:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    250:251:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    256:258:android.view.MenuItem setShortcut(char,char) -> setShortcut
    264:268:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    311:311:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    360:361:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    355:355:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    273:274:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    279:280:android.view.MenuItem setTitle(int) -> setTitle
    285:286:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    397:398:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    291:292:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    254:254:boolean showsIcon() -> showsIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    239:239:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    234:234:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    244:244:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:224:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:249:void setId(int) -> setId
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:36:void <init>(android.content.Context) -> <init>
    39:58:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:89:void internalClear() -> internalClear
    92:101:void internalRemoveGroup(int) -> internalRemoveGroup
    104:113:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:238:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:362:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    792:792:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    246:255:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:299:void dismiss() -> dismiss
    656:663:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:524:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    727:727:boolean flagActionItems() -> flagActionItems
    316:318:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:349:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:723:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:613:void onDismiss() -> onDismiss
    303:307:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    737:737:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    732:732:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    630:646:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:757:void setAnchorView(android.view.View) -> setAnchorView
    624:625:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:243:void setForceShowIcon(boolean) -> setForceShowIcon
    741:746:void setGravity(int) -> setGravity
    773:775:void setHorizontalOffset(int) -> setHorizontalOffset
    761:762:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:786:void setShowTitle(boolean) -> setShowTitle
    779:781:void setVerticalOffset(int) -> setVerticalOffset
    260:280:void show() -> show
    370:504:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:620:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
# {"id":"sourceFile","fileName":"CascadingMenuPopup.java"}
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:805:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:139:void addContentView(android.view.View) -> addContentView
    142:147:void addContentView(android.view.View,int) -> addContentView
    347:355:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:135:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:314:void insertCheckBox() -> insertCheckBox
    294:298:void insertIconView() -> insertIconView
    301:306:void insertRadioButton() -> insertRadioButton
    102:120:void onFinishInflate() -> onFinishInflate
    282:291:void onMeasure(int,int) -> onMeasure
    318:318:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:213:void setCheckable(boolean) -> setCheckable
    219:232:void setChecked(boolean) -> setChecked
    150:151:void setForceShowIcon(boolean) -> setForceShowIcon
    339:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:278:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:252:void setShortcut(boolean,char) -> setShortcut
    235:238:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    155:162:void setTitle(java.lang.CharSequence) -> setTitle
    323:323:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:204:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:197:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:236:void <init>(android.content.Context) -> <init>
    466:466:android.view.MenuItem add(java.lang.CharSequence) -> add
    471:471:android.view.MenuItem add(int) -> add
    476:476:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    481:481:android.view.MenuItem add(int,int,int,int) -> add
    520:544:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    441:454:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:251:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:266:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    486:486:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    491:491:android.view.SubMenu addSubMenu(int) -> addSubMenu
    496:500:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    505:505:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    841:844:void changeMenuMode() -> changeMenuMode
    604:610:void clear() -> clear
    592:600:void clearAll() -> clearAll
    1213:1218:void clearHeader() -> clearHeader
    1030:1042:void close(boolean) -> close
    1046:1047:void close() -> close
    1373:1391:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    460:460:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    834:834:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:296:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    344:362:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    321:341:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    300:317:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1351:1369:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    724:724:int findGroupIndex(int) -> findGroupIndex
    728:742:int findGroupIndex(int,int) -> findGroupIndex
    847:854:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    693:707:android.view.MenuItem findItem(int) -> findItem
    711:720:int findItemIndex(int) -> findItemIndex
    930:965:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    882:914:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1163:1200:void flagActionItems() -> flagActionItems
    1203:1204:java.util.ArrayList getActionItems() -> getActionItems
    430:430:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    830:830:android.content.Context getContext() -> getContext
    1395:1395:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1316:1316:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1312:1312:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1320:1320:android.view.View getHeaderView() -> getHeaderView
    752:752:android.view.MenuItem getItem(int) -> getItem
    1208:1209:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1347:1347:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    779:785:int getOrdering(int) -> getOrdering
    826:826:android.content.res.Resources getResources() -> getResources
    1328:1328:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1118:1133:java.util.ArrayList getVisibleItems() -> getVisibleItems
    675:688:boolean hasVisibleItems() -> hasVisibleItems
    514:514:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    792:792:boolean isQwertyMode() -> isQwertyMode
    757:757:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    822:822:boolean isShortcutsVisible() -> isShortcutsVisible
    1112:1114:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1101:1103:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1057:1070:void onItemsChanged(boolean) -> onItemsChanged
    971:971:boolean performIdentifierAction(int,int) -> performIdentifierAction
    975:975:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    979:1018:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    859:871:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    554:567:void removeGroup(int) -> removeGroup
    549:550:void removeItem(int) -> removeItem
    588:589:void removeItemAt(int) -> removeItemAt
    580:585:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:281:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    400:427:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    369:370:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    373:397:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    365:366:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    434:435:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1339:1340:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    239:240:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    613:628:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    632:641:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    510:511:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    663:671:void setGroupEnabled(int,boolean) -> setGroupEnabled
    645:659:void setGroupVisible(int,boolean) -> setGroupVisible
    1283:1284:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1295:1296:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1222:1249:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1259:1260:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1271:1272:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1307:1308:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1343:1344:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1404:1405:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    762:765:void setQwertyMode(boolean) -> setQwertyMode
    803:809:void setShortcutsVisible(boolean) -> setShortcutsVisible
    812:816:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    747:747:int size() -> size
    1086:1092:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1078:1083:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:45:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:143:void dismiss() -> dismiss
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
    152:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:148:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:165:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:91:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:851:boolean collapseActionView() -> collapseActionView
    824:833:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:861:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:867:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    720:725:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:61:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    484:485:void refreshVisibility() -> refreshVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    80:81:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    61:340:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    230:265:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    304:307:void dismiss() -> dismiss
    161:164:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    326:326:boolean isShowing() -> isShowing
    318:323:void onDismiss() -> onDismiss
    106:107:void setAnchorView(android.view.View) -> setAnchorView
    119:123:void setForceShowIcon(boolean) -> setForceShowIcon
    133:134:void setGravity(int) -> setGravity
    95:96:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    331:335:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    144:147:void show() -> show
    269:297:void showPopup(int,int,boolean,boolean) -> showPopup
    174:183:boolean tryShow() -> tryShow
    210:219:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    340:340:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    343:344:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:46:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:47:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:81:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:153:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:97:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:103:android.view.SubMenu setIcon(int) -> setIcon
    51:52:void setQwertyMode(boolean) -> setQwertyMode
    61:62:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    258:258:int next(int,int,boolean) -> next
    75:87:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:137:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:112:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:272:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    141:143:void setContentHeight(int) -> setContentHeight
    187:193:void setVisibility(int) -> setVisibility
    160:176:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:303:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:298:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:290:void onAnimationStart(android.view.View) -> onAnimationStart
    281:283:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:178:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:199:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    42:42:int getAnimatedVisibility() -> getAnimatedVisibility
    42:42:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:192:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:160:void initTitle() -> initTitle
    384:384:boolean isTitleOptional() -> isTitleOptional
    202:209:void killMode() -> killMode
    90:95:void onDetachedFromWindow() -> onDetachedFromWindow
    42:42:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    365:374:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    329:356:void onLayout(boolean,int,int,int,int) -> onLayout
    249:325:void onMeasure(int,int) -> onMeasure
    42:42:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    99:100:void setContentHeight(int) -> setContentHeight
    103:115:void setCustomView(android.view.View) -> setCustomView
    123:125:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    118:120:void setTitle(java.lang.CharSequence) -> setTitle
    377:381:void setTitleOptional(boolean) -> setTitleOptional
    42:42:void setVisibility(int) -> setVisibility
    42:42:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    360:360:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    213:216:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:176:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    155:156:void <init>(android.content.Context) -> <init>
    71:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:743:void addActionBarHideOffset() -> addActionBarHideOffset
    287:305:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:878:void dismissPopups() -> dismissPopups
    543:552:void draw(android.graphics.Canvas) -> draw
    311:341:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:723:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:176:void init(android.content.Context) -> init
    771:783:void initFeature(int) -> initFeature
    703:703:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:244:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:182:void onDetachedFromWindow() -> onDetachedFromWindow
    520:539:void onLayout(boolean,int,int,int,int) -> onLayout
    410:516:void onMeasure(int,int) -> onMeasure
    646:655:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    665:665:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    598:601:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    661:661:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    564:565:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    591:594:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:628:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    576:579:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:621:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    583:586:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:642:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:274:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:283:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:733:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:728:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:679:void pullChildren() -> pullChildren
    736:738:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:715:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:196:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:216:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:700:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:806:void setIcon(int) -> setIcon
    810:812:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:818:void setLogo(int) -> setLogo
    858:860:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:854:void setMenuPrepared() -> setMenuPrepared
    199:208:void setOverlayMode(boolean) -> setOverlayMode
    237:237:void setShowingForActionMode(boolean) -> setShowingForActionMode
    788:788:void setUiOptions(int) -> setUiOptions
    753:755:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:761:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    556:556:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:125:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:134:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:144:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:883:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:887:void <init>(int,int) -> <init>
    890:891:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:375:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:543:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:365:boolean hideOverflowMenu() -> hideOverflowMenu
    384:388:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:550:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    561:573:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    554:556:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    577:583:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:588:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:743:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:751:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:801:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:784:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:796:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:667:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    687:687:boolean needsDividerAfter() -> needsDividerAfter
    682:682:boolean needsDividerBefore() -> needsDividerBefore
    671:677:boolean performClick() -> performClick
    692:709:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:651:boolean onForwardingStarted() -> onForwardingStarted
    659:664:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:719:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:729:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    611:611:void <clinit>() -> <clinit>
    594:595:void <init>() -> <init>
    597:599:void <init>(android.os.Parcel) -> <init>
    603:603:int describeContents() -> describeContents
    608:609:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
# {"id":"sourceFile","fileName":"ActionMenuPresenter.java"}
    612:612:void <init>() -> <init>
    612:612:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    615:615:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    612:612:java.lang.Object[] newArray(int) -> newArray
    620:620:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    78:79:void <init>(android.content.Context) -> <init>
    82:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    609:609:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    722:725:void dismissPopupMenus() -> dismissPopupMenus
    749:749:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    582:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    590:590:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    595:604:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    615:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    650:662:android.view.Menu getMenu() -> getMenu
    564:565:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    115:115:int getPopupTheme() -> getPopupTheme
    631:631:int getWindowAnimations() -> getWindowAnimations
    732:744:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    699:699:boolean hideOverflowMenu() -> hideOverflowMenu
    638:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    624:624:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    715:715:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    709:709:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    571:571:boolean isOverflowReserved() -> isOverflowReserved
    406:436:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    130:140:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    543:545:void onDetachedFromWindow() -> onDetachedFromWindow
    441:539:void onLayout(boolean,int,int,int,int) -> onLayout
    149:176:void onMeasure(int,int) -> onMeasure
    180:389:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    681:681:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    755:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    671:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    143:144:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    553:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    577:578:void setOverflowReserved(boolean) -> setOverflowReserved
    99:107:void setPopupTheme(int) -> setPopupTheme
    124:126:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    690:690:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    792:793:void <init>() -> <init>
    797:797:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    801:801:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    832:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    836:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    840:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    845:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    774:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    779:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    785:788:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    59:59:void <clinit>() -> <clinit>
    67:68:void <init>(android.content.Context) -> <init>
    71:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:181:void drawableStateChanged() -> drawableStateChanged
    140:141:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    168:169:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    193:193:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    110:114:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    102:106:void setBackgroundResource(int) -> setBackgroundResource
    203:205:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    97:98:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    125:128:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    153:156:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    185:189:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:46:void <init>(android.view.View) -> <init>
    178:200:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:140:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:93:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:86:void onSetBackgroundResource(int) -> onSetBackgroundResource
    143:153:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:116:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:168:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:168:void drawableStateChanged() -> drawableStateChanged
    329:336:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    313:320:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    297:304:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    345:352:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    279:288:int getAutoSizeTextType() -> getAutoSizeTextType
    127:128:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    155:156:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    399:399:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    421:421:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    180:182:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    186:188:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    192:196:void onLayout(boolean,int,int,int,int) -> onLayout
    211:215:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    243:252:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    261:268:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    224:231:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    97:101:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    89:93:void setBackgroundResource(int) -> setBackgroundResource
    376:378:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    365:368:void setSupportAllCaps(boolean) -> setSupportAllCaps
    112:115:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    140:143:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    387:389:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    409:411:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    172:176:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    200:207:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    62:63:void <init>(android.content.Context) -> <init>
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:236:void drawableStateChanged() -> drawableStateChanged
    100:103:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    179:180:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    207:208:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    126:128:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    151:153:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    213:217:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    221:225:void setBackgroundResource(int) -> setBackgroundResource
    87:91:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    95:96:void setButtonDrawable(int) -> setButtonDrawable
    164:167:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:195:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    113:116:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    138:141:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:91:void drawableStateChanged() -> drawableStateChanged
    95:95:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    74:75:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    105:107:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    79:83:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:48:void <init>(android.widget.CompoundButton) -> <init>
    127:145:void applyButtonTint() -> applyButtonTint
    148:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:92:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:124:void onSetButtonDrawable() -> onSetButtonDrawable
    95:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:110:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    465:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    483:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    58:460:void preload() -> preload
    502:503:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:365:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    154:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:254:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    185:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:309:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:396:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    450:456:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:318:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:356:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:445:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    84:85:void <init>(android.content.Context) -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:107:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    197:204:void drawableStateChanged() -> drawableStateChanged
    163:164:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    191:192:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    75:75:java.lang.CharSequence getText() -> getText
    115:120:android.text.Editable getText() -> getText
    270:273:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    223:233:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    278:281:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    317:317:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    292:295:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    133:137:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    125:129:void setBackgroundResource(int) -> setBackgroundResource
    242:244:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    148:151:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    176:179:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    208:212:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    252:257:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    245:252:void drawableStateChanged() -> drawableStateChanged
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    211:212:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    239:240:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    256:256:boolean hasOverlappingRendering() -> hasOverlappingRendering
    126:130:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:122:void setBackgroundResource(int) -> setBackgroundResource
    102:106:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    94:98:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    89:90:void setImageResource(int) -> setImageResource
    110:114:void setImageURI(android.net.Uri) -> setImageURI
    141:144:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:172:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    196:199:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    224:227:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    47:49:void <init>(android.widget.ImageView) -> <init>
    200:222:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    141:162:void applySupportImageTint() -> applySupportImageTint
    123:123:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    137:137:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    103:110:boolean hasOverlappingRendering() -> hasOverlappingRendering
    52:86:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:100:void setImageResource(int) -> setImageResource
    114:120:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    127:134:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    178:190:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:263:void drawableStateChanged() -> drawableStateChanged
    166:167:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    194:195:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    136:140:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    128:132:void setBackgroundResource(int) -> setBackgroundResource
    112:116:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    104:108:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    96:100:void setImageResource(int) -> setImageResource
    120:124:void setImageURI(android.net.Uri) -> setImageURI
    151:154:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    179:182:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:210:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:238:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    56:56:void <clinit>() -> <clinit>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:179:void drawableStateChanged() -> drawableStateChanged
    138:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    166:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    191:191:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    108:112:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    100:104:void setBackgroundResource(int) -> setBackgroundResource
    95:96:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    123:126:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    151:154:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    183:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    228:235:void drawableStateChanged() -> drawableStateChanged
    98:101:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    124:126:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    149:151:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    212:216:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    220:224:void setBackgroundResource(int) -> setBackgroundResource
    85:89:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    93:94:void setButtonDrawable(int) -> setButtonDrawable
    163:166:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:194:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    111:114:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    136:139:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
    179:179:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListener(android.view.View) -> createOnCommitContentListener
    89:116:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    65:78:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    159:166:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$1 -> androidx.appcompat.widget.AppCompatReceiveContentHelper$1:
    179:179:void <init>(android.view.View) -> <init>
    183:209:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
    125:136:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    141:145:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void drawableStateChanged() -> drawableStateChanged
    72:74:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    59:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:44:void <init>(android.widget.SeekBar) -> <init>
    128:145:void applyTickMarkTint() -> applyTickMarkTint
    165:185:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:159:void drawableStateChanged() -> drawableStateChanged
    148:151:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:96:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    79:79:void <clinit>() -> <clinit>
    144:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:161:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    180:181:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:302:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    558:598:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    551:555:void drawableStateChanged() -> drawableStateChanged
    373:378:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    347:352:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    392:397:int getDropDownWidth() -> getDropDownWidth
    603:603:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    328:333:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    309:309:android.content.Context getPopupContext() -> getPopupContext
    472:472:java.lang.CharSequence getPrompt() -> getPrompt
    516:517:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    545:546:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    419:424:void onDetachedFromWindow() -> onDetachedFromWindow
    436:445:void onMeasure(int,int) -> onMeasure
    625:651:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    617:620:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    428:431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    449:458:boolean performClick() -> performClick
    77:77:void setAdapter(android.widget.Adapter) -> setAdapter
    404:415:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    485:489:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    477:481:void setBackgroundResource(int) -> setBackgroundResource
    357:363:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    338:343:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    383:388:void setDropDownWidth(int) -> setDropDownWidth
    314:319:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    323:324:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    463:468:void setPrompt(java.lang.CharSequence) -> setPrompt
    501:504:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    530:533:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    607:612:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    264:264:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    267:267:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    273:276:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    632:632:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    635:646:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    858:858:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    866:870:void dismiss() -> dismiss
    937:937:android.graphics.drawable.Drawable getBackground() -> getBackground
    889:889:java.lang.CharSequence getHintText() -> getHintText
    947:947:int getHorizontalOffset() -> getHorizontalOffset
    942:942:int getVerticalOffset() -> getVerticalOffset
    874:874:boolean isShowing() -> isShowing
    913:918:void onClick(android.content.DialogInterface,int) -> onClick
    879:880:void setAdapter(android.widget.ListAdapter) -> setAdapter
    922:923:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    932:933:void setHorizontalOffset(int) -> setHorizontalOffset
    952:953:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    884:885:void setPromptText(java.lang.CharSequence) -> setPromptText
    927:928:void setVerticalOffset(int) -> setVerticalOffset
    894:909:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    703:725:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    778:782:boolean areAllItemsEnabled() -> areAllItemsEnabled
    729:729:int getCount() -> getCount
    749:750:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    734:734:java.lang.Object getItem(int) -> getItem
    739:739:long getItemId(int) -> getItemId
    802:802:int getItemViewType(int) -> getItemViewType
    744:744:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    807:807:int getViewTypeCount() -> getViewTypeCount
    755:755:boolean hasStableIds() -> hasStableIds
    812:812:boolean isEmpty() -> isEmpty
    792:796:boolean isEnabled(int) -> isEnabled
    760:763:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    767:770:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    965:986:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    962:962:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1006:1041:void computeContentWidth() -> computeContentWidth
    996:996:java.lang.CharSequence getHintText() -> getHintText
    1112:1112:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1102:1102:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    990:992:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1107:1108:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1002:1003:void setPromptText(java.lang.CharSequence) -> setPromptText
    1045:1096:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    975:975:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    978:984:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1071:1071:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1074:1083:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    1086:1086:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1089:1093:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    671:671:void <clinit>() -> <clinit>
    657:658:void <init>(android.os.Parcelable) -> <init>
    661:663:void <init>(android.os.Parcel) -> <init>
    667:669:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
# {"id":"sourceFile","fileName":"AppCompatSpinner.java"}
    672:672:void <init>() -> <init>
    672:672:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    675:675:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    672:672:java.lang.Object[] newArray(int) -> newArray
    680:680:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:44:void <init>(android.widget.TextView) -> <init>
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    73:81:void <init>(android.widget.TextView) -> <init>
    541:544:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    523:538:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    579:580:void autoSizeText() -> autoSizeText
    548:555:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    624:624:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    620:620:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    616:616:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    628:628:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    612:612:int getAutoSizeTextType() -> getAutoSizeTextType
    633:633:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    647:647:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    585:585:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    85:339:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    437:454:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    561:564:void onLayout(boolean,int,int,int,int) -> onLayout
    519:520:void onSetCompoundDrawables() -> onSetCompoundDrawables
    457:512:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    722:725:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    515:516:void setAllCaps(boolean) -> setAllCaps
    601:603:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    607:608:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    593:594:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    637:643:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    651:657:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    672:704:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    660:666:void setCompoundTints() -> setCompoundTints
    569:574:void setTextSize(int,float) -> setTextSize
    589:590:void setTextSizeInternal(int,float) -> setTextSizeInternal
    342:433:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    362:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    377:377:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    365:372:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    443:443:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    446:447:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    93:94:void <init>(android.content.Context) -> <init>
    97:98:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:114:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    488:497:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    198:205:void drawableStateChanged() -> drawableStateChanged
    370:377:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    351:358:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    332:339:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    389:396:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    311:320:int getAutoSizeTextType() -> getAutoSizeTextType
    428:428:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    433:433:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    640:640:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    683:683:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    501:502:java.lang.CharSequence getText() -> getText
    529:532:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    460:460:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    401:403:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    209:213:void onLayout(boolean,int,int,int,int) -> onLayout
    556:558:void onMeasure(int,int) -> onMeasure
    228:232:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    268:277:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    290:297:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    245:252:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    126:130:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:122:void setBackgroundResource(int) -> setBackgroundResource
    563:567:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    573:577:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    605:609:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    615:624:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    582:586:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    590:599:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    447:449:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    408:413:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    418:424:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    438:439:void setLineHeight(int) -> setLineHeight
    484:485:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    141:144:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:172:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    663:665:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    703:705:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    190:194:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    511:516:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    548:552:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    471:472:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    217:224:void setTextSize(int,float) -> setTextSize
    709:728:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    64:79:void <clinit>() -> <clinit>
    87:162:void <init>(android.widget.TextView) -> <init>
    864:872:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    603:637:void autoSizeText() -> autoSizeText
    510:534:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    640:646:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    734:739:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    779:799:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    822:829:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    805:811:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    697:717:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    467:467:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    451:451:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    435:435:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    480:480:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    421:421:int getAutoSizeTextType() -> getAutoSizeTextType
    899:911:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    879:892:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    722:729:void initTempTextPaint(int) -> initTempTextPaint
    841:857:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    923:923:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    165:243:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    328:344:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    371:401:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    261:291:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    659:690:void setRawTextSize(float) -> setRawTextSize
    651:656:void setTextSizeInternal(int,float) -> setTextSizeInternal
    573:593:boolean setupAutoSizeText() -> setupAutoSizeText
    484:494:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    497:505:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    744:772:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    932:932:boolean supportsAutoSizeText() -> supportsAutoSizeText
    548:570:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    112:112:void <init>() -> <init>
    119:119:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    115:115:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    124:124:void <init>() -> <init>
    129:133:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    138:138:void <init>() -> <init>
    148:149:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    142:142:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:74:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    150:157:void drawableStateChanged() -> drawableStateChanged
    116:117:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    144:145:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    86:90:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    78:82:void setBackgroundResource(int) -> setBackgroundResource
    101:104:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    129:132:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    47:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:149:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:141:void onMeasure(int,int) -> onMeasure
    61:68:void setAllowStacking(boolean) -> setAllowStacking
    158:172:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:61:void <init>(android.content.Context) -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:79:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:212:void onAttachedToWindow() -> onAttachedToWindow
    216:220:void onDetachedFromWindow() -> onDetachedFromWindow
    101:174:void onMeasure(int,int) -> onMeasure
    82:83:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:97:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:51:void <init>(android.content.Context) -> <init>
    55:82:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:64:void <clinit>() -> <clinit>
    142:176:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:135:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:194:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    200:207:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:129:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    541:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    199:205:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    564:571:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    187:195:void drawableStateChanged() -> drawableStateChanged
    165:165:boolean hasFocus() -> hasFocus
    145:145:boolean hasWindowFocus() -> hasWindowFocus
    155:155:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    291:368:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    470:472:void onDetachedFromWindow() -> onDetachedFromWindow
    481:533:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    429:465:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    585:600:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    574:580:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    553:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    170:182:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    372:375:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    557:561:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    381:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    399:402:void draw(android.graphics.Canvas) -> draw
    386:387:void setEnabled(boolean) -> setEnabled
    406:409:void setHotspot(float,float) -> setHotspot
    413:416:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    391:394:boolean setState(int[]) -> setState
    420:423:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    151:152:void <init>(android.content.Context) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:195:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1761:1761:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:370:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    305:329:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    373:376:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    379:382:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1327:1346:void forceUniformHeight(int,int) -> forceUniformHeight
    905:924:void forceUniformWidth(int,int) -> forceUniformWidth
    59:59:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1744:1749:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1731:1731:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1754:1754:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    433:481:int getBaseline() -> getBaseline
    490:490:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1357:1357:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    231:231:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    278:278:int getDividerPadding() -> getDividerPadding
    288:288:int getDividerWidth() -> getDividerWidth
    1710:1710:int getGravity() -> getGravity
    1399:1399:int getLocationOffset(android.view.View) -> getLocationOffset
    1411:1411:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1677:1677:int getOrientation() -> getOrientation
    222:222:int getShowDividers() -> getShowDividers
    515:515:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    528:528:int getVirtualChildCount() -> getVirtualChildCount
    539:539:float getWeightSum() -> getWeightSum
    576:590:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    391:391:boolean isBaselineAligned() -> isBaselineAligned
    414:414:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    1531:1652:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1436:1516:void layoutVertical(int,int,int,int) -> layoutVertical
    1387:1389:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    938:1321:void measureHorizontal(int,int) -> measureHorizontal
    1368:1368:int measureNullChild(int) -> measureNullChild
    605:901:void measureVertical(int,int) -> measureVertical
    293:302:void onDraw(android.graphics.Canvas) -> onDraw
    1766:1768:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1772:1774:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1416:1421:void onLayout(boolean,int,int,int,int) -> onLayout
    560:565:void onMeasure(int,int) -> onMeasure
    402:403:void setBaselineAligned(boolean) -> setBaselineAligned
    498:503:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1655:1656:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    242:255:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    267:268:void setDividerPadding(int) -> setDividerPadding
    1689:1701:void setGravity(int) -> setGravity
    1714:1719:void setHorizontalGravity(int) -> setHorizontalGravity
    428:429:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1664:1668:void setOrientation(int) -> setOrientation
    205:209:void setShowDividers(int) -> setShowDividers
    1722:1727:void setVerticalGravity(int) -> setVerticalGravity
    555:556:void setWeightSum(float) -> setWeightSum
    213:213:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1785:1786:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1792:1793:void <init>(int,int) -> <init>
    1806:1807:void <init>(int,int,float) -> <init>
    1813:1814:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:109:void <clinit>() -> <clinit>
    224:225:void <init>(android.content.Context) -> <init>
    248:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1156:1329:int buildDropDown() -> buildDropDown
    846:853:void clearListSelection() -> clearListSelection
    950:950:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    772:777:void dismiss() -> dismiss
    460:460:android.view.View getAnchorView() -> getAnchorView
    423:423:android.graphics.drawable.Drawable getBackground() -> getBackground
    477:477:int getHorizontalOffset() -> getHorizontalOffset
    946:946:android.widget.ListView getListView() -> getListView
    1445:1457:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    895:898:java.lang.Object getSelectedItem() -> getSelectedItem
    921:924:long getSelectedItemId() -> getSelectedItemId
    908:911:int getSelectedItemPosition() -> getSelectedItemPosition
    934:937:android.view.View getSelectedView() -> getSelectedView
    493:496:int getVerticalOffset() -> getVerticalOffset
    545:545:int getWidth() -> getWidth
    868:868:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    345:345:boolean isModal() -> isModal
    860:860:boolean isShowing() -> isShowing
    789:796:void removePromptView() -> removePromptView
    287:300:void setAdapter(android.widget.ListAdapter) -> setAdapter
    470:471:void setAnchorView(android.view.View) -> setAnchorView
    441:442:void setAnimationStyle(int) -> setAnimationStyle
    432:433:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    565:572:void setContentWidth(int) -> setContentWidth
    538:539:void setDropDownGravity(int) -> setDropDownGravity
    517:518:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    486:487:void setHorizontalOffset(int) -> setHorizontalOffset
    811:812:void setInputMethodMode(int) -> setInputMethodMode
    335:337:void setModal(boolean) -> setModal
    785:786:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    619:620:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1338:1340:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1431:1442:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    312:313:void setPromptPosition(int) -> setPromptPosition
    830:839:void setSelection(int) -> setSelection
    505:507:void setVerticalOffset(int) -> setVerticalOffset
    555:556:void setWidth(int) -> setWidth
    663:765:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1167:1167:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1171:1175:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1186:1186:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1191:1198:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1202:1202:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1361:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1366:1367:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1343:1344:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1348:1352:void onChanged() -> onChanged
    1356:1357:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1407:1408:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1414:1414:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1418:1423:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1386:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1391:1402:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1371:1372:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1376:1382:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    61:68:void <clinit>() -> <clinit>
    74:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:82:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    122:125:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    130:133:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    86:89:void setEnterTransition(java.lang.Object) -> setEnterTransition
    92:95:void setExitTransition(java.lang.Object) -> setExitTransition
    98:99:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    106:117:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    147:159:void <init>(android.content.Context,boolean) -> <init>
    138:138:boolean hasFocus() -> hasFocus
    138:138:boolean hasWindowFocus() -> hasWindowFocus
    138:138:boolean isFocused() -> isFocused
    138:138:boolean isInTouchMode() -> isInTouchMode
    138:138:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    138:138:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    201:242:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    171:195:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    138:138:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    162:163:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    138:138:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    85:115:void <clinit>() -> <clinit>
    61:121:void <init>() -> <init>
    370:374:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    338:349:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    405:414:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    485:498:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    170:170:long createCacheKey(android.util.TypedValue) -> createCacheKey
    175:198:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    463:467:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    95:100:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    317:334:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    135:135:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    139:158:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    472:481:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    381:392:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    396:400:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    377:377:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    107:113:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    501:502:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    232:313:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    161:167:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    353:361:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    130:132:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    203:228:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    439:459:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    366:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    539:539:void <init>() -> <init>
    544:548:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    523:524:void <init>() -> <init>
    530:534:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    419:420:void <init>(int) -> <init>
    431:434:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    423:423:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    427:427:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
    553:553:void <init>() -> <init>
    557:575:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    506:507:void <init>() -> <init>
    513:517:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    188:188:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    173:173:boolean getBoolean(int) -> getBoolean
    162:162:int getColor(int) -> getColor
    168:168:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    251:251:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    246:246:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    131:131:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    144:144:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    150:150:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    256:256:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    178:178:int getInteger(int) -> getInteger
    183:183:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    156:156:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    276:276:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    261:261:java.lang.String getResourceName(int) -> getResourceName
    266:266:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    271:271:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    214:215:void getValue(int,android.util.TypedValue,boolean) -> getValue
    227:228:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    221:222:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    193:193:android.content.res.XmlResourceParser getXml(int) -> getXml
    232:232:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    198:198:java.io.InputStream openRawResource(int) -> openRawResource
    203:203:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    208:208:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    288:289:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    282:283:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    238:242:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    78:78:void <clinit>() -> <clinit>
    76:94:void <init>(android.content.Context) -> <init>
    311:323:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    326:338:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    261:274:void animateToTab(int) -> animateToTab
    236:258:void animateToVisibility(int) -> animateToVisibility
    215:221:android.widget.Spinner createSpinner() -> createSpinner
    205:211:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    294:307:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:283:void onAttachedToWindow() -> onAttachedToWindow
    226:233:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:291:void onDetachedFromWindow() -> onDetachedFromWindow
    372:374:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:139:void onMeasure(int,int) -> onMeasure
    379:379:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    155:171:void performCollapse() -> performCollapse
    174:180:boolean performExpand() -> performExpand
    361:368:void removeAllTabs() -> removeAllTabs
    351:358:void removeTabAt(int) -> removeTabAt
    151:152:void setAllowCollapse(boolean) -> setAllowCollapse
    200:202:void setContentHeight(int) -> setContentHeight
    184:197:void setTabSelected(int) -> setTabSelected
    341:348:void updateTab(int) -> updateTab
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:271:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    527:528:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    542:542:long getItemId(int) -> getItemId
    547:552:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    557:558:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:569:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    382:411:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    414:416:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    522:522:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:432:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:440:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:451:void onMeasure(int,int) -> onMeasure
    420:425:void setSelected(boolean) -> setSelected
    454:519:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    572:573:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    599:600:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    591:595:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    585:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    578:580:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    175:176:void <clinit>() -> <clinit>
    267:268:void <init>(android.content.Context) -> <init>
    271:272:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:1713:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1385:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:502:void clearFocus() -> clearFocus
    1537:1560:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1656:1692:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1582:1637:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1571:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1203:void dismissSuggestions() -> dismissSuggestions
    1697:1703:void forceSuggestionQuery() -> forceSuggestionQuery
    851:856:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1098:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:626:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:906:boolean hasVoiceSearch() -> hasVoiceSearch
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1494:1504:void launchIntent(android.content.Intent) -> launchIntent
    1516:1519:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1487:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1284:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1298:void onActionViewExpanded() -> onActionViewExpanded
    1206:1223:void onCloseClicked() -> onCloseClicked
    964:967:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1395:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1404:boolean onItemSelected(int) -> onItemSelected
    832:848:void onLayout(boolean,int,int,int,int) -> onLayout
    783:828:void onMeasure(int,int) -> onMeasure
    973:974:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1353:1361:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1348:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1232:void onSearchClicked() -> onSearchClicked
    1188:1199:void onSubmitQuery() -> onSubmitQuery
    1043:1082:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1174:1185:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1265:void onTextFocusChanged() -> onTextFocusChanged
    1236:1255:void onVoiceClicked() -> onVoiceClicked
    1269:1272:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:946:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1464:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    429:430:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    669:674:void setIconified(boolean) -> setIconified
    642:646:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:442:void setImeOptions(int) -> setImeOptions
    464:465:void setInputType(int) -> setInputType
    764:767:void setMaxWidth(int) -> setMaxWidth
    520:521:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:530:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:512:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:551:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:539:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:581:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1513:void setQuery(java.lang.CharSequence) -> setQuery
    594:596:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:728:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:420:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:697:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:748:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    933:942:void updateCloseButton() -> updateCloseButton
    949:960:void updateFocusedState() -> updateFocusedState
    1102:1104:void updateQueryHint() -> updateQueryHint
    1110:1144:void updateSearchAutoComplete() -> updateSearchAutoComplete
    923:930:void updateSubmitArea() -> updateSubmitArea
    914:920:void updateSubmitButton(boolean) -> updateSubmitButton
    869:890:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1153:1159:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:182:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1725:1725:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1715:1715:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1720:1721:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:191:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:337:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:381:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:990:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1032:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1169:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1416:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1428:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1437:1437:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2037:2067:void <init>() -> <init>
    2080:2087:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2070:2077:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2090:2097:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2100:2104:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1305:void <init>(android.os.Parcelable) -> <init>
    1308:1310:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1316:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1843:void <init>(android.content.Context) -> <init>
    1846:1847:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1834:1852:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    2025:2033:void ensureImeVisible() -> ensureImeVisible
    1964:1974:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1988:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1860:void onFinishInflate() -> onFinishInflate
    1921:1923:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1936:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1917:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1895:1895:void performCompletion() -> performCompletion
    1885:1885:void replaceText(java.lang.CharSequence) -> replaceText
    2001:2022:void setImeVisibility(boolean) -> setImeVisibility
    1863:1864:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1870:void setThreshold(int) -> setThreshold
    1992:1998:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
# {"id":"sourceFile","fileName":"SearchView.java"}
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1838:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1767:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1819:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1774:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    73:104:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:323:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:235:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    414:437:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:634:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:538:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    735:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    679:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    133:133:boolean hasStableIds() -> hasStableIds
    242:248:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:182:void notifyDataSetChanged() -> notifyDataSetChanged
    187:190:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:331:void onClick(android.view.View) -> onClick
    144:167:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:117:void setQueryRefinement(int) -> setQueryRefinement
    387:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    591:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:206:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    262:268:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    116:199:void <clinit>() -> <clinit>
    209:210:void <init>(android.content.Context) -> <init>
    220:221:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    130:316:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1059:1066:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    719:736:void applyThumbTint() -> applyThumbTint
    596:613:void applyTrackTint() -> applyTrackTint
    1069:1072:void cancelPositionAnimator() -> cancelPositionAnimator
    1019:1023:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1469:1469:float constrain(float,float,float) -> constrain
    1174:1235:void draw(android.graphics.Canvas) -> draw
    1394:1405:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1372:1390:void drawableStateChanged() -> drawableStateChanged
    1304:1311:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1316:1323:int getCompoundPaddingRight() -> getCompoundPaddingRight
    827:827:boolean getShowText() -> getShowText
    758:758:boolean getSplitTrack() -> getSplitTrack
    471:471:int getSwitchMinWidth() -> getSwitchMinWidth
    446:446:int getSwitchPadding() -> getSwitchPadding
    1075:1075:boolean getTargetCheckedState() -> getTargetCheckedState
    791:791:java.lang.CharSequence getTextOff() -> getTextOff
    767:767:java.lang.CharSequence getTextOn() -> getTextOn
    655:655:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1334:1339:int getThumbOffset() -> getThumbOffset
    1343:1357:int getThumbScrollRange() -> getThumbScrollRange
    494:494:int getThumbTextPadding() -> getThumbTextPadding
    686:686:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    715:715:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    534:534:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    564:564:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    592:592:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    923:936:boolean hitThumb(float,float) -> hitThumb
    1414:1428:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    909:915:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1363:1367:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1239:1300:void onDraw(android.graphics.Canvas) -> onDraw
    1432:1434:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1438:1453:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1118:1170:void onLayout(boolean,int,int,int,int) -> onLayout
    832:896:void onMeasure(int,int) -> onMeasure
    900:906:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    941:1015:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1095:1114:void setChecked(boolean) -> setChecked
    1461:1463:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    1482:1488:void setOffStateDescriptionOnRAndAbove() -> setOffStateDescriptionOnRAndAbove
    1473:1479:void setOnStateDescriptionOnRAndAbove() -> setOnStateDescriptionOnRAndAbove
    816:820:void setShowText(boolean) -> setShowText
    748:750:void setSplitTrack(boolean) -> setSplitTrack
    458:460:void setSwitchMinWidth(int) -> setSwitchMinWidth
    434:436:void setSwitchPadding(int) -> setSwitchPadding
    325:361:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    389:407:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    417:424:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    364:380:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    800:807:void setTextOff(java.lang.CharSequence) -> setTextOff
    776:783:void setTextOn(java.lang.CharSequence) -> setTextOn
    624:632:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1084:1086:void setThumbPosition(float) -> setThumbPosition
    643:644:void setThumbResource(int) -> setThumbResource
    482:484:void setThumbTextPadding(int) -> setThumbTextPadding
    673:677:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    701:705:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    505:513:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    523:524:void setTrackResource(int) -> setTrackResource
    551:555:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    578:582:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1031:1056:void stopDrag(android.view.MotionEvent) -> stopDrag
    1090:1091:void toggle() -> toggle
    1409:1409:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    117:117:void <init>(java.lang.Class,java.lang.String) -> <init>
    117:117:java.lang.Object get(java.lang.Object) -> get
    120:120:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    117:117:void set(java.lang.Object,java.lang.Object) -> set
    125:126:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:176:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:148:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    158:158:boolean getBoolean(int,boolean) -> getBoolean
    170:170:int getColor(int,int) -> getColor
    174:184:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    192:192:float getDimension(int,float) -> getDimension
    196:196:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    200:200:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    80:86:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    90:96:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    166:166:float getFloat(int,float) -> getFloat
    119:126:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    162:162:int getInt(int,int) -> getInt
    188:188:int getInteger(int,int) -> getInteger
    208:208:int getLayoutDimension(int,int) -> getLayoutDimension
    216:216:int getResourceId(int,int) -> getResourceId
    150:150:java.lang.String getString(int) -> getString
    146:146:java.lang.CharSequence getText(int) -> getText
    220:220:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    76:76:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    240:240:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    252:253:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    229:230:void <init>(android.content.Context) -> <init>
    233:234:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    182:354:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2250:2256:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2142:2168:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1513:1530:void addSystemView(android.view.View,boolean) -> addSystemView
    518:518:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2224:2224:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    726:731:void collapseActionView() -> collapseActionView
    596:599:void dismissPopupMenus() -> dismissPopupMenus
    1494:1510:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2287:2290:void ensureContentInsets() -> ensureContentInsets
    696:699:void ensureLogoView() -> ensureLogoView
    1155:1165:void ensureMenu() -> ensureMenu
    1168:1178:void ensureMenuView() -> ensureMenuView
    1484:1491:void ensureNavButtonView() -> ensureNavButtonView
    146:146:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2219:2219:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2201:2201:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2206:2213:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2171:2180:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2091:2118:int getChildTop(android.view.View,int) -> getChildTop
    2123:2130:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1038:1038:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1083:1083:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1269:1269:int getContentInsetEnd() -> getContentInsetEnd
    1391:1393:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1312:1312:int getContentInsetLeft() -> getContentInsetLeft
    1332:1332:int getContentInsetRight() -> getContentInsetRight
    1249:1249:int getContentInsetStart() -> getContentInsetStart
    1348:1350:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1443:1450:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1463:1465:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1478:1480:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1429:1431:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2189:2191:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    654:654:android.graphics.drawable.Drawable getLogo() -> getLogo
    692:692:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1129:1130:android.view.Menu getMenu() -> getMenu
    1181:1181:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    918:918:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1010:1010:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2314:2314:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1150:1151:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2318:2318:android.content.Context getPopupContext() -> getPopupContext
    380:380:int getPopupTheme() -> getPopupTheme
    795:795:java.lang.CharSequence getSubtitle() -> getSubtitle
    2307:2307:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    739:739:java.lang.CharSequence getTitle() -> getTitle
    477:477:int getTitleMarginBottom() -> getTitleMarginBottom
    455:455:int getTitleMarginEnd() -> getTitleMarginEnd
    411:411:int getTitleMarginStart() -> getTitleMarginStart
    433:433:int getTitleMarginTop() -> getTitleMarginTop
    2298:2298:android.widget.TextView getTitleTextView() -> getTitleTextView
    2195:2196:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2046:2061:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2230:2233:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    712:712:boolean hasExpandedActionView() -> hasExpandedActionView
    552:552:boolean hideOverflowMenu() -> hideOverflowMenu
    1194:1195:void inflateMenu(int) -> inflateMenu
    2259:2259:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    534:534:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    528:528:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    604:619:boolean isTitleTruncated() -> isTitleTruncated
    2066:2074:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2079:2087:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1655:1672:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1630:1647:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1574:1576:void onDetachedFromWindow() -> onDetachedFromWindow
    1609:1625:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1828:2043:void onLayout(boolean,int,int,int,int) -> onLayout
    1694:1824:void onMeasure(int,int) -> onMeasure
    1546:1565:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    494:500:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1534:1541:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1585:1601:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1568:1570:void postShowOverflowMenu() -> postShowOverflowMenu
    2237:2247:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1052:1053:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1066:1072:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1097:1098:void setCollapseIcon(int) -> setCollapseIcon
    1111:1117:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2269:2271:void setCollapsible(boolean) -> setCollapsible
    1409:1418:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1367:1376:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1291:1293:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1228:1230:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    512:513:void setLogo(int) -> setLogo
    632:644:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    666:667:void setLogoDescription(int) -> setLogoDescription
    678:684:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    558:590:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2279:2284:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    932:933:void setNavigationContentDescription(int) -> setNavigationContentDescription
    946:952:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    969:970:void setNavigationIcon(int) -> setNavigationIcon
    987:999:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1023:1025:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1206:1207:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1139:1141:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    364:372:void setPopupTheme(int) -> setPopupTheme
    806:807:void setSubtitle(int) -> setSubtitle
    817:841:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    859:863:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    892:893:void setSubtitleTextColor(int) -> setSubtitleTextColor
    901:905:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    751:752:void setTitle(int) -> setTitle
    763:787:void setTitle(java.lang.CharSequence) -> setTitle
    397:403:void setTitleMargin(int,int,int,int) -> setTitleMargin
    488:490:void setTitleMarginBottom(int) -> setTitleMarginBottom
    466:469:void setTitleMarginEnd(int) -> setTitleMarginEnd
    422:425:void setTitleMarginStart(int) -> setTitleMarginStart
    444:447:void setTitleMarginTop(int) -> setTitleMarginTop
    848:852:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    871:872:void setTitleTextColor(int) -> setTitleTextColor
    880:884:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1679:1689:boolean shouldCollapse() -> shouldCollapse
    2185:2185:boolean shouldLayout(android.view.View) -> shouldLayout
    543:543:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    204:204:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    207:210:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    222:222:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    224:225:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1503:1503:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1506:1507:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2446:2447:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2544:2557:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2507:2537:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2502:2502:boolean flagActionItems() -> flagActionItems
    2562:2562:int getId() -> getId
    2460:2460:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2452:2456:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2498:2498:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2572:2572:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2567:2567:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2493:2493:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2489:2489:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2466:2485:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2350:2354:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2350:2359:void <init>(int,int) -> <init>
    2350:2364:void <init>(int,int,int) -> <init>
    2367:2368:void <init>(int) -> <init>
    2350:2374:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2350:2378:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2350:2385:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2350:2389:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2392:2396:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2424:2424:void <clinit>() -> <clinit>
    2408:2411:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2414:2415:void <init>(android.os.Parcelable) -> <init>
    2419:2422:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
# {"id":"sourceFile","fileName":"Toolbar.java"}
    2424:2424:void <init>() -> <init>
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2427:2427:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2432:2432:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object[] newArray(int) -> newArray
    2437:2437:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    556:561:void animateToVisibility(int) -> animateToVisibility
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    503:509:void ensureSpinner() -> ensureSpinner
    222:222:android.content.Context getContext() -> getContext
    551:551:android.view.View getCustomView() -> getCustomView
    380:380:int getDisplayOptions() -> getDisplayOptions
    535:535:int getDropdownItemCount() -> getDropdownItemCount
    530:530:int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    656:656:int getHeight() -> getHeight
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    268:268:java.lang.CharSequence getSubtitle() -> getSubtitle
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    666:666:int getVisibility() -> getVisibility
    438:438:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    291:291:boolean hasIcon() -> hasIcon
    296:296:boolean hasLogo() -> hasLogo
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    443:443:boolean isTitleTruncated() -> isTitleTruncated
    646:647:void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    641:642:void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    651:652:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    604:608:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    514:517:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    521:526:void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    599:600:void setNavigationIcon(int) -> setNavigationIcon
    463:500:void setNavigationMode(int) -> setNavigationMode
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.Toolbar_NavigationOnClickEventDispatcher -> androidx.appcompat.widget.Toolbar_NavigationOnClickEventDispatcher:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:74:void <init>(android.content.Context) -> <init>
    105:185:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:208:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:97:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:88:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    68:72:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    96:96:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    86:87:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    78:78:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    157:157:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:152:void onMeasure(int,int) -> onMeasure
    99:100:void setInflatedId(int) -> setInflatedId
    139:140:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:132:void setLayoutResource(int) -> setLayoutResource
    250:251:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:188:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> setDelegate
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:60:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:73:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:50:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
    54:59:void executeOnMainThread(java.lang.Runnable) -> executeOnMainThread
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.asynclayoutinflater.view.AsyncLayoutInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater:
    75:95:void <init>(android.content.Context) -> <init>
    84:93:void inflate(int,android.view.ViewGroup,androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener) -> inflate
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1 -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$1:
    95:95:void <init>(androidx.asynclayoutinflater.view.AsyncLayoutInflater) -> <init>
    98:106:boolean handleMessage(android.os.Message) -> handleMessage
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater:
    127:127:void <clinit>() -> <clinit>
    134:135:void <init>(android.content.Context) -> <init>
    139:139:android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
    144:156:android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest:
    122:123:void <init>() -> <init>
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread:
    163:165:void <clinit>() -> <clinit>
    160:172:void <init>() -> <init>
    225:230:void enqueue(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> enqueue
    168:168:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread getInstance() -> getInstance
    207:211:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest obtainRequest() -> obtainRequest
    215:221:void releaseRequest(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> releaseRequest
    202:202:void run() -> run
    180:197:void runInner() -> runInner
androidx.biometric.AuthenticationCallbackProvider -> androidx.biometric.AuthenticationCallbackProvider:
    95:97:void <init>(androidx.biometric.AuthenticationCallbackProvider$Listener) -> <init>
    112:115:android.hardware.biometrics.BiometricPrompt$AuthenticationCallback getBiometricCallback() -> getBiometricCallback
    131:166:androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback getFingerprintCallback() -> getFingerprintCallback
androidx.biometric.AuthenticationCallbackProvider$1 -> androidx.biometric.AuthenticationCallbackProvider$1:
    133:133:void <init>(androidx.biometric.AuthenticationCallbackProvider) -> <init>
    136:137:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    162:163:void onAuthenticationFailed() -> onAuthenticationFailed
    141:142:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    148:158:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
androidx.biometric.AuthenticationCallbackProvider$Api28Impl -> androidx.biometric.AuthenticationCallbackProvider$Api28Impl:
    212:212:android.hardware.biometrics.BiometricPrompt$AuthenticationCallback createCallback(androidx.biometric.AuthenticationCallbackProvider$Listener) -> createCallback
androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1 -> androidx.biometric.AuthenticationCallbackProvider$Api28Impl$1:
# {"id":"sourceFile","fileName":"AuthenticationCallbackProvider.java"}
    212:212:void <init>(androidx.biometric.AuthenticationCallbackProvider$Listener) -> <init>
    215:216:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    251:252:void onAuthenticationFailed() -> onAuthenticationFailed
    222:222:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    228:247:void onAuthenticationSucceeded(android.hardware.biometrics.BiometricPrompt$AuthenticationResult) -> onAuthenticationSucceeded
androidx.biometric.AuthenticationCallbackProvider$Api30Impl -> androidx.biometric.AuthenticationCallbackProvider$Api30Impl:
    189:189:int getAuthenticationType(android.hardware.biometrics.BiometricPrompt$AuthenticationResult) -> getAuthenticationType
androidx.biometric.AuthenticationCallbackProvider$Listener -> androidx.biometric.AuthenticationCallbackProvider$Listener:
    37:37:void <init>() -> <init>
androidx.biometric.AuthenticatorUtils -> androidx.biometric.AuthenticatorUtils:
    46:58:java.lang.String convertToString(int) -> convertToString
    79:93:int getConsolidatedAuthenticators(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject) -> getConsolidatedAuthenticators
    133:133:boolean isDeviceCredentialAllowed(int) -> isDeviceCredentialAllowed
    143:143:boolean isSomeBiometricAllowed(int) -> isSomeBiometricAllowed
    104:121:boolean isSupportedCombination(int) -> isSupportedCombination
    154:154:boolean isWeakBiometricAllowed(int) -> isWeakBiometricAllowed
androidx.biometric.BiometricErrorData -> androidx.biometric.BiometricErrorData:
    38:41:void <init>(int,java.lang.CharSequence) -> <init>
    88:88:java.lang.String convertToString(java.lang.CharSequence) -> convertToString
    60:64:boolean equals(java.lang.Object) -> equals
    45:45:int getErrorCode() -> getErrorCode
    50:50:java.lang.CharSequence getErrorMessage() -> getErrorMessage
    55:55:int hashCode() -> hashCode
    74:77:boolean isErrorMessageEqualTo(java.lang.CharSequence) -> isErrorMessageEqualTo
androidx.biometric.BiometricFragment -> androidx.biometric.BiometricFragment:
    56:202:void <init>() -> <init>
    360:405:void authenticate(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject) -> authenticate
    559:583:void authenticateWithBiometricPrompt(android.hardware.biometrics.BiometricPrompt,android.content.Context) -> authenticateWithBiometricPrompt
    527:545:void authenticateWithFingerprint(androidx.core.hardware.fingerprint.FingerprintManagerCompat,android.content.Context) -> authenticateWithFingerprint
    591:605:void cancelAuthentication(int) -> cancelAuthentication
    968:973:int checkForFingerprintPreAuthenticationErrors(androidx.core.hardware.fingerprint.FingerprintManagerCompat) -> checkForFingerprintPreAuthenticationErrors
    262:348:void connectViewModel() -> connectViewModel
    612:624:void dismiss() -> dismiss
    630:645:void dismissFingerprintDialog() -> dismissFingerprintDialog
    1054:1057:int getDismissDialogDelay() -> getDismissDialogDelay
    833:845:void handleConfirmCredentialResult(int) -> handleConfirmCredentialResult
    1039:1040:boolean isChangingConfigurations() -> isChangingConfigurations
    1010:1013:boolean isFingerprintDialogNeededForCrypto() -> isFingerprintDialogNeededForCrypto
    1028:1029:boolean isFingerprintDialogNeededForErrorHandling() -> isFingerprintDialogNeededForErrorHandling
    984:986:boolean isManagingDeviceCredentialButton() -> isManagingDeviceCredentialButton
    996:998:boolean isUsingFingerprintDialog() -> isUsingFingerprintDialog
    783:825:void launchConfirmCredentialActivity() -> launchConfirmCredentialActivity
    215:215:androidx.biometric.BiometricFragment newInstance() -> newInstance
    250:255:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    668:724:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    743:747:void onAuthenticationFailed() -> onAuthenticationFailed
    733:736:void onAuthenticationHelp(java.lang.CharSequence) -> onAuthenticationHelp
    655:656:void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult) -> onAuthenticationSucceeded
    768:775:void onCancelButtonPressed() -> onCancelButtonPressed
    220:222:void onCreate(android.os.Bundle) -> onCreate
    755:760:void onDeviceCredentialButtonPressed() -> onDeviceCredentialButtonPressed
    226:236:void onStart() -> onStart
    240:246:void onStop() -> onStop
    882:884:void sendErrorAndDismiss(int,java.lang.CharSequence) -> sendErrorAndDismiss
    922:939:void sendErrorToClient(int,java.lang.CharSequence) -> sendErrorToClient
    947:958:void sendFailureToClient() -> sendFailureToClient
    868:870:void sendSuccessAndDismiss(androidx.biometric.BiometricPrompt$AuthenticationResult) -> sendSuccessAndDismiss
    897:910:void sendSuccessToClient(androidx.biometric.BiometricPrompt$AuthenticationResult) -> sendSuccessToClient
    472:513:void showBiometricPromptForAuthentication() -> showBiometricPromptForAuthentication
    434:464:void showFingerprintDialogForAuthentication() -> showFingerprintDialogForAuthentication
    853:858:void showFingerprintErrorMessage(java.lang.CharSequence) -> showFingerprintErrorMessage
    413:427:void showPromptForAuthentication() -> showPromptForAuthentication
androidx.biometric.BiometricFragment$1 -> androidx.biometric.BiometricFragment$1:
    271:271:void <init>(androidx.biometric.BiometricFragment) -> <init>
    271:271:void onChanged(java.lang.Object) -> onChanged
    275:279:void onChanged(androidx.biometric.BiometricPrompt$AuthenticationResult) -> onChanged
androidx.biometric.BiometricFragment$10 -> androidx.biometric.BiometricFragment$10:
    933:933:void <init>(androidx.biometric.BiometricFragment,int,java.lang.CharSequence) -> <init>
    936:937:void run() -> run
androidx.biometric.BiometricFragment$11 -> androidx.biometric.BiometricFragment$11:
    952:952:void <init>(androidx.biometric.BiometricFragment) -> <init>
    955:956:void run() -> run
androidx.biometric.BiometricFragment$2 -> androidx.biometric.BiometricFragment$2:
    284:284:void <init>(androidx.biometric.BiometricFragment) -> <init>
    284:284:void onChanged(java.lang.Object) -> onChanged
    287:293:void onChanged(androidx.biometric.BiometricErrorData) -> onChanged
androidx.biometric.BiometricFragment$3 -> androidx.biometric.BiometricFragment$3:
    298:298:void <init>(androidx.biometric.BiometricFragment) -> <init>
    298:298:void onChanged(java.lang.Object) -> onChanged
    301:305:void onChanged(java.lang.CharSequence) -> onChanged
androidx.biometric.BiometricFragment$4 -> androidx.biometric.BiometricFragment$4:
    310:310:void <init>(androidx.biometric.BiometricFragment) -> <init>
    310:310:void onChanged(java.lang.Object) -> onChanged
    313:317:void onChanged(java.lang.Boolean) -> onChanged
androidx.biometric.BiometricFragment$5 -> androidx.biometric.BiometricFragment$5:
    322:322:void <init>(androidx.biometric.BiometricFragment) -> <init>
    322:322:void onChanged(java.lang.Object) -> onChanged
    325:333:void onChanged(java.lang.Boolean) -> onChanged
androidx.biometric.BiometricFragment$6 -> androidx.biometric.BiometricFragment$6:
    338:338:void <init>(androidx.biometric.BiometricFragment) -> <init>
    338:338:void onChanged(java.lang.Object) -> onChanged
    341:346:void onChanged(java.lang.Boolean) -> onChanged
androidx.biometric.BiometricFragment$7 -> androidx.biometric.BiometricFragment$7:
    448:448:void <init>(androidx.biometric.BiometricFragment) -> <init>
    451:452:void run() -> run
androidx.biometric.BiometricFragment$8 -> androidx.biometric.BiometricFragment$8:
    705:705:void <init>(androidx.biometric.BiometricFragment,int,java.lang.CharSequence) -> <init>
    708:709:void run() -> run
androidx.biometric.BiometricFragment$9 -> androidx.biometric.BiometricFragment$9:
    904:904:void <init>(androidx.biometric.BiometricFragment,androidx.biometric.BiometricPrompt$AuthenticationResult) -> <init>
    907:908:void run() -> run
androidx.biometric.BiometricFragment$Api21Impl -> androidx.biometric.BiometricFragment$Api21Impl:
    1271:1271:android.content.Intent createConfirmDeviceCredentialIntent(android.app.KeyguardManager,java.lang.CharSequence,java.lang.CharSequence) -> createConfirmDeviceCredentialIntent
androidx.biometric.BiometricFragment$Api28Impl -> androidx.biometric.BiometricFragment$Api28Impl:
    1223:1224:void authenticate(android.hardware.biometrics.BiometricPrompt,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback) -> authenticate
    1243:1244:void authenticate(android.hardware.biometrics.BiometricPrompt,android.hardware.biometrics.BiometricPrompt$CryptoObject,android.os.CancellationSignal,java.util.concurrent.Executor,android.hardware.biometrics.BiometricPrompt$AuthenticationCallback) -> authenticate
    1205:1205:android.hardware.biometrics.BiometricPrompt buildPrompt(android.hardware.biometrics.BiometricPrompt$Builder) -> buildPrompt
    1136:1136:android.hardware.biometrics.BiometricPrompt$Builder createPromptBuilder(android.content.Context) -> createPromptBuilder
    1175:1176:void setDescription(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence) -> setDescription
    1192:1193:void setNegativeButton(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence,java.util.concurrent.Executor,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    1162:1163:void setSubtitle(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence) -> setSubtitle
    1149:1150:void setTitle(android.hardware.biometrics.BiometricPrompt$Builder,java.lang.CharSequence) -> setTitle
androidx.biometric.BiometricFragment$Api29Impl -> androidx.biometric.BiometricFragment$Api29Impl:
    1100:1101:void setConfirmationRequired(android.hardware.biometrics.BiometricPrompt$Builder,boolean) -> setConfirmationRequired
    1114:1115:void setDeviceCredentialAllowed(android.hardware.biometrics.BiometricPrompt$Builder,boolean) -> setDeviceCredentialAllowed
androidx.biometric.BiometricFragment$Api30Impl -> androidx.biometric.BiometricFragment$Api30Impl:
    1078:1079:void setAllowedAuthenticators(android.hardware.biometrics.BiometricPrompt$Builder,int) -> setAllowedAuthenticators
androidx.biometric.BiometricFragment$PromptExecutor -> androidx.biometric.BiometricFragment$PromptExecutor:
    128:131:void <init>() -> <init>
    135:136:void execute(java.lang.Runnable) -> execute
androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable -> androidx.biometric.BiometricFragment$ShowPromptForAuthenticationRunnable:
    147:149:void <init>(androidx.biometric.BiometricFragment) -> <init>
    153:156:void run() -> run
androidx.biometric.BiometricFragment$StopDelayingPromptRunnable -> androidx.biometric.BiometricFragment$StopDelayingPromptRunnable:
    167:169:void <init>(androidx.biometric.BiometricViewModel) -> <init>
    173:176:void run() -> run
androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable -> androidx.biometric.BiometricFragment$StopIgnoringCancelRunnable:
    187:189:void <init>(androidx.biometric.BiometricViewModel) -> <init>
    193:196:void run() -> run
androidx.biometric.BiometricManager -> androidx.biometric.BiometricManager:
    291:299:void <init>(androidx.biometric.BiometricManager$Injector) -> <init>
    314:314:int canAuthenticate() -> canAuthenticate
    336:343:int canAuthenticate(int) -> canAuthenticate
    360:399:int canAuthenticateCompat(int) -> canAuthenticateCompat
    494:504:int canAuthenticateWithFingerprint() -> canAuthenticateWithFingerprint
    475:483:int canAuthenticateWithFingerprintOrUnknownBiometric() -> canAuthenticateWithFingerprintOrUnknownBiometric
    415:442:int canAuthenticateWithStrongBiometricOnApi29() -> canAuthenticateWithStrongBiometricOnApi29
    456:460:int canAuthenticateWithWeakBiometricOnApi29() -> canAuthenticateWithWeakBiometricOnApi29
    282:282:androidx.biometric.BiometricManager from(android.content.Context) -> from
androidx.biometric.BiometricManager$Api29Impl -> androidx.biometric.BiometricManager$Api29Impl:
    566:566:int canAuthenticate(android.hardware.biometrics.BiometricManager) -> canAuthenticate
    551:551:android.hardware.biometrics.BiometricManager create(android.content.Context) -> create
    579:583:java.lang.reflect.Method getCanAuthenticateWithCryptoMethod() -> getCanAuthenticateWithCryptoMethod
androidx.biometric.BiometricManager$Api30Impl -> androidx.biometric.BiometricManager$Api30Impl:
    530:530:int canAuthenticate(android.hardware.biometrics.BiometricManager,int) -> canAuthenticate
androidx.biometric.BiometricManager$DefaultInjector -> androidx.biometric.BiometricManager$DefaultInjector:
    220:222:void <init>(android.content.Context) -> <init>
    228:228:android.hardware.biometrics.BiometricManager getBiometricManager() -> getBiometricManager
    234:234:androidx.core.hardware.fingerprint.FingerprintManagerCompat getFingerprintManager() -> getFingerprintManager
    239:239:boolean isDeviceSecurable() -> isDeviceSecurable
    244:244:boolean isDeviceSecuredWithCredential() -> isDeviceSecuredWithCredential
    249:249:boolean isFingerprintHardwarePresent() -> isFingerprintHardwarePresent
    254:254:boolean isStrongBiometricGuaranteed() -> isStrongBiometricGuaranteed
androidx.biometric.BiometricPrompt -> androidx.biometric.BiometricPrompt:
    760:772:void <init>(androidx.fragment.app.FragmentActivity,androidx.biometric.BiometricPrompt$AuthenticationCallback) -> <init>
    792:806:void <init>(androidx.fragment.app.Fragment,androidx.biometric.BiometricPrompt$AuthenticationCallback) -> <init>
    831:846:void <init>(androidx.fragment.app.FragmentActivity,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback) -> <init>
    871:888:void <init>(androidx.fragment.app.Fragment,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback) -> <init>
    1039:1043:void addObservers(androidx.fragment.app.Fragment,androidx.biometric.BiometricViewModel) -> addObservers
    935:956:void authenticate(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject) -> authenticate
    968:973:void authenticate(androidx.biometric.BiometricPrompt$PromptInfo) -> authenticate
    982:994:void authenticateInternal(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject) -> authenticateInternal
    1004:1016:void cancelAuthentication() -> cancelAuthentication
    1056:1056:androidx.biometric.BiometricFragment findBiometricFragment(androidx.fragment.app.FragmentManager) -> findBiometricFragment
    1071:1085:androidx.biometric.BiometricFragment findOrAddBiometricFragment(androidx.fragment.app.FragmentManager) -> findOrAddBiometricFragment
    1026:1028:androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity) -> getViewModel
    905:913:void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback) -> init
androidx.biometric.BiometricPrompt$AuthenticationCallback -> androidx.biometric.BiometricPrompt$AuthenticationCallback:
    365:365:void <init>() -> <init>
    376:376:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    393:393:void onAuthenticationFailed() -> onAuthenticationFailed
    387:387:void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult) -> onAuthenticationSucceeded
androidx.biometric.BiometricPrompt$AuthenticationResult -> androidx.biometric.BiometricPrompt$AuthenticationResult:
    331:334:void <init>(androidx.biometric.BiometricPrompt$CryptoObject,int) -> <init>
    358:358:int getAuthenticationType() -> getAuthenticationType
    343:343:androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject() -> getCryptoObject
androidx.biometric.BiometricPrompt$CryptoObject -> androidx.biometric.BiometricPrompt$CryptoObject:
    234:239:void <init>(java.security.Signature) -> <init>
    246:251:void <init>(javax.crypto.Cipher) -> <init>
    258:263:void <init>(javax.crypto.Mac) -> <init>
    273:278:void <init>(android.security.identity.IdentityCredential) -> <init>
    297:297:javax.crypto.Cipher getCipher() -> getCipher
    318:318:android.security.identity.IdentityCredential getIdentityCredential() -> getIdentityCredential
    307:307:javax.crypto.Mac getMac() -> getMac
    287:287:java.security.Signature getSignature() -> getSignature
androidx.biometric.BiometricPrompt$PromptInfo -> androidx.biometric.BiometricPrompt$PromptInfo:
    618:626:void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,int) -> <init>
    713:713:int getAllowedAuthenticators() -> getAllowedAuthenticators
    661:661:java.lang.CharSequence getDescription() -> getDescription
    674:674:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    649:649:java.lang.CharSequence getSubtitle() -> getSubtitle
    637:637:java.lang.CharSequence getTitle() -> getTitle
    685:685:boolean isConfirmationRequired() -> isConfirmationRequired
    700:700:boolean isDeviceCredentialAllowed() -> isDeviceCredentialAllowed
androidx.biometric.BiometricPrompt$PromptInfo$Builder -> androidx.biometric.BiometricPrompt$PromptInfo$Builder:
# {"id":"sourceFile","fileName":"BiometricPrompt.java"}
    403:411:void <init>() -> <init>
    569:589:androidx.biometric.BiometricPrompt$PromptInfo build() -> build
    555:556:androidx.biometric.BiometricPrompt$PromptInfo$Builder setAllowedAuthenticators(int) -> setAllowedAuthenticators
    485:486:androidx.biometric.BiometricPrompt$PromptInfo$Builder setConfirmationRequired(boolean) -> setConfirmationRequired
    445:446:androidx.biometric.BiometricPrompt$PromptInfo$Builder setDescription(java.lang.CharSequence) -> setDescription
    518:519:androidx.biometric.BiometricPrompt$PromptInfo$Builder setDeviceCredentialAllowed(boolean) -> setDeviceCredentialAllowed
    462:463:androidx.biometric.BiometricPrompt$PromptInfo$Builder setNegativeButtonText(java.lang.CharSequence) -> setNegativeButtonText
    433:434:androidx.biometric.BiometricPrompt$PromptInfo$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    421:422:androidx.biometric.BiometricPrompt$PromptInfo$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.biometric.BiometricPrompt$ResetCallbackObserver -> androidx.biometric.BiometricPrompt$ResetCallbackObserver:
    724:726:void <init>(androidx.biometric.BiometricViewModel) -> <init>
    730:733:void resetCallback() -> resetCallback
androidx.biometric.BiometricViewModel -> androidx.biometric.BiometricViewModel:
    43:255:void <init>() -> <init>
    389:391:int getAllowedAuthenticators() -> getAllowedAuthenticators
    405:409:androidx.biometric.AuthenticationCallbackProvider getAuthenticationCallbackProvider() -> getAuthenticationCallbackProvider
    498:501:androidx.lifecycle.MutableLiveData getAuthenticationError() -> getAuthenticationError
    513:516:androidx.lifecycle.LiveData getAuthenticationHelpMessage() -> getAuthenticationHelpMessage
    482:485:androidx.lifecycle.LiveData getAuthenticationResult() -> getAuthenticationResult
    433:433:int getCanceledFrom() -> getCanceledFrom
    414:417:androidx.biometric.CancellationSignalProvider getCancellationSignalProvider() -> getCancellationSignalProvider
    279:282:androidx.biometric.BiometricPrompt$AuthenticationCallback getClientCallback() -> getClientCallback
    270:270:java.util.concurrent.Executor getClientExecutor() -> getClientExecutor
    396:396:androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject() -> getCryptoObject
    336:336:java.lang.CharSequence getDescription() -> getDescription
    609:612:androidx.lifecycle.LiveData getFingerprintDialogHelpMessage() -> getFingerprintDialogHelpMessage
    583:583:int getFingerprintDialogPreviousState() -> getFingerprintDialogPreviousState
    593:596:androidx.lifecycle.LiveData getFingerprintDialogState() -> getFingerprintDialogState
    632:637:int getInferredAuthenticationResultType() -> getInferredAuthenticationResultType
    422:425:android.content.DialogInterface$OnClickListener getNegativeButtonListener() -> getNegativeButtonListener
    352:357:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    323:323:java.lang.CharSequence getSubtitle() -> getSubtitle
    310:310:java.lang.CharSequence getTitle() -> getTitle
    529:532:androidx.lifecycle.LiveData isAuthenticationFailurePending() -> isAuthenticationFailurePending
    449:449:boolean isAwaitingResult() -> isAwaitingResult
    370:370:boolean isConfirmationRequired() -> isConfirmationRequired
    457:457:boolean isConfirmingDeviceCredential() -> isConfirmingDeviceCredential
    465:465:boolean isDelayingPrompt() -> isDelayingPrompt
    568:571:androidx.lifecycle.LiveData isFingerprintDialogCancelPending() -> isFingerprintDialogCancelPending
    558:558:boolean isFingerprintDialogDismissedInstantly() -> isFingerprintDialogDismissedInstantly
    473:473:boolean isIgnoringCancel() -> isIgnoringCancel
    544:547:androidx.lifecycle.LiveData isNegativeButtonPressPending() -> isNegativeButtonPressPending
    441:441:boolean isPromptShowing() -> isPromptShowing
    293:294:void resetClientCallback() -> resetClientCallback
    505:509:void setAuthenticationError(androidx.biometric.BiometricErrorData) -> setAuthenticationError
    536:540:void setAuthenticationFailurePending(boolean) -> setAuthenticationFailurePending
    521:525:void setAuthenticationHelpMessage(java.lang.CharSequence) -> setAuthenticationHelpMessage
    490:494:void setAuthenticationResult(androidx.biometric.BiometricPrompt$AuthenticationResult) -> setAuthenticationResult
    453:454:void setAwaitingResult(boolean) -> setAwaitingResult
    437:438:void setCanceledFrom(int) -> setCanceledFrom
    286:287:void setClientCallback(androidx.biometric.BiometricPrompt$AuthenticationCallback) -> setClientCallback
    274:275:void setClientExecutor(java.util.concurrent.Executor) -> setClientExecutor
    461:462:void setConfirmingDeviceCredential(boolean) -> setConfirmingDeviceCredential
    400:401:void setCryptoObject(androidx.biometric.BiometricPrompt$CryptoObject) -> setCryptoObject
    469:470:void setDelayingPrompt(boolean) -> setDelayingPrompt
    575:579:void setFingerprintDialogCancelPending(boolean) -> setFingerprintDialogCancelPending
    563:564:void setFingerprintDialogDismissedInstantly(boolean) -> setFingerprintDialogDismissedInstantly
    617:621:void setFingerprintDialogHelpMessage(java.lang.CharSequence) -> setFingerprintDialogHelpMessage
    588:589:void setFingerprintDialogPreviousState(int) -> setFingerprintDialogPreviousState
    601:605:void setFingerprintDialogState(int) -> setFingerprintDialogState
    477:478:void setIgnoringCancel(boolean) -> setIgnoringCancel
    551:555:void setNegativeButtonPressPending(boolean) -> setNegativeButtonPressPending
    429:430:void setNegativeButtonTextOverride(java.lang.CharSequence) -> setNegativeButtonTextOverride
    297:298:void setPromptInfo(androidx.biometric.BiometricPrompt$PromptInfo) -> setPromptInfo
    445:446:void setPromptShowing(boolean) -> setPromptShowing
    647:652:void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object) -> updateValue
androidx.biometric.BiometricViewModel$1 -> androidx.biometric.BiometricViewModel$1:
    280:280:void <init>(androidx.biometric.BiometricViewModel) -> <init>
androidx.biometric.BiometricViewModel$CallbackListener -> androidx.biometric.BiometricViewModel$CallbackListener:
    73:75:void <init>(androidx.biometric.BiometricViewModel) -> <init>
    94:100:void onError(int,java.lang.CharSequence) -> onError
    111:114:void onFailure() -> onFailure
    104:107:void onHelp(java.lang.CharSequence) -> onHelp
    79:90:void onSuccess(androidx.biometric.BiometricPrompt$AuthenticationResult) -> onSuccess
androidx.biometric.BiometricViewModel$DefaultExecutor -> androidx.biometric.BiometricViewModel$DefaultExecutor:
    49:52:void <init>() -> <init>
    56:57:void execute(java.lang.Runnable) -> execute
androidx.biometric.BiometricViewModel$NegativeButtonListener -> androidx.biometric.BiometricViewModel$NegativeButtonListener:
    129:131:void <init>(androidx.biometric.BiometricViewModel) -> <init>
    135:138:void onClick(android.content.DialogInterface,int) -> onClick
androidx.biometric.CancellationSignalProvider -> androidx.biometric.CancellationSignalProvider:
    82:97:void <init>() -> <init>
    150:169:void cancel() -> cancel
    122:125:android.os.CancellationSignal getBiometricCancellationSignal() -> getBiometricCancellationSignal
    140:143:androidx.core.os.CancellationSignal getFingerprintCancellationSignal() -> getFingerprintCancellationSignal
androidx.biometric.CancellationSignalProvider$1 -> androidx.biometric.CancellationSignalProvider$1:
    83:83:void <init>(androidx.biometric.CancellationSignalProvider) -> <init>
    88:88:android.os.CancellationSignal getBiometricCancellationSignal() -> getBiometricCancellationSignal
    94:94:androidx.core.os.CancellationSignal getFingerprintCancellationSignal() -> getFingerprintCancellationSignal
androidx.biometric.CancellationSignalProvider$Api16Impl -> androidx.biometric.CancellationSignalProvider$Api16Impl:
    192:193:void cancel(android.os.CancellationSignal) -> cancel
    185:185:android.os.CancellationSignal create() -> create
androidx.biometric.CryptoObjectUtils -> androidx.biometric.CryptoObjectUtils:
    242:270:androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject() -> createFakeCryptoObject
    77:105:androidx.biometric.BiometricPrompt$CryptoObject unwrapFromBiometricPrompt(android.hardware.biometrics.BiometricPrompt$CryptoObject) -> unwrapFromBiometricPrompt
    165:184:androidx.biometric.BiometricPrompt$CryptoObject unwrapFromFingerprintManager(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> unwrapFromFingerprintManager
    120:148:android.hardware.biometrics.BiometricPrompt$CryptoObject wrapForBiometricPrompt(androidx.biometric.BiometricPrompt$CryptoObject) -> wrapForBiometricPrompt
    200:228:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject wrapForFingerprintManager(androidx.biometric.BiometricPrompt$CryptoObject) -> wrapForFingerprintManager
androidx.biometric.CryptoObjectUtils$Api23Impl -> androidx.biometric.CryptoObjectUtils$Api23Impl:
    446:446:android.security.keystore.KeyGenParameterSpec buildKeyGenParameterSpec(android.security.keystore.KeyGenParameterSpec$Builder) -> buildKeyGenParameterSpec
    416:416:android.security.keystore.KeyGenParameterSpec$Builder createKeyGenParameterSpecBuilder(java.lang.String,int) -> createKeyGenParameterSpecBuilder
    461:462:void initKeyGenerator(javax.crypto.KeyGenerator,android.security.keystore.KeyGenParameterSpec) -> initKeyGenerator
    425:426:void setBlockModeCBC(android.security.keystore.KeyGenParameterSpec$Builder) -> setBlockModeCBC
    434:435:void setEncryptionPaddingPKCS7(android.security.keystore.KeyGenParameterSpec$Builder) -> setEncryptionPaddingPKCS7
androidx.biometric.CryptoObjectUtils$Api28Impl -> androidx.biometric.CryptoObjectUtils$Api28Impl:
    328:328:android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Cipher) -> create
    342:342:android.hardware.biometrics.BiometricPrompt$CryptoObject create(java.security.Signature) -> create
    354:354:android.hardware.biometrics.BiometricPrompt$CryptoObject create(javax.crypto.Mac) -> create
    367:367:javax.crypto.Cipher getCipher(android.hardware.biometrics.BiometricPrompt$CryptoObject) -> getCipher
    393:393:javax.crypto.Mac getMac(android.hardware.biometrics.BiometricPrompt$CryptoObject) -> getMac
    380:380:java.security.Signature getSignature(android.hardware.biometrics.BiometricPrompt$CryptoObject) -> getSignature
androidx.biometric.CryptoObjectUtils$Api30Impl -> androidx.biometric.CryptoObjectUtils$Api30Impl:
    293:293:android.hardware.biometrics.BiometricPrompt$CryptoObject create(android.security.identity.IdentityCredential) -> create
    306:306:android.security.identity.IdentityCredential getIdentityCredential(android.hardware.biometrics.BiometricPrompt$CryptoObject) -> getIdentityCredential
androidx.biometric.DeviceUtils -> androidx.biometric.DeviceUtils:
    95:99:boolean canAssumeStrongBiometrics(android.content.Context,java.lang.String) -> canAssumeStrongBiometrics
    156:166:boolean isModelInList(android.content.Context,java.lang.String,int) -> isModelInList
    134:144:boolean isModelInPrefixList(android.content.Context,java.lang.String,int) -> isModelInPrefixList
    112:122:boolean isVendorInList(android.content.Context,java.lang.String,int) -> isVendorInList
    79:83:boolean shouldDelayShowingPrompt(android.content.Context,java.lang.String) -> shouldDelayShowingPrompt
    63:67:boolean shouldHideFingerprintDialog(android.content.Context,java.lang.String) -> shouldHideFingerprintDialog
    45:50:boolean shouldUseFingerprintForCrypto(android.content.Context,java.lang.String,java.lang.String) -> shouldUseFingerprintForCrypto
androidx.biometric.ErrorUtils -> androidx.biometric.ErrorUtils:
    78:98:java.lang.String getFingerprintErrorString(android.content.Context,int) -> getFingerprintErrorString
    39:56:boolean isKnownError(int) -> isKnownError
    68:68:boolean isLockoutError(int) -> isLockoutError
androidx.biometric.FingerprintDialogFragment -> androidx.biometric.FingerprintDialogFragment:
    60:109:void <init>() -> <init>
    250:275:void connectViewModel() -> connectViewModel
    404:425:android.graphics.drawable.Drawable getAssetForTransition(int,int) -> getAssetForTransition
    358:372:int getThemedColorFor(int) -> getThemedColorFor
    152:152:androidx.biometric.FingerprintDialogFragment newInstance() -> newInstance
    241:243:void onCancel(android.content.DialogInterface) -> onCancel
    157:169:void onCreate(android.os.Bundle) -> onCreate
    174:221:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    235:237:void onPause() -> onPause
    226:231:void onResume() -> onResume
    340:349:void resetDialog() -> resetDialog
    383:393:boolean shouldAnimateForTransition(int,int) -> shouldAnimateForTransition
    286:308:void updateFingerprintIcon(int) -> updateFingerprintIcon
    317:321:void updateHelpMessageColor(int) -> updateHelpMessageColor
    330:333:void updateHelpMessageText(java.lang.CharSequence) -> updateHelpMessageText
androidx.biometric.FingerprintDialogFragment$1 -> androidx.biometric.FingerprintDialogFragment$1:
    110:110:void <init>(androidx.biometric.FingerprintDialogFragment) -> <init>
    113:114:void run() -> run
androidx.biometric.FingerprintDialogFragment$2 -> androidx.biometric.FingerprintDialogFragment$2:
    211:211:void <init>(androidx.biometric.FingerprintDialogFragment) -> <init>
    214:215:void onClick(android.content.DialogInterface,int) -> onClick
androidx.biometric.FingerprintDialogFragment$3 -> androidx.biometric.FingerprintDialogFragment$3:
    257:257:void <init>(androidx.biometric.FingerprintDialogFragment) -> <init>
    257:257:void onChanged(java.lang.Object) -> onChanged
    260:264:void onChanged(java.lang.Integer) -> onChanged
androidx.biometric.FingerprintDialogFragment$4 -> androidx.biometric.FingerprintDialogFragment$4:
    267:267:void <init>(androidx.biometric.FingerprintDialogFragment) -> <init>
    267:267:void onChanged(java.lang.Object) -> onChanged
    270:273:void onChanged(java.lang.CharSequence) -> onChanged
androidx.biometric.FingerprintDialogFragment$Api21Impl -> androidx.biometric.FingerprintDialogFragment$Api21Impl:
    458:461:void startAnimation(android.graphics.drawable.Drawable) -> startAnimation
androidx.biometric.FingerprintDialogFragment$Api26Impl -> androidx.biometric.FingerprintDialogFragment$Api26Impl:
    440:440:int getColorErrorAttr() -> getColorErrorAttr
androidx.biometric.KeyguardUtils -> androidx.biometric.KeyguardUtils:
    42:46:android.app.KeyguardManager getKeyguardManager(android.content.Context) -> getKeyguardManager
    56:66:boolean isDeviceSecuredWithCredential(android.content.Context) -> isDeviceSecuredWithCredential
androidx.biometric.KeyguardUtils$Api16Impl -> androidx.biometric.KeyguardUtils$Api16Impl:
    114:114:boolean isKeyguardSecure(android.app.KeyguardManager) -> isKeyguardSecure
androidx.biometric.KeyguardUtils$Api23Impl -> androidx.biometric.KeyguardUtils$Api23Impl:
    85:85:android.app.KeyguardManager getKeyguardManager(android.content.Context) -> getKeyguardManager
    95:95:boolean isDeviceSecure(android.app.KeyguardManager) -> isDeviceSecure
androidx.biometric.PackageUtils -> androidx.biometric.PackageUtils:
    41:44:boolean hasSystemFeatureFingerprint(android.content.Context) -> hasSystemFeatureFingerprint
androidx.biometric.PackageUtils$Api23Impl -> androidx.biometric.PackageUtils$Api23Impl:
    62:62:boolean hasSystemFeatureFingerprint(android.content.pm.PackageManager) -> hasSystemFeatureFingerprint
androidx.browser.browseractions.BrowserActionsFallbackMenuView -> androidx.browser.browseractions.BrowserActionsFallbackMenuView:
    42:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:56:void onMeasure(int,int) -> onMeasure
androidx.browser.customtabs.CustomTabColorSchemeParams -> androidx.browser.customtabs.CustomTabColorSchemeParams:
    61:66:void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    97:106:androidx.browser.customtabs.CustomTabColorSchemeParams fromBundle(android.os.Bundle) -> fromBundle
    75:88:android.os.Bundle toBundle() -> toBundle
    114:120:androidx.browser.customtabs.CustomTabColorSchemeParams withDefaults(androidx.browser.customtabs.CustomTabColorSchemeParams) -> withDefaults
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder -> androidx.browser.customtabs.CustomTabColorSchemeParams$Builder:
    128:128:void <init>() -> <init>
    176:176:androidx.browser.customtabs.CustomTabColorSchemeParams build() -> build
    157:158:androidx.browser.customtabs.CustomTabColorSchemeParams$Builder setNavigationBarColor(int) -> setNavigationBarColor
    166:167:androidx.browser.customtabs.CustomTabColorSchemeParams$Builder setNavigationBarDividerColor(int) -> setNavigationBarDividerColor
    148:149:androidx.browser.customtabs.CustomTabColorSchemeParams$Builder setSecondaryToolbarColor(int) -> setSecondaryToolbarColor
    139:140:androidx.browser.customtabs.CustomTabColorSchemeParams$Builder setToolbarColor(int) -> setToolbarColor
androidx.browser.customtabs.CustomTabsIntent -> androidx.browser.customtabs.CustomTabsIntent:
    380:383:void <init>(android.content.Intent,android.os.Bundle) -> <init>
    955:975:androidx.browser.customtabs.CustomTabColorSchemeParams getColorSchemeParams(android.content.Intent,int) -> getColorSchemeParams
    912:912:int getMaxToolbarItems() -> getMaxToolbarItems
    375:377:void launchUrl(android.content.Context,android.net.Uri) -> launchUrl
    924:927:android.content.Intent setAlwaysUseBrowserUI(android.content.Intent) -> setAlwaysUseBrowserUI
    938:939:boolean shouldAlwaysUseBrowserUI(android.content.Intent) -> shouldAlwaysUseBrowserUI
androidx.browser.customtabs.CustomTabsIntent$Builder -> androidx.browser.customtabs.CustomTabsIntent$Builder:
    389:404:void <init>() -> <init>
    389:419:void <init>(androidx.browser.customtabs.CustomTabsSession) -> <init>
    548:549:androidx.browser.customtabs.CustomTabsIntent$Builder addDefaultShareMenuItem() -> addDefaultShareMenuItem
    532:537:androidx.browser.customtabs.CustomTabsIntent$Builder addMenuItem(java.lang.String,android.app.PendingIntent) -> addMenuItem
    659:672:androidx.browser.customtabs.CustomTabsIntent$Builder addToolbarItem(int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> addToolbarItem
    877:902:androidx.browser.customtabs.CustomTabsIntent build() -> build
    486:487:androidx.browser.customtabs.CustomTabsIntent$Builder enableUrlBarHiding() -> enableUrlBarHiding
    615:622:androidx.browser.customtabs.CustomTabsIntent$Builder setActionButton(android.graphics.Bitmap,java.lang.String,android.app.PendingIntent,boolean) -> setActionButton
    634:634:androidx.browser.customtabs.CustomTabsIntent$Builder setActionButton(android.graphics.Bitmap,java.lang.String,android.app.PendingIntent) -> setActionButton
    508:509:androidx.browser.customtabs.CustomTabsIntent$Builder setCloseButtonIcon(android.graphics.Bitmap) -> setCloseButtonIcon
    803:807:androidx.browser.customtabs.CustomTabsIntent$Builder setColorScheme(int) -> setColorScheme
    845:853:androidx.browser.customtabs.CustomTabsIntent$Builder setColorSchemeParams(int,androidx.browser.customtabs.CustomTabColorSchemeParams) -> setColorSchemeParams
    867:868:androidx.browser.customtabs.CustomTabsIntent$Builder setDefaultColorSchemeParams(androidx.browser.customtabs.CustomTabColorSchemeParams) -> setDefaultColorSchemeParams
    563:568:androidx.browser.customtabs.CustomTabsIntent$Builder setDefaultShareMenuItemEnabled(boolean) -> setDefaultShareMenuItemEnabled
    787:790:androidx.browser.customtabs.CustomTabsIntent$Builder setExitAnimations(android.content.Context,int,int) -> setExitAnimations
    757:758:androidx.browser.customtabs.CustomTabsIntent$Builder setInstantAppsEnabled(boolean) -> setInstantAppsEnabled
    706:707:androidx.browser.customtabs.CustomTabsIntent$Builder setNavigationBarColor(int) -> setNavigationBarColor
    722:723:androidx.browser.customtabs.CustomTabsIntent$Builder setNavigationBarDividerColor(int) -> setNavigationBarDividerColor
    443:444:androidx.browser.customtabs.CustomTabsIntent$Builder setPendingSession(androidx.browser.customtabs.CustomTabsSession$PendingSession) -> setPendingSession
    686:687:androidx.browser.customtabs.CustomTabsIntent$Builder setSecondaryToolbarColor(int) -> setSecondaryToolbarColor
    744:747:androidx.browser.customtabs.CustomTabsIntent$Builder setSecondaryToolbarViews(android.widget.RemoteViews,int[],android.app.PendingIntent) -> setSecondaryToolbarViews
    429:431:androidx.browser.customtabs.CustomTabsIntent$Builder setSession(androidx.browser.customtabs.CustomTabsSession) -> setSession
    449:456:void setSessionParameters(android.os.IBinder,android.app.PendingIntent) -> setSessionParameters
    582:595:androidx.browser.customtabs.CustomTabsIntent$Builder setShareState(int) -> setShareState
    519:521:androidx.browser.customtabs.CustomTabsIntent$Builder setShowTitle(boolean) -> setShowTitle
    772:774:androidx.browser.customtabs.CustomTabsIntent$Builder setStartAnimations(android.content.Context,int,int) -> setStartAnimations
    475:476:androidx.browser.customtabs.CustomTabsIntent$Builder setToolbarColor(int) -> setToolbarColor
    497:498:androidx.browser.customtabs.CustomTabsIntent$Builder setUrlBarHidingEnabled(boolean) -> setUrlBarHidingEnabled
androidx.browser.customtabs.CustomTabsSession -> androidx.browser.customtabs.CustomTabsSession:
    46:83:void <init>(android.support.customtabs.ICustomTabsService,android.support.customtabs.ICustomTabsCallback,android.content.ComponentName,android.app.PendingIntent) -> <init>
    307:308:void addIdToBundle(android.os.Bundle) -> addIdToBundle
    300:303:android.os.Bundle createBundleWithId(android.os.Bundle) -> createBundleWithId
    72:72:androidx.browser.customtabs.CustomTabsSession createMockSessionForTesting(android.content.ComponentName) -> createMockSessionForTesting
    311:311:android.os.IBinder getBinder() -> getBinder
    315:315:android.content.ComponentName getComponentName() -> getComponentName
    320:320:android.app.PendingIntent getId() -> getId
    105:109:boolean mayLaunchUrl(android.net.Uri,android.os.Bundle,java.util.List) -> mayLaunchUrl
    229:236:int postMessage(java.lang.String,android.os.Bundle) -> postMessage
    291:295:boolean receiveFile(android.net.Uri,int,android.os.Bundle) -> receiveFile
    203:211:boolean requestPostMessageChannel(android.net.Uri) -> requestPostMessageChannel
    123:133:boolean setActionButton(android.graphics.Bitmap,java.lang.String) -> setActionButton
    148:156:boolean setSecondaryToolbarViews(android.widget.RemoteViews,int[],android.app.PendingIntent) -> setSecondaryToolbarViews
    172:183:boolean setToolbarItem(int,android.graphics.Bitmap,java.lang.String) -> setToolbarItem
    261:269:boolean validateRelationship(int,android.net.Uri,android.os.Bundle) -> validateRelationship
androidx.browser.customtabs.CustomTabsSession$MockSession -> androidx.browser.customtabs.CustomTabsSession$MockSession:
    354:354:void <init>() -> <init>
    380:380:android.os.Bundle extraCommand(java.lang.String,android.os.Bundle) -> extraCommand
    374:374:boolean mayLaunchUrl(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle,java.util.List) -> mayLaunchUrl
    362:362:boolean newSession(android.support.customtabs.ICustomTabsCallback) -> newSession
    368:368:boolean newSessionWithExtras(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> newSessionWithExtras
    404:404:int postMessage(android.support.customtabs.ICustomTabsCallback,java.lang.String,android.os.Bundle) -> postMessage
    416:416:boolean receiveFile(android.support.customtabs.ICustomTabsCallback,android.net.Uri,int,android.os.Bundle) -> receiveFile
    392:392:boolean requestPostMessageChannel(android.support.customtabs.ICustomTabsCallback,android.net.Uri) -> requestPostMessageChannel
    398:398:boolean requestPostMessageChannelWithExtras(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle) -> requestPostMessageChannelWithExtras
    386:386:boolean updateVisuals(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> updateVisuals
    410:410:boolean validateRelationship(android.support.customtabs.ICustomTabsCallback,int,android.net.Uri,android.os.Bundle) -> validateRelationship
    357:357:boolean warmup(long) -> warmup
androidx.browser.customtabs.CustomTabsSession$PendingSession -> androidx.browser.customtabs.CustomTabsSession$PendingSession:
    344:344:android.app.PendingIntent getId() -> getId
androidx.browser.customtabs.CustomTabsSessionToken$MockCallback -> androidx.browser.customtabs.CustomTabsSessionToken$MockCallback:
    53:53:void <init>() -> <init>
    78:78:android.os.IBinder asBinder() -> asBinder
    58:58:void extraCallback(java.lang.String,android.os.Bundle) -> extraCallback
    63:63:android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle) -> extraCallbackWithResult
    67:67:void onMessageChannelReady(android.os.Bundle) -> onMessageChannelReady
    55:55:void onNavigationEvent(int,android.os.Bundle) -> onNavigationEvent
    70:70:void onPostMessage(java.lang.String,android.os.Bundle) -> onPostMessage
    74:74:void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle) -> onRelationshipValidationResult
androidx.cardview.R$styleable -> androidx.cardview.R$styleable:
    42:42:void <clinit>() -> <clinit>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:93:void <clinit>() -> <clinit>
    113:114:void <init>(android.content.Context) -> <init>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:447:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    79:79:void access$101(androidx.cardview.widget.CardView,int) -> access$101
    79:79:void access$201(androidx.cardview.widget.CardView,int) -> access$201
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    226:228:void setContentPadding(int,int,int,int) -> setContentPadding
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    475:481:void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    468:471:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi17Impl -> androidx.cardview.widget.CardViewApi17Impl:
    25:25:void <init>() -> <init>
    29:37:void initStatic() -> initStatic
androidx.cardview.widget.CardViewApi17Impl$1 -> androidx.cardview.widget.CardViewApi17Impl$1:
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:35:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    47:47:void initStatic() -> initStatic
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl -> androidx.cardview.widget.CardViewBaseImpl:
    27:29:void <init>() -> <init>
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    125:125:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    146:146:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    157:157:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    136:136:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> getShadowBackground
    37:78:void initStatic() -> initStatic
    83:88:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    110:110:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    114:116:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    120:121:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    141:142:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    151:153:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    130:132:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    99:105:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl$1 -> androidx.cardview.widget.CardViewBaseImpl$1:
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    42:76:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    47:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    206:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:102:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    65:67:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:161:void setColor(android.content.res.ColorStateList) -> setColor
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:79:void setPadding(float,boolean,boolean) -> setPadding
    131:137:void setRadius(float) -> setRadius
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    105:117:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    78:105:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    334:338:void buildComponents(android.graphics.Rect) -> buildComponents
    297:328:void buildShadowCorners() -> buildShadowCorners
    189:192:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    180:183:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    238:246:void draw(android.graphics.Canvas) -> draw
    249:294:void drawShadow(android.graphics.Canvas) -> drawShadow
    382:382:android.content.res.ColorStateList getColor() -> getColor
    341:341:float getCornerRadius() -> getCornerRadius
    345:346:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    361:361:float getMaxShadowSize() -> getMaxShadowSize
    371:373:float getMinHeight() -> getMinHeight
    365:367:float getMinWidth() -> getMinWidth
    220:220:int getOpacity() -> getOpacity
    170:175:boolean getPadding(android.graphics.Rect) -> getPadding
    357:357:float getShadowSize() -> getShadowSize
    210:210:boolean isStateful() -> isStateful
    137:139:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:205:boolean onStateChange(int[]) -> onStateChange
    124:126:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    130:133:void setAlpha(int) -> setAlpha
    108:110:void setBackground(android.content.res.ColorStateList) -> setBackground
    377:379:void setColor(android.content.res.ColorStateList) -> setColor
    215:216:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    224:234:void setCornerRadius(float) -> setCornerRadius
    353:354:void setMaxShadowSize(float) -> setMaxShadowSize
    142:166:void setShadowSize(float,float) -> setShadowSize
    349:350:void setShadowSize(float) -> setShadowSize
    116:120:int toEven(float) -> toEven
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    261:265:void <init>(androidx.collection.ArraySet) -> <init>
    271:275:void <init>(java.util.Collection) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    410:423:void addAll(androidx.collection.ArraySet) -> addAll
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    506:514:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:50:void <init>() -> <init>
    58:77:void <init>(int) -> <init>
    84:89:void addFirst(java.lang.Object) -> addFirst
    96:101:void addLast(java.lang.Object) -> addLast
    138:139:void clear() -> clear
    30:43:void doubleCapacity() -> doubleCapacity
    240:243:java.lang.Object get(int) -> get
    215:218:java.lang.Object getFirst() -> getFirst
    227:230:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:115:java.lang.Object popFirst() -> popFirst
    124:131:java.lang.Object popLast() -> popLast
    182:207:void removeFromEnd(int) -> removeFromEnd
    149:172:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:51:void <init>() -> <init>
    59:78:void <init>(int) -> <init>
    85:90:void addFirst(int) -> addFirst
    97:102:void addLast(int) -> addLast
    133:134:void clear() -> clear
    31:44:void doubleCapacity() -> doubleCapacity
    197:198:int get(int) -> get
    176:177:int getFirst() -> getFirst
    186:187:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:113:int popFirst() -> popFirst
    122:126:int popLast() -> popLast
    161:168:void removeFromEnd(int) -> removeFromEnd
    144:151:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    456:483:void append(long,java.lang.Object) -> append
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.LongSparseArray clone() -> clone
    428:428:boolean containsKey(long) -> containsKey
    433:433:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(long) -> delete
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    415:423:int indexOfValue(java.lang.Object) -> indexOfValue
    339:339:boolean isEmpty() -> isEmpty
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    300:303:void putAll(androidx.collection.LongSparseArray) -> putAll
    315:319:java.lang.Object putIfAbsent(long,java.lang.Object) -> putIfAbsent
    139:147:void remove(long) -> remove
    156:164:boolean remove(long,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    185:191:java.lang.Object replace(long,java.lang.Object) -> replace
    203:211:boolean replace(long,java.lang.Object,java.lang.Object) -> replace
    386:391:void setValueAt(int,java.lang.Object) -> setValueAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:282:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    83:126:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    200:216:java.lang.Object remove(java.lang.Object) -> remove
    65:73:void resize(int) -> resize
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:490:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:626:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.SparseArrayCompat clone() -> clone
    432:432:boolean containsKey(int) -> containsKey
    437:437:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(int) -> delete
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    352:352:boolean isEmpty() -> isEmpty
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    313:316:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    328:332:java.lang.Object putIfAbsent(int,java.lang.Object) -> putIfAbsent
    139:147:void remove(int) -> remove
    156:164:boolean remove(int,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    184:188:void removeAtRange(int,int) -> removeAtRange
    198:204:java.lang.Object replace(int,java.lang.Object) -> replace
    216:224:boolean replace(int,java.lang.Object,java.lang.Object) -> replace
    388:393:void setValueAt(int,java.lang.Object) -> setValueAt
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.AbstractResolvableFuture:
    64:217:void <clinit>() -> <clinit>
    317:318:void <init>() -> <init>
    1026:1035:void addDoneString(java.lang.StringBuilder) -> addDoneString
    653:669:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    925:925:void afterDone() -> afterDone
    555:617:boolean cancel(boolean) -> cancel
    1195:1197:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1203:1206:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    963:972:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> clearListeners
    871:910:void complete(androidx.concurrent.futures.AbstractResolvableFuture) -> complete
    1056:1067:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    359:456:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    470:506:java.lang.Object get() -> get
    513:524:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    800:841:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    852:865:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    633:633:void interruptTask() -> interruptTask
    536:537:boolean isCancelled() -> isCancelled
    530:531:boolean isDone() -> isDone
    1013:1021:java.lang.String pendingToString() -> pendingToString
    942:948:void releaseWaiters() -> releaseWaiters
    171:198:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> removeWaiter
    685:690:boolean set(java.lang.Object) -> set
    710:715:boolean setException(java.lang.Throwable) -> setException
    746:789:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    978:1002:java.lang.String toString() -> toString
    1044:1047:java.lang.String userObjectToString(java.lang.Object) -> userObjectToString
    642:643:boolean wasInterrupted() -> wasInterrupted
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper:
    1069:1069:void <init>() -> <init>
    1069:1069:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.AbstractResolvableFuture$Cancellation:
    243:250:void <clinit>() -> <clinit>
    256:259:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.AbstractResolvableFuture$Failure:
    221:221:void <clinit>() -> <clinit>
    231:233:void <init>(java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1 -> androidx.concurrent.futures.AbstractResolvableFuture$Failure$1:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    223:223:void <init>(java.lang.String) -> <init>
    226:226:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.AbstractResolvableFuture$Listener:
    202:202:void <clinit>() -> <clinit>
    210:213:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper:
    1105:1111:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1130:1130:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1135:1135:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1125:1125:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1120:1121:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1115:1116:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture -> androidx.concurrent.futures.AbstractResolvableFuture$SetFuture:
    267:270:void <init>(androidx.concurrent.futures.AbstractResolvableFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    274:282:void run() -> run
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper:
    1146:1147:void <init>() -> <init>
    1172:1178:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1183:1189:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1161:1167:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1156:1157:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1151:1152:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.AbstractResolvableFuture$Waiter:
    121:121:void <clinit>() -> <clinit>
    132:133:void <init>(boolean) -> <init>
    135:138:void <init>() -> <init>
    143:144:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> setNext
    151:156:void unpark() -> unpark
androidx.concurrent.futures.CallbackToFutureAdapter -> androidx.concurrent.futures.CallbackToFutureAdapter:
    77:78:void <init>() -> <init>
    89:109:com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver) -> getFuture
androidx.concurrent.futures.CallbackToFutureAdapter$Completer -> androidx.concurrent.futures.CallbackToFutureAdapter$Completer:
    225:235:void <init>() -> <init>
    306:310:void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor) -> addCancellationListener
    332:352:void finalize() -> finalize
    313:316:void fireCancellationListeners() -> fireCancellationListeners
    247:253:boolean set(java.lang.Object) -> set
    285:292:boolean setCancelled() -> setCancelled
    322:325:void setCompletedNormally() -> setCompletedNormally
    267:273:boolean setException(java.lang.Throwable) -> setException
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException -> androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException:
    357:358:void <init>(java.lang.String) -> <init>
    362:362:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture -> androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture:
    143:147:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    210:211:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    164:170:boolean cancel(boolean) -> cancel
    174:174:boolean cancelWithoutNotifyingCompleter(boolean) -> cancelWithoutNotifyingCompleter
    199:199:java.lang.Object get() -> get
    205:205:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    189:189:boolean isCancelled() -> isCancelled
    194:194:boolean isDone() -> isDone
    180:180:boolean set(java.lang.Object) -> set
    184:184:boolean setException(java.lang.Throwable) -> setException
    215:215:java.lang.String toString() -> toString
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1 -> androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1:
# {"id":"sourceFile","fileName":"CallbackToFutureAdapter.java"}
    147:147:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture) -> <init>
    151:155:java.lang.String pendingToString() -> pendingToString
androidx.concurrent.futures.DirectExecutor -> androidx.concurrent.futures.DirectExecutor:
    29:31:void <clinit>() -> <clinit>
    30:30:void <init>(java.lang.String,int) -> <init>
    35:36:void execute(java.lang.Runnable) -> execute
    40:40:java.lang.String toString() -> toString
    29:29:androidx.concurrent.futures.DirectExecutor valueOf(java.lang.String) -> valueOf
    29:29:androidx.concurrent.futures.DirectExecutor[] values() -> values
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.ResolvableFuture:
    63:64:void <init>() -> <init>
    45:45:androidx.concurrent.futures.ResolvableFuture create() -> create
    50:50:boolean set(java.lang.Object) -> set
    55:55:boolean setException(java.lang.Throwable) -> setException
    60:60:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
androidx.constraintlayout.core.ArrayLinkedVariables -> androidx.constraintlayout.core.ArrayLinkedVariables:
    82:82:void <clinit>() -> <clinit>
    43:109:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    226:340:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    409:423:void clear() -> clear
    432:443:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    614:624:void display() -> display
    500:506:void divideByAmount(float) -> divideByAmount
    593:602:float get(androidx.constraintlayout.core.SolverVariable) -> get
    509:509:int getCurrentSize() -> getCurrentSize
    508:508:int getHead() -> getHead
    512:512:int getId(int) -> getId
    520:520:int getNextIndice(int) -> getNextIndice
    516:516:float getValue(int) -> getValue
    558:566:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    576:584:float getVariableValue(int) -> getVariableValue
    448:459:int indexOf(androidx.constraintlayout.core.SolverVariable) -> indexOf
    485:491:void invert() -> invert
    118:214:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    369:402:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    607:610:int sizeInBytes() -> sizeInBytes
    633:642:java.lang.String toString() -> toString
    349:358:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.ArrayRow -> androidx.constraintlayout.core.ArrayRow:
    26:55:void <init>() -> <init>
    26:60:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    349:351:androidx.constraintlayout.core.ArrayRow addError(androidx.constraintlayout.core.LinearSystem,int) -> addError
    690:703:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    178:179:androidx.constraintlayout.core.ArrayRow addSingleError(androidx.constraintlayout.core.SolverVariable,int) -> addSingleError
    431:442:boolean chooseSubject(androidx.constraintlayout.core.LinearSystem) -> chooseSubject
    457:504:androidx.constraintlayout.core.SolverVariable chooseSubjectInVariables(androidx.constraintlayout.core.LinearSystem) -> chooseSubjectInVariables
    665:668:void clear() -> clear
    303:345:androidx.constraintlayout.core.ArrayRow createRowCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowCentering
    139:143:androidx.constraintlayout.core.ArrayRow createRowDefinition(androidx.constraintlayout.core.SolverVariable,int) -> createRowDefinition
    356:358:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    375:379:androidx.constraintlayout.core.ArrayRow createRowDimensionRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionRatio
    276:298:androidx.constraintlayout.core.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.core.SolverVariable,int,androidx.constraintlayout.core.SolverVariable,int,androidx.constraintlayout.core.SolverVariable,int,androidx.constraintlayout.core.SolverVariable,int) -> createRowEqualDimension
    240:268:androidx.constraintlayout.core.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> createRowEqualMatchDimensions
    147:154:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    158:174:androidx.constraintlayout.core.ArrayRow createRowEquals(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowEquals
    185:203:androidx.constraintlayout.core.ArrayRow createRowGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowGreaterThan
    207:209:androidx.constraintlayout.core.ArrayRow createRowGreaterThan(androidx.constraintlayout.core.SolverVariable,int,androidx.constraintlayout.core.SolverVariable) -> createRowGreaterThan
    214:232:androidx.constraintlayout.core.ArrayRow createRowLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> createRowLowerThan
    393:398:androidx.constraintlayout.core.ArrayRow createRowWithAngle(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowWithAngle
    415:420:void ensurePositiveConstant() -> ensurePositiveConstant
    707:707:androidx.constraintlayout.core.SolverVariable getKey() -> getKey
    660:660:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    63:63:boolean hasKeyVariable() -> hasKeyVariable
    135:135:boolean hasVariable(androidx.constraintlayout.core.SolverVariable) -> hasVariable
    676:686:void initFromRow(androidx.constraintlayout.core.LinearSystem$Row) -> initFromRow
    556:556:boolean isEmpty() -> isEmpty
    532:532:boolean isNew(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.LinearSystem) -> isNew
    655:655:androidx.constraintlayout.core.SolverVariable pickPivot(androidx.constraintlayout.core.SolverVariable) -> pickPivot
    610:651:androidx.constraintlayout.core.SolverVariable pickPivotInVariables(boolean[],androidx.constraintlayout.core.SolverVariable) -> pickPivotInVariables
    536:550:void pivot(androidx.constraintlayout.core.SolverVariable) -> pivot
    128:132:void reset() -> reset
    402:410:int sizeInBytes() -> sizeInBytes
    75:124:java.lang.String toReadableString() -> toReadableString
    71:71:java.lang.String toString() -> toString
    575:589:void updateFromFinalVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromFinalVariable
    561:572:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
    592:607:void updateFromSynonymVariable(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,boolean) -> updateFromSynonymVariable
    712:747:void updateFromSystem(androidx.constraintlayout.core.LinearSystem) -> updateFromSystem
androidx.constraintlayout.core.Cache -> androidx.constraintlayout.core.Cache:
    21:25:void <init>() -> <init>
androidx.constraintlayout.core.GoalRow -> androidx.constraintlayout.core.GoalRow:
    22:23:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    27:31:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
androidx.constraintlayout.core.LinearSystem -> androidx.constraintlayout.core.LinearSystem:
    37:250:void <clinit>() -> <clinit>
    48:104:void <init>() -> <init>
    370:383:androidx.constraintlayout.core.SolverVariable acquireSolverVariable(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1445:1463:void addCenterPoint(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1288:1294:void addCentering(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,float,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addCentering
    553:636:void addConstraint(androidx.constraintlayout.core.ArrayRow) -> addConstraint
    1336:1368:androidx.constraintlayout.core.ArrayRow addEquality(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addEquality
    1377:1413:void addEquality(androidx.constraintlayout.core.SolverVariable,int) -> addEquality
    1229:1234:void addGreaterBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addGreaterBarrier
    1214:1223:void addGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addGreaterThan
    1262:1267:void addLowerBarrier(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,boolean) -> addLowerBarrier
    1247:1256:void addLowerThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int) -> addLowerThan
    1300:1306:void addRatio(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float,int) -> addRatio
    639:684:void addRow(androidx.constraintlayout.core.ArrayRow) -> addRow
    314:325:void addSingleError(androidx.constraintlayout.core.ArrayRow,int,int) -> addSingleError
    1309:1326:void addSynonym(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int) -> addSynonym
    1036:1040:void computeValues() -> computeValues
    348:361:androidx.constraintlayout.core.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    291:302:androidx.constraintlayout.core.SolverVariable createExtraVariable() -> createExtraVariable
    220:246:androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    254:272:androidx.constraintlayout.core.ArrayRow createRow() -> createRow
    1430:1431:androidx.constraintlayout.core.ArrayRow createRowDimensionPercent(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,float) -> createRowDimensionPercent
    276:287:androidx.constraintlayout.core.SolverVariable createSlackVariable() -> createSlackVariable
    1059:1084:void displayReadableRows() -> displayReadableRows
    1145:1156:void displaySolverVariables() -> displaySolverVariables
    1088:1098:void displayVariablesReadableRows() -> displayVariablesReadableRows
    866:1032:int enforceBFS(androidx.constraintlayout.core.LinearSystem$Row) -> enforceBFS
    107:108:void fillMetrics(androidx.constraintlayout.core.Metrics) -> fillMetrics
    1171:1171:androidx.constraintlayout.core.Cache getCache() -> getCache
    1102:1108:int getMemoryUsed() -> getMemoryUsed
    111:111:androidx.constraintlayout.core.Metrics getMetrics() -> getMetrics
    1112:1112:int getNumEquations() -> getNumEquations
    1114:1114:int getNumVariables() -> getNumVariables
    409:419:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    140:151:void increaseTableSize() -> increaseTableSize
    448:487:void minimize() -> minimize
    494:520:void minimizeGoal(androidx.constraintlayout.core.LinearSystem$Row) -> minimizeGoal
    716:857:int optimize(androidx.constraintlayout.core.LinearSystem$Row,boolean) -> optimize
    157:174:void releaseRows() -> releaseRows
    687:707:void removeRow(androidx.constraintlayout.core.ArrayRow) -> removeRow
    185:213:void reset() -> reset
androidx.constraintlayout.core.LinearSystem$ValuesRow -> androidx.constraintlayout.core.LinearSystem$ValuesRow:
    89:91:void <init>(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.Cache) -> <init>
androidx.constraintlayout.core.Metrics -> androidx.constraintlayout.core.Metrics:
    25:60:void <init>() -> <init>
    115:147:void reset() -> reset
    71:71:java.lang.String toString() -> toString
androidx.constraintlayout.core.Pools$SimplePool -> androidx.constraintlayout.core.Pools$SimplePool:
    96:101:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> acquire
    123:128:boolean release(java.lang.Object) -> release
    133:148:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.core.PriorityGoalRow -> androidx.constraintlayout.core.PriorityGoalRow:
    29:156:void <init>(androidx.constraintlayout.core.Cache) -> <init>
    25:25:void access$000(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.SolverVariable) -> access$000
    190:194:void addError(androidx.constraintlayout.core.SolverVariable) -> addError
    197:221:void addToGoal(androidx.constraintlayout.core.SolverVariable) -> addToGoal
    147:149:void clear() -> clear
    167:185:androidx.constraintlayout.core.SolverVariable getPivotCandidate(androidx.constraintlayout.core.LinearSystem,boolean[]) -> getPivotCandidate
    160:160:boolean isEmpty() -> isEmpty
    224:234:void removeGoal(androidx.constraintlayout.core.SolverVariable) -> removeGoal
    259:266:java.lang.String toString() -> toString
    238:255:void updateFromRow(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.core.PriorityGoalRow$1 -> androidx.constraintlayout.core.PriorityGoalRow$1:
    208:208:void <init>(androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    208:208:int compare(java.lang.Object,java.lang.Object) -> compare
    211:211:int compare(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable) -> compare
androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.core.PriorityGoalRow$GoalVariableAccessor:
    39:41:void <init>(androidx.constraintlayout.core.PriorityGoalRow,androidx.constraintlayout.core.PriorityGoalRow) -> <init>
    48:77:boolean addToGoal(androidx.constraintlayout.core.SolverVariable,float) -> addToGoal
    44:45:void init(androidx.constraintlayout.core.SolverVariable) -> init
    91:100:boolean isNegative() -> isNegative
    104:116:boolean isSmallerThan(androidx.constraintlayout.core.SolverVariable) -> isSmallerThan
    129:130:void reset() -> reset
    133:140:java.lang.String toString() -> toString
androidx.constraintlayout.core.SolverVariable -> androidx.constraintlayout.core.SolverVariable:
    44:48:void <clinit>() -> <clinit>
    53:172:void <init>(java.lang.String,androidx.constraintlayout.core.SolverVariable$Type) -> <init>
    53:172:void <init>(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> <init>
    178:189:void addToRow(androidx.constraintlayout.core.ArrayRow) -> addToRow
    27:27:int compareTo(java.lang.Object) -> compareTo
    300:300:int compareTo(androidx.constraintlayout.core.SolverVariable) -> compareTo
    287:287:java.lang.String getName() -> getName
    99:100:void increaseErrorId() -> increaseErrorId
    195:206:void removeFromRow(androidx.constraintlayout.core.ArrayRow) -> removeFromRow
    257:279:void reset() -> reset
    227:238:void setFinalValue(androidx.constraintlayout.core.LinearSystem,float) -> setFinalValue
    290:290:void setName(java.lang.String) -> setName
    244:254:void setSynonym(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.SolverVariable,float) -> setSynonym
    292:296:void setType(androidx.constraintlayout.core.SolverVariable$Type,java.lang.String) -> setType
    308:324:java.lang.String toString() -> toString
    215:221:void updateReferencesWithNewDefinition(androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.core.SolverVariable$Type -> androidx.constraintlayout.core.SolverVariable$Type:
    75:95:void <clinit>() -> <clinit>
    75:75:void <init>(java.lang.String,int) -> <init>
    75:75:androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    75:75:androidx.constraintlayout.core.SolverVariable$Type[] values() -> values
androidx.constraintlayout.core.SolverVariableValues -> androidx.constraintlayout.core.SolverVariableValues:
    28:28:void <clinit>() -> <clinit>
    29:50:void <init>(androidx.constraintlayout.core.ArrayRow,androidx.constraintlayout.core.Cache) -> <init>
    410:423:void add(androidx.constraintlayout.core.SolverVariable,float,boolean) -> add
    216:236:void addToHashMap(androidx.constraintlayout.core.SolverVariable,int) -> addToHashMap
    289:296:void addVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> addVariable
    180:196:void clear() -> clear
    94:94:boolean contains(androidx.constraintlayout.core.SolverVariable) -> contains
    134:144:void display() -> display
    481:490:void divideByAmount(float) -> divideByAmount
    299:304:int findEmptySlot() -> findEmptySlot
    125:129:float get(androidx.constraintlayout.core.SolverVariable) -> get
    54:54:int getCurrentSize() -> getCurrentSize
    59:73:androidx.constraintlayout.core.SolverVariable getVariable(int) -> getVariable
    78:89:float getVariableValue(int) -> getVariableValue
    199:210:void increaseSize() -> increaseSize
    99:120:int indexOf(androidx.constraintlayout.core.SolverVariable) -> indexOf
    308:327:void insertVariable(int,androidx.constraintlayout.core.SolverVariable,float) -> insertVariable
    468:477:void invert() -> invert
    334:369:void put(androidx.constraintlayout.core.SolverVariable,float) -> put
    381:402:float remove(androidx.constraintlayout.core.SolverVariable,boolean) -> remove
    260:286:void removeFromHashMap(androidx.constraintlayout.core.SolverVariable) -> removeFromHashMap
    373:373:int sizeInBytes() -> sizeInBytes
    148:172:java.lang.String toString() -> toString
    427:463:float use(androidx.constraintlayout.core.ArrayRow,boolean) -> use
androidx.constraintlayout.core.motion.CustomAttribute -> androidx.constraintlayout.core.motion.CustomAttribute:
    47:262:void <init>(java.lang.String,androidx.constraintlayout.core.motion.CustomAttribute$AttributeType) -> <init>
    47:269:void <init>(java.lang.String,androidx.constraintlayout.core.motion.CustomAttribute$AttributeType,java.lang.Object,boolean) -> <init>
    47:276:void <init>(androidx.constraintlayout.core.motion.CustomAttribute,java.lang.Object) -> <init>
    384:432:void applyCustom(java.lang.Object) -> applyCustom
    435:440:int clamp(int) -> clamp
    236:255:boolean diff(androidx.constraintlayout.core.motion.CustomAttribute) -> diff
    306:325:java.util.HashMap extractAttributes(java.util.HashMap,java.lang.Object) -> extractAttributes
    68:68:androidx.constraintlayout.core.motion.CustomAttribute$AttributeType getType() -> getType
    125:140:float getValueToInterpolate() -> getValueToInterpolate
    145:176:void getValuesToInterpolate(float[]) -> getValuesToInterpolate
    205:225:int hsvToRgb(float,float,float) -> hsvToRgb
    77:83:boolean isContinuous() -> isContinuous
    110:115:int numberOfInterpolatedValues() -> numberOfInterpolatedValues
    329:381:void setAttributes(java.lang.Object,java.util.HashMap) -> setAttributes
    92:93:void setColorValue(int) -> setColorValue
    88:89:void setFloatValue(float) -> setFloatValue
    96:97:void setIntValue(int) -> setIntValue
    444:489:void setInterpolatedValue(java.lang.Object,float[]) -> setInterpolatedValue
    100:101:void setStringValue(java.lang.String) -> setStringValue
    179:202:void setValue(float[]) -> setValue
    279:302:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.core.motion.CustomAttribute$1 -> androidx.constraintlayout.core.motion.CustomAttribute$1:
    77:77:void <clinit>() -> <clinit>
androidx.constraintlayout.core.motion.CustomAttribute$AttributeType -> androidx.constraintlayout.core.motion.CustomAttribute$AttributeType:
    56:64:void <clinit>() -> <clinit>
    56:56:void <init>(java.lang.String,int) -> <init>
    56:56:androidx.constraintlayout.core.motion.CustomAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    56:56:androidx.constraintlayout.core.motion.CustomAttribute$AttributeType[] values() -> values
androidx.constraintlayout.core.motion.CustomVariable -> androidx.constraintlayout.core.motion.CustomVariable:
    27:43:void <init>(androidx.constraintlayout.core.motion.CustomVariable) -> <init>
    27:49:void <init>(java.lang.String,int,java.lang.String) -> <init>
    27:59:void <init>(java.lang.String,int,int) -> <init>
    27:65:void <init>(java.lang.String,int,float) -> <init>
    27:71:void <init>(java.lang.String,int,boolean) -> <init>
    27:303:void <init>(java.lang.String,int) -> <init>
    27:309:void <init>(java.lang.String,int,java.lang.Object) -> <init>
    27:316:void <init>(androidx.constraintlayout.core.motion.CustomVariable,java.lang.Object) -> <init>
    397:414:void applyToWidget(androidx.constraintlayout.core.motion.MotionWidget) -> applyToWidget
    343:348:int clamp(int) -> clamp
    74:75:java.lang.String colorString(int) -> colorString
    33:33:androidx.constraintlayout.core.motion.CustomVariable copy() -> copy
    279:297:boolean diff(androidx.constraintlayout.core.motion.CustomVariable) -> diff
    103:103:boolean getBooleanValue() -> getBooleanValue
    111:111:int getColorValue() -> getColorValue
    107:107:float getFloatValue() -> getFloatValue
    115:115:int getIntegerValue() -> getIntegerValue
    352:357:int getInterpolatedColor(float[]) -> getInterpolatedColor
    417:417:java.lang.String getName() -> getName
    119:119:java.lang.String getStringValue() -> getStringValue
    99:99:int getType() -> getType
    175:190:float getValueToInterpolate() -> getValueToInterpolate
    194:223:void getValuesToInterpolate(float[]) -> getValuesToInterpolate
    248:269:int hsvToRgb(float,float,float) -> hsvToRgb
    128:134:boolean isContinuous() -> isContinuous
    161:165:int numberOfInterpolatedValues() -> numberOfInterpolatedValues
    388:393:int rgbaTocColor(float,float,float,float) -> rgbaTocColor
    143:144:void setBooleanValue(boolean) -> setBooleanValue
    139:140:void setFloatValue(float) -> setFloatValue
    147:148:void setIntValue(int) -> setIntValue
    362:385:void setInterpolatedValue(androidx.constraintlayout.core.motion.MotionWidget,float[]) -> setInterpolatedValue
    151:152:void setStringValue(java.lang.String) -> setStringValue
    226:245:void setValue(float[]) -> setValue
    319:340:void setValue(java.lang.Object) -> setValue
    80:95:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.Motion -> androidx.constraintlayout.core.motion.Motion:
    74:150:void <init>(androidx.constraintlayout.core.motion.MotionWidget) -> <init>
    622:626:void addKey(androidx.constraintlayout.core.motion.key.MotionKey) -> addKey
    483:505:int buildKeyFrames(float[],int[],int[]) -> buildKeyFrames
    270:335:void buildPath(float[],int) -> buildPath
    544:547:void buildRect(float,float[],int) -> buildRect
    1154:1196:float getAdjustedPosition(float,float[]) -> getAdjustedPosition
    234:234:int getAnimateRelativeTo() -> getAnimateRelativeTo
    251:258:void getCenter(double,float[],float[]) -> getCenter
    243:243:float getCenterX() -> getCenterX
    247:247:float getCenterY() -> getCenterY
    1491:1496:int getDrawPath() -> getDrawPath
    223:223:float getFinalHeight() -> getFinalHeight
    214:214:float getFinalWidth() -> getFinalWidth
    177:177:float getFinalX() -> getFinalX
    187:187:float getFinalY() -> getFinalY
    145:145:androidx.constraintlayout.core.motion.MotionPaths getKeyFrame(int) -> getKeyFrame
    1559:1590:int getKeyFrameInfo(int,int[]) -> getKeyFrameInfo
    1530:1540:int getKeyFramePositions(int[],float[]) -> getKeyFramePositions
    338:344:double[] getPos(double) -> getPos
    414:458:float getPreCycleDistance() -> getPreCycleDistance
    205:205:float getStartHeight() -> getStartHeight
    196:196:float getStartWidth() -> getStartWidth
    158:158:float getStartX() -> getStartX
    168:168:float getStartY() -> getStartY
    125:125:int getTransformPivotTarget() -> getTransformPivotTarget
    978:978:androidx.constraintlayout.core.motion.MotionWidget getView() -> getView
    596:610:void insertKey(androidx.constraintlayout.core.motion.MotionPaths) -> insertKey
    1224:1365:boolean interpolate(androidx.constraintlayout.core.motion.MotionWidget,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> interpolate
    970:971:void readView(androidx.constraintlayout.core.motion.MotionPaths) -> readView
    1500:1501:void setDrawPath(int) -> setDrawPath
    990:996:void setEnd(androidx.constraintlayout.core.motion.MotionWidget) -> setEnd
    629:630:void setPathMotionArc(int) -> setPathMotionArc
    982:987:void setStart(androidx.constraintlayout.core.motion.MotionWidget) -> setStart
    999:1023:void setStartState(androidx.constraintlayout.core.motion.utils.ViewState,androidx.constraintlayout.core.motion.MotionWidget,int,int,int) -> setStartState
    134:136:void setTransformPivotTarget(int) -> setTransformPivotTarget
    974:975:void setView(androidx.constraintlayout.core.motion.MotionWidget) -> setView
    637:957:void setup(int,int,float,long) -> setup
    238:240:void setupRelative(androidx.constraintlayout.core.motion.Motion) -> setupRelative
    965:965:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.MotionConstrainedPoint -> androidx.constraintlayout.core.motion.MotionConstrainedPoint:
    66:66:void <clinit>() -> <clinit>
    38:152:void <init>() -> <init>
    229:295:void addValues(java.util.HashMap,int) -> addValues
    203:226:void applyParameters(androidx.constraintlayout.core.motion.MotionWidget) -> applyParameters
    34:34:int compareTo(java.lang.Object) -> compareTo
    198:198:int compareTo(androidx.constraintlayout.core.motion.MotionConstrainedPoint) -> compareTo
    76:79:boolean diff(float,float) -> diff
    89:140:void different(androidx.constraintlayout.core.motion.MotionConstrainedPoint,java.util.HashSet) -> different
    190:194:void setBounds(float,float,float,float) -> setBounds
    298:300:void setState(androidx.constraintlayout.core.motion.MotionWidget) -> setState
    308:321:void setState(androidx.constraintlayout.core.motion.utils.Rect,androidx.constraintlayout.core.motion.MotionWidget,int,float) -> setState
androidx.constraintlayout.core.motion.MotionPaths -> androidx.constraintlayout.core.motion.MotionPaths:
    49:49:void <clinit>() -> <clinit>
    51:485:void <init>() -> <init>
    51:485:void <init>(int,int,androidx.constraintlayout.core.motion.key.MotionKeyPosition,androidx.constraintlayout.core.motion.MotionPaths,androidx.constraintlayout.core.motion.MotionPaths) -> <init>
    891:907:void applyParameters(androidx.constraintlayout.core.motion.MotionWidget) -> applyParameters
    34:34:int compareTo(java.lang.Object) -> compareTo
    887:887:int compareTo(androidx.constraintlayout.core.motion.MotionPaths) -> compareTo
    910:911:void configureRelativeTo(androidx.constraintlayout.core.motion.Motion) -> configureRelativeTo
    293:296:boolean diff(float,float) -> diff
    300:309:void different(androidx.constraintlayout.core.motion.MotionPaths,boolean[],java.lang.String[],boolean) -> different
    839:846:void fillStandard(double[],int[]) -> fillStandard
    312:351:void getCenter(double,int[],double[],float[],int) -> getCenter
    354:413:void getCenter(double,int[],double[],float[],double[],float[]) -> getCenter
    861:874:int getCustomData(java.lang.String,double[],int) -> getCustomData
    853:857:int getCustomDataCount(java.lang.String) -> getCustomDataCount
    625:749:void getRect(int[],double[],float[],int) -> getRect
    849:849:boolean hasCustomData(java.lang.String) -> hasCustomData
    81:116:void initCartesian(androidx.constraintlayout.core.motion.key.MotionKeyPosition,androidx.constraintlayout.core.motion.MotionPaths,androidx.constraintlayout.core.motion.MotionPaths) -> initCartesian
    238:278:void initPath(androidx.constraintlayout.core.motion.key.MotionKeyPosition,androidx.constraintlayout.core.motion.MotionPaths,androidx.constraintlayout.core.motion.MotionPaths) -> initPath
    145:178:void initPolar(int,int,androidx.constraintlayout.core.motion.key.MotionKeyPosition,androidx.constraintlayout.core.motion.MotionPaths,androidx.constraintlayout.core.motion.MotionPaths) -> initPolar
    195:234:void initScreen(int,int,androidx.constraintlayout.core.motion.key.MotionKeyPosition,androidx.constraintlayout.core.motion.MotionPaths,androidx.constraintlayout.core.motion.MotionPaths) -> initScreen
    879:883:void setBounds(float,float,float,float) -> setBounds
    489:622:void setView(float,androidx.constraintlayout.core.motion.MotionWidget,int[],double[],double[],double[]) -> setView
    181:192:void setupRelative(androidx.constraintlayout.core.motion.Motion,androidx.constraintlayout.core.motion.MotionPaths) -> setupRelative
    281:283:float xRotate(float,float,float,float,float,float) -> xRotate
    287:289:float yRotate(float,float,float,float,float,float) -> yRotate
androidx.constraintlayout.core.motion.MotionWidget -> androidx.constraintlayout.core.motion.MotionWidget:
    27:87:void <init>() -> <init>
    27:125:void <init>(androidx.constraintlayout.core.state.WidgetFrame) -> <init>
    94:94:androidx.constraintlayout.core.motion.MotionWidget findViewById(int) -> findViewById
    415:415:float getAlpha() -> getAlpha
    323:323:int getBottom() -> getBottom
    459:459:androidx.constraintlayout.core.motion.CustomVariable getCustomAttribute(java.lang.String) -> getCustomAttribute
    439:439:java.util.Set getCustomAttributeNames() -> getCustomAttributeNames
    431:431:int getHeight() -> getHeight
    307:311:int getId(java.lang.String) -> getId
    319:319:int getLeft() -> getLeft
    102:102:java.lang.String getName() -> getName
    90:90:androidx.constraintlayout.core.motion.MotionWidget getParent() -> getParent
    407:407:float getPivotX() -> getPivotX
    411:411:float getPivotY() -> getPivotY
    327:327:int getRight() -> getRight
    339:339:float getRotationX() -> getRotationX
    347:347:float getRotationY() -> getRotationY
    355:355:float getRotationZ() -> getRotationZ
    387:387:float getScaleX() -> getScaleX
    395:395:float getScaleY() -> getScaleY
    315:315:int getTop() -> getTop
    363:363:float getTranslationX() -> getTranslationX
    371:371:float getTranslationY() -> getTranslationY
    383:383:float getTranslationZ() -> getTranslationZ
    273:301:float getValueAttributes(int) -> getValueAttributes
    403:403:int getVisibility() -> getVisibility
    435:435:androidx.constraintlayout.core.state.WidgetFrame getWidgetFrame() -> getWidgetFrame
    427:427:int getWidth() -> getWidth
    419:419:int getX() -> getX
    423:423:int getY() -> getY
    106:107:void layout(int,int,int,int) -> layout
    114:121:void setBounds(int,int,int,int) -> setBounds
    443:444:void setCustomAttribute(java.lang.String,int,float) -> setCustomAttribute
    447:448:void setCustomAttribute(java.lang.String,int,int) -> setCustomAttribute
    451:452:void setCustomAttribute(java.lang.String,int,boolean) -> setCustomAttribute
    455:456:void setCustomAttribute(java.lang.String,int,java.lang.String) -> setCustomAttribute
    331:332:void setPivotX(float) -> setPivotX
    335:336:void setPivotY(float) -> setPivotY
    343:344:void setRotationX(float) -> setRotationX
    351:352:void setRotationY(float) -> setRotationY
    359:360:void setRotationZ(float) -> setRotationZ
    391:392:void setScaleX(float) -> setScaleX
    399:400:void setScaleY(float) -> setScaleY
    367:368:void setTranslationX(float) -> setTranslationX
    375:376:void setTranslationY(float) -> setTranslationY
    379:380:void setTranslationZ(float) -> setTranslationZ
    129:129:boolean setValue(int,int) -> setValue
    134:138:boolean setValue(int,float) -> setValue
    143:143:boolean setValue(int,java.lang.String) -> setValue
    148:148:boolean setValue(int,boolean) -> setValue
    222:265:boolean setValueAttributes(int,float) -> setValueAttributes
    152:180:boolean setValueMotion(int,int) -> setValueMotion
    184:195:boolean setValueMotion(int,java.lang.String) -> setValueMotion
    199:212:boolean setValueMotion(int,float) -> setValueMotion
    98:99:void setVisibility(int) -> setVisibility
    110:110:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.MotionWidget$Motion -> androidx.constraintlayout.core.motion.MotionWidget$Motion:
    59:72:void <init>() -> <init>
androidx.constraintlayout.core.motion.MotionWidget$PropertySet -> androidx.constraintlayout.core.motion.MotionWidget$PropertySet:
    78:82:void <init>() -> <init>
androidx.constraintlayout.core.motion.key.MotionConstraintSet -> androidx.constraintlayout.core.motion.key.MotionConstraintSet:
    18:33:void <init>() -> <init>
androidx.constraintlayout.core.motion.key.MotionKey -> androidx.constraintlayout.core.motion.key.MotionKey:
    33:33:void <clinit>() -> <clinit>
    32:36:void <init>() -> <init>
    32:32:java.lang.Object clone() -> clone
    116:120:androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    145:145:int getFramePosition() -> getFramePosition
    176:177:void setCustomAttribute(java.lang.String,int,float) -> setCustomAttribute
    180:181:void setCustomAttribute(java.lang.String,int,int) -> setCustomAttribute
    184:185:void setCustomAttribute(java.lang.String,int,boolean) -> setCustomAttribute
    188:189:void setCustomAttribute(java.lang.String,int,java.lang.String) -> setCustomAttribute
    136:137:void setFramePosition(int) -> setFramePosition
    113:113:void setInterpolation(java.util.HashMap) -> setInterpolation
    150:155:boolean setValue(int,int) -> setValue
    159:159:boolean setValue(int,float) -> setValue
    163:168:boolean setValue(int,java.lang.String) -> setValue
    172:172:boolean setValue(int,boolean) -> setValue
    126:127:androidx.constraintlayout.core.motion.key.MotionKey setViewId(int) -> setViewId
    81:81:float toFloat(java.lang.Object) -> toFloat
    92:92:int toInt(java.lang.Object) -> toInt
androidx.constraintlayout.core.motion.key.MotionKeyAttributes -> androidx.constraintlayout.core.motion.key.MotionKeyAttributes:
    26:53:void <init>() -> <init>
    109:198:void addValues(java.util.HashMap) -> addValues
    26:26:java.lang.Object clone() -> clone
    202:202:androidx.constraintlayout.core.motion.key.MotionKey clone() -> clone
    58:105:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    349:349:int getCurveFit() -> getCurveFit
    365:397:float getFloatValue(int) -> getFloatValue
    345:345:int getId(java.lang.String) -> getId
    353:362:void printAttributes() -> printAttributes
    279:326:void setInterpolation(java.util.HashMap) -> setInterpolation
    207:222:boolean setValue(int,int) -> setValue
    226:275:boolean setValue(int,float) -> setValue
    329:340:boolean setValue(int,java.lang.String) -> setValue
androidx.constraintlayout.core.motion.key.MotionKeyCycle -> androidx.constraintlayout.core.motion.key.MotionKeyCycle:
    28:67:void <init>() -> <init>
    293:321:void addCycleValues(java.util.HashMap) -> addCycleValues
    114:114:void addValues(java.util.HashMap) -> addValues
    28:28:java.lang.Object clone() -> clone
    238:238:androidx.constraintlayout.core.motion.key.MotionKey clone() -> clone
    326:333:void dump() -> dump
    71:109:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    243:288:int getId(java.lang.String) -> getId
    202:232:float getValue(java.lang.String) -> getValue
    336:351:void printAttributes() -> printAttributes
    117:129:boolean setValue(int,int) -> setValue
    134:142:boolean setValue(int,java.lang.String) -> setValue
    148:197:boolean setValue(int,float) -> setValue
androidx.constraintlayout.core.motion.key.MotionKeyPosition -> androidx.constraintlayout.core.motion.key.MotionKeyPosition:
    26:50:void <init>() -> <init>
    241:241:void addValues(java.util.HashMap) -> addValues
    72:80:void calcCartesianPosition(float,float,float,float) -> calcCartesianPosition
    62:68:void calcPathPosition(float,float,float,float) -> calcPathPosition
    220:231:void calcPosition(int,int,float,float,float,float) -> calcPosition
    54:58:void calcScreenPosition(int,int) -> calcScreenPosition
    26:26:java.lang.Object clone() -> clone
    216:216:androidx.constraintlayout.core.motion.key.MotionKey clone() -> clone
    199:212:androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    238:238:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    301:301:int getId(java.lang.String) -> getId
    190:195:boolean intersects(int,int,androidx.constraintlayout.core.motion.utils.FloatRect,androidx.constraintlayout.core.motion.utils.FloatRect,float,float) -> intersects
    91:102:void positionAttributes(androidx.constraintlayout.core.motion.MotionWidget,androidx.constraintlayout.core.motion.utils.FloatRect,androidx.constraintlayout.core.motion.utils.FloatRect,float,float,java.lang.String[],float[]) -> positionAttributes
    167:187:void positionCartAttributes(androidx.constraintlayout.core.motion.utils.FloatRect,androidx.constraintlayout.core.motion.utils.FloatRect,float,float,java.lang.String[],float[]) -> positionCartAttributes
    108:137:void positionPathAttributes(androidx.constraintlayout.core.motion.utils.FloatRect,androidx.constraintlayout.core.motion.utils.FloatRect,float,float,java.lang.String[],float[]) -> positionPathAttributes
    140:164:void positionScreenAttributes(androidx.constraintlayout.core.motion.MotionWidget,androidx.constraintlayout.core.motion.utils.FloatRect,androidx.constraintlayout.core.motion.utils.FloatRect,float,float,java.lang.String[],float[]) -> positionScreenAttributes
    245:259:boolean setValue(int,int) -> setValue
    265:284:boolean setValue(int,float) -> setValue
    289:296:boolean setValue(int,java.lang.String) -> setValue
androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle -> androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle:
    28:55:void <init>() -> <init>
    58:138:void addTimeValues(java.util.HashMap) -> addTimeValues
    142:142:void addValues(java.util.HashMap) -> addValues
    28:28:java.lang.Object clone() -> clone
    297:297:androidx.constraintlayout.core.motion.key.MotionKey clone() -> clone
    28:28:androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    232:251:androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    256:294:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    302:302:int getId(java.lang.String) -> getId
    146:156:boolean setValue(int,int) -> setValue
    160:209:boolean setValue(int,float) -> setValue
    213:224:boolean setValue(int,java.lang.String) -> setValue
    228:228:boolean setValue(int,boolean) -> setValue
androidx.constraintlayout.core.motion.key.MotionKeyTrigger -> androidx.constraintlayout.core.motion.key.MotionKeyTrigger:
    29:84:void <init>() -> <init>
    94:94:void addValues(java.util.HashMap) -> addValues
    29:29:java.lang.Object clone() -> clone
    150:150:androidx.constraintlayout.core.motion.key.MotionKey clone() -> clone
    168:168:void conditionallyFire(float,androidx.constraintlayout.core.motion.MotionWidget) -> conditionallyFire
    29:29:androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    126:146:androidx.constraintlayout.core.motion.key.MotionKeyTrigger copy(androidx.constraintlayout.core.motion.key.MotionKey) -> copy
    89:89:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    98:122:int getId(java.lang.String) -> getId
    171:194:boolean setValue(int,int) -> setValue
    198:205:boolean setValue(int,float) -> setValue
    209:228:boolean setValue(int,java.lang.String) -> setValue
    232:239:boolean setValue(int,boolean) -> setValue
androidx.constraintlayout.core.motion.parse.-$$Lambda$3WlMknFQFDplgY5IlOA5Hod5kQI -> androidx.constraintlayout.core.motion.parse.-$$Lambda$3WlMknFQFDplgY5IlOA5Hod5kQI:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.motion.parse.-$$Lambda$QPpZ2Y4pMMR_vXoAt_QnGY3_lnk -> androidx.constraintlayout.core.motion.parse.-$$Lambda$QPpZ2Y4pMMR_vXoAt_QnGY3_lnk:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.motion.parse.KeyParser -> androidx.constraintlayout.core.motion.parse.KeyParser:
    28:28:void <init>() -> <init>
    83:105:void main(java.lang.String[]) -> main
    39:75:androidx.constraintlayout.core.motion.utils.TypedBundle parse(java.lang.String,androidx.constraintlayout.core.motion.parse.KeyParser$Ids,androidx.constraintlayout.core.motion.parse.KeyParser$DataType) -> parse
    79:79:androidx.constraintlayout.core.motion.utils.TypedBundle parseAttributes(java.lang.String) -> parseAttributes
androidx.constraintlayout.core.motion.utils.ArcCurveFit -> androidx.constraintlayout.core.motion.utils.ArcCurveFit:
    37:281:void <init>(int[],double[],double[][]) -> <init>
    41:92:void getPos(double,double[]) -> getPos
    96:145:void getPos(double,float[]) -> getPos
    172:224:double getPos(double,int) -> getPos
    149:168:void getSlope(double,double[]) -> getSlope
    229:251:double getSlope(double,int) -> getSlope
    256:256:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc -> androidx.constraintlayout.core.motion.utils.ArcCurveFit$Arc:
    285:285:void <clinit>() -> <clinit>
    300:332:void <init>(int,double,double,double,double,double,double) -> <init>
    397:436:void buildTable(double,double,double,double) -> buildTable
    351:354:double getDX() -> getDX
    358:361:double getDY() -> getDY
    375:375:double getLinearDX(double) -> getLinearDX
    379:379:double getLinearDY(double) -> getLinearDY
    365:366:double getLinearX(double) -> getLinearX
    370:371:double getLinearY(double) -> getLinearY
    343:343:double getX() -> getX
    347:347:double getY() -> getY
    383:393:double lookup(double) -> lookup
    335:340:void setPoint(double) -> setPoint
androidx.constraintlayout.core.motion.utils.CurveFit -> androidx.constraintlayout.core.motion.utils.CurveFit:
    26:26:void <init>() -> <init>
    32:41:androidx.constraintlayout.core.motion.utils.CurveFit get(int,double[],double[][]) -> get
    46:46:androidx.constraintlayout.core.motion.utils.CurveFit getArc(int[],double[],double[][]) -> getArc
androidx.constraintlayout.core.motion.utils.CurveFit$Constant -> androidx.constraintlayout.core.motion.utils.CurveFit$Constant:
    65:68:void <init>(double,double[]) -> <init>
    72:73:void getPos(double,double[]) -> getPos
    77:80:void getPos(double,float[]) -> getPos
    84:84:double getPos(double,int) -> getPos
    89:92:void getSlope(double,double[]) -> getSlope
    96:96:double getSlope(double,int) -> getSlope
    101:101:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.core.motion.utils.Easing -> androidx.constraintlayout.core.motion.utils.Easing:
    27:43:void <clinit>() -> <clinit>
    26:28:void <init>() -> <init>
    80:80:double get(double) -> get
    88:88:double getDiff(double) -> getDiff
    46:76:androidx.constraintlayout.core.motion.utils.Easing getInterpolator(java.lang.String) -> getInterpolator
    84:84:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.Easing$CubicEasing -> androidx.constraintlayout.core.motion.utils.Easing$CubicEasing:
    93:94:void <clinit>() -> <clinit>
    97:109:void <init>(java.lang.String) -> <init>
    180:203:double get(double) -> get
    155:172:double getDiff(double) -> getDiff
    123:128:double getX(double) -> getX
    132:137:double getY(double) -> getY
androidx.constraintlayout.core.motion.utils.FloatRect -> androidx.constraintlayout.core.motion.utils.FloatRect:
    18:18:void <init>() -> <init>
    24:24:float centerX() -> centerX
    27:27:float centerY() -> centerY
androidx.constraintlayout.core.motion.utils.HyperSpline -> androidx.constraintlayout.core.motion.utils.HyperSpline:
    40:42:void <init>(double[][]) -> <init>
    44:45:void <init>() -> <init>
    122:145:double approxLength(androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic[]) -> approxLength
    149:176:androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic[] calcNaturalCubic(int,double[]) -> calcNaturalCubic
    88:97:void getPos(double,double[]) -> getPos
    100:109:void getPos(double,float[]) -> getPos
    112:118:double getPos(double,int) -> getPos
    76:85:void getVelocity(double,double[]) -> getVelocity
    48:73:void setup(double[][]) -> setup
androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic -> androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic:
    182:187:void <init>(double,double,double,double) -> <init>
    190:190:double eval(double) -> eval
    199:199:double vel(double) -> vel
androidx.constraintlayout.core.motion.utils.KeyCache -> androidx.constraintlayout.core.motion.utils.KeyCache:
    26:28:void <init>() -> <init>
    63:77:float getFloatValue(java.lang.Object,java.lang.String,int) -> getFloatValue
    31:60:void setFloatValue(java.lang.Object,java.lang.String,int,float) -> setFloatValue
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator:
    32:41:void <init>() -> <init>
    118:118:float get(float) -> get
    126:126:androidx.constraintlayout.core.motion.utils.CurveFit getCurveFit() -> getCurveFit
    122:122:float getSlope(float) -> getSlope
    44:47:androidx.constraintlayout.core.motion.utils.KeyCycleOscillator makeWidgetCycle(java.lang.String) -> makeWidgetCycle
    131:131:void setCustom(java.lang.Object) -> setCustom
    152:159:void setPoint(int,int,java.lang.String,int,float,float,float,float,java.lang.Object) -> setPoint
    178:184:void setPoint(int,int,java.lang.String,int,float,float,float,float) -> setPoint
    413:413:void setProperty(androidx.constraintlayout.core.motion.MotionWidget,float) -> setProperty
    114:115:void setType(java.lang.String) -> setType
    187:211:void setup(float) -> setup
    105:110:java.lang.String toString() -> toString
    84:84:boolean variesByPath() -> variesByPath
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1 -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1:
    191:191:void <init>(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator) -> <init>
    191:191:int compare(java.lang.Object,java.lang.Object) -> compare
    194:194:int compare(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint,androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) -> compare
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline:
    54:57:void <init>(java.lang.String) -> <init>
    60:61:void setProperty(androidx.constraintlayout.core.motion.MotionWidget,float) -> setProperty
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator:
    304:331:void <init>(int,java.lang.String,int,int) -> <init>
    353:363:double getSlope(float) -> getSlope
    334:345:double getValues(float) -> getValues
    374:379:void setPoint(int,int,float,float,float,float) -> setPoint
    382:408:void setup(float) -> setup
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet:
    68:71:void <init>(java.lang.String) -> <init>
    79:80:void setPathRotate(androidx.constraintlayout.core.motion.MotionWidget,float,double,double) -> setPathRotate
    75:76:void setProperty(androidx.constraintlayout.core.motion.MotionWidget,float) -> setProperty
androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint -> androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint:
    94:100:void <init>(int,float,float,float,float) -> <init>
androidx.constraintlayout.core.motion.utils.KeyFrameArray -> androidx.constraintlayout.core.motion.utils.KeyFrameArray:
    23:23:void <init>() -> <init>
androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray -> androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray:
    27:34:void <init>() -> <init>
    64:70:void append(int,androidx.constraintlayout.core.motion.CustomAttribute) -> append
    37:40:void clear() -> clear
    43:49:void dump() -> dump
    60:60:int keyAt(int) -> keyAt
    73:86:void remove(int) -> remove
    52:52:int size() -> size
    56:56:androidx.constraintlayout.core.motion.CustomAttribute valueAt(int) -> valueAt
androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar -> androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar:
    90:97:void <init>() -> <init>
    127:133:void append(int,androidx.constraintlayout.core.motion.CustomVariable) -> append
    100:103:void clear() -> clear
    106:112:void dump() -> dump
    123:123:int keyAt(int) -> keyAt
    136:149:void remove(int) -> remove
    115:115:int size() -> size
    119:119:androidx.constraintlayout.core.motion.CustomVariable valueAt(int) -> valueAt
androidx.constraintlayout.core.motion.utils.KeyFrameArray$FloatArray -> androidx.constraintlayout.core.motion.utils.KeyFrameArray$FloatArray:
    153:160:void <init>() -> <init>
    190:196:void append(int,float[]) -> append
    163:166:void clear() -> clear
    199:212:void remove(int) -> remove
    182:182:float[] valueAt(int) -> valueAt
androidx.constraintlayout.core.motion.utils.LinearCurveFit -> androidx.constraintlayout.core.motion.utils.LinearCurveFit:
    28:52:void <init>(double[],double[][]) -> <init>
    105:155:void getPos(double,double[]) -> getPos
    158:208:void getPos(double,float[]) -> getPos
    211:241:double getPos(double,int) -> getPos
    245:266:void getSlope(double,double[]) -> getSlope
    270:286:double getSlope(double,int) -> getSlope
    291:291:double[] getTimePoints() -> getTimePoints
androidx.constraintlayout.core.motion.utils.MonotonicCurveFit -> androidx.constraintlayout.core.motion.utils.MonotonicCurveFit:
    31:73:void <init>(double[],double[][]) -> <init>
    309:323:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(java.lang.String) -> buildWave
    327:345:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit buildWave(double[]) -> buildWave
    296:297:double diff(double,double,double,double,double,double) -> diff
    77:128:void getPos(double,double[]) -> getPos
    132:183:void getPos(double,float[]) -> getPos
    187:219:double getPos(double,int) -> getPos
    224:246:void getSlope(double,double[]) -> getSlope
    251:269:double getSlope(double,int) -> getSlope
    274:274:double[] getTimePoints() -> getTimePoints
    283:285:double interpolate(double,double,double,double,double,double) -> interpolate
androidx.constraintlayout.core.motion.utils.Oscillator -> androidx.constraintlayout.core.motion.utils.Oscillator:
    26:26:void <clinit>() -> <clinit>
    27:45:void <init>() -> <init>
    61:73:void addPoint(double,float) -> addPoint
    148:164:double getDP(double) -> getDP
    103:120:double getP(double) -> getP
    168:188:double getSlope(double,double,double) -> getSlope
    124:143:double getValue(double,double) -> getValue
    79:100:void normalize() -> normalize
    53:58:void setType(int,java.lang.String) -> setType
    49:49:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.Rect -> androidx.constraintlayout.core.motion.utils.Rect:
    18:18:void <init>() -> <init>
    29:29:int height() -> height
    25:25:int width() -> width
androidx.constraintlayout.core.motion.utils.Schlick -> androidx.constraintlayout.core.motion.utils.Schlick:
    29:38:void <init>(java.lang.String) -> <init>
    48:51:double dfunc(double) -> dfunc
    41:44:double func(double) -> func
    59:59:double get(double) -> get
    55:55:double getDiff(double) -> getDiff
androidx.constraintlayout.core.motion.utils.SplineSet -> androidx.constraintlayout.core.motion.utils.SplineSet:
    33:37:void <init>() -> <init>
    61:61:float get(float) -> get
    69:69:androidx.constraintlayout.core.motion.utils.CurveFit getCurveFit() -> getCurveFit
    65:65:float getSlope(float) -> getSlope
    114:114:androidx.constraintlayout.core.motion.utils.SplineSet makeCustomSpline(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) -> makeCustomSpline
    118:118:androidx.constraintlayout.core.motion.utils.SplineSet makeCustomSplineSet(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar) -> makeCustomSplineSet
    123:123:androidx.constraintlayout.core.motion.utils.SplineSet makeSpline(java.lang.String,long) -> makeSpline
    74:81:void setPoint(int,float) -> setPoint
    42:43:void setProperty(androidx.constraintlayout.core.motion.utils.TypedValues,float) -> setProperty
    57:58:void setType(java.lang.String) -> setType
    84:111:void setup(int) -> setup
    47:53:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.SplineSet$CoreSpline -> androidx.constraintlayout.core.motion.utils.SplineSet$CoreSpline:
    220:223:void <init>(java.lang.String,long) -> <init>
    226:228:void setProperty(androidx.constraintlayout.core.motion.utils.TypedValues,float) -> setProperty
androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet -> androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet:
    175:178:void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) -> <init>
    202:202:void setPoint(int,float) -> setPoint
    206:207:void setPoint(int,androidx.constraintlayout.core.motion.CustomAttribute) -> setPoint
    210:212:void setProperty(androidx.constraintlayout.core.state.WidgetFrame,float) -> setProperty
    181:199:void setup(int) -> setup
androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline -> androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline:
    236:239:void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar) -> <init>
    263:263:void setPoint(int,float) -> setPoint
    271:272:void setPoint(int,androidx.constraintlayout.core.motion.CustomVariable) -> setPoint
    267:268:void setProperty(androidx.constraintlayout.core.motion.utils.TypedValues,float) -> setProperty
    275:277:void setProperty(androidx.constraintlayout.core.motion.MotionWidget,float) -> setProperty
    242:260:void setup(int) -> setup
androidx.constraintlayout.core.motion.utils.SplineSet$Sort -> androidx.constraintlayout.core.motion.utils.SplineSet$Sort:
    129:144:void doubleQuickSort(int[],float[],int,int) -> doubleQuickSort
    147:156:int partition(int[],float[],int,int) -> partition
    160:166:void swap(int[],float[],int,int) -> swap
androidx.constraintlayout.core.motion.utils.SpringStopEngine -> androidx.constraintlayout.core.motion.utils.SpringStopEngine:
    25:37:void <init>() -> <init>
    101:130:void compute(double) -> compute
    41:41:java.lang.String debug(java.lang.String,float) -> debug
    77:80:float getAcceleration() -> getAcceleration
    71:73:float getInterpolation(float) -> getInterpolation
    66:66:float getVelocity(float) -> getVelocity
    85:85:float getVelocity() -> getVelocity
    90:96:boolean isStopped() -> isStopped
    52:62:void springConfig(float,float,float,float,float,float,float,int) -> springConfig
androidx.constraintlayout.core.motion.utils.StepCurve -> androidx.constraintlayout.core.motion.utils.StepCurve:
    31:48:void <init>(java.lang.String) -> <init>
    61:92:androidx.constraintlayout.core.motion.utils.MonotonicCurveFit genSpline(double[]) -> genSpline
    100:100:double get(double) -> get
    96:96:double getDiff(double) -> getDiff
androidx.constraintlayout.core.motion.utils.StopLogicEngine -> androidx.constraintlayout.core.motion.utils.StopLogicEngine:
    27:36:void <init>() -> <init>
    111:132:float calcY(float) -> calcY
    137:145:void config(float,float,float,float,float,float) -> config
    47:84:java.lang.String debug(java.lang.String,float) -> debug
    148:150:float getInterpolation(float) -> getInterpolation
    88:107:float getVelocity(float) -> getVelocity
    154:154:float getVelocity() -> getVelocity
    159:159:boolean isStopped() -> isStopped
    164:266:void setup(float,float,float,float,float) -> setup
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet:
    41:41:void <clinit>() -> <clinit>
    29:44:void <init>() -> <init>
    65:82:float calcWave(float) -> calcWave
    87:87:androidx.constraintlayout.core.motion.utils.CurveFit getCurveFit() -> getCurveFit
    95:101:void setPoint(int,float,float,int,float) -> setPoint
    91:92:void setStartTime(long) -> setStartTime
    57:58:void setType(java.lang.String) -> setType
    178:207:void setup(int) -> setup
    48:53:java.lang.String toString() -> toString
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet:
    106:113:void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray) -> <init>
    138:138:void setPoint(int,float,float,int,float) -> setPoint
    142:145:void setPoint(int,androidx.constraintlayout.core.motion.CustomAttribute,float,int,float) -> setPoint
    149:173:boolean setProperty(androidx.constraintlayout.core.motion.MotionWidget,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
    116:135:void setup(int) -> setup
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet:
    257:264:void <init>(java.lang.String,androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar) -> <init>
    289:289:void setPoint(int,float,float,int,float) -> setPoint
    293:296:void setPoint(int,androidx.constraintlayout.core.motion.CustomVariable,float,int,float) -> setPoint
    300:324:boolean setProperty(androidx.constraintlayout.core.motion.MotionWidget,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
    267:286:void setup(int) -> setup
androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort -> androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort:
    209:209:void <init>() -> <init>
    211:226:void doubleQuickSort(int[],float[][],int,int) -> doubleQuickSort
    229:238:int partition(int[],float[][],int,int) -> partition
    242:248:void swap(int[],float[][],int,int) -> swap
androidx.constraintlayout.core.motion.utils.TypedBundle -> androidx.constraintlayout.core.motion.utils.TypedBundle:
    20:38:void <init>() -> <init>
    50:56:void add(int,int) -> add
    59:65:void add(int,float) -> add
    74:80:void add(int,java.lang.String) -> add
    83:89:void add(int,boolean) -> add
    68:71:void addIfNotNull(int,java.lang.String) -> addIfNotNull
    92:104:void applyDelta(androidx.constraintlayout.core.motion.utils.TypedValues) -> applyDelta
    106:118:void applyDelta(androidx.constraintlayout.core.motion.utils.TypedBundle) -> applyDelta
    122:126:void clear() -> clear
    41:46:int getInteger(int) -> getInteger
androidx.constraintlayout.core.motion.utils.TypedValues$Attributes$-CC -> androidx.constraintlayout.core.motion.utils.TypedValues$Attributes$-CC:
# {"id":"sourceFile","fileName":"TypedValues.java"}
    147:189:int androidx.constraintlayout.core.motion.utils.TypedValues$Attributes.getId(java.lang.String) -> getId
    193:218:int androidx.constraintlayout.core.motion.utils.TypedValues$Attributes.getType(int) -> getType
androidx.constraintlayout.core.motion.utils.TypedValues$Cycle$-CC -> androidx.constraintlayout.core.motion.utils.TypedValues$Cycle$-CC:
# {"id":"sourceFile","fileName":"TypedValues.java"}
    305:339:int androidx.constraintlayout.core.motion.utils.TypedValues$Cycle.getId(java.lang.String) -> getId
androidx.constraintlayout.core.motion.utils.TypedValues$Motion$-CC -> androidx.constraintlayout.core.motion.utils.TypedValues$Motion$-CC:
# {"id":"sourceFile","fileName":"TypedValues.java"}
    586:614:int androidx.constraintlayout.core.motion.utils.TypedValues$Motion.getId(java.lang.String) -> getId
androidx.constraintlayout.core.motion.utils.TypedValues$Position$-CC -> androidx.constraintlayout.core.motion.utils.TypedValues$Position$-CC:
# {"id":"sourceFile","fileName":"TypedValues.java"}
    492:508:int androidx.constraintlayout.core.motion.utils.TypedValues$Position.getId(java.lang.String) -> getId
androidx.constraintlayout.core.motion.utils.Utils -> androidx.constraintlayout.core.motion.utils.Utils:
    22:22:void <init>() -> <init>
    42:47:int clamp(int) -> clamp
    51:56:int getInterpolatedColor(float[]) -> getInterpolatedColor
    24:25:void log(java.lang.String,java.lang.String) -> log
    80:86:void log(java.lang.String) -> log
    68:77:void logStack(java.lang.String,int) -> logStack
    27:28:void loge(java.lang.String,java.lang.String) -> loge
    60:65:int rgbaTocColor(float,float,float,float) -> rgbaTocColor
    32:39:void socketSend(java.lang.String) -> socketSend
androidx.constraintlayout.core.motion.utils.VelocityMatrix -> androidx.constraintlayout.core.motion.utils.VelocityMatrix:
    27:27:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    97:111:void applyTransform(float,float,int,int,float[]) -> applyTransform
    30:31:void clear() -> clear
    34:38:void setRotationVelocity(androidx.constraintlayout.core.motion.utils.SplineSet,float) -> setRotationVelocity
    61:64:void setRotationVelocity(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator,float) -> setRotationVelocity
    52:58:void setScaleVelocity(androidx.constraintlayout.core.motion.utils.SplineSet,androidx.constraintlayout.core.motion.utils.SplineSet,float) -> setScaleVelocity
    78:84:void setScaleVelocity(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator,androidx.constraintlayout.core.motion.utils.KeyCycleOscillator,float) -> setScaleVelocity
    42:48:void setTranslationVelocity(androidx.constraintlayout.core.motion.utils.SplineSet,androidx.constraintlayout.core.motion.utils.SplineSet,float) -> setTranslationVelocity
    68:75:void setTranslationVelocity(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator,androidx.constraintlayout.core.motion.utils.KeyCycleOscillator,float) -> setTranslationVelocity
androidx.constraintlayout.core.motion.utils.ViewState -> androidx.constraintlayout.core.motion.utils.ViewState:
    20:20:void <init>() -> <init>
    25:30:void getState(androidx.constraintlayout.core.motion.MotionWidget) -> getState
    37:37:int height() -> height
    33:33:int width() -> width
androidx.constraintlayout.core.parser.CLArray -> androidx.constraintlayout.core.parser.CLArray:
    20:21:void <init>(char[]) -> <init>
    24:24:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    42:62:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    28:38:java.lang.String toJSON() -> toJSON
androidx.constraintlayout.core.parser.CLContainer -> androidx.constraintlayout.core.parser.CLContainer:
    21:25:void <init>(char[]) -> <init>
    32:36:void add(androidx.constraintlayout.core.parser.CLElement) -> add
    28:28:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    111:117:androidx.constraintlayout.core.parser.CLElement get(java.lang.String) -> get
    229:232:androidx.constraintlayout.core.parser.CLElement get(int) -> get
    139:144:androidx.constraintlayout.core.parser.CLArray getArray(java.lang.String) -> getArray
    252:256:androidx.constraintlayout.core.parser.CLArray getArray(int) -> getArray
    201:205:androidx.constraintlayout.core.parser.CLArray getArrayOrNull(java.lang.String) -> getArrayOrNull
    170:175:boolean getBoolean(java.lang.String) -> getBoolean
    276:280:boolean getBoolean(int) -> getBoolean
    130:135:float getFloat(java.lang.String) -> getFloat
    244:248:float getFloat(int) -> getFloat
    217:221:float getFloatOrNaN(java.lang.String) -> getFloatOrNaN
    121:126:int getInt(java.lang.String) -> getInt
    236:240:int getInt(int) -> getInt
    148:153:androidx.constraintlayout.core.parser.CLObject getObject(java.lang.String) -> getObject
    260:264:androidx.constraintlayout.core.parser.CLObject getObject(int) -> getObject
    193:197:androidx.constraintlayout.core.parser.CLObject getObjectOrNull(java.lang.String) -> getObjectOrNull
    183:189:androidx.constraintlayout.core.parser.CLElement getOrNull(java.lang.String) -> getOrNull
    288:291:androidx.constraintlayout.core.parser.CLElement getOrNull(int) -> getOrNull
    157:165:java.lang.String getString(java.lang.String) -> getString
    268:272:java.lang.String getString(int) -> getString
    209:213:java.lang.String getStringOrNull(java.lang.String) -> getStringOrNull
    295:299:java.lang.String getStringOrNull(int) -> getStringOrNull
    66:74:boolean has(java.lang.String) -> has
    55:62:java.util.ArrayList names() -> names
    78:87:void put(java.lang.String,androidx.constraintlayout.core.parser.CLElement) -> put
    90:91:void putNumber(java.lang.String,float) -> putNumber
    94:104:void remove(java.lang.String) -> remove
    51:51:int size() -> size
    40:47:java.lang.String toString() -> toString
androidx.constraintlayout.core.parser.CLElement -> androidx.constraintlayout.core.parser.CLElement:
    26:27:void <clinit>() -> <clinit>
    21:31:void <init>(char[]) -> <init>
    86:89:void addIndent(java.lang.StringBuilder,int) -> addIndent
    115:119:java.lang.String content() -> content
    131:131:androidx.constraintlayout.core.parser.CLElement getContainer() -> getContainer
    108:111:java.lang.String getDebugName() -> getDebugName
    69:69:long getEnd() -> getEnd
    154:157:float getFloat() -> getFloat
    147:150:int getInt() -> getInt
    47:47:int getLine() -> getLine
    60:60:long getStart() -> getStart
    103:104:java.lang.String getStrClass() -> getStrClass
    123:123:boolean isDone() -> isDone
    135:135:boolean isStarted() -> isStarted
    34:34:boolean notStarted() -> notStarted
    127:128:void setContainer(androidx.constraintlayout.core.parser.CLContainer) -> setContainer
    73:83:void setEnd(long) -> setEnd
    38:39:void setLine(int) -> setLine
    51:52:void setStart(long) -> setStart
    143:143:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    139:139:java.lang.String toJSON() -> toJSON
    93:99:java.lang.String toString() -> toString
androidx.constraintlayout.core.parser.CLKey -> androidx.constraintlayout.core.parser.CLKey:
    22:33:void <clinit>() -> <clinit>
    36:37:void <init>(char[]) -> <init>
    40:40:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    44:48:androidx.constraintlayout.core.parser.CLElement allocate(java.lang.String,androidx.constraintlayout.core.parser.CLElement) -> allocate
    51:51:java.lang.String getName() -> getName
    94:97:androidx.constraintlayout.core.parser.CLElement getValue() -> getValue
    86:91:void set(androidx.constraintlayout.core.parser.CLElement) -> set
    61:82:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    54:57:java.lang.String toJSON() -> toJSON
androidx.constraintlayout.core.parser.CLNumber -> androidx.constraintlayout.core.parser.CLNumber:
    20:23:void <init>(char[]) -> <init>
    20:28:void <init>(float) -> <init>
    31:31:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    72:75:float getFloat() -> getFloat
    64:67:int getInt() -> getInt
    57:59:boolean isInt() -> isInt
    79:80:void putValue(float) -> putValue
    44:53:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    35:40:java.lang.String toJSON() -> toJSON
androidx.constraintlayout.core.parser.CLObject -> androidx.constraintlayout.core.parser.CLObject:
    23:24:void <init>(char[]) -> <init>
    27:27:androidx.constraintlayout.core.parser.CLObject allocate(char[]) -> allocate
    69:69:java.util.Iterator iterator() -> iterator
    46:46:java.lang.String toFormattedJSON() -> toFormattedJSON
    50:64:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    31:42:java.lang.String toJSON() -> toJSON
androidx.constraintlayout.core.parser.CLObject$CLObjectIterator -> androidx.constraintlayout.core.parser.CLObject$CLObjectIterator:
    74:77:void <init>(androidx.constraintlayout.core.parser.CLObject,androidx.constraintlayout.core.parser.CLObject) -> <init>
    81:81:boolean hasNext() -> hasNext
    86:88:java.lang.Object next() -> next
androidx.constraintlayout.core.parser.CLParser -> androidx.constraintlayout.core.parser.CLParser:
    20:20:void <clinit>() -> <clinit>
    23:34:void <init>(java.lang.String) -> <init>
    230:274:androidx.constraintlayout.core.parser.CLElement createElement(androidx.constraintlayout.core.parser.CLElement,int,androidx.constraintlayout.core.parser.CLParser$TYPE,boolean,char[]) -> createElement
    159:225:androidx.constraintlayout.core.parser.CLElement getNextJsonElement(int,char,androidx.constraintlayout.core.parser.CLElement,char[]) -> getNextJsonElement
    29:29:androidx.constraintlayout.core.parser.CLObject parse(java.lang.String) -> parse
    37:154:androidx.constraintlayout.core.parser.CLObject parse() -> parse
androidx.constraintlayout.core.parser.CLParser$1 -> androidx.constraintlayout.core.parser.CLParser$1:
    234:234:void <clinit>() -> <clinit>
androidx.constraintlayout.core.parser.CLParser$TYPE -> androidx.constraintlayout.core.parser.CLParser$TYPE:
    26:26:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    26:26:androidx.constraintlayout.core.parser.CLParser$TYPE valueOf(java.lang.String) -> valueOf
    26:26:androidx.constraintlayout.core.parser.CLParser$TYPE[] values() -> values
androidx.constraintlayout.core.parser.CLParsingException -> androidx.constraintlayout.core.parser.CLParsingException:
    23:32:void <init>(java.lang.String,androidx.constraintlayout.core.parser.CLElement) -> <init>
    35:35:java.lang.String reason() -> reason
    40:40:java.lang.String toString() -> toString
androidx.constraintlayout.core.parser.CLString -> androidx.constraintlayout.core.parser.CLString:
    21:22:void <init>(char[]) -> <init>
    24:24:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    30:35:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    27:27:java.lang.String toJSON() -> toJSON
androidx.constraintlayout.core.parser.CLToken -> androidx.constraintlayout.core.parser.CLToken:
    19:47:void <init>(char[]) -> <init>
    50:50:androidx.constraintlayout.core.parser.CLElement allocate(char[]) -> allocate
    23:29:boolean getBoolean() -> getBoolean
    69:69:androidx.constraintlayout.core.parser.CLToken$Type getType() -> getType
    33:36:boolean isNull() -> isNull
    62:65:java.lang.String toFormattedJSON(int,int) -> toFormattedJSON
    54:57:java.lang.String toJSON() -> toJSON
    73:108:boolean validate(char,long) -> validate
androidx.constraintlayout.core.parser.CLToken$1 -> androidx.constraintlayout.core.parser.CLToken$1:
    74:74:void <clinit>() -> <clinit>
androidx.constraintlayout.core.parser.CLToken$Type -> androidx.constraintlayout.core.parser.CLToken$Type:
    39:39:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:androidx.constraintlayout.core.parser.CLToken$Type valueOf(java.lang.String) -> valueOf
    39:39:androidx.constraintlayout.core.parser.CLToken$Type[] values() -> values
androidx.constraintlayout.core.state.-$$Lambda$Transition$2y6TlTJLX_ZX7on7V1Mv0YOmh2E -> androidx.constraintlayout.core.state.-$$Lambda$Transition$2y6TlTJLX_ZX7on7V1Mv0YOmh2E:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$8lLgbd07jtmvSR2560hJTuwv_oE -> androidx.constraintlayout.core.state.-$$Lambda$Transition$8lLgbd07jtmvSR2560hJTuwv_oE:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$CTmQdYvAzbwqPbYmXKKHzcfxhy8 -> androidx.constraintlayout.core.state.-$$Lambda$Transition$CTmQdYvAzbwqPbYmXKKHzcfxhy8:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$Fe0xKkwgE1Zm2sr90qjBYb6gqK0 -> androidx.constraintlayout.core.state.-$$Lambda$Transition$Fe0xKkwgE1Zm2sr90qjBYb6gqK0:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$Yi0tFJq43DAyzMLAvtaWRa7Xz-0 -> androidx.constraintlayout.core.state.-$$Lambda$Transition$Yi0tFJq43DAyzMLAvtaWRa7Xz-0:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$jXM2vb2eju1USPXMc6tRUnJaYj0 -> androidx.constraintlayout.core.state.-$$Lambda$Transition$jXM2vb2eju1USPXMc6tRUnJaYj0:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$kTqhkacDGl7bkJ_FxtRxR_k_Afw -> androidx.constraintlayout.core.state.-$$Lambda$Transition$kTqhkacDGl7bkJ_FxtRxR_k_Afw:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.-$$Lambda$Transition$ul0kEsqd10SU52AIEAqa6fVAWO4 -> androidx.constraintlayout.core.state.-$$Lambda$Transition$ul0kEsqd10SU52AIEAqa6fVAWO4:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.core.state.ConstraintReference -> androidx.constraintlayout.core.state.ConstraintReference:
    56:221:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    386:387:void addCustomColor(java.lang.String,int) -> addCustomColor
    390:394:void addCustomFloat(java.lang.String,float) -> addCustomFloat
    317:318:androidx.constraintlayout.core.state.ConstraintReference alpha(float) -> alpha
    840:900:void apply() -> apply
    772:837:void applyConnection(androidx.constraintlayout.core.widgets.ConstraintWidget,java.lang.Object,androidx.constraintlayout.core.state.State$Constraint) -> applyConnection
    381:382:androidx.constraintlayout.core.state.ConstraintReference baseline() -> baseline
    485:487:androidx.constraintlayout.core.state.ConstraintReference baselineToBaseline(java.lang.Object) -> baselineToBaseline
    642:666:androidx.constraintlayout.core.state.ConstraintReference bias(float) -> bias
    372:377:androidx.constraintlayout.core.state.ConstraintReference bottom() -> bottom
    479:481:androidx.constraintlayout.core.state.ConstraintReference bottomToBottom(java.lang.Object) -> bottomToBottom
    473:475:androidx.constraintlayout.core.state.ConstraintReference bottomToTop(java.lang.Object) -> bottomToTop
    491:496:androidx.constraintlayout.core.state.ConstraintReference centerHorizontally(java.lang.Object) -> centerHorizontally
    500:505:androidx.constraintlayout.core.state.ConstraintReference centerVertically(java.lang.Object) -> centerVertically
    509:514:androidx.constraintlayout.core.state.ConstraintReference circularConstraint(java.lang.Object,float,float) -> circularConstraint
    670:760:androidx.constraintlayout.core.state.ConstraintReference clear() -> clear
    247:251:androidx.constraintlayout.core.state.ConstraintReference clearHorizontal() -> clearHorizontal
    240:243:androidx.constraintlayout.core.state.ConstraintReference clearVertical() -> clearVertical
    164:166:androidx.constraintlayout.core.widgets.ConstraintWidget createConstraintWidget() -> createConstraintWidget
    397:410:void dereference() -> dereference
    354:359:androidx.constraintlayout.core.state.ConstraintReference end() -> end
    455:457:androidx.constraintlayout.core.state.ConstraintReference endToEnd(java.lang.Object) -> endToEnd
    449:451:androidx.constraintlayout.core.state.ConstraintReference endToStart(java.lang.Object) -> endToStart
    212:218:java.lang.Object get(java.lang.Object) -> get
    259:259:float getAlpha() -> getAlpha
    156:160:androidx.constraintlayout.core.widgets.ConstraintWidget getConstraintWidget() -> getConstraintWidget
    144:144:androidx.constraintlayout.core.state.helpers.Facade getFacade() -> getFacade
    532:532:androidx.constraintlayout.core.state.Dimension getHeight() -> getHeight
    228:228:int getHorizontalChainStyle() -> getHorizontalChainStyle
    39:39:java.lang.Object getKey() -> getKey
    260:260:float getPivotX() -> getPivotX
    261:261:float getPivotY() -> getPivotY
    262:262:float getRotationX() -> getRotationX
    263:263:float getRotationY() -> getRotationY
    264:264:float getRotationZ() -> getRotationZ
    257:257:float getScaleX() -> getScaleX
    258:258:float getScaleY() -> getScaleY
    47:47:java.lang.String getTag() -> getTag
    764:768:androidx.constraintlayout.core.widgets.ConstraintWidget getTarget(java.lang.Object) -> getTarget
    254:254:float getTranslationX() -> getTranslationX
    255:255:float getTranslationY() -> getTranslationY
    256:256:float getTranslationZ() -> getTranslationZ
    236:236:int getVerticalChainStyle(int) -> getVerticalChainStyle
    134:134:java.lang.Object getView() -> getView
    525:525:androidx.constraintlayout.core.state.Dimension getWidth() -> getWidth
    522:522:androidx.constraintlayout.core.state.ConstraintReference height(androidx.constraintlayout.core.state.Dimension) -> height
    632:633:androidx.constraintlayout.core.state.ConstraintReference horizontalBias(float) -> horizontalBias
    327:332:androidx.constraintlayout.core.state.ConstraintReference left() -> left
    413:415:androidx.constraintlayout.core.state.ConstraintReference leftToLeft(java.lang.Object) -> leftToLeft
    419:421:androidx.constraintlayout.core.state.ConstraintReference leftToRight(java.lang.Object) -> leftToRight
    539:539:androidx.constraintlayout.core.state.ConstraintReference margin(java.lang.Object) -> margin
    543:585:androidx.constraintlayout.core.state.ConstraintReference margin(int) -> margin
    589:628:androidx.constraintlayout.core.state.ConstraintReference marginGone(int) -> marginGone
    267:268:androidx.constraintlayout.core.state.ConstraintReference pivotX(float) -> pivotX
    272:273:androidx.constraintlayout.core.state.ConstraintReference pivotY(float) -> pivotY
    336:341:androidx.constraintlayout.core.state.ConstraintReference right() -> right
    425:427:androidx.constraintlayout.core.state.ConstraintReference rightToLeft(java.lang.Object) -> rightToLeft
    431:433:androidx.constraintlayout.core.state.ConstraintReference rightToRight(java.lang.Object) -> rightToRight
    277:278:androidx.constraintlayout.core.state.ConstraintReference rotationX(float) -> rotationX
    282:283:androidx.constraintlayout.core.state.ConstraintReference rotationY(float) -> rotationY
    287:288:androidx.constraintlayout.core.state.ConstraintReference rotationZ(float) -> rotationZ
    307:308:androidx.constraintlayout.core.state.ConstraintReference scaleX(float) -> scaleX
    312:313:androidx.constraintlayout.core.state.ConstraintReference scaleY(float) -> scaleY
    147:152:void setConstraintWidget(androidx.constraintlayout.core.widgets.ConstraintWidget) -> setConstraintWidget
    138:142:void setFacade(androidx.constraintlayout.core.state.helpers.Facade) -> setFacade
    534:535:androidx.constraintlayout.core.state.ConstraintReference setHeight(androidx.constraintlayout.core.state.Dimension) -> setHeight
    224:225:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    35:36:void setKey(java.lang.Object) -> setKey
    43:44:void setTag(java.lang.String) -> setTag
    232:233:void setVerticalChainStyle(int) -> setVerticalChainStyle
    127:131:void setView(java.lang.Object) -> setView
    528:529:androidx.constraintlayout.core.state.ConstraintReference setWidth(androidx.constraintlayout.core.state.Dimension) -> setWidth
    345:350:androidx.constraintlayout.core.state.ConstraintReference start() -> start
    443:445:androidx.constraintlayout.core.state.ConstraintReference startToEnd(java.lang.Object) -> startToEnd
    437:439:androidx.constraintlayout.core.state.ConstraintReference startToStart(java.lang.Object) -> startToStart
    363:368:androidx.constraintlayout.core.state.ConstraintReference top() -> top
    467:469:androidx.constraintlayout.core.state.ConstraintReference topToBottom(java.lang.Object) -> topToBottom
    461:463:androidx.constraintlayout.core.state.ConstraintReference topToTop(java.lang.Object) -> topToTop
    292:293:androidx.constraintlayout.core.state.ConstraintReference translationX(float) -> translationX
    297:298:androidx.constraintlayout.core.state.ConstraintReference translationY(float) -> translationY
    302:303:androidx.constraintlayout.core.state.ConstraintReference translationZ(float) -> translationZ
    189:209:void validate() -> validate
    637:638:androidx.constraintlayout.core.state.ConstraintReference verticalBias(float) -> verticalBias
    322:323:androidx.constraintlayout.core.state.ConstraintReference visibility(int) -> visibility
    518:518:androidx.constraintlayout.core.state.ConstraintReference width(androidx.constraintlayout.core.state.Dimension) -> width
androidx.constraintlayout.core.state.ConstraintReference$1 -> androidx.constraintlayout.core.state.ConstraintReference$1:
    544:544:void <clinit>() -> <clinit>
androidx.constraintlayout.core.state.ConstraintReference$IncorrectConstraintException -> androidx.constraintlayout.core.state.ConstraintReference$IncorrectConstraintException:
    173:175:void <init>(java.util.ArrayList) -> <init>
    181:181:java.lang.String toString() -> toString
androidx.constraintlayout.core.state.Dimension -> androidx.constraintlayout.core.state.Dimension:
    28:33:void <clinit>() -> <clinit>
    35:67:void <init>() -> <init>
    35:68:void <init>(java.lang.Object) -> <init>
    83:85:androidx.constraintlayout.core.state.Dimension Fixed(int) -> Fixed
    89:91:androidx.constraintlayout.core.state.Dimension Fixed(java.lang.Object) -> Fixed
    101:101:androidx.constraintlayout.core.state.Dimension Parent() -> Parent
    95:97:androidx.constraintlayout.core.state.Dimension Percent(java.lang.Object,float) -> Percent
    113:115:androidx.constraintlayout.core.state.Dimension Ratio(java.lang.String) -> Ratio
    109:109:androidx.constraintlayout.core.state.Dimension Spread() -> Spread
    71:73:androidx.constraintlayout.core.state.Dimension Suggested(int) -> Suggested
    77:79:androidx.constraintlayout.core.state.Dimension Suggested(java.lang.Object) -> Suggested
    105:105:androidx.constraintlayout.core.state.Dimension Wrap() -> Wrap
    197:253:void apply(androidx.constraintlayout.core.state.State,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> apply
    53:57:boolean equalsFixedValue(int) -> equalsFixedValue
    164:169:androidx.constraintlayout.core.state.Dimension fixed(java.lang.Object) -> fixed
    173:175:androidx.constraintlayout.core.state.Dimension fixed(int) -> fixed
    189:189:int getValue() -> getValue
    138:141:androidx.constraintlayout.core.state.Dimension max(int) -> max
    145:149:androidx.constraintlayout.core.state.Dimension max(java.lang.Object) -> max
    124:127:androidx.constraintlayout.core.state.Dimension min(int) -> min
    131:134:androidx.constraintlayout.core.state.Dimension min(java.lang.Object) -> min
    119:120:androidx.constraintlayout.core.state.Dimension percent(java.lang.Object,float) -> percent
    179:180:androidx.constraintlayout.core.state.Dimension ratio(java.lang.String) -> ratio
    153:154:androidx.constraintlayout.core.state.Dimension suggested(int) -> suggested
    158:160:androidx.constraintlayout.core.state.Dimension suggested(java.lang.Object) -> suggested
androidx.constraintlayout.core.state.Dimension$Type -> androidx.constraintlayout.core.state.Dimension$Type:
    60:64:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:androidx.constraintlayout.core.state.Dimension$Type valueOf(java.lang.String) -> valueOf
    60:60:androidx.constraintlayout.core.state.Dimension$Type[] values() -> values
androidx.constraintlayout.core.state.HelperReference -> androidx.constraintlayout.core.state.HelperReference:
    29:36:void <init>(androidx.constraintlayout.core.state.State,androidx.constraintlayout.core.state.State$Helper) -> <init>
    41:42:androidx.constraintlayout.core.state.HelperReference add(java.lang.Object[]) -> add
    58:58:void apply() -> apply
    53:53:androidx.constraintlayout.core.widgets.ConstraintWidget getConstraintWidget() -> getConstraintWidget
    49:49:androidx.constraintlayout.core.widgets.HelperWidget getHelperWidget() -> getHelperWidget
    38:38:androidx.constraintlayout.core.state.State$Helper getType() -> getType
    46:47:void setHelperWidget(androidx.constraintlayout.core.widgets.HelperWidget) -> setHelperWidget
androidx.constraintlayout.core.state.Registry -> androidx.constraintlayout.core.state.Registry:
    23:23:void <clinit>() -> <clinit>
    21:29:void <init>() -> <init>
    54:58:java.lang.String currentContent(java.lang.String) -> currentContent
    62:66:java.lang.String currentLayoutInformation(java.lang.String) -> currentLayoutInformation
    26:26:androidx.constraintlayout.core.state.Registry getInstance() -> getInstance
    88:92:long getLastModified(java.lang.String) -> getLastModified
    84:84:java.util.Set getLayoutList() -> getLayoutList
    32:33:void register(java.lang.String,androidx.constraintlayout.core.state.RegistryCallback) -> register
    70:74:void setDrawDebug(java.lang.String,int) -> setDrawDebug
    77:81:void setLayoutInformationMode(java.lang.String,int) -> setLayoutInformationMode
    36:37:void unregister(java.lang.String,androidx.constraintlayout.core.state.RegistryCallback) -> unregister
    40:44:void updateContent(java.lang.String,java.lang.String) -> updateContent
    96:100:void updateDimensions(java.lang.String,int,int) -> updateDimensions
    47:51:void updateProgress(java.lang.String,float) -> updateProgress
androidx.constraintlayout.core.state.State -> androidx.constraintlayout.core.state.State:
    46:46:void <clinit>() -> <clinit>
    37:174:void <init>() -> <init>
    314:397:void apply(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> apply
    230:236:androidx.constraintlayout.core.state.helpers.BarrierReference barrier(java.lang.Object,androidx.constraintlayout.core.state.State$Direction) -> barrier
    260:262:androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference centerHorizontally(java.lang.Object[]) -> centerHorizontally
    266:268:androidx.constraintlayout.core.state.helpers.AlignVerticallyReference centerVertically(java.lang.Object[]) -> centerVertically
    162:171:androidx.constraintlayout.core.state.ConstraintReference constraints(java.lang.Object) -> constraints
    112:118:int convertDimension(java.lang.Object) -> convertDimension
    128:128:androidx.constraintlayout.core.state.ConstraintReference createConstraintReference(java.lang.Object) -> createConstraintReference
    176:176:java.lang.String createHelperKey() -> createHelperKey
    272:280:void directMapping() -> directMapping
    307:310:java.util.ArrayList getIdsForTag(java.lang.String) -> getIdsForTag
    219:226:androidx.constraintlayout.core.state.helpers.GuidelineReference guideline(java.lang.Object,int) -> guideline
    144:144:androidx.constraintlayout.core.state.State height(androidx.constraintlayout.core.state.Dimension) -> height
    180:207:androidx.constraintlayout.core.state.HelperReference helper(java.lang.Object,androidx.constraintlayout.core.state.State$Helper) -> helper
    250:250:androidx.constraintlayout.core.state.helpers.HorizontalChainReference horizontalChain() -> horizontalChain
    254:256:androidx.constraintlayout.core.state.helpers.HorizontalChainReference horizontalChain(java.lang.Object[]) -> horizontalChain
    211:211:androidx.constraintlayout.core.state.helpers.GuidelineReference horizontalGuideline(java.lang.Object) -> horizontalGuideline
    283:288:void map(java.lang.Object,java.lang.Object) -> map
    158:158:androidx.constraintlayout.core.state.Reference reference(java.lang.Object) -> reference
    99:101:void reset() -> reset
    136:136:boolean sameFixedHeight(int) -> sameFixedHeight
    132:132:boolean sameFixedWidth(int) -> sameFixedWidth
    153:154:androidx.constraintlayout.core.state.State setHeight(androidx.constraintlayout.core.state.Dimension) -> setHeight
    291:304:void setTag(java.lang.String,java.lang.String) -> setTag
    148:149:androidx.constraintlayout.core.state.State setWidth(androidx.constraintlayout.core.state.Dimension) -> setWidth
    240:240:androidx.constraintlayout.core.state.helpers.VerticalChainReference verticalChain() -> verticalChain
    244:246:androidx.constraintlayout.core.state.helpers.VerticalChainReference verticalChain(java.lang.Object[]) -> verticalChain
    215:215:androidx.constraintlayout.core.state.helpers.GuidelineReference verticalGuideline(java.lang.Object) -> verticalGuideline
    140:140:androidx.constraintlayout.core.state.State width(androidx.constraintlayout.core.state.Dimension) -> width
androidx.constraintlayout.core.state.State$1 -> androidx.constraintlayout.core.state.State$1:
    185:185:void <clinit>() -> <clinit>
androidx.constraintlayout.core.state.State$Chain -> androidx.constraintlayout.core.state.State$Chain:
    88:91:void <clinit>() -> <clinit>
    88:88:void <init>(java.lang.String,int) -> <init>
    88:88:androidx.constraintlayout.core.state.State$Chain valueOf(java.lang.String) -> valueOf
    88:88:androidx.constraintlayout.core.state.State$Chain[] values() -> values
androidx.constraintlayout.core.state.State$Constraint -> androidx.constraintlayout.core.state.State$Constraint:
    50:66:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int) -> <init>
    50:50:androidx.constraintlayout.core.state.State$Constraint valueOf(java.lang.String) -> valueOf
    50:50:androidx.constraintlayout.core.state.State$Constraint[] values() -> values
androidx.constraintlayout.core.state.State$Direction -> androidx.constraintlayout.core.state.State$Direction:
    69:75:void <clinit>() -> <clinit>
    69:69:void <init>(java.lang.String,int) -> <init>
    69:69:androidx.constraintlayout.core.state.State$Direction valueOf(java.lang.String) -> valueOf
    69:69:androidx.constraintlayout.core.state.State$Direction[] values() -> values
androidx.constraintlayout.core.state.State$Helper -> androidx.constraintlayout.core.state.State$Helper:
    78:85:void <clinit>() -> <clinit>
    78:78:void <init>(java.lang.String,int) -> <init>
    78:78:androidx.constraintlayout.core.state.State$Helper valueOf(java.lang.String) -> valueOf
    78:78:androidx.constraintlayout.core.state.State$Helper[] values() -> values
androidx.constraintlayout.core.state.Transition -> androidx.constraintlayout.core.state.Transition:
    34:58:void <init>() -> <init>
    273:276:void addCustomColor(int,java.lang.String,java.lang.String,int) -> addCustomColor
    267:270:void addCustomFloat(int,java.lang.String,java.lang.String,float) -> addCustomFloat
    242:243:void addKeyAttribute(java.lang.String,androidx.constraintlayout.core.motion.utils.TypedBundle) -> addKeyAttribute
    246:247:void addKeyCycle(java.lang.String,androidx.constraintlayout.core.motion.utils.TypedBundle) -> addKeyCycle
    238:239:void addKeyPosition(java.lang.String,androidx.constraintlayout.core.motion.utils.TypedBundle) -> addKeyPosition
    250:264:void addKeyPosition(java.lang.String,int,int,float,float) -> addKeyPosition
    230:231:void clear() -> clear
    234:234:boolean contains(java.lang.String) -> contains
    109:124:void fillKeyPositions(androidx.constraintlayout.core.state.WidgetFrame,float[],float[],float[]) -> fillKeyPositions
    75:85:androidx.constraintlayout.core.state.Transition$KeyPosition findNextPosition(java.lang.String,int) -> findNextPosition
    61:71:androidx.constraintlayout.core.state.Transition$KeyPosition findPreviousPosition(java.lang.String,int) -> findPreviousPosition
    409:409:int getAutoTransition() -> getAutoTransition
    304:308:androidx.constraintlayout.core.state.WidgetFrame getEnd(java.lang.String) -> getEnd
    369:369:androidx.constraintlayout.core.state.WidgetFrame getEnd(androidx.constraintlayout.core.widgets.ConstraintWidget) -> getEnd
    312:316:androidx.constraintlayout.core.state.WidgetFrame getInterpolated(java.lang.String) -> getInterpolated
    379:379:androidx.constraintlayout.core.state.WidgetFrame getInterpolated(androidx.constraintlayout.core.widgets.ConstraintWidget) -> getInterpolated
    383:383:androidx.constraintlayout.core.state.Interpolator getInterpolator() -> getInterpolator
    387:405:androidx.constraintlayout.core.state.Interpolator getInterpolator(int,java.lang.String) -> getInterpolator
    329:330:int getKeyFrames(java.lang.String,float[],int[],int[]) -> getKeyFrames
    105:105:androidx.constraintlayout.core.motion.Motion getMotion(java.lang.String) -> getMotion
    89:101:int getNumberKeyPositions(androidx.constraintlayout.core.state.WidgetFrame) -> getNumberKeyPositions
    320:325:float[] getPath(java.lang.String) -> getPath
    296:300:androidx.constraintlayout.core.state.WidgetFrame getStart(java.lang.String) -> getStart
    359:359:androidx.constraintlayout.core.state.WidgetFrame getStart(androidx.constraintlayout.core.widgets.ConstraintWidget) -> getStart
    338:349:androidx.constraintlayout.core.state.Transition$WidgetState getWidgetState(java.lang.String,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetState
    127:127:boolean hasPositionKeyframes() -> hasPositionKeyframes
    289:293:void interpolate(int,int,float) -> interpolate
    226:226:boolean isEmpty() -> isEmpty
    131:133:void setTransitionProperties(androidx.constraintlayout.core.motion.utils.TypedBundle) -> setTransitionProperties
    279:286:void updateFrom(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> updateFrom
androidx.constraintlayout.core.state.Transition$KeyPosition -> androidx.constraintlayout.core.state.Transition$KeyPosition:
    216:222:void <init>(java.lang.String,int,int,float,float) -> <init>
androidx.constraintlayout.core.state.Transition$WidgetState -> androidx.constraintlayout.core.state.Transition$WidgetState:
    143:157:void <init>() -> <init>
    189:194:androidx.constraintlayout.core.state.WidgetFrame getFrame(int) -> getFrame
    199:206:void interpolate(int,int,float,androidx.constraintlayout.core.state.Transition) -> interpolate
    166:169:void setKeyAttribute(androidx.constraintlayout.core.motion.utils.TypedBundle) -> setKeyAttribute
    172:175:void setKeyCycle(androidx.constraintlayout.core.motion.utils.TypedBundle) -> setKeyCycle
    160:163:void setKeyPosition(androidx.constraintlayout.core.motion.utils.TypedBundle) -> setKeyPosition
    178:186:void update(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> update
androidx.constraintlayout.core.state.WidgetFrame -> androidx.constraintlayout.core.state.WidgetFrame:
    51:51:void <clinit>() -> <clinit>
    33:74:void <init>() -> <init>
    33:78:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    33:87:void <init>(androidx.constraintlayout.core.state.WidgetFrame) -> <init>
    520:524:void add(java.lang.StringBuilder,java.lang.String,int) -> add
    527:534:void add(java.lang.StringBuilder,java.lang.String,float) -> add
    274:275:void addCustomColor(java.lang.String,int) -> addCustomColor
    286:287:void addCustomFloat(java.lang.String,float) -> addCustomFloat
    244:244:float centerX() -> centerX
    248:248:float centerY() -> centerY
    329:329:androidx.constraintlayout.core.motion.CustomVariable getCustomAttribute(java.lang.String) -> getCustomAttribute
    333:333:java.util.Set getCustomAttributeNames() -> getCustomAttributeNames
    278:282:int getCustomColor(java.lang.String) -> getCustomColor
    290:293:float getCustomFloat(java.lang.String) -> getCustomFloat
    70:70:int height() -> height
    124:226:void interpolate(int,int,androidx.constraintlayout.core.state.WidgetFrame,androidx.constraintlayout.core.state.WidgetFrame,androidx.constraintlayout.core.state.WidgetFrame,androidx.constraintlayout.core.state.Transition,float) -> interpolate
    229:240:float interpolate(float,float,float,float) -> interpolate
    112:120:boolean isDefaultTransform() -> isDefaultTransform
    400:418:void parseCustom(androidx.constraintlayout.core.parser.CLElement) -> parseCustom
    422:422:java.lang.StringBuilder serialize(java.lang.StringBuilder) -> serialize
    432:500:java.lang.StringBuilder serialize(java.lang.StringBuilder,boolean) -> serialize
    503:518:void serializeAnchor(java.lang.StringBuilder,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> serializeAnchor
    297:302:void setCustomAttribute(java.lang.String,int,float) -> setCustomAttribute
    305:310:void setCustomAttribute(java.lang.String,int,int) -> setCustomAttribute
    313:318:void setCustomAttribute(java.lang.String,int,boolean) -> setCustomAttribute
    321:326:void setCustomAttribute(java.lang.String,int,java.lang.String) -> setCustomAttribute
    337:396:boolean setValue(java.lang.String,androidx.constraintlayout.core.parser.CLElement) -> setValue
    252:260:androidx.constraintlayout.core.state.WidgetFrame update() -> update
    264:270:androidx.constraintlayout.core.state.WidgetFrame update(androidx.constraintlayout.core.widgets.ConstraintWidget) -> update
    90:109:void updateAttributes(androidx.constraintlayout.core.state.WidgetFrame) -> updateAttributes
    66:66:int width() -> width
androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference -> androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference:
    25:29:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    32:53:void apply() -> apply
androidx.constraintlayout.core.state.helpers.AlignVerticallyReference -> androidx.constraintlayout.core.state.helpers.AlignVerticallyReference:
    25:29:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    32:53:void apply() -> apply
androidx.constraintlayout.core.state.helpers.BarrierReference -> androidx.constraintlayout.core.state.helpers.BarrierReference:
    32:33:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    59:80:void apply() -> apply
    52:55:androidx.constraintlayout.core.widgets.HelperWidget getHelperWidget() -> getHelperWidget
    41:42:androidx.constraintlayout.core.state.ConstraintReference margin(java.lang.Object) -> margin
    46:47:androidx.constraintlayout.core.state.ConstraintReference margin(int) -> margin
    36:37:void setBarrierDirection(androidx.constraintlayout.core.state.State$Direction) -> setBarrierDirection
androidx.constraintlayout.core.state.helpers.BarrierReference$1 -> androidx.constraintlayout.core.state.helpers.BarrierReference$1:
    61:61:void <clinit>() -> <clinit>
androidx.constraintlayout.core.state.helpers.ChainReference -> androidx.constraintlayout.core.state.helpers.ChainReference:
    25:30:void <init>(androidx.constraintlayout.core.state.State,androidx.constraintlayout.core.state.State$Helper) -> <init>
    23:23:androidx.constraintlayout.core.state.ConstraintReference bias(float) -> bias
    38:39:androidx.constraintlayout.core.state.helpers.ChainReference bias(float) -> bias
    37:37:float getBias() -> getBias
    32:32:androidx.constraintlayout.core.state.State$Chain getStyle() -> getStyle
    34:35:androidx.constraintlayout.core.state.helpers.ChainReference style(androidx.constraintlayout.core.state.State$Chain) -> style
androidx.constraintlayout.core.state.helpers.GuidelineReference -> androidx.constraintlayout.core.state.helpers.GuidelineReference:
    30:45:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    77:85:void apply() -> apply
    55:58:androidx.constraintlayout.core.state.helpers.GuidelineReference end(java.lang.Object) -> end
    94:97:androidx.constraintlayout.core.widgets.ConstraintWidget getConstraintWidget() -> getConstraintWidget
    89:89:androidx.constraintlayout.core.state.helpers.Facade getFacade() -> getFacade
    40:40:java.lang.Object getKey() -> getKey
    73:73:int getOrientation() -> getOrientation
    62:65:androidx.constraintlayout.core.state.helpers.GuidelineReference percent(float) -> percent
    102:107:void setConstraintWidget(androidx.constraintlayout.core.widgets.ConstraintWidget) -> setConstraintWidget
    37:38:void setKey(java.lang.Object) -> setKey
    69:70:void setOrientation(int) -> setOrientation
    48:51:androidx.constraintlayout.core.state.helpers.GuidelineReference start(java.lang.Object) -> start
androidx.constraintlayout.core.state.helpers.HorizontalChainReference -> androidx.constraintlayout.core.state.helpers.HorizontalChainReference:
    26:27:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    30:85:void apply() -> apply
androidx.constraintlayout.core.state.helpers.HorizontalChainReference$1 -> androidx.constraintlayout.core.state.helpers.HorizontalChainReference$1:
    74:74:void <clinit>() -> <clinit>
androidx.constraintlayout.core.state.helpers.VerticalChainReference -> androidx.constraintlayout.core.state.helpers.VerticalChainReference:
    26:27:void <init>(androidx.constraintlayout.core.state.State) -> <init>
    30:85:void apply() -> apply
androidx.constraintlayout.core.state.helpers.VerticalChainReference$1 -> androidx.constraintlayout.core.state.helpers.VerticalChainReference$1:
    74:74:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.Barrier -> androidx.constraintlayout.core.widgets.Barrier:
    36:42:void <init>() -> <init>
    36:45:void <init>(java.lang.String) -> <init>
    139:247:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    273:329:boolean allSolved() -> allSolved
    49:49:boolean allowedInBarrier() -> allowedInBarrier
    70:70:boolean allowsGoneWidget() -> allowsGoneWidget
    89:94:void copy(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashMap) -> copy
    77:77:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    52:52:int getBarrierType() -> getBarrierType
    254:254:int getMargin() -> getMargin
    258:266:int getOrientation() -> getOrientation
    80:80:boolean isResolvedHorizontally() -> isResolvedHorizontally
    84:84:boolean isResolvedVertically() -> isResolvedVertically
    111:122:void markWidgets() -> markWidgets
    58:58:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    55:56:void setBarrierType(int) -> setBarrierType
    250:251:void setMargin(int) -> setMargin
    98:107:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.Chain -> androidx.constraintlayout.core.widgets.Chain:
    31:31:void <init>() -> <init>
    47:69:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> applyChainConstraints
    83:458:void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,int,int,androidx.constraintlayout.core.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.core.widgets.ChainHead -> androidx.constraintlayout.core.widgets.ChainHead:
    42:67:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> <init>
    234:238:void define() -> define
    84:199:void defineChainProperties() -> defineChainProperties
    202:202:androidx.constraintlayout.core.widgets.ConstraintWidget getFirst() -> getFirst
    222:222:androidx.constraintlayout.core.widgets.ConstraintWidget getFirstMatchConstraintWidget() -> getFirstMatchConstraintWidget
    206:206:androidx.constraintlayout.core.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    218:218:androidx.constraintlayout.core.widgets.ConstraintWidget getHead() -> getHead
    210:210:androidx.constraintlayout.core.widgets.ConstraintWidget getLast() -> getLast
    226:226:androidx.constraintlayout.core.widgets.ConstraintWidget getLastMatchConstraintWidget() -> getLastMatchConstraintWidget
    214:214:androidx.constraintlayout.core.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    230:230:float getTotalWeight() -> getTotalWeight
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.core.widgets.ConstraintAnchor -> androidx.constraintlayout.core.widgets.ConstraintAnchor:
    36:134:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> <init>
    215:231:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,boolean) -> connect
    242:242:boolean connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    104:124:void copyFrom(androidx.constraintlayout.core.widgets.ConstraintAnchor,java.util.HashMap) -> copyFrom
    41:46:void findDependents(int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    48:48:java.util.HashSet getDependents() -> getDependents
    75:78:int getFinalValue() -> getFinalValue
    170:177:int getMargin() -> getMargin
    490:510:androidx.constraintlayout.core.widgets.ConstraintAnchor getOpposite() -> getOpposite
    157:157:androidx.constraintlayout.core.widgets.ConstraintWidget getOwner() -> getOwner
    140:140:androidx.constraintlayout.core.SolverVariable getSolverVariable() -> getSolverVariable
    184:184:androidx.constraintlayout.core.widgets.ConstraintAnchor getTarget() -> getTarget
    163:163:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type getType() -> getType
    57:66:boolean hasCenteredDependents() -> hasCenteredDependents
    50:53:boolean hasDependents() -> hasDependents
    86:86:boolean hasFinalValue() -> hasFinalValue
    250:250:boolean isConnected() -> isConnected
    430:430:boolean isConnectionAllowed(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor) -> isConnectionAllowed
    443:454:boolean isConnectionAllowed(androidx.constraintlayout.core.widgets.ConstraintWidget) -> isConnectionAllowed
    465:482:boolean isConnectionToMe(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashSet) -> isConnectionToMe
    312:325:boolean isSideAnchor() -> isSideAnchor
    336:358:boolean isSimilarDimensionConnection(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> isSimilarDimensionConnection
    259:303:boolean isValidConnection(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> isValidConnection
    387:400:boolean isVerticalAnchor() -> isVerticalAnchor
    190:202:void reset() -> reset
    82:84:void resetFinalResolution() -> resetFinalResolution
    146:151:void resetSolverVariable(androidx.constraintlayout.core.Cache) -> resetSolverVariable
    70:72:void setFinalValue(int) -> setFinalValue
    376:379:void setGoneMargin(int) -> setGoneMargin
    366:369:void setMargin(int) -> setMargin
    410:410:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.core.widgets.ConstraintAnchor$1:
    270:270:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.core.widgets.ConstraintAnchor$Type:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    91:91:androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidget -> androidx.constraintlayout.core.widgets.ConstraintWidget:
    470:470:void <clinit>() -> <clinit>
    62:723:void <init>() -> <init>
    62:728:void <init>(java.lang.String) -> <init>
    62:744:void <init>(int,int,int,int) -> <init>
    747:749:void <init>(java.lang.String,int,int,int,int) -> <init>
    758:759:void <init>(int,int) -> <init>
    771:773:void <init>(java.lang.String,int,int) -> <init>
    793:801:void addAnchors() -> addAnchors
    3512:3554:void addChildrenToSolverByDependency(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.HashSet,int,boolean) -> addChildrenToSolverByDependency
    2748:2748:boolean addFirst() -> addFirst
    2384:2741:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    1817:1817:boolean allowedInBarrier() -> allowedInBarrier
    2844:3314:void applyConstraints(androidx.constraintlayout.core.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    1848:1851:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> connect
    1866:1867:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> connect
    1880:2047:void connect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int) -> connect
    874:877:void connectCircularConstraint(androidx.constraintlayout.core.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    3357:3450:void copy(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashMap) -> copy
    968:975:void createObjectVariables(androidx.constraintlayout.core.LinearSystem) -> createObjectVariables
    213:214:void ensureMeasureRequested() -> ensureMeasureRequested
    762:768:void ensureWidgetRuns() -> ensureWidgetRuns
    2143:2171:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    1272:1272:java.util.ArrayList getAnchors() -> getAnchors
    1253:1253:int getBaselineDistance() -> getBaselineDistance
    1229:1234:float getBiasPercent(int) -> getBiasPercent
    1170:1170:int getBottom() -> getBottom
    1263:1263:java.lang.Object getCompanionWidget() -> getCompanionWidget
    1752:1752:int getContainerItemSkip() -> getContainerItemSkip
    921:921:java.lang.String getDebugName() -> getDebugName
    2199:2204:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1506:1506:float getDimensionRatio() -> getDimensionRatio
    1515:1515:int getDimensionRatioSide() -> getDimensionRatioSide
    357:357:boolean getHasBaseline() -> getHasBaseline
    1077:1080:int getHeight() -> getHeight
    1208:1208:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    2283:2303:androidx.constraintlayout.core.widgets.ConstraintWidget getHorizontalChainControlWidget() -> getHorizontalChainControlWidget
    1790:1790:int getHorizontalChainStyle() -> getHorizontalChainStyle
    2180:2180:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    1177:1184:int getHorizontalMargin() -> getHorizontalMargin
    400:400:int getLastHorizontalMeasureSpec() -> getLastHorizontalMeasureSpec
    401:401:int getLastVerticalMeasureSpec() -> getLastVerticalMeasureSpec
    1143:1143:int getLeft() -> getLeft
    1090:1095:int getLength(int) -> getLength
    321:321:int getMaxHeight() -> getMaxHeight
    325:325:int getMaxWidth() -> getMaxWidth
    1134:1134:int getMinHeight() -> getMinHeight
    1125:1125:int getMinWidth() -> getMinWidth
    2265:2274:androidx.constraintlayout.core.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    1054:1068:int getOptimizerWrapHeight() -> getOptimizerWrapHeight
    1036:1050:int getOptimizerWrapWidth() -> getOptimizerWrapWidth
    818:818:androidx.constraintlayout.core.widgets.ConstraintWidget getParent() -> getParent
    2246:2255:androidx.constraintlayout.core.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    1161:1161:int getRight() -> getRight
    1106:1106:int getRootX() -> getRootX
    1116:1116:int getRootY() -> getRootY
    84:89:androidx.constraintlayout.core.widgets.analyzer.WidgetRun getRun(int) -> getRun
    1152:1152:int getTop() -> getTop
    885:885:java.lang.String getType() -> getType
    1218:1218:float getVerticalBiasPercent() -> getVerticalBiasPercent
    2326:2346:androidx.constraintlayout.core.widgets.ConstraintWidget getVerticalChainControlWidget() -> getVerticalChainControlWidget
    1810:1810:int getVerticalChainStyle() -> getVerticalChainStyle
    2189:2189:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    1191:1198:int getVerticalMargin() -> getVerticalMargin
    912:912:int getVisibility() -> getVisibility
    1029:1032:int getWidth() -> getWidth
    391:391:int getWrapBehaviorInParent() -> getWrapBehaviorInParent
    1005:1008:int getX() -> getX
    1017:1020:int getY() -> getY
    1244:1244:boolean hasBaseline() -> hasBaseline
    227:232:boolean hasDanglingDimension(int) -> hasDanglingDimension
    217:223:boolean hasDependencies() -> hasDependencies
    711:711:boolean hasDimensionOverride() -> hasDimensionOverride
    237:250:boolean hasResolvedTargets(int,int) -> hasResolvedTargets
    1835:1838:void immediateConnect(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    2356:2357:boolean isChainHead(int) -> isChainHead
    863:863:boolean isHeightWrapContent() -> isHeightWrapContent
    132:132:boolean isHorizontalSolvingPassDone() -> isHorizontalSolvingPassDone
    373:373:boolean isInBarrier(int) -> isInBarrier
    2232:2236:boolean isInHorizontalChain() -> isInHorizontalChain
    361:361:boolean isInPlaceholder() -> isInPlaceholder
    2313:2317:boolean isInVerticalChain() -> isInVerticalChain
    313:313:boolean isInVirtualLayout() -> isInVirtualLayout
    381:381:boolean isMeasureRequested() -> isMeasureRequested
    194:194:boolean isResolvedHorizontally() -> isResolvedHorizontally
    198:198:boolean isResolvedVertically() -> isResolvedVertically
    809:809:boolean isRoot() -> isRoot
    345:345:boolean isSpreadHeight() -> isSpreadHeight
    337:337:boolean isSpreadWidth() -> isSpreadWidth
    136:136:boolean isVerticalSolvingPassDone() -> isVerticalSolvingPassDone
    845:845:boolean isWidthWrapContent() -> isWidthWrapContent
    140:141:void markHorizontalSolvingPassDone() -> markHorizontalSolvingPassDone
    144:145:void markVerticalSolvingPassDone() -> markVerticalSolvingPassDone
    696:699:boolean oppositeDimensionDependsOn(int) -> oppositeDimensionDependsOn
    705:705:boolean oppositeDimensionsTied() -> oppositeDimensionsTied
    516:579:void reset() -> reset
    2053:2056:void resetAllConstraints() -> resetAllConstraints
    2064:2117:void resetAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> resetAnchor
    2123:2134:void resetAnchors() -> resetAnchors
    202:210:void resetFinalResolution() -> resetFinalResolution
    779:787:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
    127:129:void resetSolvingPassFlag() -> resetSolvingPassFlag
    652:688:java.lang.StringBuilder serialize(java.lang.StringBuilder) -> serialize
    584:596:void serializeAnchor(java.lang.StringBuilder,java.lang.String,androidx.constraintlayout.core.widgets.ConstraintAnchor) -> serializeAnchor
    613:620:void serializeAttribute(java.lang.StringBuilder,java.lang.String,float,float) -> serializeAttribute
    598:610:void serializeCircle(java.lang.StringBuilder,androidx.constraintlayout.core.widgets.ConstraintAnchor,float) -> serializeCircle
    623:633:void serializeDimensionRatio(java.lang.StringBuilder,java.lang.String,float,int) -> serializeDimensionRatio
    640:649:void serializeSize(java.lang.StringBuilder,java.lang.String,int,int,int,int,int,int,float,float) -> serializeSize
    1716:1718:void setBaselineDistance(int) -> setBaselineDistance
    1727:1728:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    1739:1744:void setContainerItemSkip(int) -> setContainerItemSkip
    928:929:void setDebugName(java.lang.String) -> setDebugName
    948:959:void setDebugSolverName(androidx.constraintlayout.core.LinearSystem,java.lang.String) -> setDebugSolverName
    1571:1579:void setDimension(int,int) -> setDimension
    1431:1485:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1496:1498:void setDimensionRatio(float,int) -> setDimensionRatio
    181:191:void setFinalBaseline(int) -> setFinalBaseline
    99:114:void setFinalFrame(int,int,int,int,int,int) -> setFinalFrame
    148:160:void setFinalHorizontal(int,int) -> setFinalHorizontal
    117:119:void setFinalLeft(int) -> setFinalLeft
    122:124:void setFinalTop(int) -> setFinalTop
    163:178:void setFinalVertical(int,int) -> setFinalVertical
    1590:1635:void setFrame(int,int,int,int) -> setFrame
    1645:1650:void setFrame(int,int,int) -> setFrame
    1322:1349:void setGoneMargin(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type,int) -> setGoneMargin
    353:354:void setHasBaseline(boolean) -> setHasBaseline
    1369:1373:void setHeight(int) -> setHeight
    854:855:void setHeightWrapContent(boolean) -> setHeightWrapContent
    1525:1526:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1780:1781:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1659:1664:void setHorizontalDimension(int,int) -> setHorizontalDimension
    2214:2215:void setHorizontalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1398:1405:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1761:1762:void setHorizontalWeight(float) -> setHorizontalWeight
    369:370:void setInBarrier(int,boolean) -> setInBarrier
    365:366:void setInPlaceholder(boolean) -> setInPlaceholder
    317:318:void setInVirtualLayout(boolean) -> setInVirtualLayout
    403:406:void setLastMeasureSpec(int,int) -> setLastMeasureSpec
    1382:1387:void setLength(int,int) -> setLength
    333:334:void setMaxHeight(int) -> setMaxHeight
    329:330:void setMaxWidth(int) -> setMaxWidth
    377:378:void setMeasureRequested(boolean) -> setMeasureRequested
    1557:1562:void setMinHeight(int) -> setMinHeight
    1544:1549:void setMinWidth(int) -> setMinWidth
    1311:1313:void setOffset(int,int) -> setOffset
    1300:1302:void setOrigin(int,int) -> setOrigin
    827:828:void setParent(androidx.constraintlayout.core.widgets.ConstraintWidget) -> setParent
    894:895:void setType(java.lang.String) -> setType
    1535:1536:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1800:1801:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1673:1678:void setVerticalDimension(int,int) -> setVerticalDimension
    2223:2224:void setVerticalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1416:1423:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1770:1771:void setVerticalWeight(float) -> setVerticalWeight
    903:904:void setVisibility(int) -> setVisibility
    1357:1361:void setWidth(int) -> setWidth
    836:837:void setWidthWrapContent(boolean) -> setWidthWrapContent
    385:388:void setWrapBehaviorInParent(int) -> setWrapBehaviorInParent
    1281:1282:void setX(int) -> setX
    1290:1291:void setY(int) -> setY
    2761:2815:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    984:984:java.lang.String toString() -> toString
    3453:3509:void updateFromRuns(boolean,boolean) -> updateFromRuns
    3323:3353:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.ConstraintWidget$1 -> androidx.constraintlayout.core.widgets.ConstraintWidget$1:
    1322:2873:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    411:411:androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.core.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.core.widgets.ConstraintWidgetContainer:
    646:646:void <clinit>() -> <clinit>
    48:518:void <init>() -> <init>
    48:518:void <init>(int,int,int,int) -> <init>
    48:518:void <init>(int,int) -> <init>
    48:518:void <init>(java.lang.String,int,int) -> <init>
    1059:1065:void addChain(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> addChain
    335:447:boolean addChildrenToSolver(androidx.constraintlayout.core.LinearSystem) -> addChildrenToSolver
    1074:1080:void addHorizontalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addHorizontalChain
    302:306:void addHorizontalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMaxVariable
    288:292:void addHorizontalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addHorizontalWrapMinVariable
    315:318:void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMaxWrap
    309:312:void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable) -> addMinWrap
    1089:1095:void addVerticalChain(androidx.constraintlayout.core.widgets.ConstraintWidget) -> addVerticalChain
    295:299:void addVerticalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMaxVariable
    281:285:void addVerticalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> addVerticalWrapMinVariable
    100:101:void defineTerminalWidgets() -> defineTerminalWidgets
    73:73:boolean directMeasure(boolean) -> directMeasure
    92:92:boolean directMeasureSetup(boolean) -> directMeasureSetup
    96:96:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    143:145:void fillMetrics(androidx.constraintlayout.core.Metrics) -> fillMetrics
    1023:1033:java.util.ArrayList getHorizontalGuidelines() -> getHorizontalGuidelines
    136:136:androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    225:225:int getOptimizationLevel() -> getOptimizationLevel
    1037:1037:androidx.constraintlayout.core.LinearSystem getSystem() -> getSystem
    245:245:java.lang.String getType() -> getType
    1004:1014:java.util.ArrayList getVerticalGuidelines() -> getVerticalGuidelines
    991:991:boolean handlesInternalConstraints() -> handlesInternalConstraints
    61:62:void invalidateGraph() -> invalidateGraph
    68:69:void invalidateMeasures() -> invalidateMeasures
    270:270:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    511:511:boolean isRtl() -> isRtl
    263:263:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    660:983:void layout() -> layout
    118:120:long measure(int,int,int,int,int,int,int,int,int) -> measure
    524:643:boolean measure(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure,int) -> measure
    235:235:boolean optimizeFor(int) -> optimizeFor
    250:257:void reset() -> reset
    1048:1050:void resetChains() -> resetChains
    131:133:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    215:217:void setOptimizationLevel(int) -> setOptimizationLevel
    490:494:void setPadding(int,int,int,int) -> setPadding
    1102:1103:void setPass(int) -> setPass
    502:503:void setRtl(boolean) -> setRtl
    456:468:boolean updateChildrenFromSolver(androidx.constraintlayout.core.LinearSystem,boolean[]) -> updateChildrenFromSolver
    473:479:void updateFromRuns(boolean,boolean) -> updateFromRuns
    125:126:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.core.widgets.Flow -> androidx.constraintlayout.core.widgets.Flow:
    32:80:void <init>() -> <init>
    32:32:int access$000(androidx.constraintlayout.core.widgets.Flow) -> access$000
    32:32:int access$100(androidx.constraintlayout.core.widgets.Flow) -> access$100
    32:32:int access$1000(androidx.constraintlayout.core.widgets.Flow) -> access$1000
    32:32:float access$1100(androidx.constraintlayout.core.widgets.Flow) -> access$1100
    32:32:int access$1200(androidx.constraintlayout.core.widgets.Flow) -> access$1200
    32:32:float access$1300(androidx.constraintlayout.core.widgets.Flow) -> access$1300
    32:32:float access$1400(androidx.constraintlayout.core.widgets.Flow) -> access$1400
    32:32:int access$1500(androidx.constraintlayout.core.widgets.Flow) -> access$1500
    32:32:float access$1600(androidx.constraintlayout.core.widgets.Flow) -> access$1600
    32:32:int access$1700(androidx.constraintlayout.core.widgets.Flow) -> access$1700
    32:32:float access$1800(androidx.constraintlayout.core.widgets.Flow) -> access$1800
    32:32:int access$1900(androidx.constraintlayout.core.widgets.Flow) -> access$1900
    32:32:int access$200(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$200
    32:32:int access$300(androidx.constraintlayout.core.widgets.Flow,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> access$300
    32:32:int access$400(androidx.constraintlayout.core.widgets.Flow) -> access$400
    32:32:androidx.constraintlayout.core.widgets.ConstraintWidget[] access$500(androidx.constraintlayout.core.widgets.Flow) -> access$500
    32:32:int access$600(androidx.constraintlayout.core.widgets.Flow) -> access$600
    32:32:int access$700(androidx.constraintlayout.core.widgets.Flow) -> access$700
    32:32:int access$800(androidx.constraintlayout.core.widgets.Flow) -> access$800
    32:32:float access$900(androidx.constraintlayout.core.widgets.Flow) -> access$900
    1220:1243:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    85:112:void copy(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashMap) -> copy
    1121:1206:void createAlignedConstraints(boolean) -> createAlignedConstraints
    200:219:int getWidgetHeight(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetHeight
    177:196:int getWidgetWidth(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> getWidgetWidth
    227:327:void measure(int,int,int,int) -> measure
    967:1118:void measureAligned(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureAligned
    778:916:void measureChainWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureChainWrap
    931:952:void measureNoWrap(androidx.constraintlayout.core.widgets.ConstraintWidget[],int,int,int,int[]) -> measureNoWrap
    146:146:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    122:122:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    148:148:void setFirstVerticalBias(float) -> setFirstVerticalBias
    124:124:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    155:156:void setHorizontalAlign(int) -> setHorizontalAlign
    139:140:void setHorizontalBias(float) -> setHorizontalBias
    166:166:void setHorizontalGap(int) -> setHorizontalGap
    131:132:void setHorizontalStyle(int) -> setHorizontalStyle
    150:150:void setLastHorizontalBias(float) -> setLastHorizontalBias
    126:126:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    152:152:void setLastVerticalBias(float) -> setLastVerticalBias
    128:128:void setLastVerticalStyle(int) -> setLastVerticalStyle
    170:170:void setMaxElementsWrap(int) -> setMaxElementsWrap
    119:120:void setOrientation(int) -> setOrientation
    159:160:void setVerticalAlign(int) -> setVerticalAlign
    143:144:void setVerticalBias(float) -> setVerticalBias
    168:168:void setVerticalGap(int) -> setVerticalGap
    135:136:void setVerticalStyle(int) -> setVerticalStyle
    163:164:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.core.widgets.Flow$WidgetsList -> androidx.constraintlayout.core.widgets.Flow$WidgetsList:
    334:366:void <init>(androidx.constraintlayout.core.widgets.Flow,int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> <init>
    333:333:androidx.constraintlayout.core.widgets.ConstraintWidget access$2000(androidx.constraintlayout.core.widgets.Flow$WidgetsList) -> access$2000
    411:447:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    385:392:void clear() -> clear
    450:692:void createConstraints(boolean,int,boolean) -> createConstraints
    404:407:int getHeight() -> getHeight
    397:400:int getWidth() -> getWidth
    695:720:void measureMatchConstraints(int) -> measureMatchConstraints
    723:761:void recomputeDimensions() -> recomputeDimensions
    394:394:void setStartIndex(int) -> setStartIndex
    372:382:void setup(int,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int,int,int,int,int) -> setup
androidx.constraintlayout.core.widgets.Guideline -> androidx.constraintlayout.core.widgets.Guideline:
    37:53:void <init>() -> <init>
    215:269:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    67:67:boolean allowedInBarrier() -> allowedInBarrier
    57:63:void copy(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashMap) -> copy
    315:325:void cyclePosition() -> cyclePosition
    102:102:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor() -> getAnchor
    125:147:androidx.constraintlayout.core.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> getAnchor
    116:116:int getOrientation() -> getOrientation
    183:183:int getRelativeBegin() -> getRelativeBegin
    71:80:int getRelativeBehaviour() -> getRelativeBehaviour
    187:187:int getRelativeEnd() -> getRelativeEnd
    179:179:float getRelativePercent() -> getRelativePercent
    112:112:java.lang.String getType() -> getType
    299:304:void inferRelativeBeginPosition() -> inferRelativeBeginPosition
    307:312:void inferRelativeEndPosition() -> inferRelativeEndPosition
    291:296:void inferRelativePercentPosition() -> inferRelativePercentPosition
    328:328:boolean isPercent() -> isPercent
    199:199:boolean isResolvedHorizontally() -> isResolvedHorizontally
    203:203:boolean isResolvedVertically() -> isResolvedVertically
    194:196:void setFinalValue(int) -> setFinalValue
    163:168:void setGuideBegin(int) -> setGuideBegin
    171:176:void setGuideEnd(int) -> setGuideEnd
    151:152:void setGuidePercent(int) -> setGuidePercent
    155:160:void setGuidePercent(float) -> setGuidePercent
    120:121:void setMinimumPosition(int) -> setMinimumPosition
    84:99:void setOrientation(int) -> setOrientation
    273:288:void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> updateFromSolver
androidx.constraintlayout.core.widgets.Guideline$1 -> androidx.constraintlayout.core.widgets.Guideline$1:
    125:125:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.HelperWidget -> androidx.constraintlayout.core.widgets.HelperWidget:
    29:31:void <init>() -> <init>
    44:52:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    74:82:void addDependents(java.util.ArrayList,int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> addDependents
    56:63:void copy(androidx.constraintlayout.core.widgets.ConstraintWidget,java.util.HashMap) -> copy
    85:94:int findGroupInDependents(int) -> findGroupInDependents
    69:71:void removeAllIds() -> removeAllIds
    36:36:void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.core.widgets.Optimizer -> androidx.constraintlayout.core.widgets.Optimizer:
    52:52:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    65:97:void checkMatchParent(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.widgets.ConstraintWidget) -> checkMatchParent
    100:100:boolean enabled(int,int) -> enabled
androidx.constraintlayout.core.widgets.Placeholder -> androidx.constraintlayout.core.widgets.Placeholder:
    28:28:void <init>() -> <init>
    76:86:void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean) -> addToSolver
    31:72:void measure(int,int,int,int) -> measure
androidx.constraintlayout.core.widgets.Rectangle -> androidx.constraintlayout.core.widgets.Rectangle:
    21:21:void <init>() -> <init>
    46:46:boolean contains(int,int) -> contains
    50:50:int getCenterX() -> getCenterX
    51:51:int getCenterY() -> getCenterY
    28:32:void setBounds(int,int,int,int) -> setBounds
androidx.constraintlayout.core.widgets.VirtualLayout -> androidx.constraintlayout.core.widgets.VirtualLayout:
    28:204:void <init>() -> <init>
    74:83:void applyRtl(boolean) -> applyRtl
    132:138:void captureWidgets() -> captureWidgets
    225:231:boolean contains(java.util.HashSet) -> contains
    145:145:int getMeasuredHeight() -> getMeasuredHeight
    141:141:int getMeasuredWidth() -> getMeasuredWidth
    100:100:int getPaddingBottom() -> getPaddingBottom
    102:102:int getPaddingLeft() -> getPaddingLeft
    104:104:int getPaddingRight() -> getPaddingRight
    98:98:int getPaddingTop() -> getPaddingTop
    124:124:void measure(int,int,int,int) -> measure
    209:222:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    154:201:boolean measureChildren() -> measureChildren
    115:115:boolean needSolverPass() -> needSolverPass
    111:112:void needsCallbackFromSolver(boolean) -> needsCallbackFromSolver
    149:151:void setMeasure(int,int) -> setMeasure
    50:56:void setPadding(int) -> setPadding
    95:96:void setPaddingBottom(int) -> setPaddingBottom
    65:66:void setPaddingEnd(int) -> setPaddingEnd
    69:71:void setPaddingLeft(int) -> setPaddingLeft
    90:92:void setPaddingRight(int) -> setPaddingRight
    59:62:void setPaddingStart(int) -> setPaddingStart
    86:87:void setPaddingTop(int) -> setPaddingTop
    128:129:void updateConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.core.widgets.WidgetContainer -> androidx.constraintlayout.core.widgets.WidgetContainer:
    26:36:void <init>() -> <init>
    26:48:void <init>(int,int,int,int) -> <init>
    26:58:void <init>(int,int) -> <init>
    72:78:void add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    86:90:void add(androidx.constraintlayout.core.widgets.ConstraintWidget[]) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    117:130:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer getRootConstraintContainer() -> getRootConstraintContainer
    158:168:void layout() -> layout
    98:100:void remove(androidx.constraintlayout.core.widgets.ConstraintWidget) -> remove
    181:182:void removeAllChildren() -> removeAllChildren
    62:64:void reset() -> reset
    172:178:void resetSolverVariables(androidx.constraintlayout.core.Cache) -> resetSolverVariables
    146:152:void setOffset(int,int) -> setOffset
androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.BaselineDimensionDependency:
    22:23:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure:
    52:72:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    443:472:boolean measure(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> measure
    75:140:void measureChildren(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> measureChildren
    148:165:void solveLinearSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,java.lang.String,int,int,int) -> solveLinearSystem
    186:431:long solverMeasure(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    56:66:void updateHierarchy(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure:
    481:483:void <clinit>() -> <clinit>
    480:480:void <init>() -> <init>
androidx.constraintlayout.core.widgets.analyzer.ChainRun -> androidx.constraintlayout.core.widgets.analyzer.ChainRun:
    32:39:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int) -> <init>
    513:570:void apply() -> apply
    484:488:void applyToWidget() -> applyToWidget
    78:104:void build() -> build
    109:113:void clear() -> clear
    491:497:androidx.constraintlayout.core.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    501:507:androidx.constraintlayout.core.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    66:74:long getWrapDimension() -> getWrapDimension
    55:62:boolean supportsWrapComputation() -> supportsWrapComputation
    43:50:java.lang.String toString() -> toString
    123:481:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.core.widgets.analyzer.DependencyGraph:
    44:626:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> <init>
    710:756:void applyGroup(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.RunGroup) -> applyGroup
    388:561:boolean basicMeasureWidgets(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    630:640:void buildGraph() -> buildGraph
    643:696:void buildGraph(java.util.ArrayList) -> buildGraph
    65:72:int computeWrap(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrap
    82:101:void defineTerminalWidgets(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> defineTerminalWidgets
    110:229:boolean directMeasure(boolean) -> directMeasure
    233:264:boolean directMeasureSetup(boolean) -> directMeasureSetup
    268:361:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    759:785:void findGroup(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    616:617:void invalidateGraph() -> invalidateGraph
    623:624:void invalidateMeasures() -> invalidateMeasures
    376:385:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    565:610:void measureWidgets() -> measureWidgets
    61:62:void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.core.widgets.analyzer.DependencyNode -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode:
    23:41:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    100:104:void addDependency(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> addDependency
    119:125:void clear() -> clear
    107:115:java.lang.String name() -> name
    50:59:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:97:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.core.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.core.widgets.analyzer.DimensionDependency:
    24:30:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> <init>
    33:41:void resolve(int) -> resolve
androidx.constraintlayout.core.widgets.analyzer.Direct -> androidx.constraintlayout.core.widgets.analyzer.Direct:
    46:50:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    763:799:boolean canMeasure(int,androidx.constraintlayout.core.widgets.ConstraintWidget) -> canMeasure
    310:429:void horizontalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,boolean) -> horizontalSolvingPass
    293:298:java.lang.String ls(int) -> ls
    278:285:void solveBarrier(int,androidx.constraintlayout.core.widgets.Barrier,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,int,boolean) -> solveBarrier
    822:1021:boolean solveChain(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,int,int,androidx.constraintlayout.core.widgets.ChainHead,boolean,boolean,boolean) -> solveChain
    599:628:void solveHorizontalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalCenterConstraints
    682:711:void solveHorizontalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> solveHorizontalMatchConstraint
    640:669:void solveVerticalCenterConstraints(int,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalCenterConstraints
    723:752:void solveVerticalMatchConstraint(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.ConstraintWidget) -> solveVerticalMatchConstraint
    59:268:void solvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> solvingPass
    440:586:void verticalSolvingPass(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> verticalSolvingPass
androidx.constraintlayout.core.widgets.analyzer.Grouping -> androidx.constraintlayout.core.widgets.analyzer.Grouping:
    40:40:void <init>() -> <init>
    367:444:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findDependents(androidx.constraintlayout.core.widgets.ConstraintWidget,int,java.util.ArrayList,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> findDependents
    356:363:androidx.constraintlayout.core.widgets.analyzer.WidgetGroup findGroup(java.util.ArrayList,int) -> findGroup
    63:352:boolean simpleSolvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer) -> simpleSolvingPass
    48:55:boolean validInGroup(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour) -> validInGroup
androidx.constraintlayout.core.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.core.widgets.analyzer.GuidelineReference:
    25:29:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    48:50:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    69:108:void apply() -> apply
    112:118:void applyToWidget() -> applyToWidget
    33:34:void clear() -> clear
    44:44:boolean supportsWrapComputation() -> supportsWrapComputation
    54:65:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HelperReferences -> androidx.constraintlayout.core.widgets.analyzer.HelperReferences:
    24:25:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    44:46:void addDependency(androidx.constraintlayout.core.widgets.analyzer.DependencyNode) -> addDependency
    50:118:void apply() -> apply
    144:154:void applyToWidget() -> applyToWidget
    29:31:void clear() -> clear
    40:40:boolean supportsWrapComputation() -> supportsWrapComputation
    122:141:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:44:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    83:274:void apply() -> apply
    561:564:void applyToWidget() -> applyToWidget
    53:58:void clear() -> clear
    277:308:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:68:void reset() -> reset
    72:78:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    312:558:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun$1:
    312:312:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.RunGroup -> androidx.constraintlayout.core.widgets.analyzer.RunGroup:
    33:49:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int) -> <init>
    52:54:void add(androidx.constraintlayout.core.widgets.analyzer.WidgetRun) -> add
    121:182:long computeWrapSize(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    186:231:boolean defineTerminalWidget(androidx.constraintlayout.core.widgets.analyzer.WidgetRun,int) -> defineTerminalWidget
    236:242:void defineTerminalWidgets(boolean,boolean) -> defineTerminalWidgets
    89:117:long traverseEnd(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:85:long traverseStart(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun:
    34:43:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    203:429:void apply() -> apply
    432:435:void applyToWidget() -> applyToWidget
    52:58:void clear() -> clear
    62:70:void reset() -> reset
    74:80:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:199:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun$1:
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup:
    36:36:void <clinit>() -> <clinit>
    35:46:void <init>(int) -> <init>
    52:56:boolean add(androidx.constraintlayout.core.widgets.ConstraintWidget) -> add
    179:189:void apply() -> apply
    210:223:void cleanup(java.util.ArrayList) -> cleanup
    99:100:void clear() -> clear
    202:202:boolean contains(androidx.constraintlayout.core.widgets.ConstraintWidget) -> contains
    49:49:int getId() -> getId
    48:48:int getOrientation() -> getOrientation
    63:70:java.lang.String getOrientationString() -> getOrientationString
    192:198:boolean intersectWith(androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> intersectWith
    60:60:boolean isAuthoritative() -> isAuthoritative
    103:115:int measureWrap(int,androidx.constraintlayout.core.widgets.ConstraintWidget) -> measureWrap
    119:124:int measureWrap(androidx.constraintlayout.core.LinearSystem,int) -> measureWrap
    87:96:void moveTo(int,androidx.constraintlayout.core.widgets.analyzer.WidgetGroup) -> moveTo
    59:59:void setAuthoritative(boolean) -> setAuthoritative
    175:176:void setOrientation(int) -> setOrientation
    206:206:int size() -> size
    128:170:int solverMeasure(androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int) -> solverMeasure
    75:80:java.lang.String toString() -> toString
androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult -> androidx.constraintlayout.core.widgets.analyzer.WidgetGroup$MeasureResult:
    235:243:void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetGroup,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.LinearSystem,int) -> <init>
    246:250:void apply() -> apply
androidx.constraintlayout.core.widgets.analyzer.WidgetRun -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun:
    34:45:void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget) -> <init>
    283:286:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int) -> addTarget
    289:295:void addTarget(androidx.constraintlayout.core.widgets.analyzer.DependencyNode,androidx.constraintlayout.core.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.core.widgets.analyzer.DimensionDependency) -> addTarget
    235:256:int getLimitedDimension(int,int) -> getLimitedDimension
    95:124:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor) -> getTarget
    260:279:androidx.constraintlayout.core.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> getTarget
    298:301:long getWrapDimension() -> getWrapDimension
    59:74:boolean isCenterConnection() -> isCenterConnection
    55:55:boolean isDimensionResolved() -> isDimensionResolved
    304:304:boolean isResolved() -> isResolved
    172:222:void resolveDimension(int,int) -> resolveDimension
    232:232:void update(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> update
    128:169:void updateRunCenter(androidx.constraintlayout.core.widgets.analyzer.Dependency,androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.widgets.ConstraintAnchor,int) -> updateRunCenter
    230:230:void updateRunEnd(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> updateRunEnd
    226:226:void updateRunStart(androidx.constraintlayout.core.widgets.analyzer.Dependency) -> updateRunStart
    78:91:long wrapSize(int) -> wrapSize
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType:
    306:306:void <clinit>() -> <clinit>
    306:306:void <init>(java.lang.String,int) -> <init>
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    306:306:androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.helper.widget.-$$Lambda$Carousel$NfsCQvYOy-dIR2JH7qqFadhs0gY -> androidx.constraintlayout.helper.widget.-$$Lambda$Carousel$NfsCQvYOy-dIR2JH7qqFadhs0gY:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.helper.widget.Carousel -> androidx.constraintlayout.helper.widget.Carousel:
    42:266:void <init>(android.content.Context) -> <init>
    42:266:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:266:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    39:39:androidx.constraintlayout.motion.widget.MotionLayout access$000(androidx.constraintlayout.helper.widget.Carousel) -> access$000
    39:39:void access$100(androidx.constraintlayout.helper.widget.Carousel) -> access$100
    39:39:int access$200(androidx.constraintlayout.helper.widget.Carousel) -> access$200
    39:39:androidx.constraintlayout.helper.widget.Carousel$Adapter access$300(androidx.constraintlayout.helper.widget.Carousel) -> access$300
    39:39:int access$400(androidx.constraintlayout.helper.widget.Carousel) -> access$400
    39:39:float access$500(androidx.constraintlayout.helper.widget.Carousel) -> access$500
    39:39:float access$600(androidx.constraintlayout.helper.widget.Carousel) -> access$600
    39:39:int access$700(androidx.constraintlayout.helper.widget.Carousel) -> access$700
    249:263:boolean enableTransition(int,boolean) -> enableTransition
    146:149:int getCount() -> getCount
    158:158:int getCurrentIndex() -> getCurrentIndex
    105:134:void init(android.content.Context,android.util.AttributeSet) -> init
    184:186:void jumpToIndex(int) -> jumpToIndex
    423:429:void lambda$updateItems$0() -> lambda$updateItems$0
    296:324:void onAttachedToWindow() -> onAttachedToWindow
    207:208:void onTransitionChange(androidx.constraintlayout.motion.widget.MotionLayout,int,int,float) -> onTransitionChange
    214:239:void onTransitionCompleted(androidx.constraintlayout.motion.widget.MotionLayout,int) -> onTransitionCompleted
    189:200:void refresh() -> refresh
    137:138:void setAdapter(androidx.constraintlayout.helper.widget.Carousel$Adapter) -> setAdapter
    168:176:void transitionToIndex(int,int) -> transitionToIndex
    364:456:void updateItems() -> updateItems
    334:342:boolean updateViewVisibility(android.view.View,int) -> updateViewVisibility
    346:360:boolean updateViewVisibility(int,android.view.View,int) -> updateViewVisibility
androidx.constraintlayout.helper.widget.Carousel$1 -> androidx.constraintlayout.helper.widget.Carousel$1:
    266:266:void <init>(androidx.constraintlayout.helper.widget.Carousel) -> <init>
    269:290:void run() -> run
androidx.constraintlayout.helper.widget.Carousel$1$1 -> androidx.constraintlayout.helper.widget.Carousel$1$1:
# {"id":"sourceFile","fileName":"Carousel.java"}
    283:283:void <init>(androidx.constraintlayout.helper.widget.Carousel$1,float) -> <init>
    286:287:void run() -> run
androidx.constraintlayout.helper.widget.CircularFlow -> androidx.constraintlayout.helper.widget.CircularFlow:
    67:68:void <clinit>() -> <clinit>
    111:112:void <init>(android.content.Context) -> <init>
    115:116:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    119:120:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    428:443:void addAngle(java.lang.String) -> addAngle
    449:465:void addRadius(java.lang.String) -> addRadius
    235:246:void addViewToCircularFlow(android.view.View,int,float) -> addViewToCircularFlow
    182:223:void anchorReferences() -> anchorReferences
    128:128:float[] getAngles() -> getAngles
    123:123:int[] getRadius() -> getRadius
    134:159:void init(android.util.AttributeSet) -> init
    492:496:boolean isUpdatable(android.view.View) -> isUpdatable
    163:179:void onAttachedToWindow() -> onAttachedToWindow
    362:368:float[] removeAngle(float[],int) -> removeAngle
    468:476:int[] removeElementFromArray(int[],int) -> removeElementFromArray
    480:488:float[] removeElementFromArray(float[],int) -> removeElementFromArray
    375:381:int[] removeRadius(int[],int) -> removeRadius
    337:355:int removeView(android.view.View) -> removeView
    388:402:void setAngles(java.lang.String) -> setAngles
    322:323:void setDefaultAngle(float) -> setDefaultAngle
    332:333:void setDefaultRadius(int) -> setDefaultRadius
    408:422:void setRadius(java.lang.String) -> setRadius
    277:288:void updateAngle(android.view.View,float) -> updateAngle
    256:267:void updateRadius(android.view.View,int) -> updateRadius
    299:313:void updateReference(android.view.View,int,float) -> updateReference
androidx.constraintlayout.helper.widget.Flow -> androidx.constraintlayout.helper.widget.Flow:
    123:124:void <init>(android.content.Context) -> <init>
    127:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:132:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    198:268:void init(android.util.AttributeSet) -> init
    182:189:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.core.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    148:149:void onMeasure(int,int) -> onMeasure
    160:170:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    142:143:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    454:456:void setFirstHorizontalBias(float) -> setFirstHorizontalBias
    434:436:void setFirstHorizontalStyle(int) -> setFirstHorizontalStyle
    464:466:void setFirstVerticalBias(float) -> setFirstVerticalBias
    444:446:void setFirstVerticalStyle(int) -> setFirstVerticalStyle
    479:481:void setHorizontalAlign(int) -> setHorizontalAlign
    414:416:void setHorizontalBias(float) -> setHorizontalBias
    505:507:void setHorizontalGap(int) -> setHorizontalGap
    390:392:void setHorizontalStyle(int) -> setHorizontalStyle
    353:355:void setLastHorizontalBias(float) -> setLastHorizontalBias
    335:337:void setLastHorizontalStyle(int) -> setLastHorizontalStyle
    362:364:void setLastVerticalBias(float) -> setLastVerticalBias
    344:346:void setLastVerticalStyle(int) -> setLastVerticalStyle
    525:527:void setMaxElementsWrap(int) -> setMaxElementsWrap
    276:278:void setOrientation(int) -> setOrientation
    286:288:void setPadding(int) -> setPadding
    326:328:void setPaddingBottom(int) -> setPaddingBottom
    296:298:void setPaddingLeft(int) -> setPaddingLeft
    316:318:void setPaddingRight(int) -> setPaddingRight
    306:308:void setPaddingTop(int) -> setPaddingTop
    495:497:void setVerticalAlign(int) -> setVerticalAlign
    424:426:void setVerticalBias(float) -> setVerticalBias
    515:517:void setVerticalGap(int) -> setVerticalGap
    404:406:void setVerticalStyle(int) -> setVerticalStyle
    376:378:void setWrapMode(int) -> setWrapMode
androidx.constraintlayout.helper.widget.Layer -> androidx.constraintlayout.helper.widget.Layer:
    37:60:void <init>(android.content.Context) -> <init>
    37:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    360:361:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    270:316:void calcCenters() -> calcCenters
    75:90:void init(android.util.AttributeSet) -> init
    94:118:void onAttachedToWindow() -> onAttachedToWindow
    253:267:void reCacheViews() -> reCacheViews
    225:227:void setElevation(float) -> setElevation
    176:178:void setPivotX(float) -> setPivotX
    187:189:void setPivotY(float) -> setPivotY
    144:146:void setRotation(float) -> setRotation
    154:156:void setScaleX(float) -> setScaleX
    165:167:void setScaleY(float) -> setScaleY
    197:200:void setTranslationX(float) -> setTranslationX
    207:209:void setTranslationY(float) -> setTranslationY
    216:218:void setVisibility(int) -> setVisibility
    319:352:void transform() -> transform
    235:250:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    126:135:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
androidx.constraintlayout.helper.widget.MotionEffect -> androidx.constraintlayout.helper.widget.MotionEffect:
    60:73:void <init>(android.content.Context) -> <init>
    60:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:120:void init(android.content.Context,android.util.AttributeSet) -> init
    124:124:boolean isDecorator() -> isDecorator
    129:254:void onPreSetup(androidx.constraintlayout.motion.widget.MotionLayout,java.util.HashMap) -> onPreSetup
androidx.constraintlayout.helper.widget.MotionPlaceholder -> androidx.constraintlayout.helper.widget.MotionPlaceholder:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    78:81:void init(android.util.AttributeSet) -> init
    52:53:void onMeasure(int,int) -> onMeasure
    57:67:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    74:74:void updatePreLayout(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.Helper,android.util.SparseArray) -> updatePreLayout
androidx.constraintlayout.motion.utils.StopLogic -> androidx.constraintlayout.motion.utils.StopLogic:
    32:35:void <init>() -> <init>
    54:56:void config(float,float,float,float,float,float) -> config
    46:46:java.lang.String debug(java.lang.String,float) -> debug
    87:87:float getInterpolation(float) -> getInterpolation
    50:50:float getVelocity(float) -> getVelocity
    92:92:float getVelocity() -> getVelocity
    96:96:boolean isStopped() -> isStopped
    78:83:void springConfig(float,float,float,float,float,float,float,int) -> springConfig
androidx.constraintlayout.motion.utils.ViewOscillator -> androidx.constraintlayout.motion.utils.ViewOscillator:
    36:36:void <init>() -> <init>
    42:75:androidx.constraintlayout.motion.utils.ViewOscillator makeSpline(java.lang.String) -> makeSpline
androidx.constraintlayout.motion.utils.ViewOscillator$AlphaSet -> androidx.constraintlayout.motion.utils.ViewOscillator$AlphaSet:
    88:88:void <init>() -> <init>
    91:92:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$CustomSet -> androidx.constraintlayout.motion.utils.ViewOscillator$CustomSet:
    163:164:void <init>() -> <init>
    168:169:void setCustom(java.lang.Object) -> setCustom
    173:175:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$ElevationSet -> androidx.constraintlayout.motion.utils.ViewOscillator$ElevationSet:
    79:79:void <init>() -> <init>
    82:85:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet -> androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet:
    116:116:void <init>() -> <init>
    122:123:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    119:119:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$ProgressSet -> androidx.constraintlayout.motion.utils.ViewOscillator$ProgressSet:
    178:179:void <init>() -> <init>
    183:205:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$RotationSet -> androidx.constraintlayout.motion.utils.ViewOscillator$RotationSet:
    95:95:void <init>() -> <init>
    98:99:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$RotationXset -> androidx.constraintlayout.motion.utils.ViewOscillator$RotationXset:
    102:102:void <init>() -> <init>
    105:106:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$RotationYset -> androidx.constraintlayout.motion.utils.ViewOscillator$RotationYset:
    109:109:void <init>() -> <init>
    112:113:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$ScaleXset -> androidx.constraintlayout.motion.utils.ViewOscillator$ScaleXset:
    126:126:void <init>() -> <init>
    129:130:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$ScaleYset -> androidx.constraintlayout.motion.utils.ViewOscillator$ScaleYset:
    133:133:void <init>() -> <init>
    136:137:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$TranslationXset -> androidx.constraintlayout.motion.utils.ViewOscillator$TranslationXset:
    140:140:void <init>() -> <init>
    143:144:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$TranslationYset -> androidx.constraintlayout.motion.utils.ViewOscillator$TranslationYset:
    147:147:void <init>() -> <init>
    150:151:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewOscillator$TranslationZset -> androidx.constraintlayout.motion.utils.ViewOscillator$TranslationZset:
    154:154:void <init>() -> <init>
    157:160:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline -> androidx.constraintlayout.motion.utils.ViewSpline:
    32:32:void <init>() -> <init>
    38:38:androidx.constraintlayout.motion.utils.ViewSpline makeCustomSpline(java.lang.String,android.util.SparseArray) -> makeCustomSpline
    42:77:androidx.constraintlayout.motion.utils.ViewSpline makeSpline(java.lang.String) -> makeSpline
androidx.constraintlayout.motion.utils.ViewSpline$AlphaSet -> androidx.constraintlayout.motion.utils.ViewSpline$AlphaSet:
    91:91:void <init>() -> <init>
    94:95:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$CustomSet -> androidx.constraintlayout.motion.utils.ViewSpline$CustomSet:
    185:188:void <init>(java.lang.String,android.util.SparseArray) -> <init>
    212:212:void setPoint(int,float) -> setPoint
    216:217:void setPoint(int,androidx.constraintlayout.widget.ConstraintAttribute) -> setPoint
    221:223:void setProperty(android.view.View,float) -> setProperty
    191:209:void setup(int) -> setup
androidx.constraintlayout.motion.utils.ViewSpline$ElevationSet -> androidx.constraintlayout.motion.utils.ViewSpline$ElevationSet:
    82:82:void <init>() -> <init>
    85:88:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$PathRotate -> androidx.constraintlayout.motion.utils.ViewSpline$PathRotate:
    133:133:void <init>() -> <init>
    139:140:void setPathRotate(android.view.View,float,double,double) -> setPathRotate
    136:136:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$PivotXset -> androidx.constraintlayout.motion.utils.ViewSpline$PivotXset:
    119:119:void <init>() -> <init>
    122:123:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$PivotYset -> androidx.constraintlayout.motion.utils.ViewSpline$PivotYset:
    126:126:void <init>() -> <init>
    129:130:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$ProgressSet -> androidx.constraintlayout.motion.utils.ViewSpline$ProgressSet:
    226:227:void <init>() -> <init>
    231:254:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$RotationSet -> androidx.constraintlayout.motion.utils.ViewSpline$RotationSet:
    98:98:void <init>() -> <init>
    101:102:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$RotationXset -> androidx.constraintlayout.motion.utils.ViewSpline$RotationXset:
    105:105:void <init>() -> <init>
    108:109:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$RotationYset -> androidx.constraintlayout.motion.utils.ViewSpline$RotationYset:
    112:112:void <init>() -> <init>
    115:116:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$ScaleXset -> androidx.constraintlayout.motion.utils.ViewSpline$ScaleXset:
    143:143:void <init>() -> <init>
    146:147:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$ScaleYset -> androidx.constraintlayout.motion.utils.ViewSpline$ScaleYset:
    150:150:void <init>() -> <init>
    153:154:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$TranslationXset -> androidx.constraintlayout.motion.utils.ViewSpline$TranslationXset:
    157:157:void <init>() -> <init>
    160:161:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$TranslationYset -> androidx.constraintlayout.motion.utils.ViewSpline$TranslationYset:
    164:164:void <init>() -> <init>
    167:168:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewSpline$TranslationZset -> androidx.constraintlayout.motion.utils.ViewSpline$TranslationZset:
    171:171:void <init>() -> <init>
    174:177:void setProperty(android.view.View,float) -> setProperty
androidx.constraintlayout.motion.utils.ViewState -> androidx.constraintlayout.motion.utils.ViewState:
    23:23:void <init>() -> <init>
    28:33:void getState(android.view.View) -> getState
    40:40:int height() -> height
    36:36:int width() -> width
androidx.constraintlayout.motion.utils.ViewTimeCycle -> androidx.constraintlayout.motion.utils.ViewTimeCycle:
    38:38:void <init>() -> <init>
    44:65:float get(float,long,android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache) -> get
    69:69:androidx.constraintlayout.motion.utils.ViewTimeCycle makeCustomSpline(java.lang.String,android.util.SparseArray) -> makeCustomSpline
    74:115:androidx.constraintlayout.motion.utils.ViewTimeCycle makeSpline(java.lang.String,long) -> makeSpline
androidx.constraintlayout.motion.utils.ViewTimeCycle$AlphaSet -> androidx.constraintlayout.motion.utils.ViewTimeCycle$AlphaSet:
    128:128:void <init>() -> <init>
    131:132:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet -> androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet:
    217:224:void <init>(java.lang.String,android.util.SparseArray) -> <init>
    249:249:void setPoint(int,float,float,int,float) -> setPoint
    253:256:void setPoint(int,androidx.constraintlayout.widget.ConstraintAttribute,float,int,float) -> setPoint
    260:284:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
    227:246:void setup(int) -> setup
androidx.constraintlayout.motion.utils.ViewTimeCycle$ElevationSet -> androidx.constraintlayout.motion.utils.ViewTimeCycle$ElevationSet:
    118:118:void <init>() -> <init>
    121:124:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate -> androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate:
    160:160:void <init>() -> <init>
    167:168:boolean setPathRotate(android.view.View,androidx.constraintlayout.core.motion.utils.KeyCache,float,long,double,double) -> setPathRotate
    163:163:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$ProgressSet -> androidx.constraintlayout.motion.utils.ViewTimeCycle$ProgressSet:
    288:289:void <init>() -> <init>
    293:315:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationSet -> androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationSet:
    136:136:void <init>() -> <init>
    139:140:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationXset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationXset:
    144:144:void <init>() -> <init>
    147:148:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationYset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$RotationYset:
    152:152:void <init>() -> <init>
    155:156:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$ScaleXset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$ScaleXset:
    172:172:void <init>() -> <init>
    175:176:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$ScaleYset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$ScaleYset:
    180:180:void <init>() -> <init>
    183:184:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationXset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationXset:
    188:188:void <init>() -> <init>
    191:192:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationYset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationYset:
    196:196:void <init>() -> <init>
    199:200:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationZset -> androidx.constraintlayout.motion.utils.ViewTimeCycle$TranslationZset:
    204:204:void <init>() -> <init>
    207:210:boolean setProperty(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> setProperty
androidx.constraintlayout.motion.widget.-$$Lambda$ViewTransition$R5MnrVoAl7eqn8MpswIds-XSqNs -> androidx.constraintlayout.motion.widget.-$$Lambda$ViewTransition$R5MnrVoAl7eqn8MpswIds-XSqNs:
# {"id":"sourceFile","fileName":"lambda"}
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    37:37:void <init>() -> <init>
    282:312:void dumpLayoutParams(android.view.ViewGroup,java.lang.String) -> dumpLayoutParams
    315:344:void dumpLayoutParams(android.view.ViewGroup$LayoutParams,java.lang.String) -> dumpLayoutParams
    95:128:void dumpPoc(java.lang.Object) -> dumpPoc
    226:239:java.lang.String getActionType(android.view.MotionEvent) -> getActionType
    277:278:java.lang.String getCallFrom(int) -> getCallFrom
    257:258:java.lang.String getLoc() -> getLoc
    248:249:java.lang.String getLocation() -> getLocation
    267:268:java.lang.String getLocation2() -> getLocation2
    87:90:java.lang.String getName(android.view.View) -> getName
    139:145:java.lang.String getName(android.content.Context,int) -> getName
    159:175:java.lang.String getName(android.content.Context,int[]) -> getName
    186:186:java.lang.String getState(androidx.constraintlayout.motion.widget.MotionLayout,int) -> getState
    198:216:java.lang.String getState(androidx.constraintlayout.motion.widget.MotionLayout,int,int) -> getState
    48:57:void logStack(java.lang.String,java.lang.String,int) -> logStack
    67:76:void printStack(java.lang.String,int) -> printStack
androidx.constraintlayout.motion.widget.DesignTool -> androidx.constraintlayout.motion.widget.DesignTool:
    86:116:void <clinit>() -> <clinit>
    77:84:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    132:144:void Connect(int,androidx.constraintlayout.widget.ConstraintSet,android.view.View,java.util.HashMap,int,int) -> Connect
    119:128:int GetPxFromDp(int,java.lang.String) -> GetPxFromDp
    181:189:void SetAbsolutePositions(int,androidx.constraintlayout.widget.ConstraintSet,android.view.View,java.util.HashMap) -> SetAbsolutePositions
    147:159:void SetBias(androidx.constraintlayout.widget.ConstraintSet,android.view.View,java.util.HashMap,int) -> SetBias
    162:178:void SetDimensions(int,androidx.constraintlayout.widget.ConstraintSet,android.view.View,java.util.HashMap,int) -> SetDimensions
    567:612:int designAccess(int,java.lang.String,java.lang.Object,float[],int,float[],int) -> designAccess
    410:411:void disableAutoTransition(boolean) -> disableAutoTransition
    725:735:void dumpConstraintSet(java.lang.String) -> dumpConstraintSet
    241:253:int getAnimationKeyFrames(java.lang.Object,float[]) -> getAnimationKeyFrames
    199:209:int getAnimationPath(java.lang.Object,float[],int) -> getAnimationPath
    219:231:void getAnimationRectangles(java.lang.Object,float[]) -> getAnimationRectangles
    335:345:java.lang.String getEndState() -> getEndState
    447:451:int getKeyFrameInfo(java.lang.Object,int,int[]) -> getKeyFrameInfo
    462:471:float getKeyFramePosition(java.lang.Object,int,float,float) -> getKeyFramePosition
    432:436:int getKeyFramePositions(java.lang.Object,int[],float[]) -> getKeyFramePositions
    618:621:java.lang.Object getKeyframe(int,int,int) -> getKeyframe
    657:661:java.lang.Object getKeyframe(java.lang.Object,int,int) -> getKeyframe
    625:641:java.lang.Object getKeyframeAtLocation(java.lang.Object,float,float) -> getKeyframeAtLocation
    645:653:java.lang.Boolean getPositionKeyframe(java.lang.Object,java.lang.Object,float,float,java.lang.String[],float[]) -> getPositionKeyframe
    354:354:float getProgress() -> getProgress
    321:331:java.lang.String getStartState() -> getStartState
    363:372:java.lang.String getState() -> getState
    419:419:long getTransitionTimeMs() -> getTransitionTimeMs
    381:381:boolean isInTransition() -> isInTransition
    682:722:void setAttributes(int,java.lang.String,java.lang.Object,java.lang.Object) -> setAttributes
    485:492:void setKeyFrame(java.lang.Object,int,java.lang.String,java.lang.Object) -> setKeyFrame
    506:525:boolean setKeyFramePosition(java.lang.Object,int,int,float,float) -> setKeyFramePosition
    665:671:void setKeyframe(java.lang.Object,java.lang.String,java.lang.Object) -> setKeyframe
    276:318:void setState(java.lang.String) -> setState
    261:268:void setToolPosition(float) -> setToolPosition
    391:403:void setTransition(java.lang.String,java.lang.String) -> setTransition
    534:543:void setViewDebug(java.lang.Object,int) -> setViewDebug
androidx.constraintlayout.motion.widget.Key -> androidx.constraintlayout.motion.widget.Key:
    36:36:void <clinit>() -> <clinit>
    35:39:void <init>() -> <init>
    35:35:java.lang.Object clone() -> clone
    138:143:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    168:168:int getFramePosition() -> getFramePosition
    73:74:boolean matches(java.lang.String) -> matches
    159:160:void setFramePosition(int) -> setFramePosition
    135:135:void setInterpolation(java.util.HashMap) -> setInterpolation
    149:150:androidx.constraintlayout.motion.widget.Key setViewId(int) -> setViewId
    125:125:boolean toBoolean(java.lang.Object) -> toBoolean
    103:103:float toFloat(java.lang.Object) -> toFloat
    114:114:int toInt(java.lang.Object) -> toInt
androidx.constraintlayout.motion.widget.KeyAttributes -> androidx.constraintlayout.motion.widget.KeyAttributes:
    43:69:void <init>() -> <init>
    43:43:float access$000(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$000
    43:43:float access$002(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$002
    43:43:float access$100(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$100
    43:43:float access$1000(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1000
    43:43:float access$1002(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1002
    43:43:float access$102(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$102
    43:43:float access$1100(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1100
    43:43:float access$1102(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1102
    43:43:float access$1200(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1200
    43:43:float access$1202(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1202
    43:43:float access$1300(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1300
    43:43:float access$1302(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1302
    43:43:float access$1400(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1400
    43:43:float access$1402(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1402
    43:43:float access$1500(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$1500
    43:43:float access$1502(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$1502
    43:43:float access$200(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$200
    43:43:float access$202(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$202
    43:43:int access$300(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$300
    43:43:int access$302(androidx.constraintlayout.motion.widget.KeyAttributes,int) -> access$302
    43:43:float access$400(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$400
    43:43:float access$402(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$402
    43:43:float access$500(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$500
    43:43:float access$502(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$502
    43:43:float access$600(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$600
    43:43:float access$602(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$602
    43:43:float access$700(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$700
    43:43:float access$702(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$702
    43:43:float access$800(androidx.constraintlayout.motion.widget.KeyAttributes) -> access$800
    43:43:float access$802(androidx.constraintlayout.motion.widget.KeyAttributes,float) -> access$802
    43:43:java.lang.String access$902(androidx.constraintlayout.motion.widget.KeyAttributes,java.lang.String) -> access$902
    194:284:void addValues(java.util.HashMap) -> addValues
    43:43:java.lang.Object clone() -> clone
    489:489:androidx.constraintlayout.motion.widget.Key clone() -> clone
    467:485:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    89:136:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    73:75:void load(android.content.Context,android.util.AttributeSet) -> load
    139:190:void setInterpolation(java.util.HashMap) -> setInterpolation
    288:341:void setValue(java.lang.String,java.lang.Object) -> setValue
androidx.constraintlayout.motion.widget.KeyAttributes$Loader -> androidx.constraintlayout.motion.widget.KeyAttributes$Loader:
    363:384:void <clinit>() -> <clinit>
    387:463:void read(androidx.constraintlayout.motion.widget.KeyAttributes,android.content.res.TypedArray) -> read
androidx.constraintlayout.motion.widget.KeyCycle -> androidx.constraintlayout.motion.widget.KeyCycle:
    42:82:void <init>() -> <init>
    42:42:float access$1000(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1000
    42:42:float access$1002(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1002
    42:42:java.lang.String access$102(androidx.constraintlayout.motion.widget.KeyCycle,java.lang.String) -> access$102
    42:42:float access$1100(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1100
    42:42:float access$1102(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1102
    42:42:float access$1200(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1200
    42:42:float access$1202(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1202
    42:42:float access$1300(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1300
    42:42:float access$1302(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1302
    42:42:float access$1400(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1400
    42:42:float access$1402(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1402
    42:42:float access$1500(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1500
    42:42:float access$1502(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1502
    42:42:float access$1600(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1600
    42:42:float access$1602(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1602
    42:42:float access$1700(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1700
    42:42:float access$1702(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1702
    42:42:float access$1800(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1800
    42:42:float access$1802(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1802
    42:42:float access$1900(androidx.constraintlayout.motion.widget.KeyCycle) -> access$1900
    42:42:float access$1902(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$1902
    42:42:int access$200(androidx.constraintlayout.motion.widget.KeyCycle) -> access$200
    42:42:float access$2000(androidx.constraintlayout.motion.widget.KeyCycle) -> access$2000
    42:42:float access$2002(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$2002
    42:42:int access$202(androidx.constraintlayout.motion.widget.KeyCycle,int) -> access$202
    42:42:java.lang.String access$302(androidx.constraintlayout.motion.widget.KeyCycle,java.lang.String) -> access$302
    42:42:int access$400(androidx.constraintlayout.motion.widget.KeyCycle) -> access$400
    42:42:int access$402(androidx.constraintlayout.motion.widget.KeyCycle,int) -> access$402
    42:42:float access$500(androidx.constraintlayout.motion.widget.KeyCycle) -> access$500
    42:42:float access$502(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$502
    42:42:float access$600(androidx.constraintlayout.motion.widget.KeyCycle) -> access$600
    42:42:float access$602(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$602
    42:42:int access$700(androidx.constraintlayout.motion.widget.KeyCycle) -> access$700
    42:42:int access$702(androidx.constraintlayout.motion.widget.KeyCycle,int) -> access$702
    42:42:float access$800(androidx.constraintlayout.motion.widget.KeyCycle) -> access$800
    42:42:float access$802(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$802
    42:42:float access$900(androidx.constraintlayout.motion.widget.KeyCycle) -> access$900
    42:42:float access$902(androidx.constraintlayout.motion.widget.KeyCycle,float) -> access$902
    132:160:void addCycleValues(java.util.HashMap) -> addCycleValues
    202:257:void addValues(java.util.HashMap) -> addValues
    42:42:java.lang.Object clone() -> clone
    498:498:androidx.constraintlayout.motion.widget.Key clone() -> clone
    472:494:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    91:129:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    163:196:float getValue(java.lang.String) -> getValue
    85:87:void load(android.content.Context,android.util.AttributeSet) -> load
    408:469:void setValue(java.lang.String,java.lang.Object) -> setValue
androidx.constraintlayout.motion.widget.KeyCycle$Loader -> androidx.constraintlayout.motion.widget.KeyCycle$Loader:
    281:305:void <clinit>() -> <clinit>
    259:259:void access$000(androidx.constraintlayout.motion.widget.KeyCycle,android.content.res.TypedArray) -> access$000
    308:403:void read(androidx.constraintlayout.motion.widget.KeyCycle,android.content.res.TypedArray) -> read
androidx.constraintlayout.motion.widget.KeyFrames -> androidx.constraintlayout.motion.widget.KeyFrames:
    45:59:void <clinit>() -> <clinit>
    44:72:void <init>() -> <init>
    44:123:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    130:134:void addAllFrames(androidx.constraintlayout.motion.widget.MotionController) -> addAllFrames
    137:153:void addFrames(androidx.constraintlayout.motion.widget.MotionController) -> addFrames
    62:69:void addKey(androidx.constraintlayout.motion.widget.Key) -> addKey
    164:164:java.util.ArrayList getKeyFramesForView(int) -> getKeyFramesForView
    160:160:java.util.Set getKeys() -> getKeys
androidx.constraintlayout.motion.widget.KeyPosition -> androidx.constraintlayout.motion.widget.KeyPosition:
    42:72:void <init>() -> <init>
    82:82:void addValues(java.util.HashMap) -> addValues
    125:133:void calcCartesianPosition(float,float,float,float) -> calcCartesianPosition
    115:121:void calcPathPosition(float,float,float,float) -> calcPathPosition
    90:101:void calcPosition(int,int,float,float,float,float) -> calcPosition
    107:111:void calcScreenPosition(int,int) -> calcScreenPosition
    42:42:java.lang.Object clone() -> clone
    399:399:androidx.constraintlayout.motion.widget.Key clone() -> clone
    382:395:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    247:252:boolean intersects(int,int,android.graphics.RectF,android.graphics.RectF,float,float) -> intersects
    76:78:void load(android.content.Context,android.util.AttributeSet) -> load
    147:158:void positionAttributes(android.view.View,android.graphics.RectF,android.graphics.RectF,float,float,java.lang.String[],float[]) -> positionAttributes
    223:243:void positionCartAttributes(android.graphics.RectF,android.graphics.RectF,float,float,java.lang.String[],float[]) -> positionCartAttributes
    164:193:void positionPathAttributes(android.graphics.RectF,android.graphics.RectF,float,float,java.lang.String[],float[]) -> positionPathAttributes
    196:220:void positionScreenAttributes(android.view.View,android.graphics.RectF,android.graphics.RectF,float,float,java.lang.String[],float[]) -> positionScreenAttributes
    85:86:void setType(int) -> setType
    356:379:void setValue(java.lang.String,java.lang.Object) -> setValue
androidx.constraintlayout.motion.widget.KeyPosition$Loader -> androidx.constraintlayout.motion.widget.KeyPosition$Loader:
    269:284:void <clinit>() -> <clinit>
    255:255:void access$000(androidx.constraintlayout.motion.widget.KeyPosition,android.content.res.TypedArray) -> access$000
    287:351:void read(androidx.constraintlayout.motion.widget.KeyPosition,android.content.res.TypedArray) -> read
androidx.constraintlayout.motion.widget.KeyPositionBase -> androidx.constraintlayout.motion.widget.KeyPositionBase:
    29:31:void <init>() -> <init>
    61:61:void getAttributeNames(java.util.HashSet) -> getAttributeNames
androidx.constraintlayout.motion.widget.KeyTimeCycle -> androidx.constraintlayout.motion.widget.KeyTimeCycle:
    42:79:void <init>() -> <init>
    42:42:float access$000(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$000
    42:42:float access$002(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$002
    42:42:float access$100(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$100
    42:42:float access$1000(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1000
    42:42:float access$1002(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1002
    42:42:float access$102(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$102
    42:42:java.lang.String access$1102(androidx.constraintlayout.motion.widget.KeyTimeCycle,java.lang.String) -> access$1102
    42:42:float access$1200(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1200
    42:42:float access$1202(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1202
    42:42:float access$1300(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1300
    42:42:float access$1302(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1302
    42:42:float access$1400(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1400
    42:42:float access$1402(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1402
    42:42:float access$1500(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1500
    42:42:float access$1502(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1502
    42:42:float access$1600(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1600
    42:42:float access$1602(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1602
    42:42:float access$1700(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$1700
    42:42:float access$1702(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$1702
    42:42:float access$200(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$200
    42:42:float access$202(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$202
    42:42:int access$300(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$300
    42:42:int access$302(androidx.constraintlayout.motion.widget.KeyTimeCycle,int) -> access$302
    42:42:java.lang.String access$402(androidx.constraintlayout.motion.widget.KeyTimeCycle,java.lang.String) -> access$402
    42:42:int access$500(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$500
    42:42:int access$502(androidx.constraintlayout.motion.widget.KeyTimeCycle,int) -> access$502
    42:42:float access$600(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$600
    42:42:float access$602(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$602
    42:42:float access$700(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$700
    42:42:float access$702(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$702
    42:42:float access$800(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$800
    42:42:float access$802(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$802
    42:42:float access$900(androidx.constraintlayout.motion.widget.KeyTimeCycle) -> access$900
    42:42:float access$902(androidx.constraintlayout.motion.widget.KeyTimeCycle,float) -> access$902
    190:268:void addTimeValues(java.util.HashMap) -> addTimeValues
    186:186:void addValues(java.util.HashMap) -> addValues
    42:42:java.lang.Object clone() -> clone
    494:494:androidx.constraintlayout.motion.widget.Key clone() -> clone
    471:490:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    93:134:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    83:85:void load(android.content.Context,android.util.AttributeSet) -> load
    137:181:void setInterpolation(java.util.HashMap) -> setInterpolation
    272:331:void setValue(java.lang.String,java.lang.Object) -> setValue
androidx.constraintlayout.motion.widget.KeyTimeCycle$Loader -> androidx.constraintlayout.motion.widget.KeyTimeCycle$Loader:
    353:375:void <clinit>() -> <clinit>
    378:467:void read(androidx.constraintlayout.motion.widget.KeyTimeCycle,android.content.res.TypedArray) -> read
androidx.constraintlayout.motion.widget.KeyTrigger -> androidx.constraintlayout.motion.widget.KeyTrigger:
    46:89:void <init>() -> <init>
    46:46:float access$002(androidx.constraintlayout.motion.widget.KeyTrigger,float) -> access$002
    46:46:java.lang.String access$102(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String) -> access$102
    46:46:java.lang.String access$202(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String) -> access$202
    46:46:java.lang.String access$302(androidx.constraintlayout.motion.widget.KeyTrigger,java.lang.String) -> access$302
    46:46:int access$400(androidx.constraintlayout.motion.widget.KeyTrigger) -> access$400
    46:46:int access$402(androidx.constraintlayout.motion.widget.KeyTrigger,int) -> access$402
    46:46:int access$500(androidx.constraintlayout.motion.widget.KeyTrigger) -> access$500
    46:46:int access$502(androidx.constraintlayout.motion.widget.KeyTrigger,int) -> access$502
    46:46:boolean access$600(androidx.constraintlayout.motion.widget.KeyTrigger) -> access$600
    46:46:boolean access$602(androidx.constraintlayout.motion.widget.KeyTrigger,boolean) -> access$602
    46:46:int access$700(androidx.constraintlayout.motion.widget.KeyTrigger) -> access$700
    46:46:int access$702(androidx.constraintlayout.motion.widget.KeyTrigger,int) -> access$702
    112:112:void addValues(java.util.HashMap) -> addValues
    46:46:java.lang.Object clone() -> clone
    454:454:androidx.constraintlayout.motion.widget.Key clone() -> clone
    168:280:void conditionallyFire(float,android.view.View) -> conditionallyFire
    430:450:androidx.constraintlayout.motion.widget.Key copy(androidx.constraintlayout.motion.widget.Key) -> copy
    283:314:void fire(java.lang.String,android.view.View) -> fire
    317:330:void fireCustom(java.lang.String,android.view.View) -> fireCustom
    108:108:void getAttributeNames(java.util.HashSet) -> getAttributeNames
    93:95:void load(android.content.Context,android.util.AttributeSet) -> load
    158:165:void setUpRect(android.graphics.RectF,android.view.View,boolean) -> setUpRect
    116:155:void setValue(java.lang.String,java.lang.Object) -> setValue
androidx.constraintlayout.motion.widget.KeyTrigger$Loader -> androidx.constraintlayout.motion.widget.KeyTrigger$Loader:
    347:363:void <clinit>() -> <clinit>
    366:426:void read(androidx.constraintlayout.motion.widget.KeyTrigger,android.content.res.TypedArray,android.content.Context) -> read
androidx.constraintlayout.motion.widget.MotionConstrainedPoint -> androidx.constraintlayout.motion.widget.MotionConstrainedPoint:
    71:71:void <clinit>() -> <clinit>
    43:155:void <init>() -> <init>
    259:328:void addValues(java.util.HashMap,int) -> addValues
    206:224:void applyParameters(android.view.View) -> applyParameters
    227:256:void applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyParameters
    39:39:int compareTo(java.lang.Object) -> compareTo
    201:201:int compareTo(androidx.constraintlayout.motion.widget.MotionConstrainedPoint) -> compareTo
    81:84:boolean diff(float,float) -> diff
    94:142:void different(androidx.constraintlayout.motion.widget.MotionConstrainedPoint,java.util.HashSet) -> different
    193:197:void setBounds(float,float,float,float) -> setBounds
    332:334:void setState(android.view.View) -> setState
    342:355:void setState(android.graphics.Rect,android.view.View,int,float) -> setState
    365:378:void setState(android.graphics.Rect,androidx.constraintlayout.widget.ConstraintSet,int,int) -> setState
androidx.constraintlayout.motion.widget.MotionController -> androidx.constraintlayout.motion.widget.MotionController:
    82:152:void <init>(android.view.View) -> <init>
    610:614:void addKey(androidx.constraintlayout.motion.widget.Key) -> addKey
    601:607:void addKeys(java.util.ArrayList) -> addKeys
    485:502:int buildKeyFrames(float[],int[]) -> buildKeyFrames
    272:337:void buildPath(float[],int) -> buildPath
    541:544:void buildRect(float,float[],int) -> buildRect
    547:554:void buildRectangles(float[],int) -> buildRectangles
    1212:1218:void endTrigger(boolean) -> endTrigger
    1166:1208:float getAdjustedPosition(float,float[]) -> getAdjustedPosition
    236:236:int getAnimateRelativeTo() -> getAnimateRelativeTo
    529:537:int getAttributeValues(java.lang.String,float[],int) -> getAttributeValues
    253:260:void getCenter(double,float[],float[]) -> getCenter
    245:245:float getCenterX() -> getCenterX
    249:249:float getCenterY() -> getCenterY
    1384:1414:void getDpDt(float,float,float,float[]) -> getDpDt
    1497:1502:int getDrawPath() -> getDrawPath
    225:225:float getFinalHeight() -> getFinalHeight
    216:216:float getFinalWidth() -> getFinalWidth
    179:179:float getFinalX() -> getFinalX
    189:189:float getFinalY() -> getFinalY
    1106:1130:android.view.animation.Interpolator getInterpolator(android.content.Context,int,java.lang.String,int) -> getInterpolator
    147:147:androidx.constraintlayout.motion.widget.MotionPaths getKeyFrame(int) -> getKeyFrame
    1565:1596:int getKeyFrameInfo(int,int[]) -> getKeyFrameInfo
    558:589:float getKeyFrameParameter(int,float,float) -> getKeyFrameParameter
    1536:1546:int getKeyFramePositions(int[],float[]) -> getKeyFramePositions
    464:481:androidx.constraintlayout.motion.widget.KeyPositionBase getPositionKeyframe(int,int,float,float) -> getPositionKeyframe
    1431:1493:void getPostLayoutDvDp(float,int,int,float,float,float[]) -> getPostLayoutDvDp
    416:460:float getPreCycleDistance() -> getPreCycleDistance
    207:207:float getStartHeight() -> getStartHeight
    198:198:float getStartWidth() -> getStartWidth
    160:160:float getStartX() -> getStartX
    170:170:float getStartY() -> getStartY
    133:133:int getTransformPivotTarget() -> getTransformPivotTarget
    996:996:android.view.View getView() -> getView
    593:598:void insertKey(androidx.constraintlayout.motion.widget.MotionPaths) -> insertKey
    1230:1371:boolean interpolate(android.view.View,float,long,androidx.constraintlayout.core.motion.utils.KeyCache) -> interpolate
    1515:1526:void positionKeyframe(android.view.View,androidx.constraintlayout.motion.widget.KeyPositionBase,float,float,java.lang.String[],float[]) -> positionKeyframe
    983:984:void readView(androidx.constraintlayout.motion.widget.MotionPaths) -> readView
    1035:1070:void rotate(android.graphics.Rect,android.graphics.Rect,int,int,int) -> rotate
    1148:1155:void setBothStates(android.view.View) -> setBothStates
    1506:1507:void setDrawPath(int) -> setDrawPath
    1134:1145:void setEndState(android.graphics.Rect,androidx.constraintlayout.widget.ConstraintSet,int,int) -> setEndState
    617:618:void setPathMotionArc(int) -> setPathMotionArc
    1000:1004:void setStartCurrentState(android.view.View) -> setStartCurrentState
    1007:1031:void setStartState(androidx.constraintlayout.motion.utils.ViewState,android.view.View,int,int,int) -> setStartState
    1073:1093:void setStartState(android.graphics.Rect,androidx.constraintlayout.widget.ConstraintSet,int,int) -> setStartState
    142:144:void setTransformPivotTarget(int) -> setTransformPivotTarget
    987:993:void setView(android.view.View) -> setView
    625:970:void setup(int,int,float,long) -> setup
    240:242:void setupRelative(androidx.constraintlayout.motion.widget.MotionController) -> setupRelative
    978:978:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.MotionController$1 -> androidx.constraintlayout.motion.widget.MotionController$1:
    1109:1109:void <init>(androidx.constraintlayout.core.motion.utils.Easing) -> <init>
    1112:1112:float getInterpolation(float) -> getInterpolation
androidx.constraintlayout.motion.widget.MotionHelper -> androidx.constraintlayout.motion.widget.MotionHelper:
    37:44:void <init>(android.content.Context) -> <init>
    37:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:54:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    98:98:float getProgress() -> getProgress
    60:74:void init(android.util.AttributeSet) -> init
    154:154:boolean isDecorator() -> isDecorator
    93:93:boolean isUseOnHide() -> isUseOnHide
    83:83:boolean isUsedOnShow() -> isUsedOnShow
    164:164:void onFinishedMotionScene(androidx.constraintlayout.motion.widget.MotionLayout) -> onFinishedMotionScene
    169:169:void onPostDraw(android.graphics.Canvas) -> onPostDraw
    160:160:void onPreDraw(android.graphics.Canvas) -> onPreDraw
    174:174:void onPreSetup(androidx.constraintlayout.motion.widget.MotionLayout,java.util.HashMap) -> onPreSetup
    141:141:void onTransitionChange(androidx.constraintlayout.motion.widget.MotionLayout,int,int,float) -> onTransitionChange
    145:145:void onTransitionCompleted(androidx.constraintlayout.motion.widget.MotionLayout,int) -> onTransitionCompleted
    137:137:void onTransitionStarted(androidx.constraintlayout.motion.widget.MotionLayout,int,int) -> onTransitionStarted
    150:150:void onTransitionTrigger(androidx.constraintlayout.motion.widget.MotionLayout,int,boolean,float) -> onTransitionTrigger
    103:123:void setProgress(float) -> setProgress
    133:133:void setProgress(android.view.View,float) -> setProgress
androidx.constraintlayout.motion.widget.MotionInterpolator -> androidx.constraintlayout.motion.widget.MotionInterpolator:
    21:21:void <init>() -> <init>
androidx.constraintlayout.motion.widget.MotionLayout -> androidx.constraintlayout.motion.widget.MotionLayout:
    1013:4396:void <init>(android.content.Context) -> <init>
    1013:4396:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1013:4396:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    994:994:androidx.constraintlayout.motion.widget.MotionLayout$StateCache access$000(androidx.constraintlayout.motion.widget.MotionLayout) -> access$000
    994:994:int access$100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$100
    994:994:void access$1000(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> access$1000
    994:994:void access$1100(androidx.constraintlayout.motion.widget.MotionLayout,boolean,android.view.View,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> access$1100
    994:994:int access$1200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$1200
    994:994:int access$1300(androidx.constraintlayout.motion.widget.MotionLayout) -> access$1300
    994:994:void access$1400(androidx.constraintlayout.motion.widget.MotionLayout) -> access$1400
    994:994:void access$1500(androidx.constraintlayout.motion.widget.MotionLayout,int,int,int,int,boolean,boolean) -> access$1500
    994:994:void access$1600(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> access$1600
    994:994:void access$1700(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> access$1700
    994:994:void access$1800(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> access$1800
    994:994:void access$1900(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> access$1900
    994:994:int access$200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$200
    994:994:android.graphics.Rect access$2000(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.core.widgets.ConstraintWidget) -> access$2000
    994:994:int access$2100(androidx.constraintlayout.motion.widget.MotionLayout) -> access$2100
    994:994:int access$2200(androidx.constraintlayout.motion.widget.MotionLayout) -> access$2200
    994:994:boolean access$300(androidx.constraintlayout.motion.widget.MotionLayout) -> access$300
    994:994:boolean access$302(androidx.constraintlayout.motion.widget.MotionLayout,boolean) -> access$302
    994:994:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer access$400(androidx.constraintlayout.motion.widget.MotionLayout) -> access$400
    994:994:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer access$500(androidx.constraintlayout.motion.widget.MotionLayout) -> access$500
    994:994:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer access$600(androidx.constraintlayout.motion.widget.MotionLayout) -> access$600
    994:994:androidx.constraintlayout.core.widgets.ConstraintWidgetContainer access$700(androidx.constraintlayout.motion.widget.MotionLayout) -> access$700
    994:994:boolean access$800(androidx.constraintlayout.motion.widget.MotionLayout) -> access$800
    994:994:boolean access$900(androidx.constraintlayout.motion.widget.MotionLayout) -> access$900
    2081:2110:void animateTo(float) -> animateTo
    4841:4844:boolean applyViewTransition(int,androidx.constraintlayout.motion.widget.MotionController) -> applyViewTransition
    3994:4018:boolean callTransformedTouchEvent(android.view.View,android.view.MotionEvent,float,float) -> callTransformedTouchEvent
    3885:3922:void checkStructure() -> checkStructure
    3925:3953:void checkStructure(int,androidx.constraintlayout.widget.ConstraintSet) -> checkStructure
    3960:3963:void checkStructure(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> checkStructure
    4560:4566:androidx.constraintlayout.widget.ConstraintSet cloneConstraintSet(int) -> cloneConstraintSet
    2113:2122:void computeCurrentPositions() -> computeCurrentPositions
    4753:4757:void disableAutoTransition(boolean) -> disableAutoTransition
    3451:3511:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1150:1166:void enableTransition(int,boolean) -> enableTransition
    4814:4817:void enableViewTransition(int,boolean) -> enableViewTransition
    3565:3573:void endTrigger(boolean) -> endTrigger
    3577:3768:void evaluate(boolean) -> evaluate
    3517:3562:void evaluateLayout() -> evaluateLayout
    4368:4394:void fireTransitionChange() -> fireTransitionChange
    4402:4424:void fireTransitionCompleted() -> fireTransitionCompleted
    4357:4365:void fireTrigger(int,boolean,float) -> fireTrigger
    4229:4250:void getAnchorDpDt(int,float,float,float,float[]) -> getAnchorDpDt
    4545:4548:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(int) -> getConstraintSet
    4528:4531:int[] getConstraintSetIds() -> getConstraintSetIds
    4741:4744:java.lang.String getConstraintSetNames(int) -> getConstraintSetNames
    4202:4202:int getCurrentState() -> getCurrentState
    3985:3987:void getDebugMode(boolean) -> getDebugMode
    4662:4665:java.util.ArrayList getDefinedTransitions() -> getDefinedTransitions
    4448:4451:androidx.constraintlayout.motion.widget.DesignTool getDesignTool() -> getDesignTool
    4684:4684:int getEndState() -> getEndState
    1103:1103:androidx.constraintlayout.motion.widget.MotionController getMotionController(int) -> getMotionController
    1137:1137:long getNanoTime() -> getNanoTime
    4211:4211:float getProgress() -> getProgress
    3881:3881:androidx.constraintlayout.motion.widget.MotionScene getScene() -> getScene
    4675:4675:int getStartState() -> getStartState
    4694:4694:float getTargetPosition() -> getTargetPosition
    4717:4717:androidx.constraintlayout.motion.widget.MotionScene$Transition getTransition(int) -> getTransition
    1688:1692:android.os.Bundle getTransitionState() -> getTransitionState
    4258:4261:long getTransitionTimeMs() -> getTransitionTimeMs
    2447:2447:float getVelocity() -> getVelocity
    2460:2490:void getViewVelocity(android.view.View,float,float,float[],int) -> getViewVelocity
    4031:4054:boolean handlesTouchEvent(float,float,android.view.View,android.view.MotionEvent) -> handlesTouchEvent
    3813:3863:void init(android.util.AttributeSet) -> init
    1530:1533:boolean isAttachedToWindow() -> isAttachedToWindow
    4852:4852:boolean isDelayedApplicationOfInitialState() -> isDelayedApplicationOfInitialState
    2245:2245:boolean isInRotation() -> isInRotation
    4778:4778:boolean isInteractionEnabled() -> isInteractionEnabled
    4826:4829:boolean isViewTransitionEnabled(int) -> isViewTransitionEnabled
    2258:2268:void jumpToState(int) -> jumpToState
    1460:1523:void loadLayoutDescription(int) -> loadLayoutDescription
    4728:4731:int lookUpConstraintId(java.lang.String) -> lookUpConstraintId
    1146:1146:androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker obtainVelocityTracker() -> obtainVelocityTracker
    4126:4167:void onAttachedToWindow() -> onAttachedToWindow
    4065:4102:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3774:3800:void onLayout(boolean,int,int,int,int) -> onLayout
    2897:2945:void onMeasure(int,int) -> onMeasure
    3088:3088:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    3083:3083:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    3004:3079:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    2987:2992:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2999:2999:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    2966:2970:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    4181:4194:void onNewStateAttachHandlers() -> onNewStateAttachHandlers
    4171:4174:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2952:2958:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2979:2983:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    4110:4121:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4459:4486:void onViewAdded(android.view.View) -> onViewAdded
    4493:4500:void onViewRemoved(android.view.View) -> onViewRemoved
    3809:3810:void parseLayoutDescription(int) -> parseLayoutDescription
    4427:4442:void processTransitionCompleted() -> processTransitionCompleted
    4576:4578:void rebuildMotion() -> rebuildMotion
    4584:4586:void rebuildScene() -> rebuildScene
    4295:4298:boolean removeTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener) -> removeTransitionListener
    2875:2883:void requestLayout() -> requestLayout
    2205:2242:void rotateTo(int,int) -> rotateTo
    4633:4644:void scheduleTransitionTo(int) -> scheduleTransitionTo
    3972:3974:void setDebugMode(int) -> setDebugMode
    4860:4861:void setDelayedApplicationOfInitialState(boolean) -> setDelayedApplicationOfInitialState
    4765:4766:void setInteractionEnabled(boolean) -> setInteractionEnabled
    1563:1572:void setInterpolatedProgress(float) -> setInterpolatedProgress
    4513:4520:void setOnHide(float) -> setOnHide
    4503:4510:void setOnShow(float) -> setOnShow
    1581:1593:void setProgress(float,float) -> setProgress
    1701:1754:void setProgress(float) -> setProgress
    3869:3872:void setScene(androidx.constraintlayout.motion.widget.MotionScene) -> setScene
    1311:1320:void setStartState(int) -> setStartState
    1198:1225:void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState) -> setState
    1546:1555:void setState(int,int,int) -> setState
    1329:1352:void setTransition(int,int) -> setTransition
    1361:1414:void setTransition(int) -> setTransition
    1417:1451:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    4703:4708:void setTransitionDuration(int) -> setTransitionDuration
    4271:4272:void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener) -> setTransitionListener
    1675:1682:void setTransitionState(android.os.Bundle) -> setTransitionState
    1760:1889:void setupMotionViews() -> setupMotionViews
    2864:2868:android.graphics.Rect toRect(androidx.constraintlayout.core.widgets.ConstraintWidget) -> toRect
    2887:2889:java.lang.String toString() -> toString
    1910:1980:void touchAnimateTo(int,float,float) -> touchAnimateTo
    1993:2020:void touchSpringTo(float,float) -> touchSpringTo
    2139:2141:void transitionToEnd() -> transitionToEnd
    2151:2153:void transitionToEnd(java.lang.Runnable) -> transitionToEnd
    2130:2131:void transitionToStart() -> transitionToStart
    2162:2170:void transitionToState(int) -> transitionToState
    2181:2189:void transitionToState(int,int) -> transitionToState
    2200:2201:void transitionToState(int,int,int) -> transitionToState
    2290:2439:void transitionToState(int,int,int,int) -> transitionToState
    4595:4602:void updateState(int,androidx.constraintlayout.widget.ConstraintSet) -> updateState
    4652:4654:void updateState() -> updateState
    4612:4625:void updateStateAnimate(int,androidx.constraintlayout.widget.ConstraintSet,int) -> updateStateAnimate
    4800:4805:void viewTransition(int,android.view.View[]) -> viewTransition
    2023:2030:boolean willJump(float,float,float) -> willJump
androidx.constraintlayout.motion.widget.MotionLayout$1 -> androidx.constraintlayout.motion.widget.MotionLayout$1:
    1491:1491:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1494:1495:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$2 -> androidx.constraintlayout.motion.widget.MotionLayout$2:
    2232:2232:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    2235:2236:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$3 -> androidx.constraintlayout.motion.widget.MotionLayout$3:
    3046:3046:void <init>(androidx.constraintlayout.motion.widget.MotionLayout,android.view.View) -> <init>
    3049:3050:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$4 -> androidx.constraintlayout.motion.widget.MotionLayout$4:
    4149:4149:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    4152:4153:void run() -> run
androidx.constraintlayout.motion.widget.MotionLayout$5 -> androidx.constraintlayout.motion.widget.MotionLayout$5:
    1207:1207:void <clinit>() -> <clinit>
androidx.constraintlayout.motion.widget.MotionLayout$DecelerateInterpolator -> androidx.constraintlayout.motion.widget.MotionLayout$DecelerateInterpolator:
    2037:2039:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    2043:2046:void config(float,float,float) -> config
    2050:2064:float getInterpolation(float) -> getInterpolation
    2070:2070:float getVelocity() -> getVelocity
androidx.constraintlayout.motion.widget.MotionLayout$DevModeDraw -> androidx.constraintlayout.motion.widget.MotionLayout$DevModeDraw:
    3106:3154:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    3159:3209:void draw(android.graphics.Canvas,java.util.HashMap,int,int) -> draw
    3212:3223:void drawAll(android.graphics.Canvas,int,int,androidx.constraintlayout.motion.widget.MotionController) -> drawAll
    3226:3227:void drawBasicPath(android.graphics.Canvas) -> drawBasicPath
    3300:3316:void drawPathAsConfigured(android.graphics.Canvas) -> drawPathAsConfigured
    3344:3353:void drawPathCartesian(android.graphics.Canvas) -> drawPathCartesian
    3356:3379:void drawPathCartesianTicks(android.graphics.Canvas,float,float) -> drawPathCartesianTicks
    3295:3297:void drawPathRelative(android.graphics.Canvas) -> drawPathRelative
    3319:3337:void drawPathRelativeTicks(android.graphics.Canvas,float,float) -> drawPathRelativeTicks
    3382:3405:void drawPathScreenTicks(android.graphics.Canvas,float,float,int,int) -> drawPathScreenTicks
    3408:3426:void drawRectangle(android.graphics.Canvas,androidx.constraintlayout.motion.widget.MotionController) -> drawRectangle
    3230:3287:void drawTicks(android.graphics.Canvas,int,int,androidx.constraintlayout.motion.widget.MotionController) -> drawTicks
    3290:3292:void drawTranslation(android.graphics.Canvas,float,float,float,float) -> drawTranslation
    3340:3341:void getTextBounds(java.lang.String,android.graphics.Paint) -> getTextBounds
androidx.constraintlayout.motion.widget.MotionLayout$Model -> androidx.constraintlayout.motion.widget.MotionLayout$Model:
    2494:2498:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    2801:2851:void build() -> build
    2777:2798:void computeStartEndSize(int,int) -> computeStartEndSize
    2503:2529:void copy(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.ConstraintWidgetContainer) -> copy
    2651:2663:androidx.constraintlayout.core.widgets.ConstraintWidget getWidget(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,android.view.View) -> getWidget
    2532:2588:void initFrom(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.widget.ConstraintSet,androidx.constraintlayout.widget.ConstraintSet) -> initFrom
    2859:2859:boolean isNotConfiguredWith(int,int) -> isNotConfiguredWith
    2724:2774:void measure(int,int) -> measure
    2719:2721:void reEvaluateState() -> reEvaluateState
    2854:2856:void setMeasuredId(int,int) -> setMeasuredId
    2591:2648:void setupConstraintWidget(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.widget.ConstraintSet) -> setupConstraintWidget
androidx.constraintlayout.motion.widget.MotionLayout$MyTracker -> androidx.constraintlayout.motion.widget.MotionLayout$MyTracker:
    1229:1229:void <clinit>() -> <clinit>
    1227:1227:void <init>() -> <init>
    1253:1256:void addMovement(android.view.MotionEvent) -> addMovement
    1260:1263:void computeCurrentVelocity(int) -> computeCurrentVelocity
    1274:1277:float getXVelocity() -> getXVelocity
    1282:1285:float getYVelocity() -> getYVelocity
    1232:1233:androidx.constraintlayout.motion.widget.MotionLayout$MyTracker obtain() -> obtain
    1238:1242:void recycle() -> recycle
androidx.constraintlayout.motion.widget.MotionLayout$StateCache -> androidx.constraintlayout.motion.widget.MotionLayout$StateCache:
    1596:1604:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    1607:1629:void apply() -> apply
    1632:1637:android.os.Bundle getTransitionState() -> getTransitionState
    1664:1668:void recordState() -> recordState
    1652:1653:void setEndState(int) -> setEndState
    1648:1649:void setProgress(float) -> setProgress
    1660:1661:void setStartState(int) -> setStartState
    1641:1645:void setTransitionState(android.os.Bundle) -> setTransitionState
    1656:1657:void setVelocity(float) -> setVelocity
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState -> androidx.constraintlayout.motion.widget.MotionLayout$TransitionState:
    1106:1110:void <clinit>() -> <clinit>
    1106:1106:void <init>(java.lang.String,int) -> <init>
    1106:1106:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String) -> valueOf
    1106:1106:androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values() -> values
androidx.constraintlayout.motion.widget.MotionPaths -> androidx.constraintlayout.motion.widget.MotionPaths:
    54:54:void <clinit>() -> <clinit>
    56:489:void <init>() -> <init>
    56:489:void <init>(int,int,androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths) -> <init>
    915:931:void applyParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyParameters
    39:39:int compareTo(java.lang.Object) -> compareTo
    911:911:int compareTo(androidx.constraintlayout.motion.widget.MotionPaths) -> compareTo
    298:301:boolean diff(float,float) -> diff
    305:314:void different(androidx.constraintlayout.motion.widget.MotionPaths,boolean[],java.lang.String[],boolean) -> different
    863:870:void fillStandard(double[],int[]) -> fillStandard
    317:356:void getCenter(double,int[],double[],float[],int) -> getCenter
    359:418:void getCenter(double,int[],double[],float[],double[],float[]) -> getCenter
    885:898:int getCustomData(java.lang.String,double[],int) -> getCustomData
    877:881:int getCustomDataCount(java.lang.String) -> getCustomDataCount
    649:773:void getRect(int[],double[],float[],int) -> getRect
    873:873:boolean hasCustomData(java.lang.String) -> hasCustomData
    86:121:void initCartesian(androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths) -> initCartesian
    243:283:void initPath(androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths) -> initPath
    150:183:void initPolar(int,int,androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths) -> initPolar
    200:239:void initScreen(int,int,androidx.constraintlayout.motion.widget.KeyPosition,androidx.constraintlayout.motion.widget.MotionPaths,androidx.constraintlayout.motion.widget.MotionPaths) -> initScreen
    903:907:void setBounds(float,float,float,float) -> setBounds
    787:860:void setDpDt(float,float,float[],int[],double[],double[]) -> setDpDt
    493:646:void setView(float,android.view.View,int[],double[],double[],double[]) -> setView
    186:197:void setupRelative(androidx.constraintlayout.motion.widget.MotionController,androidx.constraintlayout.motion.widget.MotionPaths) -> setupRelative
    286:288:float xRotate(float,float,float,float,float,float) -> xRotate
    292:294:float yRotate(float,float,float,float,float,float) -> yRotate
androidx.constraintlayout.motion.widget.MotionScene -> androidx.constraintlayout.motion.widget.MotionScene:
    70:1017:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    70:1026:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionLayout,int) -> <init>
    60:60:int access$1000(androidx.constraintlayout.motion.widget.MotionScene) -> access$1000
    60:60:android.util.SparseArray access$1100(androidx.constraintlayout.motion.widget.MotionScene) -> access$1100
    60:60:int access$1200(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,int) -> access$1200
    60:60:androidx.constraintlayout.motion.widget.MotionLayout access$700(androidx.constraintlayout.motion.widget.MotionScene) -> access$700
    60:60:int access$900(androidx.constraintlayout.motion.widget.MotionScene) -> access$900
    260:289:void addOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout,int) -> addOnClickListeners
    175:181:void addTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> addTransition
    460:460:boolean applyViewTransition(int,androidx.constraintlayout.motion.widget.MotionController) -> applyViewTransition
    379:433:boolean autoTransition(androidx.constraintlayout.motion.widget.MotionLayout,int) -> autoTransition
    292:345:androidx.constraintlayout.motion.widget.MotionScene$Transition bestTransitionFor(int,float,float,android.view.MotionEvent) -> bestTransitionFor
    1850:1851:void disableAutoTransition(boolean) -> disableAutoTransition
    452:453:void enableViewTransition(int,boolean) -> enableViewTransition
    1651:1651:int gatPathMotionArc() -> gatPathMotionArc
    1715:1718:int getAutoCompleteMode() -> getAutoCompleteMode
    1261:1275:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(android.content.Context,java.lang.String) -> getConstraintSet
    1279:1279:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(int) -> getConstraintSet
    1283:1297:androidx.constraintlayout.widget.ConstraintSet getConstraintSet(int,int,int) -> getConstraintSet
    362:366:int[] getConstraintSetIds() -> getConstraintSetIds
    349:349:java.util.ArrayList getDefinedTransitions() -> getDefinedTransitions
    1631:1634:int getDuration() -> getDuration
    1580:1583:int getEndId() -> getEndId
    1160:1175:int getId(android.content.Context,java.lang.String) -> getId
    200:212:int getIndex(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> getIndex
    1595:1622:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1339:1357:androidx.constraintlayout.motion.widget.Key getKeyFrame(android.content.Context,int,int,int) -> getKeyFrame
    1316:1327:void getKeyFrames(androidx.constraintlayout.motion.widget.MotionController) -> getKeyFrames
    1668:1671:float getMaxAcceleration() -> getMaxAcceleration
    1675:1678:float getMaxVelocity() -> getMaxVelocity
    1727:1730:boolean getMoveWhenScrollAtTop() -> getMoveWhenScrollAtTop
    1433:1433:float getPathPercent(android.view.View,int) -> getPathPercent
    1564:1567:float getProgressDirection(float,float) -> getProgressDirection
    237:243:int getRealID(int) -> getRealID
    1709:1712:int getSpringBoundary() -> getSpringBoundary
    1696:1699:float getSpringDamping() -> getSpringDamping
    1689:1692:float getSpringMass() -> getSpringMass
    1682:1685:float getSpringStiffiness() -> getSpringStiffiness
    1703:1706:float getSpringStopThreshold() -> getSpringStopThreshold
    1661:1664:float getStaggered() -> getStaggered
    1573:1576:int getStartId() -> getStartId
    353:358:androidx.constraintlayout.motion.widget.MotionScene$Transition getTransitionById(int) -> getTransitionById
    247:255:java.util.List getTransitionsWithState(int) -> getTransitionsWithState
    1758:1769:boolean hasCycleDependency(int) -> hasCycleDependency
    1377:1388:boolean hasKeyFramePosition(android.view.View,int) -> hasKeyFramePosition
    437:437:boolean isProcessingTouch() -> isProcessingTouch
    456:456:boolean isViewTransitionEnabled(int) -> isViewTransitionEnabled
    1036:1139:void load(android.content.Context,int) -> load
    1817:1821:int lookUpConstraintId(java.lang.String) -> lookUpConstraintId
    1831:1841:java.lang.String lookUpConstraintName(int) -> lookUpConstraintName
    1258:1258:void onLayout(boolean,int,int,int,int) -> onLayout
    1219:1254:int parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    1179:1189:void parseInclude(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseInclude
    1192:1215:int parseInclude(android.content.Context,int) -> parseInclude
    1142:1157:void parseMotionSceneTags(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseMotionSceneTags
    1545:1548:void processScrollMove(float,float) -> processScrollMove
    1551:1554:void processScrollUp(float,float) -> processScrollUp
    1454:1542:void processTouchEvent(android.view.MotionEvent,int,androidx.constraintlayout.motion.widget.MotionLayout) -> processTouchEvent
    1779:1797:void readConstraintChain(int,androidx.constraintlayout.motion.widget.MotionLayout) -> readConstraintChain
    1741:1749:void readFallback(androidx.constraintlayout.motion.widget.MotionLayout) -> readFallback
    190:194:void removeTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> removeTransition
    1307:1308:void setConstraintSet(int,androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    1643:1648:void setDuration(int) -> setDuration
    1395:1430:void setKeyframe(android.view.View,int,java.lang.String,java.lang.Object) -> setKeyframe
    441:445:void setRtl(boolean) -> setRtl
    111:166:void setTransition(int,int) -> setTransition
    230:234:void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> setTransition
    1721:1724:void setupTouch() -> setupTouch
    1800:1807:java.lang.String stripID(java.lang.String) -> stripID
    1440:1445:boolean supportTouch() -> supportTouch
    220:220:boolean validateLayout(androidx.constraintlayout.motion.widget.MotionLayout) -> validateLayout
    448:449:void viewTransition(int,android.view.View[]) -> viewTransition
androidx.constraintlayout.motion.widget.MotionScene$1 -> androidx.constraintlayout.motion.widget.MotionScene$1:
    1598:1598:void <init>(androidx.constraintlayout.motion.widget.MotionScene,androidx.constraintlayout.core.motion.utils.Easing) -> <init>
    1601:1601:float getInterpolation(float) -> getInterpolation
androidx.constraintlayout.motion.widget.MotionScene$Transition -> androidx.constraintlayout.motion.widget.MotionScene$Transition:
    472:887:void <init>(androidx.constraintlayout.motion.widget.MotionScene,androidx.constraintlayout.motion.widget.MotionScene$Transition) -> <init>
    472:909:void <init>(int,androidx.constraintlayout.motion.widget.MotionScene,int,int) -> <init>
    472:916:void <init>(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    471:471:int access$000(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$000
    471:471:int access$002(androidx.constraintlayout.motion.widget.MotionScene$Transition,int) -> access$002
    471:471:int access$100(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$100
    471:471:int access$102(androidx.constraintlayout.motion.widget.MotionScene$Transition,int) -> access$102
    471:471:boolean access$1300(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1300
    471:471:java.util.ArrayList access$1400(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1400
    471:471:int access$1500(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1500
    471:471:java.lang.String access$1600(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1600
    471:471:int access$1700(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1700
    471:471:int access$1800(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1800
    471:471:int access$1900(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$1900
    471:471:androidx.constraintlayout.motion.widget.TouchResponse access$200(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$200
    471:471:float access$2000(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$2000
    471:471:androidx.constraintlayout.motion.widget.TouchResponse access$202(androidx.constraintlayout.motion.widget.MotionScene$Transition,androidx.constraintlayout.motion.widget.TouchResponse) -> access$202
    471:471:int access$300(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$300
    471:471:java.util.ArrayList access$400(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$400
    471:471:boolean access$500(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$500
    471:471:int access$600(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$600
    471:471:androidx.constraintlayout.motion.widget.MotionScene access$800(androidx.constraintlayout.motion.widget.MotionScene$Transition) -> access$800
    623:624:void addKeyFrame(androidx.constraintlayout.motion.widget.KeyFrames) -> addKeyFrame
    504:512:void addOnClick(int,int) -> addOnClick
    536:537:void addOnClick(android.content.Context,org.xmlpull.v1.XmlPullParser) -> addOnClick
    715:725:java.lang.String debugString(android.content.Context) -> debugString
    931:1005:void fill(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,android.content.res.TypedArray) -> fill
    925:928:void fillFromAttributeList(androidx.constraintlayout.motion.widget.MotionScene,android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    557:557:int getAutoTransition() -> getAutoTransition
    603:603:int getDuration() -> getDuration
    575:575:int getEndConstraintSetId() -> getEndConstraintSetId
    566:566:int getId() -> getId
    616:616:java.util.List getKeyFrameList() -> getKeyFrameList
    528:528:int getLayoutDuringTransition() -> getLayoutDuringTransition
    632:632:java.util.List getOnClickList() -> getOnClickList
    672:672:int getPathMotionArc() -> getPathMotionArc
    612:612:float getStagger() -> getStagger
    584:584:int getStartConstraintSetId() -> getStartConstraintSetId
    641:641:androidx.constraintlayout.motion.widget.TouchResponse getTouchResponse() -> getTouchResponse
    680:680:boolean isEnabled() -> isEnabled
    729:729:boolean isTransitionFlag(int) -> isTransitionFlag
    515:525:void removeOnClick(int) -> removeOnClick
    547:548:void setAutoTransition(int) -> setAutoTransition
    594:595:void setDuration(int) -> setDuration
    693:694:void setEnable(boolean) -> setEnable
    703:704:void setEnabled(boolean) -> setEnabled
    919:922:void setInterpolatorInfo(int,java.lang.String,int) -> setInterpolatorInfo
    532:533:void setLayoutDuringTransition(int) -> setLayoutDuringTransition
    500:501:void setOnSwipe(androidx.constraintlayout.motion.widget.OnSwipe) -> setOnSwipe
    737:741:void setOnTouchUp(int) -> setOnTouchUp
    662:663:void setPathMotionArc(int) -> setPathMotionArc
    652:653:void setStagger(float) -> setStagger
    733:734:void setTransitionFlag(int) -> setTransitionFlag
androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick -> androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick:
# {"id":"sourceFile","fileName":"MotionScene.java"}
    745:766:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionScene$Transition,org.xmlpull.v1.XmlPullParser) -> <init>
    745:772:void <init>(androidx.constraintlayout.motion.widget.MotionScene$Transition,int,int) -> <init>
    775:796:void addOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout,int,androidx.constraintlayout.motion.widget.MotionScene$Transition) -> addOnClickListeners
    811:819:boolean isTransitionViable(androidx.constraintlayout.motion.widget.MotionScene$Transition,androidx.constraintlayout.motion.widget.MotionLayout) -> isTransitionViable
    825:871:void onClick(android.view.View) -> onClick
    799:808:void removeOnClickListeners(androidx.constraintlayout.motion.widget.MotionLayout) -> removeOnClickListeners
androidx.constraintlayout.motion.widget.OnSwipe -> androidx.constraintlayout.motion.widget.OnSwipe:
    22:41:void <init>() -> <init>
    393:393:int getAutoCompleteMode() -> getAutoCompleteMode
    124:124:int getDragDirection() -> getDragDirection
    187:187:float getDragScale() -> getDragScale
    204:204:float getDragThreshold() -> getDragThreshold
    266:266:int getLimitBoundsTo() -> getLimitBoundsTo
    156:156:float getMaxAcceleration() -> getMaxAcceleration
    139:139:float getMaxVelocity() -> getMaxVelocity
    172:172:boolean getMoveWhenScrollAtTop() -> getMoveWhenScrollAtTop
    251:251:int getNestedScrollFlags() -> getNestedScrollFlags
    234:234:int getOnTouchUp() -> getOnTouchUp
    281:281:int getRotationCenterId() -> getRotationCenterId
    374:374:int getSpringBoundary() -> getSpringBoundary
    286:286:float getSpringDamping() -> getSpringDamping
    308:308:float getSpringMass() -> getSpringMass
    329:329:float getSpringStiffness() -> getSpringStiffness
    352:352:float getSpringStopThreshold() -> getSpringStopThreshold
    92:92:int getTouchAnchorId() -> getTouchAnchorId
    109:109:int getTouchAnchorSide() -> getTouchAnchorSide
    217:217:int getTouchRegionId() -> getTouchRegionId
    404:405:void setAutoCompleteMode(int) -> setAutoCompleteMode
    119:120:androidx.constraintlayout.motion.widget.OnSwipe setDragDirection(int) -> setDragDirection
    182:183:androidx.constraintlayout.motion.widget.OnSwipe setDragScale(int) -> setDragScale
    199:200:androidx.constraintlayout.motion.widget.OnSwipe setDragThreshold(int) -> setDragThreshold
    261:262:androidx.constraintlayout.motion.widget.OnSwipe setLimitBoundsTo(int) -> setLimitBoundsTo
    151:152:androidx.constraintlayout.motion.widget.OnSwipe setMaxAcceleration(int) -> setMaxAcceleration
    134:135:androidx.constraintlayout.motion.widget.OnSwipe setMaxVelocity(int) -> setMaxVelocity
    167:168:androidx.constraintlayout.motion.widget.OnSwipe setMoveWhenScrollAtTop(boolean) -> setMoveWhenScrollAtTop
    246:247:androidx.constraintlayout.motion.widget.OnSwipe setNestedScrollFlags(int) -> setNestedScrollFlags
    229:230:androidx.constraintlayout.motion.widget.OnSwipe setOnTouchUp(int) -> setOnTouchUp
    276:277:androidx.constraintlayout.motion.widget.OnSwipe setRotateCenter(int) -> setRotateCenter
    388:389:androidx.constraintlayout.motion.widget.OnSwipe setSpringBoundary(int) -> setSpringBoundary
    297:298:androidx.constraintlayout.motion.widget.OnSwipe setSpringDamping(float) -> setSpringDamping
    319:320:androidx.constraintlayout.motion.widget.OnSwipe setSpringMass(float) -> setSpringMass
    342:343:androidx.constraintlayout.motion.widget.OnSwipe setSpringStiffness(float) -> setSpringStiffness
    364:365:androidx.constraintlayout.motion.widget.OnSwipe setSpringStopThreshold(float) -> setSpringStopThreshold
    87:88:androidx.constraintlayout.motion.widget.OnSwipe setTouchAnchorId(int) -> setTouchAnchorId
    104:105:androidx.constraintlayout.motion.widget.OnSwipe setTouchAnchorSide(int) -> setTouchAnchorSide
    212:213:androidx.constraintlayout.motion.widget.OnSwipe setTouchRegionId(int) -> setTouchRegionId
androidx.constraintlayout.motion.widget.TouchResponse -> androidx.constraintlayout.motion.widget.TouchResponse:
    67:76:void <clinit>() -> <clinit>
    45:121:void <init>(android.content.Context,androidx.constraintlayout.motion.widget.MotionLayout,org.xmlpull.v1.XmlPullParser) -> <init>
    45:155:void <init>(androidx.constraintlayout.motion.widget.MotionLayout,androidx.constraintlayout.motion.widget.OnSwipe) -> <init>
    821:821:float dot(float,float) -> dot
    186:239:void fill(android.content.res.TypedArray) -> fill
    180:183:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    760:760:int getAutoCompleteMode() -> getAutoCompleteMode
    834:834:int getFlags() -> getFlags
    805:813:android.graphics.RectF getLimitBoundsTo(android.view.ViewGroup,android.graphics.RectF) -> getLimitBoundsTo
    737:737:float getMaxAcceleration() -> getMaxAcceleration
    747:747:float getMaxVelocity() -> getMaxVelocity
    751:751:boolean getMoveWhenScrollAtTop() -> getMoveWhenScrollAtTop
    588:602:float getProgressDirection(float,float) -> getProgressDirection
    885:885:int getSpringBoundary() -> getSpringBoundary
    865:865:float getSpringDamping() -> getSpringDamping
    856:856:float getSpringMass() -> getSpringMass
    847:847:float getSpringStiffness() -> getSpringStiffness
    873:873:float getSpringStopThreshold() -> getSpringStopThreshold
    781:789:android.graphics.RectF getTouchRegion(android.view.ViewGroup,android.graphics.RectF) -> getTouchRegion
    793:793:int getTouchRegionId() -> getTouchRegionId
    412:573:void processTouchEvent(android.view.MotionEvent,androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker,int,androidx.constraintlayout.motion.widget.MotionScene) -> processTouchEvent
    254:399:void processTouchRotateEvent(android.view.MotionEvent,androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker,int,androidx.constraintlayout.motion.widget.MotionScene) -> processTouchRotateEvent
    627:658:void scrollMove(float,float) -> scrollMove
    606:623:void scrollUp(float,float) -> scrollUp
    576:578:void setDown(float,float) -> setDown
    158:177:void setRTL(boolean) -> setRTL
    838:839:void setTouchUpMode(int) -> setTouchUpMode
    242:245:void setUpTouchEvent(float,float) -> setUpTouchEvent
    662:685:void setupTouch() -> setupTouch
    825:825:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.TouchResponse$1 -> androidx.constraintlayout.motion.widget.TouchResponse$1:
    671:671:void <init>(androidx.constraintlayout.motion.widget.TouchResponse) -> <init>
    674:674:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.constraintlayout.motion.widget.TouchResponse$2 -> androidx.constraintlayout.motion.widget.TouchResponse$2:
    677:677:void <init>(androidx.constraintlayout.motion.widget.TouchResponse) -> <init>
    682:682:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.constraintlayout.motion.widget.TransitionAdapter -> androidx.constraintlayout.motion.widget.TransitionAdapter:
    19:19:void <init>() -> <init>
    28:28:void onTransitionChange(androidx.constraintlayout.motion.widget.MotionLayout,int,int,float) -> onTransitionChange
    33:33:void onTransitionCompleted(androidx.constraintlayout.motion.widget.MotionLayout,int) -> onTransitionCompleted
    23:23:void onTransitionStarted(androidx.constraintlayout.motion.widget.MotionLayout,int,int) -> onTransitionStarted
    38:38:void onTransitionTrigger(androidx.constraintlayout.motion.widget.MotionLayout,int,boolean,float) -> onTransitionTrigger
androidx.constraintlayout.motion.widget.TransitionBuilder -> androidx.constraintlayout.motion.widget.TransitionBuilder:
    26:26:void <init>() -> <init>
    62:69:androidx.constraintlayout.motion.widget.MotionScene$Transition buildTransition(androidx.constraintlayout.motion.widget.MotionScene,int,int,androidx.constraintlayout.widget.ConstraintSet,int,androidx.constraintlayout.widget.ConstraintSet) -> buildTransition
    80:85:void updateConstraintSetInMotionScene(androidx.constraintlayout.motion.widget.MotionScene,androidx.constraintlayout.motion.widget.MotionScene$Transition,androidx.constraintlayout.widget.ConstraintSet,androidx.constraintlayout.widget.ConstraintSet) -> updateConstraintSetInMotionScene
    35:47:void validate(androidx.constraintlayout.motion.widget.MotionLayout) -> validate
androidx.constraintlayout.motion.widget.ViewTransition -> androidx.constraintlayout.motion.widget.ViewTransition:
    60:60:void <clinit>() -> <clinit>
    77:259:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    330:337:void applyIndependentTransition(androidx.constraintlayout.motion.widget.ViewTransitionController,androidx.constraintlayout.motion.widget.MotionLayout,android.view.View) -> applyIndependentTransition
    475:530:void applyTransition(androidx.constraintlayout.motion.widget.ViewTransitionController,androidx.constraintlayout.motion.widget.MotionLayout,int,androidx.constraintlayout.widget.ConstraintSet,android.view.View[]) -> applyTransition
    607:609:boolean checkTags(android.view.View) -> checkTags
    551:551:int getId() -> getId
    182:209:android.view.animation.Interpolator getInterpolator(android.content.Context) -> getInterpolator
    151:151:int getSharedValue() -> getSharedValue
    120:120:int getSharedValueCurrent() -> getSharedValueCurrent
    167:167:int getSharedValueID() -> getSharedValueID
    133:133:int getStateTransition() -> getStateTransition
    598:598:boolean isEnabled() -> isEnabled
    519:529:void lambda$applyTransition$0(android.view.View[]) -> lambda$applyTransition$0
    559:581:boolean matchesView(android.view.View) -> matchesView
    262:327:void parseViewTransitionTags(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseViewTransitionTags
    602:603:void setEnabled(boolean) -> setEnabled
    158:159:void setSharedValue(int) -> setSharedValue
    124:125:void setSharedValueCurrent(int) -> setSharedValueCurrent
    174:175:void setSharedValueID(int) -> setSharedValueID
    142:143:void setStateTransition(int) -> setStateTransition
    585:594:boolean supports(int) -> supports
    178:178:java.lang.String toString() -> toString
    533:548:void updateTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition,android.view.View) -> updateTransition
androidx.constraintlayout.motion.widget.ViewTransition$1 -> androidx.constraintlayout.motion.widget.ViewTransition$1:
    185:185:void <init>(androidx.constraintlayout.motion.widget.ViewTransition,androidx.constraintlayout.core.motion.utils.Easing) -> <init>
    188:188:float getInterpolation(float) -> getInterpolation
androidx.constraintlayout.motion.widget.ViewTransition$Animate -> androidx.constraintlayout.motion.widget.ViewTransition$Animate:
    346:375:void <init>(androidx.constraintlayout.motion.widget.ViewTransitionController,androidx.constraintlayout.motion.widget.MotionController,int,int,int,android.view.animation.Interpolator,int,int) -> <init>
    387:392:void mutate() -> mutate
    423:450:void mutateForward() -> mutateForward
    395:419:void mutateReverse() -> mutateReverse
    453:467:void reactTo(int,float,float) -> reactTo
    378:384:void reverse(boolean) -> reverse
androidx.constraintlayout.motion.widget.ViewTransitionController -> androidx.constraintlayout.motion.widget.ViewTransitionController:
    37:193:void <init>(androidx.constraintlayout.motion.widget.MotionLayout) -> <init>
    35:35:androidx.constraintlayout.motion.widget.MotionLayout access$000(androidx.constraintlayout.motion.widget.ViewTransitionController) -> access$000
    46:54:void add(androidx.constraintlayout.motion.widget.ViewTransition) -> add
    196:200:void addAnimation(androidx.constraintlayout.motion.widget.ViewTransition$Animate) -> addAnimation
    210:221:void animate() -> animate
    228:234:boolean applyViewTransition(int,androidx.constraintlayout.motion.widget.MotionController) -> applyViewTransition
    89:95:void enableViewTransition(int,boolean) -> enableViewTransition
    224:225:void invalidate() -> invalidate
    98:103:boolean isViewTransitionEnabled(int) -> isViewTransitionEnabled
    238:276:void listenForSharedVariable(androidx.constraintlayout.motion.widget.ViewTransition,boolean) -> listenForSharedVariable
    203:204:void removeAnimation(androidx.constraintlayout.motion.widget.ViewTransition$Animate) -> removeAnimation
    141:190:void touchEvent(android.view.MotionEvent) -> touchEvent
    71:86:void viewTransition(androidx.constraintlayout.motion.widget.ViewTransition,android.view.View[]) -> viewTransition
    113:133:void viewTransition(int,android.view.View[]) -> viewTransition
androidx.constraintlayout.motion.widget.ViewTransitionController$1 -> androidx.constraintlayout.motion.widget.ViewTransitionController$1:
    241:241:void <init>(androidx.constraintlayout.motion.widget.ViewTransitionController,androidx.constraintlayout.motion.widget.ViewTransition,int,boolean,int) -> <init>
    244:274:void onNewValue(int,int,int) -> onNewValue
androidx.constraintlayout.utils.widget.ImageFilterButton -> androidx.constraintlayout.utils.widget.ImageFilterButton:
    87:186:void <init>(android.content.Context) -> <init>
    87:186:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:186:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:float access$000(androidx.constraintlayout.utils.widget.ImageFilterButton) -> access$000
    86:86:float access$100(androidx.constraintlayout.utils.widget.ImageFilterButton) -> access$100
    598:610:void draw(android.graphics.Canvas) -> draw
    410:410:float getContrast() -> getContrast
    455:455:float getCrossfade() -> getCrossfade
    198:198:float getImagePanX() -> getImagePanX
    211:211:float getImagePanY() -> getImagePanY
    229:229:float getImageRotate() -> getImageRotate
    220:220:float getImageZoom() -> getImageZoom
    593:593:float getRound() -> getRound
    584:584:float getRoundPercent() -> getRoundPercent
    391:391:float getSaturation() -> getSaturation
    429:429:float getWarmth() -> getWarmth
    117:175:void init(android.content.Context,android.util.AttributeSet) -> init
    614:616:void layout(int,int,int,int) -> layout
    314:320:void setAltImageResource(int) -> setAltImageResource
    466:468:void setBrightness(float) -> setBrightness
    400:402:void setContrast(float) -> setContrast
    439:447:void setCrossfade(float) -> setCrossfade
    282:292:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    242:244:void setImagePanX(float) -> setImagePanX
    256:258:void setImagePanY(float) -> setImagePanY
    296:306:void setImageResource(int) -> setImageResource
    276:278:void setImageRotate(float) -> setImageRotate
    266:268:void setImageZoom(float) -> setImageZoom
    335:360:void setMatrix() -> setMatrix
    370:371:void setOverlay(boolean) -> setOverlay
    528:576:void setRound(float) -> setRound
    478:519:void setRoundPercent(float) -> setRoundPercent
    381:383:void setSaturation(float) -> setSaturation
    419:421:void setWarmth(float) -> setWarmth
    323:332:void updateViewMatrix() -> updateViewMatrix
androidx.constraintlayout.utils.widget.ImageFilterButton$1 -> androidx.constraintlayout.utils.widget.ImageFilterButton$1:
    489:489:void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton) -> <init>
    492:496:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterButton$2 -> androidx.constraintlayout.utils.widget.ImageFilterButton$2:
    547:547:void <init>(androidx.constraintlayout.utils.widget.ImageFilterButton) -> <init>
    550:553:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView -> androidx.constraintlayout.utils.widget.ImageFilterView:
    287:485:void <init>(android.content.Context) -> <init>
    287:490:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    287:495:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    88:88:float access$000(androidx.constraintlayout.utils.widget.ImageFilterView) -> access$000
    88:88:float access$100(androidx.constraintlayout.utils.widget.ImageFilterView) -> access$100
    802:814:void draw(android.graphics.Canvas) -> draw
    671:671:float getBrightness() -> getBrightness
    606:606:float getContrast() -> getContrast
    650:650:float getCrossfade() -> getCrossfade
    323:323:float getImagePanX() -> getImagePanX
    336:336:float getImagePanY() -> getImagePanY
    354:354:float getImageRotate() -> getImageRotate
    345:345:float getImageZoom() -> getImageZoom
    797:797:float getRound() -> getRound
    788:788:float getRoundPercent() -> getRoundPercent
    587:587:float getSaturation() -> getSaturation
    625:625:float getWarmth() -> getWarmth
    498:557:void init(android.content.Context,android.util.AttributeSet) -> init
    818:820:void layout(int,int,int,int) -> layout
    434:440:void setAltImageResource(int) -> setAltImageResource
    661:663:void setBrightness(float) -> setBrightness
    596:598:void setContrast(float) -> setContrast
    634:642:void setCrossfade(float) -> setCrossfade
    407:417:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    367:369:void setImagePanX(float) -> setImagePanX
    381:383:void setImagePanY(float) -> setImagePanY
    421:431:void setImageResource(int) -> setImageResource
    401:403:void setImageRotate(float) -> setImageRotate
    391:393:void setImageZoom(float) -> setImageZoom
    455:480:void setMatrix() -> setMatrix
    566:567:void setOverlay(boolean) -> setOverlay
    733:780:void setRound(float) -> setRound
    682:724:void setRoundPercent(float) -> setRoundPercent
    577:579:void setSaturation(float) -> setSaturation
    615:617:void setWarmth(float) -> setWarmth
    443:452:void updateViewMatrix() -> updateViewMatrix
androidx.constraintlayout.utils.widget.ImageFilterView$1 -> androidx.constraintlayout.utils.widget.ImageFilterView$1:
    693:693:void <init>(androidx.constraintlayout.utils.widget.ImageFilterView) -> <init>
    696:700:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView$2 -> androidx.constraintlayout.utils.widget.ImageFilterView$2:
    752:752:void <init>(androidx.constraintlayout.utils.widget.ImageFilterView) -> <init>
    755:758:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix -> androidx.constraintlayout.utils.widget.ImageFilterView$ImageMatrix:
    89:96:void <init>() -> <init>
    228:251:void brightness(float) -> brightness
    99:132:void saturation(float) -> saturation
    254:284:void updateMatrix(android.widget.ImageView) -> updateMatrix
    135:224:void warmth(float) -> warmth
androidx.constraintlayout.utils.widget.MockView -> androidx.constraintlayout.utils.widget.MockView:
    39:54:void <init>(android.content.Context) -> <init>
    39:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    67:100:void init(android.content.Context,android.util.AttributeSet) -> init
    104:127:void onDraw(android.graphics.Canvas) -> onDraw
androidx.constraintlayout.utils.widget.MotionButton -> androidx.constraintlayout.utils.widget.MotionButton:
    59:68:void <init>(android.content.Context) -> <init>
    59:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:float access$000(androidx.constraintlayout.utils.widget.MotionButton) -> access$000
    58:58:float access$100(androidx.constraintlayout.utils.widget.MotionButton) -> access$100
    230:242:void draw(android.graphics.Canvas) -> draw
    225:225:float getRound() -> getRound
    216:216:float getRoundPercent() -> getRoundPercent
    81:100:void init(android.content.Context,android.util.AttributeSet) -> init
    160:208:void setRound(float) -> setRound
    110:151:void setRoundPercent(float) -> setRoundPercent
androidx.constraintlayout.utils.widget.MotionButton$1 -> androidx.constraintlayout.utils.widget.MotionButton$1:
    121:121:void <init>(androidx.constraintlayout.utils.widget.MotionButton) -> <init>
    124:128:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.MotionButton$2 -> androidx.constraintlayout.utils.widget.MotionButton$2:
    179:179:void <init>(androidx.constraintlayout.utils.widget.MotionButton) -> <init>
    182:185:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.MotionLabel -> androidx.constraintlayout.utils.widget.MotionLabel:
    67:67:void <clinit>() -> <clinit>
    68:830:void <init>(android.content.Context) -> <init>
    68:830:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:830:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:66:float access$000(androidx.constraintlayout.utils.widget.MotionLabel) -> access$000
    66:66:float access$100(androidx.constraintlayout.utils.widget.MotionLabel) -> access$100
    264:271:void adjustTexture(float,float,float,float) -> adjustTexture
    206:223:android.graphics.Bitmap blur(android.graphics.Bitmap,int) -> blur
    375:398:void buildShape(float) -> buildShape
    325:331:float getHorizontalOffset() -> getHorizontalOffset
    803:803:float getRound() -> getRound
    794:794:float getRoundPercent() -> getRoundPercent
    1043:1043:float getScaleFromTextSize() -> getScaleFromTextSize
    842:842:float getTextBackgroundPanX() -> getTextBackgroundPanX
    855:855:float getTextBackgroundPanY() -> getTextBackgroundPanY
    873:873:float getTextBackgroundRotate() -> getTextBackgroundRotate
    864:864:float getTextBackgroundZoom() -> getTextBackgroundZoom
    823:823:int getTextOutlineColor() -> getTextOutlineColor
    964:964:float getTextPanX() -> getTextPanX
    983:983:float getTextPanY() -> getTextPanY
    1002:1002:float getTextureHeight() -> getTextureHeight
    1022:1022:float getTextureWidth() -> getTextureWidth
    634:634:android.graphics.Typeface getTypeface() -> getTypeface
    335:344:float getVerticalOffset() -> getVerticalOffset
    131:203:void init(android.content.Context,android.util.AttributeSet) -> init
    406:440:void layout(int,int,int,int) -> layout
    444:482:void layout(float,float,float,float) -> layout
    486:544:void onDraw(android.graphics.Canvas) -> onDraw
    639:677:void onMeasure(int,int) -> onMeasure
    283:322:void setGravity(int) -> setGravity
    738:786:void setRound(float) -> setRound
    689:729:void setRoundPercent(float) -> setRoundPercent
    1054:1055:void setScaleFromTextSize(float) -> setScaleFromTextSize
    355:357:void setText(java.lang.CharSequence) -> setText
    886:889:void setTextBackgroundPanX(float) -> setTextBackgroundPanX
    901:904:void setTextBackgroundPanY(float) -> setTextBackgroundPanY
    923:926:void setTextBackgroundRotate(float) -> setTextBackgroundRotate
    912:915:void setTextBackgroundZoom(float) -> setTextBackgroundZoom
    562:564:void setTextFillColor(int) -> setTextFillColor
    572:575:void setTextOutlineColor(int) -> setTextOutlineColor
    547:554:void setTextOutlineThickness(float) -> setTextOutlineThickness
    973:975:void setTextPanX(float) -> setTextPanX
    992:994:void setTextPanY(float) -> setTextPanY
    814:820:void setTextSize(float) -> setTextSize
    1011:1014:void setTextureHeight(float) -> setTextureHeight
    1031:1034:void setTextureWidth(float) -> setTextureWidth
    618:626:void setTypeface(android.graphics.Typeface) -> setTypeface
    578:615:void setTypefaceFromAttrs(java.lang.String,int,int) -> setTypefaceFromAttrs
    348:352:void setUpTheme(android.content.Context,android.util.AttributeSet) -> setUpTheme
    360:372:void setupPath() -> setupPath
    227:261:void setupTexture() -> setupTexture
    929:956:void updateShaderMatrix() -> updateShaderMatrix
androidx.constraintlayout.utils.widget.MotionLabel$1 -> androidx.constraintlayout.utils.widget.MotionLabel$1:
    700:700:void <init>(androidx.constraintlayout.utils.widget.MotionLabel) -> <init>
    703:707:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.MotionLabel$2 -> androidx.constraintlayout.utils.widget.MotionLabel$2:
    757:757:void <init>(androidx.constraintlayout.utils.widget.MotionLabel) -> <init>
    760:763:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
androidx.constraintlayout.utils.widget.MotionTelltales -> androidx.constraintlayout.utils.widget.MotionTelltales:
    47:57:void <init>(android.content.Context) -> <init>
    47:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:87:void init(android.content.Context,android.util.AttributeSet) -> init
    91:93:void onAttachedToWindow() -> onAttachedToWindow
    107:138:void onDraw(android.graphics.Canvas) -> onDraw
    101:103:void onLayout(boolean,int,int,int,int) -> onLayout
    95:97:void setText(java.lang.CharSequence) -> setText
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:120:void <init>(android.content.Context) -> <init>
    123:125:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    128:130:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    230:230:boolean allowsGoneWidget() -> allowsGoneWidget
    239:239:boolean getAllowsGoneWidget() -> getAllowsGoneWidget
    259:259:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:213:void init(android.util.AttributeSet) -> init
    273:282:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.core.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    184:185:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    216:217:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    248:251:void setDpMargin(int) -> setDpMargin
    268:269:void setMargin(int) -> setMargin
    147:148:void setType(int) -> setType
    151:180:void updateType(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    44:229:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType) -> <init>
    44:236:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object,boolean) -> <init>
    44:243:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    359:412:void applyCustom(android.view.View) -> applyCustom
    415:420:int clamp(int) -> clamp
    204:223:boolean diff(androidx.constraintlayout.widget.ConstraintAttribute) -> diff
    272:296:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    65:65:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType getType() -> getType
    121:136:float getValueToInterpolate() -> getValueToInterpolate
    140:170:void getValuesToInterpolate(float[]) -> getValuesToInterpolate
    73:79:boolean isContinuous() -> isContinuous
    106:111:int numberOfInterpolatedValues() -> numberOfInterpolatedValues
    483:540:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    300:356:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    88:89:void setColorValue(int) -> setColorValue
    84:85:void setFloatValue(float) -> setFloatValue
    92:93:void setIntValue(int) -> setIntValue
    424:480:void setInterpolatedValue(android.view.View,float[]) -> setInterpolatedValue
    96:97:void setStringValue(java.lang.String) -> setStringValue
    173:195:void setValue(float[]) -> setValue
    246:268:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    73:73:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    53:61:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    53:53:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    64:102:void <init>(android.content.Context) -> <init>
    64:108:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:114:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    271:291:void addID(java.lang.String) -> addID
    222:230:void addRscID(int) -> addRscID
    297:330:void addTag(java.lang.String) -> addTag
    155:169:void addView(android.view.View) -> addView
    459:474:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    480:484:void applyLayoutFeatures() -> applyLayoutFeatures
    489:489:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    634:641:boolean containsId(int) -> containsId
    603:618:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    338:375:int findId(java.lang.String) -> findId
    387:409:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    204:204:int[] getReferencedIds() -> getReferencedIds
    538:546:android.view.View[] getViews(androidx.constraintlayout.widget.ConstraintLayout) -> getViews
    645:652:int indexFromId(int) -> indexFromId
    120:135:void init(android.util.AttributeSet) -> init
    578:600:void loadParameters(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.core.widgets.HelperWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> loadParameters
    139:146:void onAttachedToWindow() -> onAttachedToWindow
    238:238:void onDraw(android.graphics.Canvas) -> onDraw
    245:250:void onMeasure(int,int) -> onMeasure
    178:196:int removeView(android.view.View) -> removeView
    623:623:void resolveRtl(androidx.constraintlayout.core.widgets.ConstraintWidget,boolean) -> resolveRtl
    416:431:void setIds(java.lang.String) -> setIds
    437:452:void setReferenceTags(java.lang.String) -> setReferenceTags
    211:216:void setReferencedIds(int[]) -> setReferencedIds
    627:631:void setTag(int,java.lang.Object) -> setTag
    569:569:void updatePostConstraints(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostConstraints
    557:557:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    565:565:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    573:573:void updatePreDraw(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreDraw
    498:524:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    529:534:void updatePreLayout(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.Helper,android.util.SparseArray) -> updatePreLayout
    257:265:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    536:536:void <clinit>() -> <clinit>
    499:1550:void <init>(android.content.Context) -> <init>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    499:1550:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    486:486:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    486:486:java.util.ArrayList access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    1257:1480:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1958:1958:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1984:2075:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1545:1547:void fillMetrics(androidx.constraintlayout.core.Metrics) -> fillMetrics
    3598:3600:void forceLayout() -> forceLayout
    486:486:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1942:1942:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    486:486:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1934:1934:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1950:1950:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    572:578:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1128:1128:int getMaxHeight() -> getMaxHeight
    1118:1118:int getMaxWidth() -> getMaxWidth
    1081:1081:int getMinHeight() -> getMinHeight
    1071:1071:int getMinWidth() -> getMinWidth
    1926:1926:int getOptimizationLevel() -> getOptimizationLevel
    1734:1743:int getPaddingWidth() -> getPaddingWidth
    544:547:androidx.constraintlayout.widget.SharedValues getSharedValues() -> getSharedValues
    1502:1515:androidx.constraintlayout.core.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1976:1976:android.view.View getViewById(int) -> getViewById
    1525:1537:androidx.constraintlayout.core.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    944:986:void init(android.util.AttributeSet,int,int) -> init
    1722:1726:boolean isRtl() -> isRtl
    2090:2099:void loadLayoutDescription(int) -> loadLayoutDescription
    3603:3611:void markHierarchyDirty() -> markHierarchyDirty
    1839:1890:void onLayout(boolean,int,int,int,int) -> onLayout
    1641:1719:void onMeasure(int,int) -> onMeasure
    1002:1023:void onViewAdded(android.view.View) -> onViewAdded
    1030:1036:void onViewRemoved(android.view.View) -> onViewRemoved
    994:995:void parseLayoutDescription(int) -> parseLayoutDescription
    3592:3594:void requestLayout() -> requestLayout
    1611:1634:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1562:1596:void resolveSystem(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1149:1249:void setChildrenConstraints() -> setChildrenConstraints
    1967:1968:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    554:566:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    607:610:void setId(int) -> setId
    1103:1108:void setMaxHeight(int) -> setMaxHeight
    1090:1095:void setMaxWidth(int) -> setMaxWidth
    1057:1062:void setMinHeight(int) -> setMinHeight
    1044:1049:void setMinWidth(int) -> setMinWidth
    2078:2082:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    1915:1917:void setOptimizationLevel(int) -> setOptimizationLevel
    1748:1814:void setSelfDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1825:1828:void setState(int,int,int) -> setState
    1483:1499:void setWidgetBaseline(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray,int,androidx.constraintlayout.core.widgets.ConstraintAnchor$Type) -> setWidgetBaseline
    3620:3620:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1132:1145:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    679:679:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2216:2724:void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> <init>
    2216:3353:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2216:3415:void <init>(int,int) -> <init>
    2216:3419:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3583:3583:java.lang.String getConstraintTag() -> getConstraintTag
    2615:2615:androidx.constraintlayout.core.widgets.ConstraintWidget getConstraintWidget() -> getConstraintWidget
    2627:2630:void reset() -> reset
    3459:3574:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2623:2624:void setWidgetDebugName(java.lang.String) -> setWidgetDebugName
    3356:3411:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
# {"id":"sourceFile","fileName":"ConstraintLayout.java"}
    2799:2872:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    637:639:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    629:635:void captureLayoutInfo(int,int,int,int,int,int) -> captureLayoutInfo
    923:938:void didMeasures() -> didMeasures
    906:918:boolean isSimilarSpec(int,int,int) -> isSimilarSpec
    645:892:void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    42:51:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:346:void load(android.content.Context,int) -> load
    54:69:boolean needsToChange(int,float,float) -> needsToChange
    349:377:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
    133:134:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    73:130:void updateConstraints(int,float,float) -> updateConstraints
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    141:168:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:172:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
    175:180:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    186:251:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    258:270:boolean match(float,float) -> match
androidx.constraintlayout.widget.ConstraintProperties -> androidx.constraintlayout.widget.ConstraintProperties:
    1050:1058:void <init>(android.view.View) -> <init>
    738:750:androidx.constraintlayout.widget.ConstraintProperties addToHorizontalChain(int,int) -> addToHorizontalChain
    761:773:androidx.constraintlayout.widget.ConstraintProperties addToHorizontalChainRTL(int,int) -> addToHorizontalChainRTL
    784:796:androidx.constraintlayout.widget.ConstraintProperties addToVerticalChain(int,int) -> addToVerticalChain
    420:421:androidx.constraintlayout.widget.ConstraintProperties alpha(float) -> alpha
    1061:1061:void apply() -> apply
    114:140:androidx.constraintlayout.widget.ConstraintProperties center(int,int,int,int,int,int,float) -> center
    156:159:androidx.constraintlayout.widget.ConstraintProperties centerHorizontally(int,int,int,int,int,int,float) -> centerHorizontally
    207:212:androidx.constraintlayout.widget.ConstraintProperties centerHorizontally(int) -> centerHorizontally
    175:178:androidx.constraintlayout.widget.ConstraintProperties centerHorizontallyRtl(int,int,int,int,int,int,float) -> centerHorizontallyRtl
    222:227:androidx.constraintlayout.widget.ConstraintProperties centerHorizontallyRtl(int) -> centerHorizontallyRtl
    194:197:androidx.constraintlayout.widget.ConstraintProperties centerVertically(int,int,int,int,int,int,float) -> centerVertically
    237:242:androidx.constraintlayout.widget.ConstraintProperties centerVertically(int) -> centerVertically
    905:1027:androidx.constraintlayout.widget.ConstraintProperties connect(int,int,int,int) -> connect
    652:653:androidx.constraintlayout.widget.ConstraintProperties constrainDefaultHeight(int) -> constrainDefaultHeight
    664:665:androidx.constraintlayout.widget.ConstraintProperties constrainDefaultWidth(int) -> constrainDefaultWidth
    581:582:androidx.constraintlayout.widget.ConstraintProperties constrainHeight(int) -> constrainHeight
    604:605:androidx.constraintlayout.widget.ConstraintProperties constrainMaxHeight(int) -> constrainMaxHeight
    616:617:androidx.constraintlayout.widget.ConstraintProperties constrainMaxWidth(int) -> constrainMaxWidth
    628:629:androidx.constraintlayout.widget.ConstraintProperties constrainMinHeight(int) -> constrainMinHeight
    640:641:androidx.constraintlayout.widget.ConstraintProperties constrainMinWidth(int) -> constrainMinWidth
    592:593:androidx.constraintlayout.widget.ConstraintProperties constrainWidth(int) -> constrainWidth
    398:399:androidx.constraintlayout.widget.ConstraintProperties dimensionRatio(java.lang.String) -> dimensionRatio
    431:434:androidx.constraintlayout.widget.ConstraintProperties elevation(float) -> elevation
    341:365:androidx.constraintlayout.widget.ConstraintProperties goneMargin(int,int) -> goneMargin
    375:376:androidx.constraintlayout.widget.ConstraintProperties horizontalBias(float) -> horizontalBias
    707:708:androidx.constraintlayout.widget.ConstraintProperties horizontalChainStyle(int) -> horizontalChainStyle
    676:677:androidx.constraintlayout.widget.ConstraintProperties horizontalWeight(float) -> horizontalWeight
    306:330:androidx.constraintlayout.widget.ConstraintProperties margin(int,int) -> margin
    252:295:androidx.constraintlayout.widget.ConstraintProperties removeConstraints(int) -> removeConstraints
    842:892:androidx.constraintlayout.widget.ConstraintProperties removeFromHorizontalChain() -> removeFromHorizontalChain
    807:831:androidx.constraintlayout.widget.ConstraintProperties removeFromVerticalChain() -> removeFromVerticalChain
    444:445:androidx.constraintlayout.widget.ConstraintProperties rotation(float) -> rotation
    455:456:androidx.constraintlayout.widget.ConstraintProperties rotationX(float) -> rotationX
    466:467:androidx.constraintlayout.widget.ConstraintProperties rotationY(float) -> rotationY
    477:478:androidx.constraintlayout.widget.ConstraintProperties scaleX(float) -> scaleX
    488:488:androidx.constraintlayout.widget.ConstraintProperties scaleY(float) -> scaleY
    1031:1047:java.lang.String sideToString(int) -> sideToString
    521:523:androidx.constraintlayout.widget.ConstraintProperties transformPivot(float,float) -> transformPivot
    498:499:androidx.constraintlayout.widget.ConstraintProperties transformPivotX(float) -> transformPivotX
    509:510:androidx.constraintlayout.widget.ConstraintProperties transformPivotY(float) -> transformPivotY
    556:558:androidx.constraintlayout.widget.ConstraintProperties translation(float,float) -> translation
    533:534:androidx.constraintlayout.widget.ConstraintProperties translationX(float) -> translationX
    544:545:androidx.constraintlayout.widget.ConstraintProperties translationY(float) -> translationY
    568:571:androidx.constraintlayout.widget.ConstraintProperties translationZ(float) -> translationZ
    386:387:androidx.constraintlayout.widget.ConstraintProperties verticalBias(float) -> verticalBias
    726:727:androidx.constraintlayout.widget.ConstraintProperties verticalChainStyle(int) -> verticalChainStyle
    688:689:androidx.constraintlayout.widget.ConstraintProperties verticalWeight(float) -> verticalWeight
    409:410:androidx.constraintlayout.widget.ConstraintProperties visibility(int) -> visibility
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    241:556:void <clinit>() -> <clinit>
    78:244:void <init>() -> <init>
    78:78:int access$100(android.content.res.TypedArray,int,int) -> access$100
    78:78:java.util.HashMap access$1300(androidx.constraintlayout.widget.ConstraintSet) -> access$1300
    78:78:int[] access$200() -> access$200
    78:78:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,int) -> access$300
    78:78:void access$400(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,float) -> access$400
    78:78:void access$500(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,java.lang.String) -> access$500
    78:78:void access$600(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,boolean) -> access$600
    3934:3950:void addAttributes(androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.String[]) -> addAttributes
    4019:4020:void addColorAttributes(java.lang.String[]) -> addColorAttributes
    4023:4024:void addFloatAttributes(java.lang.String[]) -> addFloatAttributes
    4015:4016:void addIntAttributes(java.lang.String[]) -> addIntAttributes
    4027:4028:void addStringAttributes(java.lang.String[]) -> addStringAttributes
    3683:3691:void addToHorizontalChain(int,int,int) -> addToHorizontalChain
    3701:3709:void addToHorizontalChainRTL(int,int,int) -> addToHorizontalChainRTL
    3719:3727:void addToVerticalChain(int,int,int) -> addToVerticalChain
    2285:2305:void applyCustomAttributes(androidx.constraintlayout.widget.ConstraintLayout) -> applyCustomAttributes
    677:697:void applyDeltaFrom(androidx.constraintlayout.widget.ConstraintSet) -> applyDeltaFrom
    2263:2266:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    2316:2324:void applyToHelper(androidx.constraintlayout.widget.ConstraintHelper,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyToHelper
    2345:2475:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    2333:2339:void applyToLayoutParams(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyToLayoutParams
    2275:2277:void applyToWithoutCustom(androidx.constraintlayout.widget.ConstraintLayout) -> applyToWithoutCustom
    4232:4237:androidx.constraintlayout.widget.ConstraintSet$Constraint buildDelta(android.content.Context,org.xmlpull.v1.XmlPullParser) -> buildDelta
    2497:2529:void center(int,int,int,int,int,int,int,float) -> center
    2546:2552:void centerHorizontally(int,int,int,int,int,int,int,float) -> centerHorizontally
    2978:2983:void centerHorizontally(int,int) -> centerHorizontally
    2570:2576:void centerHorizontallyRtl(int,int,int,int,int,int,int,float) -> centerHorizontallyRtl
    2992:2997:void centerHorizontallyRtl(int,int) -> centerHorizontallyRtl
    2593:2599:void centerVertically(int,int,int,int,int,int,int,float) -> centerVertically
    3006:3011:void centerVertically(int,int) -> centerVertically
    3019:3020:void clear(int) -> clear
    3029:3087:void clear(int,int) -> clear
    2146:2147:void clone(android.content.Context,int) -> clone
    2155:2163:void clone(androidx.constraintlayout.widget.ConstraintSet) -> clone
    2171:2224:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    2232:2255:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    2721:2843:void connect(int,int,int,int,int) -> connect
    2855:2969:void connect(int,int,int,int) -> connect
    3489:3493:void constrainCircle(int,int,int,float) -> constrainCircle
    3574:3575:void constrainDefaultHeight(int,int) -> constrainDefaultHeight
    3610:3611:void constrainDefaultWidth(int,int) -> constrainDefaultWidth
    3464:3465:void constrainHeight(int,int) -> constrainHeight
    3504:3505:void constrainMaxHeight(int,int) -> constrainMaxHeight
    3516:3517:void constrainMaxWidth(int,int) -> constrainMaxWidth
    3528:3529:void constrainMinHeight(int,int) -> constrainMinHeight
    3540:3541:void constrainMinWidth(int,int) -> constrainMinWidth
    3562:3563:void constrainPercentHeight(int,float) -> constrainPercentHeight
    3551:3552:void constrainPercentWidth(int,float) -> constrainPercentWidth
    3476:3477:void constrainWidth(int,int) -> constrainWidth
    3598:3599:void constrainedHeight(int,boolean) -> constrainedHeight
    3586:3587:void constrainedWidth(int,boolean) -> constrainedWidth
    5230:5262:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3823:3826:void create(int,int) -> create
    3837:3843:void createBarrier(int,int,int,int[]) -> createBarrier
    2659:2660:void createHorizontalChain(int,int,int,int,int[],float[],int) -> createHorizontalChain
    2684:2707:void createHorizontalChain(int,int,int,int,int[],float[],int,int,int) -> createHorizontalChain
    2678:2679:void createHorizontalChainRtl(int,int,int,int,int[],float[],int) -> createHorizontalChainRtl
    2618:2639:void createVerticalChain(int,int,int,int,int[],float[],int) -> createVerticalChain
    5322:5349:void dump(androidx.constraintlayout.motion.widget.MotionScene,int[]) -> dump
    4217:4221:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet,boolean) -> fillFromAttributeList
    4031:4034:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    3269:3269:boolean getApplyElevation(int) -> getApplyElevation
    5269:5272:androidx.constraintlayout.widget.ConstraintSet$Constraint getConstraint(int) -> getConstraint
    559:559:java.util.HashMap getCustomAttributeSet() -> getCustomAttributeSet
    3240:3240:int getHeight(int) -> getHeight
    5279:5284:int[] getKnownIds() -> getKnownIds
    563:563:androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int) -> getParameters
    3889:3893:int[] getReferencedIds(int) -> getReferencedIds
    3230:3230:int getVisibility(int) -> getVisibility
    3220:3220:int getVisibilityMode(int) -> getVisibilityMode
    3250:3250:int getWidth(int) -> getWidth
    5292:5292:boolean isForceId() -> isForceId
    4066:4102:void load(android.content.Context,int) -> load
    4111:4206:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    4209:4213:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3965:3974:void parseColorAttributes(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String) -> parseColorAttributes
    707:779:void parseDimensionConstraints(java.lang.Object,android.content.res.TypedArray,int,int) -> parseDimensionConstraints
    859:963:void parseDimensionConstraintsString(java.lang.Object,java.lang.String,int) -> parseDimensionConstraintsString
    787:837:void parseDimensionRatioString(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,java.lang.String) -> parseDimensionRatioString
    3977:3986:void parseFloatAttributes(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String) -> parseFloatAttributes
    3953:3962:void parseIntAttributes(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String) -> parseIntAttributes
    3989:3995:void parseStringAttributes(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String) -> parseStringAttributes
    4837:5227:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray,boolean) -> populateConstraint
    4242:4558:void populateOverride(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateOverride
    573:602:void readFallback(androidx.constraintlayout.widget.ConstraintSet) -> readFallback
    610:674:void readFallback(androidx.constraintlayout.widget.ConstraintLayout) -> readFallback
    3914:3915:void removeAttribute(java.lang.String) -> removeAttribute
    3770:3814:void removeFromHorizontalChain(int) -> removeFromHorizontalChain
    3737:3760:void removeFromVerticalChain(int) -> removeFromVerticalChain
    3260:3261:void setAlpha(int,float) -> setAlpha
    3280:3283:void setApplyElevation(int,boolean) -> setApplyElevation
    3909:3911:void setBarrierType(int,int) -> setBarrierType
    3922:3923:void setColorValue(int,java.lang.String,int) -> setColorValue
    4561:4641:void setDeltaValue(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,float) -> setDeltaValue
    4644:4786:void setDeltaValue(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,int) -> setDeltaValue
    4789:4813:void setDeltaValue(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,java.lang.String) -> setDeltaValue
    4816:4834:void setDeltaValue(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,boolean) -> setDeltaValue
    3189:3190:void setDimensionRatio(int,java.lang.String) -> setDimensionRatio
    3436:3437:void setEditorAbsoluteX(int,int) -> setEditorAbsoluteX
    3443:3444:void setEditorAbsoluteY(int,int) -> setEditorAbsoluteY
    3292:3296:void setElevation(int,float) -> setElevation
    3926:3927:void setFloatValue(int,java.lang.String,float) -> setFloatValue
    5302:5303:void setForceId(boolean) -> setForceId
    3133:3159:void setGoneMargin(int,int,int) -> setGoneMargin
    3852:3856:void setGuidelineBegin(int,int) -> setGuidelineBegin
    3865:3868:void setGuidelineEnd(int,int) -> setGuidelineEnd
    3877:3880:void setGuidelinePercent(int,float) -> setGuidelinePercent
    3168:3169:void setHorizontalBias(int,float) -> setHorizontalBias
    3652:3653:void setHorizontalChainStyle(int,int) -> setHorizontalChainStyle
    3621:3622:void setHorizontalWeight(int,float) -> setHorizontalWeight
    3918:3919:void setIntValue(int,java.lang.String,int) -> setIntValue
    3450:3453:void setLayoutWrapBehavior(int,int) -> setLayoutWrapBehavior
    3097:3123:void setMargin(int,int,int) -> setMargin
    3904:3906:void setReferencedIds(int,int[]) -> setReferencedIds
    3305:3306:void setRotation(int,float) -> setRotation
    3315:3316:void setRotationX(int,float) -> setRotationX
    3325:3326:void setRotationY(int,float) -> setRotationY
    3335:3336:void setScaleX(int,float) -> setScaleX
    3345:3346:void setScaleY(int,float) -> setScaleY
    3930:3931:void setStringValue(int,java.lang.String,java.lang.String) -> setStringValue
    3382:3385:void setTransformPivot(int,float,float) -> setTransformPivot
    3357:3358:void setTransformPivotX(int,float) -> setTransformPivotX
    3369:3370:void setTransformPivotY(int,float) -> setTransformPivotY
    3415:3418:void setTranslation(int,float,float) -> setTranslation
    3394:3395:void setTranslationX(int,float) -> setTranslationX
    3404:3405:void setTranslationY(int,float) -> setTranslationY
    3427:3430:void setTranslationZ(int,float) -> setTranslationZ
    5312:5313:void setValidateOnParse(boolean) -> setValidateOnParse
    3178:3179:void setVerticalBias(int,float) -> setVerticalBias
    3672:3673:void setVerticalChainStyle(int,int) -> setVerticalChainStyle
    3632:3633:void setVerticalWeight(int,float) -> setVerticalWeight
    3199:3200:void setVisibility(int,int) -> setVisibility
    3210:3211:void setVisibilityMode(int,int) -> setVisibilityMode
    4038:4054:java.lang.String sideToString(int) -> sideToString
    3998:4011:java.lang.String[] splitString(java.lang.String) -> splitString
    5386:5394:void writeState(java.io.Writer,androidx.constraintlayout.widget.ConstraintLayout,int) -> writeState
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1805:1812:void <init>() -> <init>
    1805:1805:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1805:1805:void access$1000(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String,int) -> access$1000
    1805:1805:void access$1100(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String,float) -> access$1100
    1805:1805:void access$1200(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String,java.lang.String) -> access$1200
    1805:1805:void access$700(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$700
    1805:1805:void access$800(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$800
    1805:1805:void access$900(androidx.constraintlayout.widget.ConstraintSet$Constraint,java.lang.String,int) -> access$900
    1912:1915:void applyDelta(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyDelta
    2066:2135:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1805:1805:java.lang.Object clone() -> clone
    1957:1964:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1996:2063:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1968:1976:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1979:1993:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1927:1937:androidx.constraintlayout.widget.ConstraintAttribute get(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType) -> get
    1918:1923:void printDelta(java.lang.String) -> printDelta
    1953:1954:void setColorValue(java.lang.String,int) -> setColorValue
    1945:1946:void setFloatValue(java.lang.String,float) -> setFloatValue
    1949:1950:void setIntValue(java.lang.String,int) -> setIntValue
    1941:1942:void setStringValue(java.lang.String,java.lang.String) -> setStringValue
androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta -> androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta:
# {"id":"sourceFile","fileName":"ConstraintSet.java"}
    1815:1861:void <init>() -> <init>
    1825:1831:void add(int,int) -> add
    1838:1844:void add(int,float) -> add
    1851:1857:void add(int,java.lang.String) -> add
    1864:1870:void add(int,boolean) -> add
    1873:1885:void applyDelta(androidx.constraintlayout.widget.ConstraintSet$Constraint) -> applyDelta
    1889:1908:void printDelta(java.lang.String) -> printDelta
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    1117:1238:void <clinit>() -> <clinit>
    968:1039:void <init>() -> <init>
    1042:1115:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    1465:1510:void dump(androidx.constraintlayout.motion.widget.MotionScene,java.lang.StringBuilder) -> dump
    1241:1462:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1709:1733:void <clinit>() -> <clinit>
    1678:1692:void <init>() -> <init>
    1699:1707:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1736:1799:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1638:1643:void <init>() -> <init>
    1646:1651:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1654:1672:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1549:1578:void <clinit>() -> <clinit>
    1516:1530:void <init>() -> <init>
    1533:1547:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1581:1632:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine -> androidx.constraintlayout.widget.ConstraintSet$WriteJsonEngine:
    5662:5782:void <init>(androidx.constraintlayout.widget.ConstraintSet,java.io.Writer,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    5785:5793:java.lang.String getName(int) -> getName
    5798:5804:java.lang.String lookup(int) -> lookup
    5825:5833:void writeCircle(int,float,int) -> writeCircle
    5809:5822:void writeConstraint(java.lang.String,int,java.lang.String,int,int) -> writeConstraint
    5742:5780:void writeDimension(java.lang.String,int,int,float,int,int,boolean) -> writeDimension
    5733:5733:void writeGuideline(int,int,int,float) -> writeGuideline
    5680:5730:void writeLayout() -> writeLayout
    5836:5845:void writeVariable(java.lang.String,int) -> writeVariable
    5848:5856:void writeVariable(java.lang.String,float) -> writeVariable
    5859:5867:void writeVariable(java.lang.String,float,float) -> writeVariable
    5880:5888:void writeVariable(java.lang.String,boolean,boolean) -> writeVariable
    5891:5900:void writeVariable(java.lang.String,int[]) -> writeVariable
    5903:5911:void writeVariable(java.lang.String,java.lang.String) -> writeVariable
androidx.constraintlayout.widget.ConstraintSet$WriteXmlEngine -> androidx.constraintlayout.widget.ConstraintSet$WriteXmlEngine:
    5401:5545:void <init>(androidx.constraintlayout.widget.ConstraintSet,java.io.Writer,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    5548:5556:java.lang.String getName(int) -> getName
    5561:5567:java.lang.String lookup(int) -> lookup
    5532:5543:void writeBaseDimension(java.lang.String,int,int) -> writeBaseDimension
    5517:5519:void writeBoolen(java.lang.String,boolean,boolean) -> writeBoolen
    5527:5529:void writeDimension(java.lang.String,int,int) -> writeDimension
    5522:5524:void writeEnum(java.lang.String,int,java.lang.String[],int) -> writeEnum
    5418:5512:void writeLayout() -> writeLayout
    5608:5612:void writeVariable(java.lang.String,int) -> writeVariable
    5615:5621:void writeVariable(java.lang.String,float,float) -> writeVariable
    5624:5630:void writeVariable(java.lang.String,java.lang.String,java.lang.String) -> writeVariable
    5633:5642:void writeVariable(java.lang.String,int[]) -> writeVariable
    5572:5578:void writeXmlConstraint(java.lang.String,int) -> writeXmlConstraint
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    41:43:void <init>(android.content.Context) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    136:136:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    148:148:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    152:157:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    140:141:void init(android.util.AttributeSet) -> init
    163:163:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    67:83:void <init>(int,int) -> <init>
    67:87:void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams) -> <init>
    67:127:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.ConstraintsChangedListener -> androidx.constraintlayout.widget.ConstraintsChangedListener:
    24:24:void <init>() -> <init>
    42:42:void postLayoutChange(int,int) -> postLayoutChange
    33:33:void preLayoutChange(int,int) -> preLayoutChange
androidx.constraintlayout.widget.Group -> androidx.constraintlayout.widget.Group:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    99:100:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    71:73:void init(android.util.AttributeSet) -> init
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    89:91:void setElevation(float) -> setElevation
    83:85:void setVisibility(int) -> setVisibility
    108:111:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:57:void <init>(android.content.Context) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    90:90:void draw(android.graphics.Canvas) -> draw
    97:98:void onMeasure(int,int) -> onMeasure
    106:109:void setGuidelineBegin(int) -> setGuidelineBegin
    117:120:void setGuidelineEnd(int) -> setGuidelineEnd
    127:130:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    46:53:void <init>(android.content.Context) -> <init>
    46:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:63:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:68:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    114:114:android.view.View getContent() -> getContent
    106:106:int getEmptyVisibility() -> getEmptyVisibility
    71:88:void init(android.util.AttributeSet) -> init
    125:147:void onDraw(android.graphics.Canvas) -> onDraw
    176:194:void setContentId(int) -> setContentId
    97:98:void setEmptyVisibility(int) -> setEmptyVisibility
    201:215:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    154:168:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.R$styleable -> androidx.constraintlayout.widget.R$styleable:
    1593:2911:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ReactiveGuide -> androidx.constraintlayout.widget.ReactiveGuide:
    32:41:void <init>(android.content.Context) -> <init>
    32:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    32:53:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    32:59:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    208:211:void changeValue(int,int,androidx.constraintlayout.motion.widget.MotionLayout,int) -> changeValue
    125:125:void draw(android.graphics.Canvas) -> draw
    99:99:int getApplyToConstraintSetId() -> getApplyToConstraintSetId
    85:85:int getAttributeId() -> getAttributeId
    62:83:void init(android.util.AttributeSet) -> init
    106:106:boolean isAnimatingChange() -> isAnimatingChange
    132:133:void onMeasure(int,int) -> onMeasure
    169:205:void onNewValue(int,int,int) -> onNewValue
    109:110:void setAnimateChange(boolean) -> setAnimateChange
    103:104:void setApplyToConstraintSetId(int) -> setApplyToConstraintSetId
    88:96:void setAttributeId(int) -> setAttributeId
    141:144:void setGuidelineBegin(int) -> setGuidelineBegin
    152:155:void setGuidelineEnd(int) -> setGuidelineEnd
    162:165:void setGuidelinePercent(float) -> setGuidelinePercent
    117:117:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.SharedValues -> androidx.constraintlayout.widget.SharedValues:
    30:34:void <init>() -> <init>
    41:47:void addListener(int,androidx.constraintlayout.widget.SharedValues$SharedValuesListener) -> addListener
    71:72:void clearListeners() -> clearListeners
    79:110:void fireNewValue(int,int) -> fireNewValue
    75:75:int getValue(int) -> getValue
    50:62:void removeListener(int,androidx.constraintlayout.widget.SharedValues$SharedValuesListener) -> removeListener
    65:68:void removeListener(androidx.constraintlayout.widget.SharedValues$SharedValuesListener) -> removeListener
androidx.constraintlayout.widget.StateSet -> androidx.constraintlayout.widget.StateSet:
    41:57:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    179:207:int convertToConstraintSet(int,int,float,float) -> convertToConstraintSet
    70:140:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    143:158:boolean needsToChange(int,float,float) -> needsToChange
    162:163:void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener) -> setOnConstraintsChanged
    166:166:int stateGetConstraintID(int,int,int) -> stateGetConstraintID
    212:241:int updateConstraints(int,int,float,float) -> updateConstraints
androidx.constraintlayout.widget.StateSet$State -> androidx.constraintlayout.widget.StateSet$State:
    251:273:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    276:277:void add(androidx.constraintlayout.widget.StateSet$Variant) -> add
    280:285:int findMatch(float,float) -> findMatch
androidx.constraintlayout.widget.StateSet$Variant -> androidx.constraintlayout.widget.StateSet$Variant:
    291:344:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    351:363:boolean match(float,float) -> match
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
    35:36:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    125:126:void applyLayoutFeaturesInConstraintSet(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeaturesInConstraintSet
    48:62:void init(android.util.AttributeSet) -> init
    73:99:void onAttachedToWindow() -> onAttachedToWindow
    66:66:void onMeasure(androidx.constraintlayout.core.widgets.VirtualLayout,int,int) -> onMeasure
    115:117:void setElevation(float) -> setElevation
    106:108:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.R -> androidx.coordinatorlayout.R:
    9:9:void <init>() -> <init>
androidx.coordinatorlayout.R$attr -> androidx.coordinatorlayout.R$attr:
    10:10:void <init>() -> <init>
androidx.coordinatorlayout.R$color -> androidx.coordinatorlayout.R$color:
    33:33:void <init>() -> <init>
androidx.coordinatorlayout.R$dimen -> androidx.coordinatorlayout.R$dimen:
    39:39:void <init>() -> <init>
androidx.coordinatorlayout.R$drawable -> androidx.coordinatorlayout.R$drawable:
    63:63:void <init>() -> <init>
androidx.coordinatorlayout.R$id -> androidx.coordinatorlayout.R$id:
    77:77:void <init>() -> <init>
androidx.coordinatorlayout.R$integer -> androidx.coordinatorlayout.R$integer:
    153:153:void <init>() -> <init>
androidx.coordinatorlayout.R$layout -> androidx.coordinatorlayout.R$layout:
    156:156:void <init>() -> <init>
androidx.coordinatorlayout.R$string -> androidx.coordinatorlayout.R$string:
    165:165:void <init>() -> <init>
androidx.coordinatorlayout.R$style -> androidx.coordinatorlayout.R$style:
    168:168:void <init>() -> <init>
androidx.coordinatorlayout.R$styleable -> androidx.coordinatorlayout.R$styleable:
    179:225:void <clinit>() -> <clinit>
    178:178:void <init>() -> <init>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    207:208:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:255:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:160:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1627:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1281:1286:int clamp(int,int,int) -> clamp
    1066:1078:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:875:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1535:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1722:1735:boolean doViewsOverlap(android.view.View,android.view.View) -> doViewsOverlap
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:345:void drawableStateChanged() -> drawableStateChanged
    1584:1601:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:988:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:733:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1096:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1063:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:610:int getKeyline(int) -> getKeyline
    965:967:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:685:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:457:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1217:void layoutChild(android.view.View,int) -> layoutChild
    1106:1116:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1183:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1491:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1692:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:279:void onAttachedToWindow() -> onAttachedToWindow
    1307:1409:void onChildViewsChanged(int) -> onChildViewsChanged
    283:293:void onDetachedFromWindow() -> onDetachedFromWindow
    926:934:void onDraw(android.graphics.Canvas) -> onDraw
    532:545:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:922:void onLayout(boolean,int,int,int,int) -> onLayout
    889:901:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:850:void onMeasure(int,int) -> onMeasure
    760:762:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1962:1986:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1992:2012:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1914:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1919:1957:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1854:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1861:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1909:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1797:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1819:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3264:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3287:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1771:1791:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1824:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1847:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    551:587:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    461:527:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:722:void prepareChildren() -> prepareChildren
    953:955:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:166:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1641:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:597:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:437:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1247:1247:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1225:1231:int resolveGravity(int) -> resolveGravity
    1239:1239:int resolveKeylineGravity(int) -> resolveKeylineGravity
    938:940:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1500:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1509:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:260:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:318:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:381:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:370:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:360:void setVisibility(int) -> setVisibility
    384:393:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3305:3329:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2091:2092:void <init>() -> <init>
    2102:2103:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2796:2796:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2195:2195:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2213:2213:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2385:2386:java.lang.Object getTag(android.view.View) -> getTag
    2256:2256:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2716:2716:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2114:2114:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2286:2286:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2305:2305:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2124:2124:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2151:2151:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2359:2359:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2330:2330:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2668:2668:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2696:2696:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2599:2599:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2633:2636:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2527:2527:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2540:2544:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2587:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2443:2443:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2469:2473:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2738:2738:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2756:2756:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2398:2398:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2426:2430:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2484:2484:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2509:2512:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2175:2175:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2372:2374:void setTag(android.view.View,java.lang.Object) -> setTag
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3218:3219:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3226:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3235:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2809:2870:void <init>(int,int) -> <init>
    2809:2905:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2809:2909:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2809:2913:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2809:2917:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3003:3003:boolean checkAnchorChanged() -> checkAnchorChanged
    3100:3102:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3014:3017:boolean didBlockInteraction() -> didBlockInteraction
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2926:2926:int getAnchorId() -> getAnchorId
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3079:3079:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2995:2995:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3112:3113:void invalidateAnchor() -> invalidateAnchor
    3033:3038:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3069:3075:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3087:3088:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3054:3055:void resetNestedScroll(int) -> resetNestedScroll
    3050:3051:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3141:3178:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2940:2942:void setAnchorId(int) -> setAnchorId
    2965:2980:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3083:3084:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2987:2988:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3058:3066:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3210:3213:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3186:3203:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2024:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3373:3373:void <clinit>() -> <clinit>
    3335:3348:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3352:void <init>(android.os.Parcelable) -> <init>
    3356:3371:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
# {"id":"sourceFile","fileName":"CoordinatorLayout.java"}
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    2031:2031:void <init>() -> <init>
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
    2034:2041:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:89:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:194:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
    200:200:int size() -> size
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    96:97:void <init>() -> <init>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.R$styleable -> androidx.core.R$styleable:
    171:210:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    152:154:void <init>() -> <init>
    290:295:void finishAffinity(android.app.Activity) -> finishAffinity
    307:312:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    172:172:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    332:344:android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    210:211:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    414:417:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    580:606:void recreate(android.app.Activity) -> recreate
    569:569:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> requestDragAndDropPermissions
    498:538:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    365:373:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    386:392:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    405:411:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    640:643:void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle) -> setLocusContext
    164:165:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> setPermissionCompatDelegate
    552:555:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    236:241:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    273:280:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    420:423:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    519:519:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    522:535:void run() -> run
androidx.core.app.ActivityCompat$2 -> androidx.core.app.ActivityCompat$2:
    588:588:void <init>(android.app.Activity) -> <init>
    591:598:void run() -> run
androidx.core.app.ActivityCompat$Api30Impl -> androidx.core.app.ActivityCompat$Api30Impl:
    715:716:void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle) -> setLocusContext
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    649:651:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    680:680:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    686:686:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    674:675:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    669:670:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    663:665:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    656:658:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    693:700:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
# {"id":"sourceFile","fileName":"ActivityCompat.java"}
    694:694:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    697:698:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    300:301:void <init>() -> <init>
    325:325:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    246:249:androidx.core.app.ActivityOptionsCompat makeBasic() -> makeBasic
    122:126:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    68:72:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    98:102:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    179:183:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    207:219:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> makeSceneTransitionAnimation
    234:237:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    151:155:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    375:375:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    315:315:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    337:337:android.os.Bundle toBundle() -> toBundle
    347:347:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl:
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    293:296:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    284:288:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    262:262:android.os.Bundle toBundle() -> toBundle
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:100:void <clinit>() -> <clinit>
    378:380:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:362:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    316:325:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    302:311:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:352:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:372:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:297:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:171:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:147:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:167:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:292:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:196:void <init>(android.app.Activity) -> <init>
    200:200:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:248:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:228:void onActivityPaused(android.app.Activity) -> onActivityPaused
    214:214:void onActivityResumed(android.app.Activity) -> onActivityResumed
    232:232:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:210:void onActivityStarted(android.app.Activity) -> onActivityStarted
    237:237:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:78:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    71:91:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    107:107:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    113:113:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    85:87:void onCreate(android.os.Bundle) -> onCreate
    92:94:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    79:80:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    151:151:void <init>() -> <init>
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    7659:7660:void <init>() -> <init>
    7224:7239:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    7263:7318:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> getActionCompatFromAction
    7207:7212:int getActionCount(android.app.Notification) -> getActionCount
    7649:7652:boolean getAllowSystemGeneratedContextualActions(android.app.Notification) -> getAllowSystemGeneratedContextualActions
    7468:7468:boolean getAutoCancel(android.app.Notification) -> getAutoCancel
    7582:7585:int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    7252:7255:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification) -> getBubbleMetadata
    7402:7405:java.lang.String getCategory(android.app.Notification) -> getCategory
    7557:7560:java.lang.String getChannelId(android.app.Notification) -> getChannelId
    7478:7481:int getColor(android.app.Notification) -> getColor
    7387:7387:java.lang.CharSequence getContentInfo(android.app.Notification) -> getContentInfo
    7381:7381:java.lang.CharSequence getContentText(android.app.Notification) -> getContentText
    7375:7375:java.lang.CharSequence getContentTitle(android.app.Notification) -> getContentTitle
    7193:7198:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    7433:7441:java.lang.String getGroup(android.app.Notification) -> getGroup
    7636:7639:int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    7506:7506:boolean getHighPriority(android.app.Notification) -> getHighPriority
    7327:7343:java.util.List getInvisibleActions(android.app.Notification) -> getInvisibleActions
    7416:7424:boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    7621:7625:androidx.core.content.LocusIdCompat getLocusId(android.app.Notification) -> getLocusId
    7473:7473:boolean getOngoing(android.app.Notification) -> getOngoing
    7463:7463:boolean getOnlyAlertOnce(android.app.Notification) -> getOnlyAlertOnce
    7352:7369:java.util.List getPeople(android.app.Notification) -> getPeople
    7496:7499:android.app.Notification getPublicVersion(android.app.Notification) -> getPublicVersion
    7605:7608:java.lang.CharSequence getSettingsText(android.app.Notification) -> getSettingsText
    7594:7597:java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    7450:7450:boolean getShowWhen(android.app.Notification) -> getShowWhen
    7541:7549:java.lang.String getSortKey(android.app.Notification) -> getSortKey
    7393:7393:java.lang.CharSequence getSubText(android.app.Notification) -> getSubText
    7569:7572:long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    7458:7458:boolean getUsesChronometer(android.app.Notification) -> getUsesChronometer
    7487:7490:int getVisibility(android.app.Notification) -> getVisibility
    7516:7524:boolean isGroupSummary(android.app.Notification) -> isGroupSummary
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    4440:4441:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4449:4451:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4458:4461:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4417:4483:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4510:4510:android.app.PendingIntent getActionIntent() -> getActionIntent
    4525:4525:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    4568:4568:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    4517:4517:android.os.Bundle getExtras() -> getExtras
    4491:4491:int getIcon() -> getIcon
    4499:4502:androidx.core.graphics.drawable.IconCompat getIconCompat() -> getIconCompat
    4534:4534:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    4545:4545:int getSemanticAction() -> getSemanticAction
    4576:4576:boolean getShowsUserInterface() -> getShowsUserInterface
    4506:4506:java.lang.CharSequence getTitle() -> getTitle
    4554:4554:boolean isContextual() -> isContextual
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    4642:4644:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4653:4661:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4586:4691:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4724:4730:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> addRemoteInput
    4813:4830:androidx.core.app.NotificationCompat$Action build() -> build
    4797:4803:void checkContextualActionNullFields() -> checkContextualActionNullFields
    4603:4628:androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action) -> fromAndroidAction
    4766:4767:androidx.core.app.NotificationCompat$Action$Builder setContextual(boolean) -> setContextual
    4756:4757:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> setSemanticAction
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    2942:2943:void <init>() -> <init>
    3000:3027:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3046:3056:androidx.core.graphics.drawable.IconCompat asIconCompat(android.os.Parcelable) -> asIconCompat
    3065:3068:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    2991:2991:java.lang.String getClassName() -> getClassName
    3035:3042:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    3085:3086:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap) -> setBigLargeIcon
    3093:3094:void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    3112:3113:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon) -> setBigLargeIcon
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    3145:3146:void <init>() -> <init>
    3148:3150:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    3223:3231:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    3195:3204:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3175:3176:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    3239:3241:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3186:3186:java.lang.String getClassName() -> getClassName
    3212:3215:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    3157:3158:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    3165:3167:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BubbleMetadata -> androidx.core.app.NotificationCompat$BubbleMetadata:
    6582:6582:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String,androidx.core.app.NotificationCompat$1) -> <init>
    6627:6635:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String) -> <init>
    6750:6758:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    6701:6701:boolean getAutoExpandBubble() -> getAutoExpandBubble
    6662:6662:android.app.PendingIntent getDeleteIntent() -> getDeleteIntent
    6682:6682:int getDesiredHeight() -> getDesiredHeight
    6692:6692:int getDesiredHeightResId() -> getDesiredHeightResId
    6672:6672:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    6644:6644:android.app.PendingIntent getIntent() -> getIntent
    6654:6654:java.lang.String getShortcutId() -> getShortcutId
    6710:6710:boolean isNotificationSuppressed() -> isNotificationSuppressed
    6716:6717:void setFlags(int) -> setFlags
    6729:6737:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl -> androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    7052:7075:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    7013:7038:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl -> androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    7137:7162:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    7096:7123:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Builder -> androidx.core.app.NotificationCompat$BubbleMetadata$Builder:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    6805:6810:void <init>(java.lang.String) -> <init>
    6826:6835:void <init>(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat) -> <init>
    6971:6982:androidx.core.app.NotificationCompat$BubbleMetadata build() -> build
    6932:6933:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setAutoExpandBubble(boolean) -> setAutoExpandBubble
    6959:6960:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    6898:6900:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeight(int) -> setDesiredHeight
    6914:6916:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeightResId(int) -> setDesiredHeightResId
    6987:6992:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setFlag(int,boolean) -> setFlag
    6950:6951:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setSuppressNotification(boolean) -> setSuppressNotification
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    907:1010:void <init>(android.content.Context,android.app.Notification) -> <init>
    835:1081:void <init>(android.content.Context,java.lang.String) -> <init>
    1089:1090:void <init>(android.content.Context) -> <init>
    1879:1880:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1898:1901:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1817:1824:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1926:1927:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1940:1943:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1721:1724:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1748:1751:androidx.core.app.NotificationCompat$Builder addPerson(androidx.core.app.Person) -> addPerson
    2346:2346:android.app.Notification build() -> build
    1908:1909:androidx.core.app.NotificationCompat$Builder clearActions() -> clearActions
    1950:1959:androidx.core.app.NotificationCompat$Builder clearInvisibleActions() -> clearInvisibleActions
    1759:1761:androidx.core.app.NotificationCompat$Builder clearPeople() -> clearPeople
    2062:2086:android.widget.RemoteViews createBigContentView() -> createBigContentView
    2032:2052:android.widget.RemoteViews createContentView() -> createContentView
    2096:2121:android.widget.RemoteViews createHeadsUpContentView() -> createHeadsUpContentView
    2320:2321:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    2370:2370:android.widget.RemoteViews getBigContentView() -> getBigContentView
    2419:2419:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata() -> getBubbleMetadata
    2409:2409:int getColor() -> getColor
    2362:2362:android.widget.RemoteViews getContentView() -> getContentView
    1855:1858:android.os.Bundle getExtras() -> getExtras
    1017:1055:android.os.Bundle getExtrasWithoutDuplicateData(android.app.Notification,androidx.core.app.NotificationCompat$Style) -> getExtrasWithoutDuplicateData
    2378:2378:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    2338:2338:android.app.Notification getNotification() -> getNotification
    2398:2398:int getPriority() -> getPriority
    2388:2388:long getWhenIfShowing() -> getWhenIfShowing
    2350:2354:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1424:1443:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    2329:2330:androidx.core.app.NotificationCompat$Builder setAllowSystemGeneratedContextualActions(boolean) -> setAllowSystemGeneratedContextualActions
    1606:1607:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    2280:2281:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    2311:2312:androidx.core.app.NotificationCompat$Builder setBubbleMetadata(androidx.core.app.NotificationCompat$BubbleMetadata) -> setBubbleMetadata
    1629:1630:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    2168:2169:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1155:1157:androidx.core.app.NotificationCompat$Builder setChronometerCountDown(boolean) -> setChronometerCountDown
    1988:1989:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1585:1587:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    1329:1330:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    1310:1311:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    1342:1343:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    1222:1223:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    1214:1215:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    2145:2146:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    2132:2133:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    2158:2159:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1654:1658:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    1354:1355:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1840:1841:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1662:1667:void setFlag(int,boolean) -> setFlag
    1380:1382:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1776:1777:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    2295:2296:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1788:1789:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    1415:1416:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1540:1546:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1617:1618:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    2266:2267:androidx.core.app.NotificationCompat$Builder setLocusId(androidx.core.content.LocusIdCompat) -> setLocusId
    1196:1197:androidx.core.app.NotificationCompat$Builder setNotificationSilent() -> setNotificationSilent
    1296:1297:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1562:1563:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1595:1596:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1692:1693:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    1319:1322:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    2013:2014:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    1283:1284:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1264:1265:androidx.core.app.NotificationCompat$Builder setSettingsText(java.lang.CharSequence) -> setSettingsText
    2225:2226:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    2239:2254:androidx.core.app.NotificationCompat$Builder setShortcutInfo(androidx.core.content.pm.ShortcutInfoCompat) -> setShortcutInfo
    1112:1113:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    1206:1207:androidx.core.app.NotificationCompat$Builder setSilent(boolean) -> setSilent
    1125:1126:androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat) -> setSmallIcon
    1168:1169:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1183:1185:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1805:1806:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1463:1471:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1492:1500:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    1971:1977:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    1245:1246:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    1391:1392:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    1406:1408:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    2179:2180:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    1141:1142:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1522:1523:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    2000:2001:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    1100:1101:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
    2023:2023:boolean useExistingRemoteView() -> useExistingRemoteView
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    4172:4173:void <init>() -> <init>
    4200:4203:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    4263:4288:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> createRemoteViews
    4191:4191:boolean displayCustomViewInline() -> displayCustomViewInline
    4304:4321:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> generateActionButton
    4182:4182:java.lang.String getClassName() -> getClassName
    4293:4300:java.util.List getNonContextualActions(java.util.List) -> getNonContextualActions
    4228:4240:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    4211:4219:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    4249:4259:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    4046:4049:void <init>() -> <init>
    4099:4110:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    4132:4134:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    4090:4090:java.lang.String getClassName() -> getClassName
    4118:4124:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    3287:3294:void <init>() -> <init>
    3677:3696:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    3543:3617:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3740:3748:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3621:3633:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    3530:3530:java.lang.String getClassName() -> getClassName
    3637:3643:boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    3493:3501:boolean isGroupConversation() -> isGroupConversation
    3672:3672:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    3647:3667:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    3704:3732:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    3471:3472:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
androidx.core.app.NotificationCompat$MessagingStyle$Message -> androidx.core.app.NotificationCompat$MessagingStyle$Message:
# {"id":"sourceFile","fileName":"NotificationCompat.java"}
    3764:3783:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    3923:3928:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    3879:3879:java.lang.String getDataMimeType() -> getDataMimeType
    3888:3888:android.net.Uri getDataUri() -> getDataUri
    3856:3856:android.os.Bundle getExtras() -> getExtras
    3948:3983:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> getMessageFromBundle
    3933:3942:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> getMessagesFromBundleArray
    3873:3873:androidx.core.app.Person getPerson() -> getPerson
    3845:3845:java.lang.CharSequence getText() -> getText
    3850:3850:long getTimestamp() -> getTimestamp
    3834:3836:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    3997:4012:android.app.Notification$MessagingStyle$Message toAndroidMessage() -> toAndroidMessage
    3892:3918:android.os.Bundle toBundle() -> toBundle
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    2430:2438:void <init>() -> <init>
    2530:2540:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2482:2482:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2671:2814:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    2457:2461:android.app.Notification build() -> build
    2878:2887:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    2896:2905:int calculateTopPadding() -> calculateTopPadding
    2559:2562:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    2909:2909:float constrain(float,float,float) -> constrain
    2608:2622:androidx.core.app.NotificationCompat$Style constructCompatStyleByName(java.lang.String) -> constructCompatStyleByName
    2580:2603:androidx.core.app.NotificationCompat$Style constructCompatStyleByPlatformName(java.lang.String) -> constructCompatStyleByPlatformName
    2629:2647:androidx.core.app.NotificationCompat$Style constructCompatStyleForBundle(android.os.Bundle) -> constructCompatStyleForBundle
    2652:2660:androidx.core.app.NotificationCompat$Style constructStyleForExtras(android.os.Bundle) -> constructStyleForExtras
    2825:2825:android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    2833:2833:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int) -> createColoredBitmap
    2837:2837:android.graphics.Bitmap createColoredBitmap(int,int,int) -> createColoredBitmap
    2842:2853:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int) -> createColoredBitmap
    2858:2867:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> createIconWithBackground
    2490:2490:boolean displayCustomViewInline() -> displayCustomViewInline
    2570:2574:androidx.core.app.NotificationCompat$Style extractStyleFromNotification(android.app.Notification) -> extractStyleFromNotification
    2471:2471:java.lang.String getClassName() -> getClassName
    2890:2893:void hideNormalContent(android.widget.RemoteViews) -> hideNormalContent
    2506:2506:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    2498:2498:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    2514:2514:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    2547:2552:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    2444:2450:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    59:271:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    349:399:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    310:345:android.app.Notification build() -> build
    403:522:android.app.Notification buildInternal() -> buildInternal
    276:285:java.util.List combineLists(java.util.List,java.util.List) -> combineLists
    302:302:android.app.Notification$Builder getBuilder() -> getBuilder
    306:306:android.content.Context getContext() -> getContext
    290:297:java.util.List getPeople(java.util.List) -> getPeople
    527:531:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    59:63:void <clinit>() -> <clinit>
    72:82:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    212:231:boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    276:288:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> fromBundle
    312:319:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> fromBundleArray
    168:192:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    161:164:int getActionCount(android.app.Notification) -> getActionCount
    235:249:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> getActionFromBundle
    196:207:java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    339:346:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
    254:271:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    123:134:androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    293:308:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    323:330:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:157:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.Person -> androidx.core.app.Person:
    115:122:void <init>(androidx.core.app.Person$Builder) -> <init>
    88:98:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    48:56:androidx.core.app.Person fromBundle(android.os.Bundle) -> fromBundle
    70:76:androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle) -> fromPersistableBundle
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    224:224:java.lang.String getKey() -> getKey
    191:191:java.lang.CharSequence getName() -> getName
    215:215:java.lang.String getUri() -> getUri
    232:232:boolean isBot() -> isBot
    240:240:boolean isImportant() -> isImportant
    250:256:java.lang.String resolveToLegacyUri() -> resolveToLegacyUri
    175:182:android.app.Person toAndroidPerson() -> toAndroidPerson
    163:163:androidx.core.app.Person$Builder toBuilder() -> toBuilder
    130:137:android.os.Bundle toBundle() -> toBundle
    151:157:android.os.PersistableBundle toPersistableBundle() -> toPersistableBundle
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    269:269:void <init>() -> <init>
    271:278:void <init>(androidx.core.app.Person) -> <init>
    356:356:androidx.core.app.Person build() -> build
    337:338:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    298:299:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    349:350:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    327:328:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    286:287:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    316:317:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    96:109:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,int,android.os.Bundle,java.util.Set) -> <init>
    466:489:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    402:454:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    549:556:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    561:578:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    583:600:androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput) -> fromPlatform
    156:156:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    134:134:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    130:130:java.lang.CharSequence[] getChoices() -> getChoices
    605:616:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
    338:363:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    164:164:int getEditChoicesBeforeSending() -> getEditChoicesBeforeSending
    544:544:java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    171:171:android.os.Bundle getExtras() -> getExtras
    123:123:java.lang.CharSequence getLabel() -> getLabel
    116:116:java.lang.String getResultKey() -> getResultKey
    376:385:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    530:539:int getResultsSource(android.content.Intent) -> getResultsSource
    143:146:boolean isDataOnly() -> isDataOnly
    505:515:void setResultsSource(android.content.Intent,int) -> setResultsSource
androidx.core.app.RemoteInput$Builder -> androidx.core.app.RemoteInput$Builder:
    179:197:void <init>(java.lang.String) -> <init>
    287:290:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    309:309:androidx.core.app.RemoteInput build() -> build
    241:246:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    261:262:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    225:226:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    274:275:androidx.core.app.RemoteInput$Builder setEditChoicesBeforeSending(int) -> setEditChoicesBeforeSending
    207:208:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    42:42:void <init>() -> <init>
    214:236:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    133:133:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    201:212:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    247:247:android.content.Intent editIntentAt(int) -> editIntentAt
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> from
    234:234:android.content.Intent getIntent(int) -> getIntent
    219:219:int getIntentCount() -> getIntentCount
    357:365:android.content.Intent[] getIntents() -> getIntents
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:344:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:296:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    74:99:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    170:172:void <init>() -> <init>
    551:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    657:660:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    610:621:java.io.File createFilesDir(java.io.File) -> createFilesDir
    183:187:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
    597:601:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    535:538:int getColor(android.content.Context,int) -> getColor
    516:516:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    299:303:java.io.File getDataDir(android.content.Context) -> getDataDir
    479:496:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    458:461:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    405:408:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    684:687:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    573:577:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    352:355:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    719:724:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    738:741:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    671:674:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    216:216:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    248:253:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    275:280:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    700:706:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    823:824:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    828:829:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    840:840:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    845:845:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    850:850:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    872:872:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    862:862:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    867:867:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    889:889:int getColor(android.content.Context,int) -> getColor
    884:884:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    894:894:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    899:899:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.ContextCompat$Api24Impl -> androidx.core.content.ContextCompat$Api24Impl:
    916:916:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    911:911:java.io.File getDataDir(android.content.Context) -> getDataDir
    921:921:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
androidx.core.content.ContextCompat$Api26Impl -> androidx.core.content.ContextCompat$Api26Impl:
    933:933:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.ContextCompat$Api28Impl:
    945:945:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
androidx.core.content.ContextCompat$Api30Impl -> androidx.core.content.ContextCompat$Api30Impl:
    957:957:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
    746:812:void <clinit>() -> <clinit>
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    361:383:void <clinit>() -> <clinit>
    360:360:void <init>() -> <init>
    406:417:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    875:881:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    885:887:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    891:893:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    596:597:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    631:646:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    548:559:java.lang.String getType(android.net.Uri) -> getType
    441:442:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    471:472:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String) -> getUriForFile
    568:568:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    851:871:int modeToMode(java.lang.String) -> modeToMode
    393:393:boolean onCreate() -> onCreate
    620:622:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    657:714:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    508:533:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    578:578:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    754:758:void <init>(java.lang.String) -> <init>
    765:778:void addRoot(java.lang.String,java.io.File) -> addRoot
    820:842:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    784:815:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.LocusIdCompat -> androidx.core.content.LocusIdCompat:
    76:83:void <init>(java.lang.String) -> <init>
    103:110:boolean equals(java.lang.Object) -> equals
    90:90:java.lang.String getId() -> getId
    142:143:java.lang.String getSanitizedId() -> getSanitizedId
    95:98:int hashCode() -> hashCode
    126:126:android.content.LocusId toLocusId() -> toLocusId
    135:136:androidx.core.content.LocusIdCompat toLocusIdCompat(android.content.LocusId) -> toLocusIdCompat
    117:117:java.lang.String toString() -> toString
androidx.core.content.LocusIdCompat$Api29Impl -> androidx.core.content.LocusIdCompat$Api29Impl:
    155:155:android.content.LocusId create(java.lang.String) -> create
    163:163:java.lang.String getId(android.content.LocusId) -> getId
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    77:79:void <init>() -> <init>
    171:174:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    152:156:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    261:262:void <init>() -> <init>
    244:249:boolean byteArrayContains(byte[][],byte[]) -> byteArrayContains
    254:257:byte[] computeSHA256Digest(byte[]) -> computeSHA256Digest
    50:53:long getLongVersionCode(android.content.pm.PackageInfo) -> getLongVersionCode
    86:107:java.util.List getSignatures(android.content.pm.PackageManager,java.lang.String) -> getSignatures
    140:240:boolean hasSignatures(android.content.pm.PackageManager,java.lang.String,java.util.Map,boolean) -> hasSignatures
androidx.core.content.pm.PackageInfoCompat$Api28Impl -> androidx.core.content.pm.PackageInfoCompat$Api28Impl:
    280:280:android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo) -> getApkContentsSigners
    285:285:android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo) -> getSigningCertificateHistory
    275:275:boolean hasMultipleSigners(android.content.pm.SigningInfo) -> hasMultipleSigners
    271:271:boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int) -> hasSigningCertificate
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    97:101:void <init>() -> <init>
    157:171:android.os.PersistableBundle buildLegacyExtrasBundle() -> buildLegacyExtrasBundle
    228:228:android.content.ComponentName getActivity() -> getActivity
    297:297:java.util.Set getCategories() -> getCategories
    259:259:java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    266:266:int getDisabledReason() -> getDisabledReason
    379:379:android.os.PersistableBundle getExtras() -> getExtras
    326:326:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    206:206:java.lang.String getId() -> getId
    277:277:android.content.Intent getIntent() -> getIntent
    287:287:android.content.Intent[] getIntents() -> getIntents
    394:394:long getLastChangedTimestamp() -> getLastChangedTimestamp
    309:309:androidx.core.content.LocusIdCompat getLocusId() -> getLocusId
    473:477:androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo) -> getLocusId
    488:490:androidx.core.content.LocusIdCompat getLocusIdFromExtra(android.os.PersistableBundle) -> getLocusIdFromExtra
    248:248:java.lang.CharSequence getLongLabel() -> getLongLabel
    214:214:java.lang.String getPackage() -> getPackage
    318:318:int getRank() -> getRank
    238:238:java.lang.CharSequence getShortLabel() -> getShortLabel
    387:387:android.os.UserHandle getUserHandle() -> getUserHandle
    467:467:boolean hasKeyFieldsOnly() -> hasKeyFieldsOnly
    399:399:boolean isCached() -> isCached
    423:423:boolean isDeclaredInManifest() -> isDeclaredInManifest
    404:404:boolean isDynamic() -> isDynamic
    447:447:boolean isEnabled() -> isEnabled
    439:439:boolean isImmutable() -> isImmutable
    409:409:boolean isPinned() -> isPinned
    108:148:android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    51:51:void <clinit>() -> <clinit>
    90:102:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    117:123:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    212:217:android.util.TypedValue getTypedValue() -> getTypedValue
    69:74:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    132:200:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    204:206:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    229:230:int modulateColorAlpha(int,float) -> modulateColorAlpha
    222:223:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    253:258:int getType(android.content.res.TypedArray,int) -> getType
    184:192:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    270:295:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    197:203:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    209:249:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    309:337:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    342:353:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    300:304:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    169:171:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    174:174:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    129:136:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    139:139:java.lang.String getFileName() -> getFileName
    159:159:int getResourceId() -> getResourceId
    155:155:int getTtcIndex() -> getTtcIndex
    151:151:java.lang.String getVariationSettings() -> getVariationSettings
    143:143:int getWeight() -> getWeight
    147:147:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    86:91:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    103:103:int getFetchStrategy() -> getFetchStrategy
    99:99:androidx.core.provider.FontRequest getRequest() -> getRequest
    113:113:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    107:107:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:62:int[] append(int[],int,int) -> append
    175:175:int growSize(int) -> growSize
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    69:72:void <clinit>() -> <clinit>
    258:267:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList) -> addColorStateListToCache
    237:252:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    396:399:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    193:212:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    103:106:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    367:370:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    488:496:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    506:509:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    278:283:android.util.TypedValue getTypedValue() -> getTypedValue
    221:231:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    270:272:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    529:537:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    559:620:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    314:317:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    290:293:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    297:301:boolean equals(java.lang.Object) -> equals
    306:306:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    406:406:void <init>() -> <init>
    452:458:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    436:442:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    464:464:android.os.Handler getHandler(android.os.Handler) -> getHandler
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    436:436:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    439:440:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    452:452:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    455:456:void run() -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    653:658:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    671:671:void <clinit>() -> <clinit>
    677:696:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
# {"id":"sourceFile","fileName":"ResourcesCompat.java"}
    664:665:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    354:359:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.graphics.BlendModeColorFilterCompat -> androidx.core.graphics.BlendModeColorFilterCompat:
    42:50:android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat) -> createBlendModeColorFilterCompat
androidx.core.graphics.BlendModeCompat -> androidx.core.graphics.BlendModeCompat:
    27:419:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.core.graphics.BlendModeCompat valueOf(java.lang.String) -> valueOf
    27:27:androidx.core.graphics.BlendModeCompat[] values() -> values
androidx.core.graphics.BlendModeUtils -> androidx.core.graphics.BlendModeUtils:
    35:95:android.graphics.BlendMode obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainBlendModeFromCompat
    101:144:android.graphics.PorterDuff$Mode obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainPorterDuffFromCompat
androidx.core.graphics.BlendModeUtils$1 -> androidx.core.graphics.BlendModeUtils$1:
    35:35:void <clinit>() -> <clinit>
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    444:458:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    145:148:double calculateLuminance(int) -> calculateLuminance
    421:422:void colorToXYZ(int,double[]) -> colorToXYZ
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    678:683:double[] getTempDouble3Array() -> getTempDouble3Array
    365:368:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:48:void <init>(int,int,int,int) -> <init>
    89:89:androidx.core.graphics.Insets add(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> add
    141:151:boolean equals(java.lang.Object) -> equals
    156:160:int hashCode() -> hashCode
    114:115:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    128:129:androidx.core.graphics.Insets min(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> min
    63:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    101:101:androidx.core.graphics.Insets subtract(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> subtract
    188:188:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    198:198:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    165:165:java.lang.String toString() -> toString
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:191:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:151:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    54:65:float[] copyOfRange(float[],int,int) -> copyOfRange
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:186:int nextStart(java.lang.String,int) -> nextStart
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    223:235:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    193:193:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    125:164:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    176:182:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    94:94:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    82:82:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    202:208:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
    105:108:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    261:263:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    274:277:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    267:270:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    109:141:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    62:99:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    54:54:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    152:162:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    220:224:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    170:179:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    138:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    115:131:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    188:204:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    154:154:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    62:77:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    100:100:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    212:216:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    81:95:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    100:100:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    100:100:int getWeight(java.lang.Object) -> getWeight
    103:103:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    100:100:boolean isItalic(java.lang.Object) -> isItalic
    108:108:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    154:154:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    154:154:int getWeight(java.lang.Object) -> getWeight
    157:157:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    154:154:boolean isItalic(java.lang.Object) -> isItalic
    162:162:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    181:187:void closeQuietly(java.io.Closeable) -> closeQuietly
    130:141:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    148:164:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    171:177:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    69:85:java.io.File getTempFile(android.content.Context) -> getTempFile
    94:99:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    109:120:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    208:223:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    419:419:void <init>() -> <init>
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:180:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:415:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:379:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:380:void <init>() -> <init>
    155:384:void <init>(int) -> <init>
    764:813:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    603:627:void checkResource(android.content.Context) -> checkResource
    994:1024:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> createFromBundle
    1033:1050:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> createFromIcon
    1061:1072:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    1084:1087:androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon) -> createFromIconOrNullIfZeroResId
    1211:1246:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    286:291:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    351:356:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String) -> createWithAdaptiveBitmapContentUri
    368:371:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
    271:276:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    321:326:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    336:339:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    304:311:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    233:236:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    244:262:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    457:468:android.graphics.Bitmap getBitmap() -> getBitmap
    436:442:int getResId() -> getResId
    1157:1170:int getResId(android.graphics.drawable.Icon) -> getResId
    410:424:java.lang.String getResPackage() -> getResPackage
    1128:1141:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    736:751:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> getResources
    395:398:int getType() -> getType
    1100:1113:int getType(android.graphics.drawable.Icon) -> getType
    481:487:android.net.Uri getUri() -> getUri
    1185:1198:android.net.Uri getUri(android.graphics.drawable.Icon) -> getUri
    716:732:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    639:649:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> loadDrawable
    656:705:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> loadDrawableInner
    937:976:void onPostParceling() -> onPostParceling
    900:933:void onPreParceling(boolean) -> onPreParceling
    497:497:androidx.core.graphics.drawable.IconCompat setTint(int) -> setTint
    507:508:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> setTintList
    518:519:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    821:852:android.os.Bundle toBundle() -> toBundle
    529:529:android.graphics.drawable.Icon toIcon() -> toIcon
    541:595:android.graphics.drawable.Icon toIcon(android.content.Context) -> toIcon
    858:895:java.lang.String toString() -> toString
    979:986:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:24:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:55:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:87:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:226:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:264:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    365:365:boolean isCompatTintEnabled() -> isCompatTintEnabled
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    232:242:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:272:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    289:290:void setTint(int) -> setTint
    294:296:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:302:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:361:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:280:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:77:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:326:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:148:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    113:120:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:137:boolean isProjected() -> isProjected
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    32:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    55:57:void <init>(android.content.Context) -> <init>
    107:121:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    52:52:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    126:132:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> getFingerprintManagerOrNull
    66:70:boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    81:85:boolean isHardwareDetected() -> isHardwareDetected
    153:162:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    169:169:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    138:147:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$1:
    169:169:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    172:173:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:189:void onAuthenticationFailed() -> onAuthenticationFailed
    177:178:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:184:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    270:270:void <init>() -> <init>
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    251:253:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    260:260:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    203:208:void <init>(java.security.Signature) -> <init>
    210:214:void <init>(javax.crypto.Cipher) -> <init>
    216:220:void <init>(javax.crypto.Mac) -> <init>
    234:234:javax.crypto.Cipher getCipher() -> getCipher
    241:241:javax.crypto.Mac getMac() -> getMac
    227:227:java.security.Signature getSignature() -> getSignature
androidx.core.internal.view.SupportMenuItem$-CC -> androidx.core.internal.view.SupportMenuItem$-CC:
    39:39:android.view.MenuItem androidx.core.internal.view.SupportMenuItem.setContentDescription(java.lang.CharSequence) -> $default$setContentDescription
    39:39:android.view.MenuItem androidx.core.internal.view.SupportMenuItem.setTooltipText(java.lang.CharSequence) -> $default$setTooltipText
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    39:44:float clamp(float,float,float) -> clamp
    81:86:int clamp(int,int,int) -> clamp
    102:107:long clamp(long,long,long) -> clamp
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    155:155:boolean isAtLeastR() -> isAtLeastR
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:38:void <init>() -> <init>
    69:92:void cancel() -> cancel
    138:149:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    46:48:boolean isCanceled() -> isCanceled
    111:123:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    57:60:void throwIfCanceled() -> throwIfCanceled
    153:159:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    41:44:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
androidx.core.os.ExecutorCompat -> androidx.core.os.ExecutorCompat:
    36:36:java.util.concurrent.Executor create(android.os.Handler) -> create
androidx.core.os.ExecutorCompat$HandlerExecutor -> androidx.core.os.ExecutorCompat$HandlerExecutor:
    45:47:void <init>(android.os.Handler) -> <init>
    51:54:void execute(java.lang.Runnable) -> execute
androidx.core.os.IResultReceiver$Stub -> androidx.core.os.IResultReceiver$Stub:
    25:27:void <init>() -> <init>
    45:45:android.os.IBinder asBinder() -> asBinder
    34:41:androidx.core.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    133:133:androidx.core.os.IResultReceiver getDefaultImpl() -> getDefaultImpl
    49:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
androidx.core.os.IResultReceiver$Stub$Proxy -> androidx.core.os.IResultReceiver$Stub$Proxy:
# {"id":"sourceFile","fileName":"IResultReceiver.java"}
    82:84:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
    95:115:void send(int,android.os.Bundle) -> send
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    34:34:void <clinit>() -> <clinit>
    38:40:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    73:76:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    234:234:boolean equals(java.lang.Object) -> equals
    174:196:java.util.Locale forLanguageTagCompat(java.lang.String) -> forLanguageTagCompat
    86:86:java.util.Locale get(int) -> get
    239:239:int hashCode() -> hashCode
    244:244:java.lang.String toString() -> toString
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompatWrapper -> androidx.core.os.LocaleListCompatWrapper:
    41:219:void <clinit>() -> <clinit>
    122:149:void <init>(java.util.Locale[]) -> <init>
    76:91:boolean equals(java.lang.Object) -> equals
    51:51:java.util.Locale get(int) -> get
    46:46:java.lang.Object getLocaleList() -> getLocaleList
    96:100:int hashCode() -> hashCode
    153:159:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> toLanguageTag
    105:114:java.lang.String toString() -> toString
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
    31:33:void <init>(android.os.LocaleList) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    28:29:void <init>() -> <init>
    33:34:void <init>(java.lang.String) -> <init>
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    50:66:void <clinit>() -> <clinit>
    104:107:void beginSection(java.lang.String) -> beginSection
    117:120:void endSection() -> endSection
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    41:44:boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:43:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:74:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:85:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:61:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:59:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:72:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:41:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    197:197:void <clinit>() -> <clinit>
    226:230:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    214:222:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    53:61:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    76:105:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    121:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$1 -> androidx.core.provider.FontProvider$1:
    197:197:void <init>() -> <init>
    197:197:int compare(java.lang.Object,java.lang.Object) -> compare
    200:208:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    221:221:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    263:287:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    232:256:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:217:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:134:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:175:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    191:191:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    191:191:java.lang.Object call() -> call
    194:195:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    200:200:void <init>(java.lang.String) -> <init>
    200:200:void accept(java.lang.Object) -> accept
    204:214:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    295:298:void <init>(int) -> <init>
    301:304:void <init>(android.graphics.Typeface) -> <init>
    308:308:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:393:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:298:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:94:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:58:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:167:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    178:180:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:186:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:139:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:157:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
# {"id":"sourceFile","fileName":"RequestExecutor.java"}
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:155:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:62:void <clinit>() -> <clinit>
    129:143:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:125:java.lang.String getScript(java.lang.String) -> getScript
    89:108:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:74:void <clinit>() -> <clinit>
    490:495:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    498:503:void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params) -> <init>
    754:754:char charAt(int) -> charAt
    432:485:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    531:534:int getParagraphCount() -> getParagraphCount
    556:560:int getParagraphEnd(int) -> getParagraphEnd
    543:547:int getParagraphStart(int) -> getParagraphStart
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:515:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    653:663:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> getTextFuture
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:704:void removeSpan(java.lang.Object) -> removeSpan
    678:687:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:211:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:220:void <init>(android.text.PrecomputedText$Params) -> <init>
    332:347:boolean equals(java.lang.Object) -> equals
    275:322:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    352:373:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    116:129:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:146:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:164:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:182:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask:
    586:587:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback:
# {"id":"sourceFile","fileName":"PrecomputedTextCompat.java"}
    573:576:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    568:568:java.lang.Object call() -> call
    580:580:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    119:126:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:104:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    51:54:boolean equals(java.lang.Object,java.lang.Object) -> equals
    93:96:int hash(java.lang.Object[]) -> hash
    111:111:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    84:84:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    37:40:void checkArgument(boolean) -> checkArgument
    51:54:void checkArgument(boolean,java.lang.Object) -> checkArgument
    227:237:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    190:194:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    206:210:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    172:177:int checkFlagsArgument(int,int) -> checkFlagsArgument
    118:121:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    135:138:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    84:87:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object) -> checkStringNotEmpty
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    131:131:void <clinit>() -> <clinit>
    140:141:void <init>() -> <init>
    147:150:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    217:217:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    319:325:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    397:399:java.util.List getActionList(android.view.View) -> getActionList
    156:156:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    383:392:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    257:258:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:278:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:238:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    301:301:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    345:361:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    366:379:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    174:175:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    196:197:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    119:122:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:93:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    97:98:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    103:103:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    127:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    108:109:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    113:114:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    133:135:void <init>(android.content.Context) -> <init>
    141:141:android.content.Context getContext() -> getContext
    250:250:boolean hasSubMenu() -> hasSubMenu
    190:190:boolean isVisible() -> isVisible
    164:164:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    237:237:boolean onPerformDefaultAction() -> onPerformDefaultAction
    263:263:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    176:176:boolean overridesItemVisibility() -> overridesItemVisibility
    200:203:void refreshVisibility() -> refreshVisibility
    306:308:void reset() -> reset
    283:284:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    293:299:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    273:276:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    137:144:void <init>(androidx.core.view.ContentInfoCompat$Builder) -> <init>
    254:258:android.content.ClipData buildClipData(android.content.ClipDescription,java.util.List) -> buildClipData
    120:123:java.lang.String flagsToString(int) -> flagsToString
    163:163:android.content.ClipData getClip() -> getClip
    201:201:android.os.Bundle getExtras() -> getExtras
    180:180:int getFlags() -> getFlags
    191:191:android.net.Uri getLinkUri() -> getLinkUri
    172:172:int getSource() -> getSource
    223:249:android.util.Pair partition(androidx.core.util.Predicate) -> partition
    87:93:java.lang.String sourceToString(int) -> sourceToString
    149:154:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    279:285:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    293:296:void <init>(android.content.ClipData,int) -> <init>
    365:365:androidx.core.view.ContentInfoCompat build() -> build
    306:307:androidx.core.view.ContentInfoCompat$Builder setClip(android.content.ClipData) -> setClip
    356:357:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    331:332:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    344:345:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    56:57:void <init>(android.graphics.Rect,java.util.List) -> <init>
    77:79:void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> <init>
    112:114:void <init>(java.lang.Object) -> <init>
    84:108:android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> constructDisplayCutout
    191:198:boolean equals(java.lang.Object) -> equals
    163:166:java.util.List getBoundingRects() -> getBoundingRects
    127:130:int getSafeInsetBottom() -> getSafeInsetBottom
    136:139:int getSafeInsetLeft() -> getSafeInsetLeft
    145:148:int getSafeInsetRight() -> getSafeInsetRight
    118:121:int getSafeInsetTop() -> getSafeInsetTop
    182:185:androidx.core.graphics.Insets getWaterfallInsets() -> getWaterfallInsets
    203:203:int hashCode() -> hashCode
    208:208:java.lang.String toString() -> toString
    212:212:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.DragAndDropPermissionsCompat -> androidx.core.view.DragAndDropPermissionsCompat:
    42:44:void <init>(java.lang.Object) -> <init>
    64:67:void release() -> release
    50:57:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> request
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:63:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:427:void cancel() -> cancel
    430:440:void cancelTaps() -> cancelTaps
    458:462:void dispatchLongPress() -> dispatchLongPress
    166:182:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
# {"id":"sourceFile","fileName":"GestureDetectorCompat.java"}
    103:105:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:149:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    72:91:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    140:153:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    268:268:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    249:249:boolean expandActionView(android.view.MenuItem) -> expandActionView
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    188:188:android.view.View getActionView(android.view.MenuItem) -> getActionView
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    436:442:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    135:136:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$1:
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:410:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:104:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:65:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:109:void <init>(java.lang.Object) -> <init>
    151:154:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    180:183:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    78:81:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    470:4480:void <clinit>() -> <clinit>
    4100:4101:void <init>() -> <init>
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1227:1233:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1321:1328:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    3936:3939:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    4054:4069:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    2068:2076:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1886:1894:void bindTempDetach() -> bindTempDetach
    539:539:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    553:553:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3807:3810:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1776:1776:int combineMeasuredStates(int,int) -> combineMeasuredStates
    3600:3609:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3552:3561:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2644:2647:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2565:2575:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1923:1940:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    3384:3391:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    3427:3433:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    3160:3167:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    3354:3360:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    3129:3137:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    3286:3293:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    3322:3329:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1900:1917:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    4129:4132:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4121:4124:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1414:1417:void enableAccessibleClickableSpanSupport(android.view.View) -> enableAccessibleClickableSpanSupport
    3985:3996:int generateViewId() -> generateViewId
    922:929:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    945:948:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    954:975:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1789:1792:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1443:1449:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    4245:4245:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1357:1363:java.util.List getActionList(android.view.View) -> getActionList
    1463:1463:float getAlpha(android.view.View) -> getAlpha
    1271:1291:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    2918:2923:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2963:2968:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3644:3647:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3766:3774:android.view.Display getDisplay(android.view.View) -> getDisplay
    2352:2355:float getElevation(android.view.View) -> getElevation
    491:500:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2819:2822:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2478:2481:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1101:1104:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    782:785:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1538:1541:int getLabelFor(android.view.View) -> getLabelFor
    1527:1527:int getLayerType(android.view.View) -> getLayerType
    1611:1614:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1989:1989:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1747:1747:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1761:1761:int getMeasuredState(android.view.View) -> getMeasuredState
    1730:1730:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    2034:2057:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2000:2023:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3828:3831:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    2782:2782:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    934:939:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> getOrCreateAccessibilityDelegateCompat
    571:571:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1856:1859:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1840:1843:int getPaddingStart(android.view.View) -> getPaddingStart
    1649:1652:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2233:2233:float getPivotX(android.view.View) -> getPivotX
    2262:2262:float getPivotY(android.view.View) -> getPivotY
    2622:2627:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    2286:2286:float getRotation(android.view.View) -> getRotation
    2294:2294:float getRotationX(android.view.View) -> getRotationX
    2302:2302:float getRotationY(android.view.View) -> getRotationY
    2310:2310:float getScaleX(android.view.View) -> getScaleX
    2318:2318:float getScaleY(android.view.View) -> getScaleY
    3736:3739:int getScrollIndicators(android.view.View) -> getScrollIndicators
    1399:1399:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2606:2609:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    2409:2415:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1953:1953:float getTranslationX(android.view.View) -> getTranslationX
    1967:1967:float getTranslationY(android.view.View) -> getTranslationY
    2373:2376:float getTranslationZ(android.view.View) -> getTranslationZ
    2659:2670:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    2422:2425:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2326:2326:float getX(android.view.View) -> getX
    2334:2334:float getY(android.view.View) -> getY
    3491:3494:float getZ(android.view.View) -> getZ
    908:908:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3972:3975:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    3100:3106:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    3245:3250:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3666:3669:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2878:2881:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    988:991:boolean hasTransientState(android.view.View) -> hasTransientState
    4308:4309:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3654:3657:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3883:3886:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1179:1182:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    895:898:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    3449:3452:boolean isInLayout(android.view.View) -> isInLayout
    3854:3857:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    3460:3463:boolean isLaidOut(android.view.View) -> isLaidOut
    3477:3480:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    3042:3048:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1693:1693:boolean isOpaque(android.view.View) -> isOpaque
    2891:2894:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4172:4173:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2508:2509:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    3920:3923:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    4421:4459:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3569:3597:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3521:3549:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2537:2547:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    662:663:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    694:695:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    630:631:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    4249:4249:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1201:1204:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2805:2815:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1017:1022:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1039:1044:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1057:1062:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1079:1084:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1338:1343:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1346:1353:void removeActionWithId(int,android.view.View) -> removeActionWithId
    4081:4094:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    1312:1317:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2433:2438:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1672:1680:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1713:1713:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    3950:3953:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    522:526:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4177:4177:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    724:729:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4325:4326:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1825:1828:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4219:4227:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2860:2861:void setActivated(android.view.View,boolean) -> setActivated
    2125:2126:void setAlpha(android.view.View,float) -> setAlpha
    761:764:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2904:2909:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2934:2953:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2981:3000:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2453:2471:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3629:3632:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2341:2344:void setElevation(android.view.View,float) -> setElevation
    2494:2495:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    3902:3905:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    1002:1005:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1128:1140:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    826:829:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3868:3871:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1552:1555:void setLabelFor(android.view.View,int) -> setLabelFor
    1588:1597:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1502:1503:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1635:1638:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    3019:3026:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3842:3845:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2517:2520:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    2737:2755:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
    590:591:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1877:1882:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    2249:2250:void setPivotX(android.view.View,float) -> setPivotX
    2278:2279:void setPivotY(android.view.View,float) -> setPivotY
    3747:3751:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    2168:2169:void setRotation(android.view.View,float) -> setRotation
    2182:2183:void setRotationX(android.view.View,float) -> setRotationX
    2196:2197:void setRotationY(android.view.View,float) -> setRotationY
    2844:2845:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    2209:2210:void setScaleX(android.view.View,float) -> setScaleX
    2222:2223:void setScaleY(android.view.View,float) -> setScaleY
    4153:4154:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3684:3687:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3718:3721:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1381:1384:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2591:2594:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
    3786:3789:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2387:2395:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2091:2092:void setTranslationX(android.view.View,float) -> setTranslationX
    2108:2109:void setTranslationY(android.view.View,float) -> setTranslationY
    2362:2365:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4462:4478:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    2697:2698:void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setWindowInsetsAnimationCallback
    2140:2141:void setX(android.view.View,float) -> setX
    2155:2156:void setY(android.view.View,float) -> setY
    3510:3513:void setZ(android.view.View,float) -> setZ
    3796:3799:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    3064:3070:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    3211:3216:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    4272:4272:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3083:3088:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3228:3233:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3612:3615:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    3816:3819:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2826:2826:void <init>() -> <init>
    2829:2829:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4178:4178:void <init>(int,java.lang.Class,int) -> <init>
    4178:4178:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4183:4183:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4178:4178:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4189:4190:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4178:4178:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4194:4194:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4250:4250:void <init>(int,java.lang.Class,int,int) -> <init>
    4250:4250:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4255:4255:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4250:4250:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4261:4262:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4250:4250:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4266:4266:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4273:4273:void <init>(int,java.lang.Class,int,int) -> <init>
    4273:4273:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4278:4278:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4273:4273:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4284:4285:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4273:4273:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4289:4289:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4330:4330:void <init>(int,java.lang.Class,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4342:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4483:4485:void <init>() -> <init>
    4511:4516:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4527:4535:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4490:4495:void onGlobalLayout() -> onGlobalLayout
    4501:4502:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4507:4507:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4539:4540:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4520:4523:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4544:4545:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4359:4361:void <init>(int,java.lang.Class,int) -> <init>
    4364:4370:void <init>(int,java.lang.Class,int,int) -> <init>
    4413:4415:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4402:4402:boolean extrasAvailable() -> extrasAvailable
    4398:4398:boolean frameworkAvailable() -> frameworkAvailable
    4387:4395:java.lang.Object get(android.view.View) -> get
    4373:4383:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4819:4825:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4746:4752:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4741:4741:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4760:4809:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4774:4775:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4780:4806:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4836:4844:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    4857:4859:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
    4870:4873:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
androidx.core.view.ViewCompat$CompatImplApi28 -> androidx.core.view.ViewCompat$CompatImplApi28:
    4008:4025:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    4031:4041:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
androidx.core.view.ViewCompat$CompatImplApi28$1 -> androidx.core.view.ViewCompat$CompatImplApi28$1:
# {"id":"sourceFile","fileName":"ViewCompat.java"}
    4016:4016:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
    4019:4019:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4552:4552:void <clinit>() -> <clinit>
    4548:4567:void <init>() -> <init>
    4577:4583:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4587:4601:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4606:4623:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4570:4573:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4665:4675:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4632:4660:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4705:4730:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
    4683:4691:void registerListeningView(android.view.View) -> registerListeningView
    4694:4702:void unregisterListeningView(android.view.View) -> unregisterListeningView
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:39:void <init>(android.view.View) -> <init>
    138:141:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    153:156:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    464:467:void cancel() -> cancel
    237:240:long getDuration() -> getDuration
    267:272:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    302:305:long getStartDelay() -> getStartDelay
    318:321:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    333:336:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    348:351:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    363:366:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    378:381:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    393:396:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    408:411:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    423:426:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    438:441:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    453:456:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    123:126:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:257:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:737:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    741:761:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:289:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:790:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:647:void start() -> start
    168:171:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    538:541:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    183:186:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    553:556:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    589:594:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    570:575:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    216:224:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    680:688:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    708:716:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    478:481:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    493:496:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    508:511:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    523:526:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    608:613:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    627:632:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:746:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:751:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:756:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:784:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:47:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    101:109:void onAnimationCancel(android.view.View) -> onAnimationCancel
    75:97:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:70:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    135:138:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
androidx.core.view.WindowCompat$Impl30 -> androidx.core.view.WindowCompat$Impl30:
    166:171:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window) -> getInsetsController
androidx.core.view.WindowInsetsAnimationCompat -> androidx.core.view.WindowInsetsAnimationCompat:
    74:82:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    86:90:void <init>(android.view.WindowInsetsAnimation) -> <init>
    194:194:float getAlpha() -> getAlpha
    168:168:long getDurationMillis() -> getDurationMillis
    121:121:float getFraction() -> getFraction
    148:148:float getInterpolatedFraction() -> getInterpolatedFraction
    160:160:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    97:97:int getTypeMask() -> getTypeMask
    209:210:void setAlpha(float) -> setAlpha
    524:530:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    184:185:void setFraction(float) -> setFraction
    329:329:androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> toWindowInsetsAnimationCompat
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat -> androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat:
    220:223:void <init>(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> <init>
    226:229:void <init>(android.view.WindowInsetsAnimation$Bounds) -> <init>
    252:252:androidx.core.graphics.Insets getLowerBound() -> getLowerBound
    276:276:androidx.core.graphics.Insets getUpperBound() -> getUpperBound
    292:297:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat inset(androidx.core.graphics.Insets) -> inset
    312:312:android.view.WindowInsetsAnimation$Bounds toBounds() -> toBounds
    322:322:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds) -> toBoundsCompat
    303:303:java.lang.String toString() -> toString
androidx.core.view.WindowInsetsAnimationCompat$Callback -> androidx.core.view.WindowInsetsAnimationCompat$Callback:
    371:373:void <init>(int) -> <init>
    396:396:int getDispatchMode() -> getDispatchMode
    520:520:void onEnd(androidx.core.view.WindowInsetsAnimationCompat) -> onEnd
    441:441:void onPrepare(androidx.core.view.WindowInsetsAnimationCompat) -> onPrepare
    488:488:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> onStart
androidx.core.view.WindowInsetsAnimationCompat$Impl -> androidx.core.view.WindowInsetsAnimationCompat$Impl:
    541:545:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    572:572:float getAlpha() -> getAlpha
    568:568:long getDurationMillis() -> getDurationMillis
    552:552:float getFraction() -> getFraction
    556:559:float getInterpolatedFraction() -> getInterpolatedFraction
    564:564:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    548:548:int getTypeMask() -> getTypeMask
    580:581:void setAlpha(float) -> setAlpha
    576:577:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl21 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21:
    589:590:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    648:655:int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat) -> buildAnimationMask
    628:642:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int) -> computeAnimationBounds
    621:621:android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> createProxyListener
    888:902:void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat) -> dispatchOnEnd
    827:845:void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean) -> dispatchOnPrepare
    869:884:void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List) -> dispatchOnProgress
    850:864:void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> dispatchOnStart
    819:822:android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets) -> forwardToViewIfNeeded
    906:912:androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View) -> getCallback
    662:682:androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int) -> interpolateInsets
    595:616:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    699:707:void <init>(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    712:807:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    772:772:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View) -> <init>
    775:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    786:786:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View) -> <init>
    790:792:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    798:798:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator) -> <init>
    801:803:void run() -> run
androidx.core.view.WindowInsetsAnimationCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30:
    923:925:void <init>(android.view.WindowInsetsAnimation) -> <init>
    928:929:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    1043:1044:android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> createPlatformBounds
    944:944:long getDurationMillis() -> getDurationMillis
    949:949:float getFraction() -> getFraction
    1054:1054:androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds) -> getHigherBounds
    959:959:float getInterpolatedFraction() -> getInterpolatedFraction
    939:939:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1049:1049:androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds) -> getLowerBounds
    933:933:int getTypeMask() -> getTypeMask
    1036:1038:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    954:955:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback:
# {"id":"sourceFile","fileName":"WindowInsetsAnimationCompat.java"}
    968:974:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    980:986:androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> getWindowInsetsAnimationCompat
    1029:1031:void onEnd(android.view.WindowInsetsAnimation) -> onEnd
    991:992:void onPrepare(android.view.WindowInsetsAnimation) -> onPrepare
    1008:1024:android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List) -> onProgress
    999:1001:android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds) -> onStart
androidx.core.view.WindowInsetsAnimationControllerCompat -> androidx.core.view.WindowInsetsAnimationControllerCompat:
    46:53:void <init>() -> <init>
    57:59:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    199:200:void finish(boolean) -> finish
    134:134:float getCurrentAlpha() -> getCurrentAlpha
    125:125:float getCurrentFraction() -> getCurrentFraction
    110:110:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    76:76:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    95:95:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    142:142:int getTypes() -> getTypes
    235:235:boolean isCancelled() -> isCancelled
    223:223:boolean isFinished() -> isFinished
    213:213:boolean isReady() -> isReady
    184:185:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl:
    239:241:void <init>() -> <init>
    278:278:void finish(boolean) -> finish
    264:264:float getCurrentAlpha() -> getCurrentAlpha
    260:260:float getCurrentFraction() -> getCurrentFraction
    255:255:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    245:245:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    250:250:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    269:269:int getTypes() -> getTypes
    289:289:boolean isCancelled() -> isCancelled
    285:285:boolean isFinished() -> isFinished
    275:275:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30:
    298:300:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    345:346:void finish(boolean) -> finish
    327:327:float getCurrentAlpha() -> getCurrentAlpha
    322:322:float getCurrentFraction() -> getCurrentFraction
    317:317:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    305:305:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    311:311:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    332:332:int getTypes() -> getTypes
    360:360:boolean isCancelled() -> isCancelled
    355:355:boolean isFinished() -> isFinished
    337:341:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:83:void <clinit>() -> <clinit>
    88:102:void <init>(android.view.WindowInsets) -> <init>
    109:131:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    319:319:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2111:2112:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    718:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    696:696:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    566:566:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    441:441:int getStableInsetBottom() -> getStableInsetBottom
    401:401:int getStableInsetLeft() -> getStableInsetLeft
    421:421:int getStableInsetRight() -> getStableInsetRight
    381:381:int getStableInsetTop() -> getStableInsetTop
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    606:606:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    526:526:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    585:585:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    267:269:boolean hasInsets() -> hasInsets
    461:461:boolean hasStableInsets() -> hasStableInsets
    256:256:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    730:730:int hashCode() -> hashCode
    626:626:androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets) -> inset
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1334:1341:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    302:302:boolean isRound() -> isRound
    713:713:boolean isVisible(int) -> isVisible
    340:342:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    360:362:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    1703:1704:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2107:2108:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2103:2104:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1801:1802:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:175:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2128:2139:void <clinit>() -> <clinit>
    2144:2170:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1396:1406:void <init>() -> <init>
    1413:1423:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1610:1610:androidx.core.view.WindowInsetsCompat build() -> build
    1521:1522:androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1584:1585:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1439:1440:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1620:1621:void <init>() -> <init>
    1623:1625:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1669:1693:void applyInsetTypes() -> applyInsetTypes
    1697:1698:androidx.core.view.WindowInsetsCompat build() -> build
    1641:1650:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1631:1631:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1635:1635:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1629:1629:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1627:1627:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1633:1633:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1709:1712:void <clinit>() -> <clinit>
    1717:1719:void <init>() -> <init>
    1722:1724:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1742:1747:androidx.core.view.WindowInsetsCompat build() -> build
    1758:1796:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1736:1737:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1728:1732:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1809:1811:void <init>() -> <init>
    1814:1819:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1854:1858:androidx.core.view.WindowInsetsCompat build() -> build
    1833:1834:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1843:1844:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1828:1829:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1823:1824:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1838:1839:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1865:1866:void <init>() -> <init>
    1869:1870:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1874:1878:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    746:750:void <clinit>() -> <clinit>
    754:756:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    783:783:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:773:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    768:768:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    863:863:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    866:866:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    839:846:boolean equals(java.lang.Object) -> equals
    778:778:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    821:821:androidx.core.graphics.Insets getInsets(int) -> getInsets
    826:829:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    805:805:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    793:793:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    799:799:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    788:788:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    811:811:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    852:853:int hashCode() -> hashCode
    816:816:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    763:763:boolean isConsumed() -> isConsumed
    759:759:boolean isRound() -> isRound
    833:833:boolean isVisible(int) -> isVisible
    869:869:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    860:860:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    857:857:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    872:872:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    878:878:void <clinit>() -> <clinit>
    892:900:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:904:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1110:1115:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1085:1087:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1184:1186:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:947:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    952:1041:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    920:920:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1101:1104:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1063:1070:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1125:1157:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1077:1080:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1046:1056:boolean isTypeVisible(int) -> isTypeVisible
    926:934:boolean isVisible(int) -> isVisible
    1168:1180:void loadReflectionField() -> loadReflectionField
    1162:1163:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1096:1097:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1091:1092:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1192:1196:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1192:1201:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1211:1211:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1217:1217:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1223:1230:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1205:1205:boolean isConsumed() -> isConsumed
    1235:1236:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1243:1244:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1247:1248:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1259:1259:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1264:1269:boolean equals(java.lang.Object) -> equals
    1253:1253:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1274:1274:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1281:1287:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1281:1291:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1305:1309:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1296:1299:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1315:1318:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1324:1324:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1330:1330:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1347:1347:void <clinit>() -> <clinit>
    1350:1351:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1354:1355:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1384:1384:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1360:1361:androidx.core.graphics.Insets getInsets(int) -> getInsets
    1368:1369:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1375:1375:boolean isVisible(int) -> isVisible
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2019:2019:int all() -> all
    1946:1946:int ime() -> ime
    2023:2043:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2067:2098:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
    88:94:void <init>(android.view.WindowInsetsController) -> <init>
    96:108:void <init>(android.view.Window,android.view.View) -> <init>
    289:290:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    250:255:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    275:275:int getSystemBarsBehavior() -> getSystemBarsBehavior
    162:163:void hide(int) -> hide
    199:199:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    175:175:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    304:305:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    211:212:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    187:188:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    264:265:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    148:149:void show(int) -> show
    122:122:androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController) -> toWindowInsetsControllerCompat
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
    341:343:void <init>() -> <init>
    379:379:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    354:354:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    360:360:int getSystemBarsBehavior() -> getSystemBarsBehavior
    349:349:void hide(int) -> hide
    371:371:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    364:364:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    384:384:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    375:375:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    368:368:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    357:357:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    346:346:void show(int) -> show
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
    396:399:void <init>(android.view.Window,android.view.View) -> <init>
    537:537:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    509:509:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    531:531:int getSystemBarsBehavior() -> getSystemBarsBehavior
    458:465:void hide(int) -> hide
    468:481:void hideForType(int) -> hideForType
    543:543:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    513:527:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    484:488:void setSystemUiFlag(int) -> setSystemUiFlag
    498:499:void setWindowFlag(int) -> setWindowFlag
    403:410:void show(int) -> show
    413:454:void showForType(int) -> showForType
    491:495:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    502:503:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl20$1 -> androidx.core.view.WindowInsetsControllerCompat$Impl20$1:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    442:442:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl20,android.view.View) -> <init>
    445:450:void run() -> run
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
    550:551:void <init>(android.view.Window,android.view.View) -> <init>
    555:555:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    561:568:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
    575:576:void <init>(android.view.Window,android.view.View) -> <init>
    580:580:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    586:593:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
    607:608:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    601:614:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    731:751:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    670:701:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    723:723:int getSystemBarsBehavior() -> getSystemBarsBehavior
    623:624:void hide(int) -> hide
    647:647:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    628:628:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    758:762:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    653:662:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    634:643:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    711:712:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    618:619:void show(int) -> show
androidx.core.view.WindowInsetsControllerCompat$Impl30$1 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$1:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    671:673:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> <init>
    692:693:void onCancelled(android.view.WindowInsetsAnimationController) -> onCancelled
    686:687:void onFinished(android.view.WindowInsetsAnimationController) -> onFinished
    678:681:void onReady(android.view.WindowInsetsAnimationController,int) -> onReady
androidx.core.view.WindowInsetsControllerCompat$Impl30$2 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$2:
# {"id":"sourceFile","fileName":"WindowInsetsControllerCompat.java"}
    737:737:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> <init>
    743:747:void onControllableInsetsChanged(android.view.WindowInsetsController,int) -> onControllableInsetsChanged
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    343:346:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    322:325:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1671:1671:void <clinit>() -> <clinit>
    1250:1698:void <init>(java.lang.Object) -> <init>
    1250:1702:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1997:1998:void addAction(int) -> addAction
    2030:2033:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1909:1910:void addChild(android.view.View) -> addChild
    1927:1930:void addChild(android.view.View,int) -> addChild
    2775:2779:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2704:2719:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    3332:3335:boolean canOpenPopup() -> canOpenPopup
    2766:2772:void clearExtrasSpans() -> clearExtrasSpans
    4082:4105:boolean equals(java.lang.Object) -> equals
    2001:2010:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    2144:2151:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    3379:3387:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1833:1836:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1855:1858:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    3074:3087:java.util.List getActionList() -> getActionList
    4186:4264:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1982:1982:int getActions() -> getActions
    4180:4182:boolean getBooleanProperty(int) -> getBooleanProperty
    2227:2228:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2259:2260:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1894:1894:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1877:1877:int getChildCount() -> getChildCount
    2642:2642:java.lang.CharSequence getClassName() -> getClassName
    2741:2745:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2989:2995:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    3022:3028:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2802:2802:java.lang.CharSequence getContentDescription() -> getContentDescription
    2958:2961:int getDrawingOrder() -> getDrawingOrder
    3212:3215:java.lang.CharSequence getError() -> getError
    3405:3408:android.os.Bundle getExtras() -> getExtras
    3158:3163:java.lang.CharSequence getHintText() -> getHintText
    1728:1728:java.lang.Object getInfo() -> getInfo
    3418:3421:int getInputType() -> getInputType
    3263:3266:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    3319:3322:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2921:2924:int getLiveRegion() -> getLiveRegion
    3472:3475:int getMaxTextLength() -> getMaxTextLength
    2123:2126:int getMovementGranularities() -> getMovementGranularities
    2722:2727:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2618:2618:java.lang.CharSequence getPackageName() -> getPackageName
    3819:3824:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    2165:2165:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    3037:3043:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    3989:3992:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2732:2732:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2812:2817:java.lang.CharSequence getStateDescription() -> getStateDescription
    2666:2680:java.lang.CharSequence getText() -> getText
    3517:3520:int getTextSelectionEnd() -> getTextSelectionEnd
    3504:3507:int getTextSelectionStart() -> getTextSelectionStart
    3763:3768:java.lang.CharSequence getTooltipText() -> getTooltipText
    4043:4049:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo() -> getTouchDelegateInfo
    3599:3602:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    3534:3537:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2895:2898:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3660:3663:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1868:1868:int getWindowId() -> getWindowId
    2762:2762:boolean hasSpans() -> hasSpans
    4077:4077:int hashCode() -> hashCode
    2750:2758:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2410:2413:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2283:2283:boolean isCheckable() -> isCheckable
    2307:2307:boolean isChecked() -> isChecked
    2465:2465:boolean isClickable() -> isClickable
    3115:3118:boolean isContentInvalid() -> isContentInvalid
    3128:3131:boolean isContextClickable() -> isContextClickable
    3673:3676:boolean isDismissable() -> isDismissable
    3702:3705:boolean isEditable() -> isEditable
    2513:2513:boolean isEnabled() -> isEnabled
    2331:2331:boolean isFocusable() -> isFocusable
    2355:2355:boolean isFocused() -> isFocused
    3909:3914:boolean isHeading() -> isHeading
    2588:2591:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2489:2489:boolean isLongClickable() -> isLongClickable
    3733:3736:boolean isMultiLine() -> isMultiLine
    2537:2537:boolean isPassword() -> isPassword
    3838:3841:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2561:2561:boolean isScrollable() -> isScrollable
    2441:2441:boolean isSelected() -> isSelected
    3872:3875:boolean isShowingHintText() -> isShowingHintText
    3942:3945:boolean isTextEntryKey() -> isTextEntryKey
    2379:2382:boolean isVisibleToUser() -> isVisibleToUser
    1739:1739:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1753:1757:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1767:1767:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1778:1778:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2075:2075:boolean performAction(int) -> performAction
    2092:2095:boolean performAction(int,android.os.Bundle) -> performAction
    2862:2863:void recycle() -> recycle
    3977:3980:boolean refresh() -> refresh
    2055:2058:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1947:1950:boolean removeChild(android.view.View) -> removeChild
    1965:1968:boolean removeChild(android.view.View,int) -> removeChild
    2782:2794:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2430:2433:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4170:4177:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2250:2251:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2274:2275:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3350:3353:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2298:2299:void setCheckable(boolean) -> setCheckable
    2322:2323:void setChecked(boolean) -> setChecked
    2657:2658:void setClassName(java.lang.CharSequence) -> setClassName
    2480:2481:void setClickable(boolean) -> setClickable
    2999:3005:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3008:3013:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2832:2833:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3103:3106:void setContentInvalid(boolean) -> setContentInvalid
    3147:3150:void setContextClickable(boolean) -> setContextClickable
    3691:3694:void setDismissable(boolean) -> setDismissable
    2977:2980:void setDrawingOrder(int) -> setDrawingOrder
    3722:3725:void setEditable(boolean) -> setEditable
    2528:2529:void setEnabled(boolean) -> setEnabled
    3201:3204:void setError(java.lang.CharSequence) -> setError
    2346:2347:void setFocusable(boolean) -> setFocusable
    2370:2371:void setFocused(boolean) -> setFocused
    3929:3934:void setHeading(boolean) -> setHeading
    3180:3185:void setHintText(java.lang.CharSequence) -> setHintText
    2607:2610:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    3439:3442:void setInputType(int) -> setInputType
    3226:3229:void setLabelFor(android.view.View) -> setLabelFor
    3246:3249:void setLabelFor(android.view.View,int) -> setLabelFor
    3277:3280:void setLabeledBy(android.view.View) -> setLabeledBy
    3302:3305:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2941:2944:void setLiveRegion(int) -> setLiveRegion
    2504:2505:void setLongClickable(boolean) -> setLongClickable
    3460:3463:void setMaxTextLength(int) -> setMaxTextLength
    2112:2115:void setMovementGranularities(int) -> setMovementGranularities
    3751:3754:void setMultiLine(boolean) -> setMultiLine
    2633:2634:void setPackageName(java.lang.CharSequence) -> setPackageName
    3805:3810:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2180:2183:void setParent(android.view.View) -> setParent
    2207:2212:void setParent(android.view.View,int) -> setParent
    2552:2553:void setPassword(boolean) -> setPassword
    3057:3060:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    4021:4024:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3857:3862:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2576:2577:void setScrollable(boolean) -> setScrollable
    2456:2457:void setSelected(boolean) -> setSelected
    3892:3897:void setShowingHintText(boolean) -> setShowingHintText
    1787:1790:void setSource(android.view.View) -> setSource
    1814:1819:void setSource(android.view.View,int) -> setSource
    2847:2852:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2696:2697:void setText(java.lang.CharSequence) -> setText
    3960:3965:void setTextEntryKey(boolean) -> setTextEntryKey
    3493:3496:void setTextSelection(int,int) -> setTextSelection
    3785:3790:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    4070:4073:void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat) -> setTouchDelegateInfo
    3621:3624:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3647:3650:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    3556:3559:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3583:3586:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2877:2880:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    2399:2402:void setVisibleToUser(boolean) -> setVisibleToUser
    4112:4166:java.lang.String toString() -> toString
    1718:1718:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1711:1711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    1681:1684:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    105:589:void <clinit>() -> <clinit>
    609:610:void <init>(int,java.lang.CharSequence) -> <init>
    623:624:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    627:628:void <init>(java.lang.Object) -> <init>
    632:633:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    637:646:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    709:709:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    720:735:boolean equals(java.lang.Object) -> equals
    654:657:int getId() -> getId
    668:671:java.lang.CharSequence getLabel() -> getLabel
    715:715:int hashCode() -> hashCode
    684:700:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    809:811:void <init>(java.lang.Object) -> <init>
    819:822:int getColumnCount() -> getColumnCount
    832:835:int getRowCount() -> getRowCount
    863:866:int getSelectionMode() -> getSelectionMode
    845:848:boolean isHierarchical() -> isHierarchical
    779:786:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    801:805:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    933:935:void <init>(java.lang.Object) -> <init>
    943:946:int getColumnIndex() -> getColumnIndex
    956:959:int getColumnSpan() -> getColumnSpan
    969:972:int getRowIndex() -> getRowIndex
    982:985:int getRowSpan() -> getRowSpan
    999:1002:boolean isHeading() -> isHeading
    1012:1015:boolean isSelected() -> isSelected
    900:907:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    925:929:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    1051:1053:void <init>(java.lang.Object) -> <init>
    1061:1064:float getCurrent() -> getCurrent
    1074:1077:float getMax() -> getMax
    1087:1090:float getMin() -> getMin
    1104:1107:int getType() -> getType
    1041:1045:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat:
    1123:1129:void <init>(java.util.Map) -> <init>
    1131:1133:void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo) -> <init>
    1165:1168:android.graphics.Region getRegionAt(int) -> getRegionAt
    1146:1149:int getRegionCount() -> getRegionCount
    1193:1199:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region) -> getTargetForRegion
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    119:129:void <init>() -> <init>
    137:139:void <init>(java.lang.Object) -> <init>
    248:248:void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
    172:172:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    209:209:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    225:225:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    145:145:java.lang.Object getProvider() -> getProvider
    189:189:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:41:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:68:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:82:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:99:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:106:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    508:511:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    558:561:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    139:142:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:55:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    84:86:void <init>(java.lang.Object) -> <init>
    321:338:boolean equals(java.lang.Object) -> equals
    259:263:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    166:169:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    232:235:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    218:221:int getChildCount() -> getChildCount
    153:156:int getId() -> getId
    113:116:int getLayer() -> getLayer
    140:143:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    126:130:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    246:249:java.lang.CharSequence getTitle() -> getTitle
    99:102:int getType() -> getType
    316:316:int hashCode() -> hashCode
    205:208:boolean isAccessibilityFocused() -> isAccessibilityFocused
    179:182:boolean isActive() -> isActive
    192:195:boolean isFocused() -> isFocused
    274:277:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    290:296:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    309:312:void recycle() -> recycle
    344:357:java.lang.String toString() -> toString
    361:375:java.lang.String typeToString(int) -> typeToString
    78:81:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    36:53:void <init>(android.graphics.Path) -> <init>
    61:62:void <init>(float,float,float,float) -> <init>
    107:110:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    66:95:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    48:51:android.view.animation.Interpolator create(android.graphics.Path) -> create
    81:84:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    91:91:void <clinit>() -> <clinit>
    181:192:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    460:466:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    471:473:boolean isPasswordInputType(int) -> isPasswordInputType
    158:167:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    235:268:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    212:217:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    484:493:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    289:340:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Impl30 -> androidx.core.view.inputmethod.EditorInfoCompat$Impl30:
    536:537:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    260:288:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    72:115:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    247:248:void requestPermission() -> requestPermission
    238:238:java.lang.Object unwrap() -> unwrap
    219:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    139:139:java.lang.Object getInputContentInfo() -> getInputContentInfo
    133:133:android.net.Uri getLinkUri() -> getLinkUri
    144:145:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    89:89:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    94:94:void requestPermission() -> requestPermission
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    44:44:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    41:41:void <init>() -> <init>
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:77:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    107:113:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:42:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:79:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    177:179:void <clinit>() -> <clinit>
    191:192:void <init>(android.content.Context) -> <init>
    195:196:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    103:217:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1674:1676:void abortAnimatedScroll() -> abortAnimatedScroll
    473:478:void addView(android.view.View) -> addView
    482:487:void addView(android.view.View,int) -> addView
    491:496:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    500:505:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1326:1372:boolean arrowScroll(int) -> arrowScroll
    524:531:boolean canScroll() -> canScroll
    2049:2075:int clamp(int,int,int) -> clamp
    1570:1570:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1563:1563:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1556:1556:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1606:1661:void computeScroll() -> computeScroll
    1726:1787:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1549:1549:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1542:1542:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1518:1535:int computeVerticalScrollRange() -> computeVerticalScrollRange
    622:622:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    299:299:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    304:304:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    255:255:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    294:294:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    224:226:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    248:248:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    288:288:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1401:1408:void doScrollY(int) -> doScrollY
    1999:2046:void draw(android.graphics.Canvas) -> draw
    1950:1959:void endDrag() -> endDrag
    1985:1995:void ensureGlows() -> ensureGlows
    634:672:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1147:1208:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1938:1947:void fling(int) -> fling
    1262:1278:boolean fullScroll(int) -> fullScroll
    436:449:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    457:457:int getMaxScrollAmount() -> getMaxScrollAmount
    409:409:int getNestedScrollAxes() -> getNestedScrollAxes
    1119:1127:int getScrollRange() -> getScrollRange
    421:431:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1040:1051:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    242:242:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    282:282:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    676:684:boolean inChild(int,int) -> inChild
    688:693:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    461:469:void initScrollView() -> initScrollView
    696:699:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    542:542:boolean isFillViewport() -> isFillViewport
    267:267:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1380:1380:boolean isOffScreen(android.view.View) -> isOffScreen
    564:564:boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    1922:1927:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1388:1392:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1576:1587:void measureChild(android.view.View,int,int) -> measureChild
    1592:1601:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1893:1896:void onAttachedToWindow() -> onAttachedToWindow
    1012:1036:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    729:824:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1855:1889:void onLayout(boolean,int,int,int,int) -> onLayout
    586:617:void onMeasure(int,int) -> onMeasure
    394:399:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    404:404:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    358:359:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    388:389:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    312:313:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    352:353:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    383:384:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    339:341:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    372:373:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    316:326:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1057:1058:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1815:1834:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2080:2089:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2093:2096:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    577:582:void onScrollChanged(int,int,int,int) -> onScrollChanged
    995:1008:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1900:1916:void onSizeChanged(int,int,int,int) -> onSizeChanged
    333:333:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    366:366:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    345:347:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    377:378:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    829:991:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1065:1115:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1224:1246:boolean pageScroll(int) -> pageScroll
    702:706:void recycleVelocityTracker() -> recycleVelocityTracker
    1792:1799:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1841:1844:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    710:714:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1849:1851:void requestLayout() -> requestLayout
    1664:1671:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1294:1315:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1969:1982:void scrollTo(int,int) -> scrollTo
    1684:1694:void scrollToChild(android.view.View) -> scrollToChild
    1705:1714:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    554:558:void setFillViewport(boolean) -> setFillViewport
    262:263:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    517:518:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    572:573:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    416:416:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1417:1418:void smoothScrollBy(int,int) -> smoothScrollBy
    1428:1429:void smoothScrollBy(int,int,int) -> smoothScrollBy
    1440:1462:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1471:1472:void smoothScrollTo(int,int) -> smoothScrollTo
    1482:1483:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1494:1495:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1507:1508:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    232:232:boolean startNestedScroll(int,int) -> startNestedScroll
    272:272:boolean startNestedScroll(int) -> startNestedScroll
    237:238:void stopNestedScroll(int) -> stopNestedScroll
    277:278:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2139:2139:void <init>() -> <init>
    2204:2213:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2179:2200:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2142:2174:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2125:2125:void <clinit>() -> <clinit>
    2103:2104:void <init>(android.os.Parcelable) -> <init>
    2107:2109:void <init>(android.os.Parcel) -> <init>
    2120:2121:java.lang.String toString() -> toString
    2113:2115:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
# {"id":"sourceFile","fileName":"NestedScrollView.java"}
    2126:2126:void <init>() -> <init>
    2126:2126:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2129:2129:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2126:2126:java.lang.Object[] newArray(int) -> newArray
    2134:2134:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    111:111:void <init>() -> <init>
    456:462:int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    439:445:int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    422:428:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    473:479:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    406:412:int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    1029:1035:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1064:1070:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    295:310:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:788:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    798:798:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    226:244:int getMaxLines(android.widget.TextView) -> getMaxLines
    252:270:int getMinLines(android.widget.TextView) -> getMinLines
    983:1000:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    927:974:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    835:847:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    114:121:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    126:130:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    361:368:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    387:393:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    326:331:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    1013:1019:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1047:1054:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    178:187:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    210:219:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    506:508:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    713:738:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    758:779:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    816:824:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    904:915:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:288:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    862:889:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    541:544:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    564:568:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    691:691:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    679:681:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    650:662:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    593:593:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    685:687:boolean isEditable(android.widget.TextView) -> isEditable
    666:673:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    583:583:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    572:572:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    588:589:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    577:578:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    597:646:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    94:97:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:89:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:109:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    117:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl -> androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl:
    131:135:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> init
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:473:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    135:136:void setDropDownViewResource(int) -> setDropDownViewResource
    126:127:void setViewResource(int) -> setViewResource
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    53:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    53:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    233:233:int getStringConversionColumn() -> getStringConversionColumn
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    251:252:void setStringConversionColumn(int) -> setStringConversionColumn
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:41:void <init>() -> <init>
    48:53:void <init>(android.os.Parcelable) -> <init>
    70:73:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    82:82:int describeContents() -> describeContents
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:88:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:153:void <init>(android.view.View) -> <init>
    1001:1008:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1053:1063:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    639:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:704:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:657:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    793:894:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:752:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:199:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:438:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    591:591:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:473:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    528:529:void invalidateRoot() -> invalidateRoot
    544:546:void invalidateVirtualView(int) -> invalidateVirtualView
    568:578:void invalidateVirtualView(int,int) -> invalidateVirtualView
    935:955:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:317:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    721:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:666:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:761:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1135:1135:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1123:1123:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1213:1213:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    603:603:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    898:902:boolean performAction(int,int,android.os.Bundle) -> performAction
    911:921:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    907:907:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    971:990:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1019:1042:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    614:626:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1245:1246:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1252:1254:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1264:1269:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1259:1259:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    334:334:void <clinit>() -> <clinit>
    120:405:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    554:564:void abort() -> abort
    540:547:void cancel() -> cancel
    500:509:void captureChildView(android.view.View,int) -> captureChildView
    1305:1318:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1332:1345:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1363:1369:boolean checkTouchSlop(int) -> checkTouchSlop
    1388:1405:boolean checkTouchSlop(int,int) -> checkTouchSlop
    699:702:int clampMag(int,int,int) -> clampMag
    716:719:float clampMag(float,float,float) -> clampMag
    819:830:void clearMotionHistory() -> clearMotionHistory
    833:844:void clearMotionHistory(int) -> clearMotionHistory
    667:685:int computeAxisDuration(int,int,int) -> computeAxisDuration
    646:663:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    764:798:boolean continueSettling(boolean) -> continueSettling
    357:357:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    371:373:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    808:816:void dispatchViewReleased(float,float) -> dispatchViewReleased
    723:725:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1453:1472:void dragTo(int,int,int,int) -> dragTo
    847:874:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1516:1524:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    626:642:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    516:516:android.view.View getCapturedView() -> getCapturedView
    488:488:int getDefaultEdgeSize() -> getDefaultEdgeSize
    462:462:int getEdgeSize() -> getEdgeSize
    1528:1535:int getEdgesTouched(int,int) -> getEdgesTouched
    532:532:int getTouchSlop() -> getTouchSlop
    434:434:int getViewDragState() -> getViewDragState
    1484:1484:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    913:913:boolean isPointerDown(int) -> isPointerDown
    1539:1545:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1497:1503:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1126:1281:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1442:1450:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1284:1302:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    877:882:void saveInitialMotion(float,float,int) -> saveInitialMotion
    885:897:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    917:925:void setDragState(int) -> setDragState
    475:476:void setEdgeSize(int) -> setEdgeSize
    450:451:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    414:415:void setMinVelocity(float) -> setMinVelocity
    606:613:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    992:1116:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    581:591:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    937:946:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    334:334:void <init>() -> <init>
    337:338:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    342:342:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    345:346:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    154:154:void <init>() -> <init>
    257:257:int getOrderedChildIndex(int) -> getOrderedChildIndex
    268:268:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    279:279:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    248:248:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    234:234:boolean onEdgeLock(int) -> onEdgeLock
    222:222:void onEdgeTouched(int,int) -> onEdgeTouched
    189:189:void onViewCaptured(android.view.View,int) -> onViewCaptured
androidx.documentfile.provider.DocumentFile -> androidx.documentfile.provider.DocumentFile:
    88:90:void <init>(androidx.documentfile.provider.DocumentFile) -> <init>
    342:347:androidx.documentfile.provider.DocumentFile findFile(java.lang.String) -> findFile
    102:102:androidx.documentfile.provider.DocumentFile fromFile(java.io.File) -> fromFile
    117:120:androidx.documentfile.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    135:144:androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    233:233:androidx.documentfile.provider.DocumentFile getParentFile() -> getParentFile
    153:156:boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
androidx.documentfile.provider.DocumentsContractApi19 -> androidx.documentfile.provider.DocumentsContractApi19:
    94:104:boolean canRead(android.content.Context,android.net.Uri) -> canRead
    109:137:boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    203:211:void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    141:152:boolean exists(android.content.Context,android.net.Uri) -> exists
    68:68:long getFlags(android.content.Context,android.net.Uri) -> getFlags
    49:49:java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    54:54:java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    59:63:java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    72:72:boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    76:80:boolean isFile(android.content.Context,android.net.Uri) -> isFile
    40:44:boolean isVirtual(android.content.Context,android.net.Uri) -> isVirtual
    85:85:long lastModified(android.content.Context,android.net.Uri) -> lastModified
    89:89:long length(android.content.Context,android.net.Uri) -> length
    179:179:int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    184:198:long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    159:173:java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
androidx.documentfile.provider.RawDocumentFile -> androidx.documentfile.provider.RawDocumentFile:
    33:35:void <init>(androidx.documentfile.provider.DocumentFile,java.io.File) -> <init>
    113:113:boolean canRead() -> canRead
    118:118:boolean canWrite() -> canWrite
    58:62:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    41:51:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    123:124:boolean delete() -> delete
    169:182:boolean deleteContents(java.io.File) -> deleteContents
    129:129:boolean exists() -> exists
    73:73:java.lang.String getName() -> getName
    79:82:java.lang.String getType() -> getType
    156:165:java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    68:68:android.net.Uri getUri() -> getUri
    88:88:boolean isDirectory() -> isDirectory
    93:93:boolean isFile() -> isFile
    98:98:boolean isVirtual() -> isVirtual
    103:103:long lastModified() -> lastModified
    108:108:long length() -> length
    134:141:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    146:151:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.SingleDocumentFile -> androidx.documentfile.provider.SingleDocumentFile:
    32:35:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    91:91:boolean canRead() -> canRead
    96:96:boolean canWrite() -> canWrite
    44:44:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    39:39:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    102:104:boolean delete() -> delete
    110:110:boolean exists() -> exists
    55:55:java.lang.String getName() -> getName
    61:61:java.lang.String getType() -> getType
    49:49:android.net.Uri getUri() -> getUri
    66:66:boolean isDirectory() -> isDirectory
    71:71:boolean isFile() -> isFile
    76:76:boolean isVirtual() -> isVirtual
    81:81:long lastModified() -> lastModified
    86:86:long length() -> length
    115:115:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    120:120:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.TreeDocumentFile -> androidx.documentfile.provider.TreeDocumentFile:
    37:40:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    112:112:boolean canRead() -> canRead
    117:117:boolean canWrite() -> canWrite
    166:174:void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    63:65:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    45:46:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    53:56:android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    123:125:boolean delete() -> delete
    131:131:boolean exists() -> exists
    76:76:java.lang.String getName() -> getName
    82:82:java.lang.String getType() -> getType
    70:70:android.net.Uri getUri() -> getUri
    87:87:boolean isDirectory() -> isDirectory
    92:92:boolean isFile() -> isFile
    97:97:boolean isVirtual() -> isVirtual
    102:102:long lastModified() -> lastModified
    107:107:long length() -> length
    136:162:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    179:188:boolean renameTo(java.lang.String) -> renameTo
androidx.drawerlayout.R$styleable -> androidx.drawerlayout.R$styleable:
    165:202:void <clinit>() -> <clinit>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    110:256:void <clinit>() -> <clinit>
    328:329:void <init>(android.content.Context) -> <init>
    332:333:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    204:399:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    543:550:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1986:2017:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2132:2152:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2036:2047:void cancelChildViewTouch() -> cancelChildViewTouch
    991:992:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1976:1976:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1800:1801:void close() -> close
    1809:1810:void closeDrawer(android.view.View) -> closeDrawer
    1819:1842:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1851:1852:void closeDrawer(int) -> closeDrawer
    1862:1868:void closeDrawer(int,boolean) -> closeDrawer
    1682:1683:void closeDrawers() -> closeDrawers
    1686:1715:void closeDrawers(boolean) -> closeDrawers
    1359:1372:void computeScroll() -> computeScroll
    1586:1614:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    882:908:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    911:931:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    957:965:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    806:818:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1453:1512:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1026:1036:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    996:1004:android.view.View findOpenDrawer() -> findOpenDrawer
    2024:2031:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1962:1962:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1967:1971:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1981:1981:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    425:428:float getDrawerElevation() -> getDrawerElevation
    684:729:int getDrawerLockMode(int) -> getDrawerLockMode
    741:745:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    778:785:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    986:987:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    978:978:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1402:1402:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    826:838:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1046:1052:java.lang.String gravityToString(int) -> gravityToString
    1377:1381:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1950:1957:boolean hasPeekingDrawer() -> hasPeekingDrawer
    2020:2020:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2160:2162:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1516:1516:boolean isContentView(android.view.View) -> isContentView
    1881:1885:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1911:1915:boolean isDrawerOpen(int) -> isDrawerOpen
    1520:1531:boolean isDrawerView(android.view.View) -> isDrawerView
    1927:1930:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1942:1946:boolean isDrawerVisible(int) -> isDrawerVisible
    793:797:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1898:1898:boolean isOpen() -> isOpen
    1243:1246:void mirror(android.graphics.drawable.Drawable,int) -> mirror
    1008:1017:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1063:1065:void onAttachedToWindow() -> onAttachedToWindow
    1057:1059:void onDetachedFromWindow() -> onDetachedFromWindow
    1435:1449:void onDraw(android.graphics.Canvas) -> onDraw
    1537:1577:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2051:2055:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2060:2067:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1250:1348:void onLayout(boolean,int,int,int,int) -> onLayout
    1072:1192:void onMeasure(int,int) -> onMeasure
    2072:2099:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1430:1431:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2103:2127:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1619:1662:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1722:1723:void open() -> open
    1731:1732:void openDrawer(android.view.View) -> openDrawer
    1741:1767:void openDrawer(android.view.View,boolean) -> openDrawer
    1776:1777:void openDrawer(int) -> openDrawer
    1787:1793:void openDrawer(int,boolean) -> openDrawer
    560:568:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1671:1676:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1352:1355:void requestLayout() -> requestLayout
    1203:1218:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1222:1236:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1195:1200:void resolveShadowDrawables() -> resolveShadowDrawables
    437:441:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    408:415:void setDrawerElevation(float) -> setDrawerElevation
    525:534:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    584:586:void setDrawerLockMode(int) -> setDrawerLockMode
    608:646:void setDrawerLockMode(int,int) -> setDrawerLockMode
    667:673:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    463:480:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    497:498:void setDrawerShadow(int,int) -> setDrawerShadow
    759:766:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    968:975:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    506:508:void setScrimColor(int) -> setScrimColor
    1391:1393:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1412:1414:void setStatusBarBackground(int) -> setStatusBarBackground
    1424:1426:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    950:954:void updateChildAccessibilityAction(android.view.View) -> updateChildAccessibilityAction
    934:947:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    846:879:void updateDrawerState(int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    259:259:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    262:266:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.drawerlayout.widget.DrawerLayout$2 -> androidx.drawerlayout.widget.DrawerLayout$2:
    365:365:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    368:370:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2425:2426:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2502:2509:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2518:2534:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2475:2489:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2463:2466:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2430:2459:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2495:2498:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2537:2537:void <init>() -> <init>
    2541:2549:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2388:2400:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2388:2404:void <init>(int,int) -> <init>
    2407:2409:void <init>(int,int,int) -> <init>
    2388:2414:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2388:2418:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2388:2422:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2199:2199:void <clinit>() -> <clinit>
    2170:2183:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2170:2187:void <init>(android.os.Parcelable) -> <init>
    2191:2197:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2199:2199:void <init>() -> <init>
    2199:2199:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2199:2199:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2202:2202:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2207:2207:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2199:2199:java.lang.Object[] newArray(int) -> newArray
    2212:2212:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2221:2229:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2369:2373:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2379:2379:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2278:2283:void closeOtherDrawer() -> closeOtherDrawer
    2364:2364:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2351:2360:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2345:2345:boolean onEdgeLock(int) -> onEdgeLock
    2306:2307:void onEdgeTouched(int,int) -> onEdgeTouched
    2271:2275:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2249:2250:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2255:2267:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2289:2302:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2312:2334:void peekDrawer() -> peekDrawer
    2236:2237:void removeCallbacks() -> removeCallbacks
    2232:2233:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2243:2244:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
# {"id":"sourceFile","fileName":"DrawerLayout.java"}
    2221:2221:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2223:2224:void run() -> run
androidx.dynamicanimation.animation.AnimationHandler -> androidx.dynamicanimation.animation.AnimationHandler:
    69:69:void <clinit>() -> <clinit>
    40:254:void <init>() -> <init>
    125:135:void addAnimationFrameCallback(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback,long) -> addAnimationFrameCallback
    183:191:void cleanUpList() -> cleanUpList
    151:162:void doAnimationFrame(long) -> doAnimationFrame
    88:91:androidx.dynamicanimation.animation.AnimationHandler getInstance() -> getInstance
    111:118:androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider getProvider() -> getProvider
    171:179:boolean isCallbackDue(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback,long) -> isCallbackDue
    141:147:void removeCallback(androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback) -> removeCallback
androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher -> androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher:
    58:58:void <init>(androidx.dynamicanimation.animation.AnimationHandler) -> <init>
    60:65:void dispatchAnimationFrame() -> dispatchAnimationFrame
androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider -> androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider:
    256:258:void <init>(androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) -> <init>
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider14 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider14:
    226:238:void <init>(androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) -> <init>
    242:245:void postFrameCallback() -> postFrameCallback
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider14$1 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider14$1:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    230:230:void <init>(androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider14) -> <init>
    233:235:void run() -> run
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16:
    199:210:void <init>(androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) -> <init>
    214:215:void postFrameCallback() -> postFrameCallback
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16$1 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16$1:
# {"id":"sourceFile","fileName":"AnimationHandler.java"}
    204:204:void <init>(androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackProvider16) -> <init>
    207:208:void doFrame(long) -> doFrame
androidx.dynamicanimation.animation.DynamicAnimation -> androidx.dynamicanimation.animation.DynamicAnimation:
    57:253:void <clinit>() -> <clinit>
    289:347:void <init>(androidx.dynamicanimation.animation.FloatValueHolder) -> <init>
    289:369:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat) -> <init>
    445:448:androidx.dynamicanimation.animation.DynamicAnimation addEndListener(androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener) -> addEndListener
    473:482:androidx.dynamicanimation.animation.DynamicAnimation addUpdateListener(androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener) -> addUpdateListener
    591:597:void cancel() -> cancel
    639:657:boolean doAnimationFrame(long) -> doAnimationFrame
    674:684:void endAnimationInternal(boolean) -> endAnimationInternal
    539:539:float getMinimumVisibleChange() -> getMinimumVisibleChange
    710:710:float getPropertyValue() -> getPropertyValue
    703:703:float getValueThreshold() -> getValueThreshold
    605:605:boolean isRunning() -> isRunning
    457:458:void removeEndListener(androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener) -> removeEndListener
    558:562:void removeEntry(java.util.ArrayList,java.lang.Object) -> removeEntry
    547:552:void removeNullEntries(java.util.ArrayList) -> removeNullEntries
    492:493:void removeUpdateListener(androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener) -> removeUpdateListener
    420:421:androidx.dynamicanimation.animation.DynamicAnimation setMaxValue(float) -> setMaxValue
    433:434:androidx.dynamicanimation.animation.DynamicAnimation setMinValue(float) -> setMinValue
    524:529:androidx.dynamicanimation.animation.DynamicAnimation setMinimumVisibleChange(float) -> setMinimumVisibleChange
    690:697:void setPropertyValue(float) -> setPropertyValue
    379:381:androidx.dynamicanimation.animation.DynamicAnimation setStartValue(float) -> setStartValue
    403:404:androidx.dynamicanimation.animation.DynamicAnimation setStartVelocity(float) -> setStartVelocity
    576:582:void start() -> start
    613:625:void startAnimationInternal() -> startAnimationInternal
androidx.dynamicanimation.animation.DynamicAnimation$1 -> androidx.dynamicanimation.animation.DynamicAnimation$1:
    57:57:void <init>(java.lang.String) -> <init>
    57:57:float getValue(java.lang.Object) -> getValue
    65:65:float getValue(android.view.View) -> getValue
    57:57:void setValue(java.lang.Object,float) -> setValue
    60:61:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$10 -> androidx.dynamicanimation.animation.DynamicAnimation$10:
    192:192:void <init>(java.lang.String) -> <init>
    192:192:float getValue(java.lang.Object) -> getValue
    200:200:float getValue(android.view.View) -> getValue
    192:192:void setValue(java.lang.Object,float) -> setValue
    195:196:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$11 -> androidx.dynamicanimation.animation.DynamicAnimation$11:
    207:207:void <init>(java.lang.String) -> <init>
    207:207:float getValue(java.lang.Object) -> getValue
    215:215:float getValue(android.view.View) -> getValue
    207:207:void setValue(java.lang.Object,float) -> setValue
    210:211:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$12 -> androidx.dynamicanimation.animation.DynamicAnimation$12:
    222:222:void <init>(java.lang.String) -> <init>
    222:222:float getValue(java.lang.Object) -> getValue
    230:230:float getValue(android.view.View) -> getValue
    222:222:void setValue(java.lang.Object,float) -> setValue
    225:226:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$13 -> androidx.dynamicanimation.animation.DynamicAnimation$13:
    238:238:void <init>(java.lang.String) -> <init>
    238:238:float getValue(java.lang.Object) -> getValue
    246:246:float getValue(android.view.View) -> getValue
    238:238:void setValue(java.lang.Object,float) -> setValue
    241:242:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$14 -> androidx.dynamicanimation.animation.DynamicAnimation$14:
    253:253:void <init>(java.lang.String) -> <init>
    253:253:float getValue(java.lang.Object) -> getValue
    261:261:float getValue(android.view.View) -> getValue
    253:253:void setValue(java.lang.Object,float) -> setValue
    256:257:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$15 -> androidx.dynamicanimation.animation.DynamicAnimation$15:
    335:335:void <init>(androidx.dynamicanimation.animation.DynamicAnimation,java.lang.String,androidx.dynamicanimation.animation.FloatValueHolder) -> <init>
    338:338:float getValue(java.lang.Object) -> getValue
    343:344:void setValue(java.lang.Object,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$2 -> androidx.dynamicanimation.animation.DynamicAnimation$2:
    72:72:void <init>(java.lang.String) -> <init>
    72:72:float getValue(java.lang.Object) -> getValue
    80:80:float getValue(android.view.View) -> getValue
    72:72:void setValue(java.lang.Object,float) -> setValue
    75:76:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$3 -> androidx.dynamicanimation.animation.DynamicAnimation$3:
    87:87:void <init>(java.lang.String) -> <init>
    87:87:float getValue(java.lang.Object) -> getValue
    95:95:float getValue(android.view.View) -> getValue
    87:87:void setValue(java.lang.Object,float) -> setValue
    90:91:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$4 -> androidx.dynamicanimation.animation.DynamicAnimation$4:
    102:102:void <init>(java.lang.String) -> <init>
    102:102:float getValue(java.lang.Object) -> getValue
    110:110:float getValue(android.view.View) -> getValue
    102:102:void setValue(java.lang.Object,float) -> setValue
    105:106:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$5 -> androidx.dynamicanimation.animation.DynamicAnimation$5:
    117:117:void <init>(java.lang.String) -> <init>
    117:117:float getValue(java.lang.Object) -> getValue
    125:125:float getValue(android.view.View) -> getValue
    117:117:void setValue(java.lang.Object,float) -> setValue
    120:121:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$6 -> androidx.dynamicanimation.animation.DynamicAnimation$6:
    132:132:void <init>(java.lang.String) -> <init>
    132:132:float getValue(java.lang.Object) -> getValue
    140:140:float getValue(android.view.View) -> getValue
    132:132:void setValue(java.lang.Object,float) -> setValue
    135:136:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$7 -> androidx.dynamicanimation.animation.DynamicAnimation$7:
    147:147:void <init>(java.lang.String) -> <init>
    147:147:float getValue(java.lang.Object) -> getValue
    155:155:float getValue(android.view.View) -> getValue
    147:147:void setValue(java.lang.Object,float) -> setValue
    150:151:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$8 -> androidx.dynamicanimation.animation.DynamicAnimation$8:
    162:162:void <init>(java.lang.String) -> <init>
    162:162:float getValue(java.lang.Object) -> getValue
    170:170:float getValue(android.view.View) -> getValue
    162:162:void setValue(java.lang.Object,float) -> setValue
    165:166:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$9 -> androidx.dynamicanimation.animation.DynamicAnimation$9:
    177:177:void <init>(java.lang.String) -> <init>
    177:177:float getValue(java.lang.Object) -> getValue
    185:185:float getValue(android.view.View) -> getValue
    177:177:void setValue(java.lang.Object,float) -> setValue
    180:181:void setValue(android.view.View,float) -> setValue
androidx.dynamicanimation.animation.DynamicAnimation$MassState -> androidx.dynamicanimation.animation.DynamicAnimation$MassState:
    323:323:void <init>() -> <init>
androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty -> androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty:
    48:48:void <init>(java.lang.String,androidx.dynamicanimation.animation.DynamicAnimation$1) -> <init>
    50:51:void <init>(java.lang.String) -> <init>
androidx.dynamicanimation.animation.FlingAnimation -> androidx.dynamicanimation.animation.FlingAnimation:
    43:60:void <init>(androidx.dynamicanimation.animation.FloatValueHolder) -> <init>
    43:72:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat) -> <init>
    98:98:float getFriction() -> getFriction
    184:186:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    84:88:androidx.dynamicanimation.animation.FlingAnimation setFriction(float) -> setFriction
    41:41:androidx.dynamicanimation.animation.DynamicAnimation setMaxValue(float) -> setMaxValue
    123:124:androidx.dynamicanimation.animation.FlingAnimation setMaxValue(float) -> setMaxValue
    41:41:androidx.dynamicanimation.animation.DynamicAnimation setMinValue(float) -> setMinValue
    110:111:androidx.dynamicanimation.animation.FlingAnimation setMinValue(float) -> setMinValue
    41:41:androidx.dynamicanimation.animation.DynamicAnimation setStartVelocity(float) -> setStartVelocity
    150:151:androidx.dynamicanimation.animation.FlingAnimation setStartVelocity(float) -> setStartVelocity
    191:192:void setValueThreshold(float) -> setValueThreshold
    157:174:boolean updateValueAndVelocity(long) -> updateValueAndVelocity
androidx.dynamicanimation.animation.FlingAnimation$DragForce -> androidx.dynamicanimation.animation.FlingAnimation$DragForce:
    194:206:void <init>() -> <init>
    213:213:float getFrictionScalar() -> getFrictionScalar
    233:233:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    209:210:void setFrictionScalar(float) -> setFrictionScalar
    237:238:void setValueThreshold(float) -> setValueThreshold
    217:223:androidx.dynamicanimation.animation.DynamicAnimation$MassState updateValueAndVelocity(float,float,long) -> updateValueAndVelocity
androidx.dynamicanimation.animation.FloatPropertyCompat -> androidx.dynamicanimation.animation.FloatPropertyCompat:
    42:44:void <init>(java.lang.String) -> <init>
    58:58:androidx.dynamicanimation.animation.FloatPropertyCompat createFloatPropertyCompat(android.util.FloatProperty) -> createFloatPropertyCompat
androidx.dynamicanimation.animation.FloatPropertyCompat$1 -> androidx.dynamicanimation.animation.FloatPropertyCompat$1:
    58:58:void <init>(java.lang.String,android.util.FloatProperty) -> <init>
    61:61:float getValue(java.lang.Object) -> getValue
    66:67:void setValue(java.lang.Object,float) -> setValue
androidx.dynamicanimation.animation.FloatValueHolder -> androidx.dynamicanimation.animation.FloatValueHolder:
    40:46:void <init>() -> <init>
    40:55:void <init>(float) -> <init>
    72:72:float getValue() -> getValue
    63:64:void setValue(float) -> setValue
androidx.dynamicanimation.animation.SpringAnimation -> androidx.dynamicanimation.animation.SpringAnimation:
    60:79:void <init>(androidx.dynamicanimation.animation.FloatValueHolder) -> <init>
    60:92:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat) -> <init>
    60:108:void <init>(java.lang.Object,androidx.dynamicanimation.animation.FloatPropertyCompat,float) -> <init>
    152:161:void animateToFinalPosition(float) -> animateToFinalPosition
    191:191:boolean canSkipToEnd() -> canSkipToEnd
    116:116:androidx.dynamicanimation.animation.SpringForce getSpring() -> getSpring
    262:262:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    197:209:void sanityCheck() -> sanityCheck
    128:129:androidx.dynamicanimation.animation.SpringAnimation setSpring(androidx.dynamicanimation.animation.SpringForce) -> setSpring
    267:267:void setValueThreshold(float) -> setValueThreshold
    173:183:void skipToEnd() -> skipToEnd
    134:137:void start() -> start
    215:252:boolean updateValueAndVelocity(long) -> updateValueAndVelocity
androidx.dynamicanimation.animation.SpringForce -> androidx.dynamicanimation.animation.SpringForce:
    83:115:void <init>() -> <init>
    83:124:void <init>(float) -> <init>
    218:223:float getAcceleration(float,float) -> getAcceleration
    186:186:float getDampingRatio() -> getDampingRatio
    206:206:float getFinalPosition() -> getFinalPosition
    152:152:float getStiffness() -> getStiffness
    247:268:void init() -> init
    232:236:boolean isAtEquilibrium(float,float) -> isAtEquilibrium
    171:177:androidx.dynamicanimation.animation.SpringForce setDampingRatio(float) -> setDampingRatio
    196:197:androidx.dynamicanimation.animation.SpringForce setFinalPosition(float) -> setFinalPosition
    137:143:androidx.dynamicanimation.animation.SpringForce setStiffness(float) -> setStiffness
    329:331:void setValueThreshold(double) -> setValueThreshold
    276:315:androidx.dynamicanimation.animation.DynamicAnimation$MassState updateValues(double,double,long) -> updateValues
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    179:221:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:281:void bumpBackStackNesting(int) -> bumpBackStackNesting
    294:294:int commit() -> commit
    299:299:int commitAllowingStateLoss() -> commitAllowingStateLoss
    315:330:int commitInternal(boolean) -> commitInternal
    304:306:void commitNow() -> commitNow
    310:312:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    223:228:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    183:185:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    62:135:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:461:void executeOps() -> executeOps
    471:529:void executePopOps(boolean) -> executePopOps
    555:620:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:354:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    175:178:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    158:158:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    165:168:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    152:152:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    146:146:int getId() -> getId
    687:687:java.lang.String getName() -> getName
    201:206:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    358:366:boolean interactsWith(int) -> interactsWith
    370:394:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    692:692:boolean isEmpty() -> isEmpty
    679:681:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    660:666:boolean isPostponed() -> isPostponed
    190:195:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    284:290:void runOnCommitRunnables() -> runOnCommitRunnables
    247:260:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    670:676:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    234:240:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    212:217:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    42:54:java.lang.String toString() -> toString
    634:656:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    169:169:void <clinit>() -> <clinit>
    48:81:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:98:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    101:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:53:void <init>(android.view.ViewGroup) -> <init>
    742:744:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    697:717:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    59:127:void executeOperations(java.util.List,boolean) -> executeOperations
    724:738:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    679:686:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:281:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    288:667:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:110:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:191:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:201:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:262:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    266:266:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    248:248:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
# {"id":"sourceFile","fileName":"DefaultSpecialEffectsController.java"}
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:260:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:278:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    454:454:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    457:460:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    485:485:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    488:490:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:582:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    639:639:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    642:643:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    783:791:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    795:803:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    752:755:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    776:777:void completeSpecialEffect() -> completeSpecialEffect
    759:759:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    764:764:androidx.core.os.CancellationSignal getSignal() -> getSignal
    768:771:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    817:845:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    867:879:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    884:896:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    862:862:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    849:849:java.lang.Object getTransition() -> getTransition
    857:857:boolean hasSharedElementTransition() -> hasSharedElementTransition
    853:853:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    107:189:void <init>() -> <init>
    107:214:void <init>(int) -> <init>
    60:60:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    60:60:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    60:60:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    505:506:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    307:308:void dismiss() -> dismiss
    317:318:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    321:358:void dismissInternal(boolean,boolean) -> dismissInternal
    367:367:android.app.Dialog getDialog() -> getDialog
    439:439:boolean getShowsDialog() -> getShowsDialog
    388:388:int getTheme() -> getTheme
    409:409:boolean isCancelable() -> isCancelable
    445:452:void onAttach(android.content.Context) -> onAttach
    620:620:void onCancel(android.content.DialogInterface) -> onCancel
    471:484:void onCreate(android.os.Bundle) -> onCreate
    612:615:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    737:756:void onDestroyView() -> onDestroyView
    457:465:void onDetach() -> onDetach
    624:634:void onDismiss(android.content.DialogInterface) -> onDismiss
    525:528:android.view.View onFindViewById(int) -> onFindViewById
    545:567:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    532:532:boolean onHasView() -> onHasView
    699:720:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    683:694:void onStart() -> onStart
    725:729:void onStop() -> onStop
    671:678:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    489:500:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    637:666:void prepareDialog(android.os.Bundle) -> prepareDialog
    379:383:android.app.Dialog requireDialog() -> requireDialog
    401:403:void setCancelable(boolean) -> setCancelable
    432:433:void setShowsDialog(boolean) -> setShowsDialog
    231:242:void setStyle(int,int) -> setStyle
    573:585:void setupDialog(android.app.Dialog,int) -> setupDialog
    256:261:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    273:278:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    293:298:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    107:107:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    111:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    116:116:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    120:123:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    127:127:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    131:134:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
    143:143:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    143:143:void onChanged(java.lang.Object) -> onChanged
    147:161:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
    506:506:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    510:513:android.view.View onFindViewById(int) -> onFindViewById
    518:518:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:538:void <init>() -> <init>
    563:565:void <init>(int) -> <init>
    2758:2788:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2896:2896:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2802:2884:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3263:3266:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2888:2891:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    3541:3541:java.lang.String generateActivityResultKey() -> generateActivityResultKey
    914:914:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2613:2614:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2638:2639:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3374:3377:android.view.View getAnimatingAway() -> getAnimatingAway
    3389:3392:android.animation.Animator getAnimator() -> getAnimator
    735:735:android.os.Bundle getArguments() -> getArguments
    1074:1077:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    887:887:android.content.Context getContext() -> getContext
    426:450:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    3280:3283:int getEnterAnim() -> getEnterAnim
    2396:2399:java.lang.Object getEnterTransition() -> getEnterTransition
    3360:3363:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3287:3290:int getExitAnim() -> getExitAnim
    2475:2478:java.lang.Object getExitTransition() -> getExitTransition
    3367:3370:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3411:3414:android.view.View getFocusedView() -> getFocusedView
    1021:1021:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    941:941:java.lang.Object getHost() -> getHost
    704:704:int getId() -> getId
    1638:1641:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1672:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1357:1357:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3322:3325:int getNextTransition() -> getNextTransition
    1086:1086:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1038:1043:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3308:3311:boolean getPopDirection() -> getPopDirection
    3294:3297:int getPopEnterAnim() -> getPopEnterAnim
    3301:3304:int getPopExitAnim() -> getPopExitAnim
    3400:3403:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2513:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    964:964:android.content.res.Resources getResources() -> getResources
    1261:1261:boolean getRetainInstance() -> getRetainInstance
    2435:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2546:2549:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2584:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3338:3341:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3346:3349:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    986:986:java.lang.String getString(int) -> getString
    999:999:java.lang.String getString(int,java.lang.Object[]) -> getString
    712:712:java.lang.String getTag() -> getTag
    855:863:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    877:877:int getTargetRequestCode() -> getTargetRequestCode
    975:975:java.lang.CharSequence getText(int) -> getText
    1345:1345:boolean getUserVisibleHint() -> getUserVisibleHint
    1951:1951:android.view.View getView() -> getView
    360:364:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    381:381:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1191:1191:boolean hasOptionsMenu() -> hasOptionsMenu
    672:672:int hashCode() -> hashCode
    568:573:void initLifecycle() -> initLifecycle
    2164:2180:void initState() -> initState
    585:585:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1116:1116:boolean isAdded() -> isAdded
    1125:1125:boolean isDetached() -> isDetached
    1184:1184:boolean isHidden() -> isHidden
    3425:3428:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1155:1155:boolean isInLayout() -> isInLayout
    1197:1198:boolean isMenuVisible() -> isMenuVisible
    3418:3421:boolean isPostponed() -> isPostponed
    1134:1134:boolean isRemoving() -> isRemoving
    1143:1144:boolean isRemovingParent() -> isRemovingParent
    1163:1163:boolean isResumed() -> isResumed
    762:765:boolean isStateSaved() -> isStateSaved
    1172:1173:boolean isVisible() -> isVisible
    3052:3053:void noteStateNotSaved() -> noteStateNotSaved
    1996:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1489:1494:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1779:1785:void onAttach(android.content.Context) -> onAttach
    1798:1799:void onAttach(android.app.Activity) -> onAttach
    1769:1769:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2085:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2343:2343:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1866:1871:void onCreate(android.os.Bundle) -> onCreate
    1819:1819:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1841:1841:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2295:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2207:2207:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1923:1926:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2154:2155:void onDestroy() -> onDestroy
    2236:2236:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2144:2145:void onDestroyView() -> onDestroyView
    2189:2190:void onDetach() -> onDetach
    1622:1622:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1209:1209:void onHiddenChanged(boolean) -> onHiddenChanged
    1727:1733:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1747:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2129:2130:void onLowMemory() -> onLowMemory
    2070:2070:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    2259:2259:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    2272:2272:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2111:2112:void onPause() -> onPause
    2080:2080:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    2225:2225:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    2101:2101:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1591:1591:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2035:2036:void onResume() -> onResume
    2059:2059:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2023:2024:void onStart() -> onStart
    2122:2123:void onStop() -> onStop
    1941:1941:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2012:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2993:3003:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2915:2929:void performAttach() -> performAttach
    3077:3079:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3132:3138:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2932:2956:void performCreate(android.os.Bundle) -> performCreate
    3096:3104:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2960:2982:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3214:3224:void performDestroy() -> performDestroy
    3193:3211:void performDestroyView() -> performDestroyView
    3227:3243:void performDetach() -> performDetach
    1654:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3082:3084:void performLowMemory() -> performLowMemory
    3067:3069:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3120:3128:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3142:3148:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3161:3173:void performPause() -> performPause
    3072:3074:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3108:3116:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3056:3064:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3035:3049:void performResume() -> performResume
    3151:3157:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3017:3031:void performStart() -> performStart
    3177:3189:void performStop() -> performStop
    2987:2989:void performViewCreated() -> performViewCreated
    2674:2675:void postponeEnterTransition() -> postponeEnterTransition
    2709:2718:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    3481:3502:androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback) -> prepareCallInternal
    3449:3449:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    3467:3467:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    2309:2310:void registerForContextMenu(android.view.View) -> registerForContextMenu
    3531:3537:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener) -> registerOnPreAttachListener
    1558:1562:void requestPermissions(java.lang.String[],int) -> requestPermissions
    926:930:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    746:750:android.os.Bundle requireArguments() -> requireArguments
    898:902:android.content.Context requireContext() -> requireContext
    1065:1065:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    952:956:java.lang.Object requireHost() -> requireHost
    1098:1109:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1962:1967:android.view.View requireView() -> requireView
    1886:1894:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:655:void restoreViewState(android.os.Bundle) -> restoreViewState
    3006:3013:void restoreViewState() -> restoreViewState
    2601:2602:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2626:2627:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    3381:3382:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3270:3277:void setAnimations(int,int,int,int) -> setAnimations
    3385:3386:void setAnimator(android.animation.Animator) -> setAnimator
    723:727:void setArguments(android.os.Bundle) -> setArguments
    2354:2355:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2382:2383:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2365:2366:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2458:2459:void setExitTransition(java.lang.Object) -> setExitTransition
    3407:3408:void setFocusedView(android.view.View) -> setFocusedView
    1272:1278:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    3432:3433:void setHideReplaced(boolean) -> setHideReplaced
    777:782:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1290:1296:void setMenuVisibility(boolean) -> setMenuVisibility
    3329:3334:void setNextTransition(int) -> setNextTransition
    3246:3260:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3315:3319:void setPopDirection(boolean) -> setPopDirection
    3396:3397:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    2497:2498:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1235:1245:void setRetainInstance(boolean) -> setRetainInstance
    2418:2419:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2532:2533:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    3354:3357:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2567:2568:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    812:840:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1322:1334:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1604:1607:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1365:1366:void startActivity(android.content.Intent) -> startActivity
    1374:1378:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1398:1399:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1421:1426:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1455:1465:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2731:2747:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:695:java.lang.String toString() -> toString
    2320:2321:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:260:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2738:2738:void <init>(androidx.fragment.app.Fragment) -> <init>
    2741:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2777:2777:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2780:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2896:2896:void <init>(androidx.fragment.app.Fragment) -> <init>
    2900:2904:android.view.View onFindViewById(int) -> onFindViewById
    2909:2909:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2936:2936:void <init>(androidx.fragment.app.Fragment) -> <init>
    2940:2945:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$6:
    3449:3449:void <init>(androidx.fragment.app.Fragment) -> <init>
    3449:3449:java.lang.Object apply(java.lang.Object) -> apply
    3452:3455:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$7 -> androidx.fragment.app.Fragment$7:
    3467:3467:void <init>(androidx.fragment.app.Fragment,androidx.activity.result.ActivityResultRegistry) -> <init>
    3467:3467:java.lang.Object apply(java.lang.Object) -> apply
    3470:3470:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$8 -> androidx.fragment.app.Fragment$8:
    3493:3493:void <init>(androidx.fragment.app.Fragment,androidx.arch.core.util.Function,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> <init>
    3496:3499:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$9 -> androidx.fragment.app.Fragment$9:
    3502:3502:void <init>(androidx.fragment.app.Fragment,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract) -> <init>
    3524:3524:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    3505:3511:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    3515:3519:void unregister() -> unregister
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3558:3597:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:517:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
    306:306:void <init>(androidx.fragment.app.Fragment$1) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    468:470:void <init>(android.os.Bundle) -> <init>
    472:477:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    481:481:int describeContents() -> describeContents
    486:487:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
# {"id":"sourceFile","fileName":"Fragment.java"}
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:105:void <init>() -> <init>
    84:121:void <init>(int) -> <init>
    319:319:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    562:576:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    608:608:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    618:618:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    125:153:void init() -> init
    823:825:void markFragmentsCreated() -> markFragmentsCreated
    828:848:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:165:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    600:600:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    261:264:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    273:277:void onCreate(android.os.Bundle) -> onCreate
    286:291:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    298:302:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    309:313:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    329:332:void onDestroy() -> onDestroy
    341:343:void onLowMemory() -> onLowMemory
    352:364:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:236:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    409:411:void onNewIntent(android.content.Intent) -> onNewIntent
    375:379:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    388:392:void onPause() -> onPause
    251:252:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    446:448:void onPostResume() -> onPostResume
    485:485:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    469:474:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    635:637:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    433:437:void onResume() -> onResume
    457:459:void onResumeFragments() -> onResumeFragments
    495:511:void onStart() -> onStart
    421:422:void onStateNotSaved() -> onStateNotSaved
    520:527:void onStop() -> onStop
    190:191:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    203:204:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    651:652:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    671:678:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    710:717:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    178:179:void supportFinishAfterTransition() -> supportFinishAfterTransition
    545:546:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    211:212:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    219:220:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    628:628:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:137:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:151:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    724:726:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    816:816:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    735:735:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    747:747:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    741:741:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    798:799:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    753:754:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    804:804:android.view.View onFindViewById(int) -> onFindViewById
    719:719:java.lang.Object onGetHost() -> onGetHost
    769:769:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    764:764:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    809:810:boolean onHasView() -> onHasView
    758:758:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    779:779:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    774:775:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    146:211:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    121:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    46:117:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    215:227:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    150:150:void <init>(androidx.fragment.app.Fragment) -> <init>
    153:159:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    166:166:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    176:185:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    189:189:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    169:169:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
# {"id":"sourceFile","fileName":"FragmentAnim.java"}
    176:176:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    179:183:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    195:195:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    198:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    237:243:void <init>(android.view.animation.Animation) -> <init>
    245:251:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    265:276:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    280:289:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    295:304:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    309:317:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    120:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:146:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:183:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    395:401:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    308:314:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    326:331:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    235:246:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    251:257:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    261:268:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    284:292:void endViewTransition(android.view.View) -> endViewTransition
    223:223:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    373:378:void removeAllViewsInLayout() -> removeAllViewsInLayout
    382:386:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    349:351:void removeView(android.view.View) -> removeView
    336:339:void removeViewAt(int) -> removeViewAt
    343:345:void removeViewInLayout(android.view.View) -> removeViewInLayout
    355:360:void removeViews(int,int) -> removeViews
    364:369:void removeViewsInLayout(int,int) -> removeViewsInLayout
    296:297:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    201:209:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    216:217:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    273:280:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:252:void dispatchActivityCreated() -> dispatchActivityCreated
    367:368:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:241:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:335:void dispatchDestroy() -> dispatchDestroy
    379:380:void dispatchLowMemory() -> dispatchLowMemory
    345:346:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:441:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:285:void dispatchPause() -> dispatchPause
    356:357:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:274:void dispatchResume() -> dispatchResume
    262:263:void dispatchStart() -> dispatchStart
    295:296:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:143:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:199:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    120:134:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    70:73:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:56:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    205:205:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    162:167:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    184:190:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:167:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    170:170:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:55:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:167:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:118:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:150:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:283:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:297:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:225:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:103:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:134:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:211:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:255:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:197:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:239:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:183:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:269:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    68:69:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    80:88:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder:
    40:43:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:99:void <clinit>() -> <clinit>
    96:521:void <init>() -> <init>
    96:96:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    96:96:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    96:96:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2458:2471:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2568:2572:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    833:837:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1708:1722:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3417:3418:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    813:817:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    1104:1105:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1920:1920:int allocBackStackIndex() -> allocBackStackIndex
    2829:2972:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1790:1801:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    575:575:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1485:1494:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3446:3455:boolean checkForMenus() -> checkForMenus
    1843:1847:void checkStateLoss() -> checkStateLoss
    1987:1990:void cleanupExec() -> cleanupExec
    874:875:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    918:922:void clearFragmentResultListener(java.lang.String) -> clearFragmentResultListener
    2512:2521:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2240:2254:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2345:2381:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1536:1582:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1694:1704:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1510:1519:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1774:1787:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3069:3073:void dispatchActivityCreated() -> dispatchActivityCreated
    3051:3055:void dispatchAttach() -> dispatchAttach
    3158:3163:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3235:3245:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3058:3062:void dispatchCreate() -> dispatchCreate
    3174:3202:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3104:3122:void dispatchDestroy() -> dispatchDestroy
    3100:3101:void dispatchDestroyView() -> dispatchDestroyView
    3166:3171:void dispatchLowMemory() -> dispatchLowMemory
    3142:3147:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3427:3430:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3221:3231:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3249:3257:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3272:3275:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3090:3091:void dispatchPause() -> dispatchPause
    3150:3155:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3206:3217:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3278:3281:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3083:3087:void dispatchResume() -> dispatchResume
    3076:3080:void dispatchStart() -> dispatchStart
    3126:3139:void dispatchStateChange(int) -> dispatchStateChange
    3094:3097:void dispatchStop() -> dispatchStop
    3065:3066:void dispatchViewCreated() -> dispatchViewCreated
    2553:2557:void doPendingDeferredStart() -> doPendingDeferredStart
    1208:1289:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    137:138:void enableDebugLogging(boolean) -> enableDebugLogging
    124:125:void enableNewStateManager(boolean) -> enableNewStateManager
    2496:2509:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1875:1897:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1930:1960:void ensureExecReady(boolean) -> ensureExecReady
    1996:2013:boolean execPendingActions(boolean) -> execPendingActions
    1963:1980:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2393:2407:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2120:2236:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    600:602:boolean executePendingTransactions() -> executePendingTransactions
    2022:2052:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1839:1839:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    981:985:androidx.fragment.app.Fragment findFragment(android.view.View) -> findFragment
    1813:1813:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1830:1830:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1834:1834:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    995:1003:androidx.fragment.app.Fragment findViewFragment(android.view.View) -> findViewFragment
    2477:2489:void forcePostponedTransactions() -> forcePostponedTransactions
    2536:2549:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    806:806:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    797:797:int getBackStackEntryCount() -> getBackStackEntryCount
    1100:1100:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2817:2817:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    954:963:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2430:2448:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3334:3344:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2822:2822:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1090:1090:java.util.List getFragments() -> getFragments
    2807:2807:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3487:3487:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3382:3382:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2812:2812:androidx.fragment.app.Fragment getParent() -> getParent
    3297:3297:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3367:3377:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1013:1017:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1095:1095:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    661:674:void handleOnBackPressed() -> handleOnBackPressed
    1747:1755:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3463:3466:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1169:1169:boolean isDestroyed() -> isDestroyed
    141:141:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3459:3459:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    648:652:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    630:640:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1309:1309:boolean isStateAtLeast(int) -> isStateAtLeast
    1864:1864:boolean isStateSaved() -> isStateSaved
    3041:3048:void launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int) -> launchRequestPermissions
    2994:3004:void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> launchStartActivityForResult
    3011:3036:void launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> launchStartIntentSenderForResult
    2265:2274:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1591:1624:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1314:1480:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1522:1523:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1636:1675:void moveToState(int,boolean) -> moveToState
    2978:2989:void noteStateNotSaved() -> noteStateNotSaved
    1022:1031:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    557:557:androidx.fragment.app.FragmentTransaction openTransaction() -> openTransaction
    1292:1306:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    682:683:void popBackStack() -> popBackStack
    709:710:void popBackStack(java.lang.String,int) -> popBackStack
    737:741:void popBackStack(int,int) -> popBackStack
    692:692:boolean popBackStackImmediate() -> popBackStackImmediate
    719:719:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    750:753:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    764:790:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2577:2628:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2291:2324:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    936:941:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    3395:3396:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    847:857:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1726:1738:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    3440:3441:void removeFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> removeFragmentOnAttachListener
    824:827:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    2070:2108:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    1108:1109:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2560:2565:void reportBackStackChanged() -> reportBackStackChanged
    2707:2803:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    3469:3481:int reverseTransit(int) -> reverseTransit
    2647:2692:android.os.Parcelable saveAllState() -> saveAllState
    1155:1161:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    1907:1917:void scheduleCommit() -> scheduleCommit
    1501:1507:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3320:3321:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
    862:870:void setFragmentResult(java.lang.String,android.os.Bundle) -> setFragmentResult
    882:914:void setFragmentResultListener(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.fragment.app.FragmentResultListener) -> setFragmentResultListener
    3301:3307:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3260:3269:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2416:2426:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1764:1771:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1679:1682:void startPendingDeferredFragments() -> startPendingDeferredFragments
    529:546:void throwException(java.lang.RuntimeException) -> throwException
    1175:1195:java.lang.String toString() -> toString
    3406:3407:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    609:620:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    433:433:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    436:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    2913:2913:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2913:2913:void onActivityResult(java.lang.Object) -> onActivityResult
    2916:2934:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    2939:2939:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2939:2939:void onActivityResult(java.lang.Object) -> onActivityResult
    2943:2969:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    451:451:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    460:463:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    455:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    478:478:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    483:483:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    488:488:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    492:492:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    521:521:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    524:525:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    887:887:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.Lifecycle) -> <init>
    891:906:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1550:1550:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1553:1558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2837:2837:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2842:2843:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2885:2885:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2885:2885:void onActivityResult(java.lang.Object) -> onActivityResult
    2888:2907:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3656:3656:void <init>() -> <init>
    3656:3656:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3662:3681:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3656:3656:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3687:3687:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    269:269:void <init>() -> <init>
    334:334:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    291:291:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    315:315:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    411:411:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    420:420:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    373:373:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    280:280:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    303:303:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    364:364:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    393:393:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    355:355:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    382:382:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    346:346:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    402:402:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3642:3642:void <clinit>() -> <clinit>
    3621:3624:void <init>(java.lang.String,int) -> <init>
    3626:3629:void <init>(android.os.Parcel) -> <init>
    3633:3633:int describeContents() -> describeContents
    3638:3640:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3643:3643:void <init>() -> <init>
    3643:3643:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3646:3646:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3643:3643:java.lang.Object[] newArray(int) -> newArray
    3651:3651:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener -> androidx.fragment.app.FragmentManager$LifecycleAwareResultListener:
    244:248:void <init>(androidx.lifecycle.Lifecycle,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.LifecycleEventObserver) -> <init>
    251:251:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    256:257:void onFragmentResult(java.lang.String,android.os.Bundle) -> onFragmentResult
    260:261:void removeObserver() -> removeObserver
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    3519:3523:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3528:3538:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3553:3556:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3612:3613:void cancelTransaction() -> cancelTransaction
    3596:3605:void completeTransaction() -> completeTransaction
    3586:3586:boolean isReady() -> isReady
    3565:3570:void onStartEnterTransition() -> onStartEnterTransition
    3579:3580:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:38:void <init>() -> <init>
    32:49:void <init>(android.os.Parcel) -> <init>
    53:53:int describeContents() -> describeContents
    58:66:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:88:void <init>(boolean) -> <init>
    112:125:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:202:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    274:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:173:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:183:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:289:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:105:void onCleared() -> onCleared
    154:164:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:97:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    122:123:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    104:141:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    195:206:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    240:256:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    283:283:long getItemId(int) -> getItemId
    161:188:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    260:260:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    287:287:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    271:271:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    266:266:android.os.Parcelable saveState() -> saveState
    211:236:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    151:155:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    131:131:void <clinit>() -> <clinit>
    43:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:72:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    77:106:java.lang.String toString() -> toString
    116:129:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    51:66:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:112:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:145:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    577:583:void activityCreated() -> activityCreated
    832:834:void addViewToContainer() -> addViewToContainer
    428:466:void attach() -> attach
    170:254:int computeExpectedState() -> computeExpectedState
    469:482:void create() -> create
    485:574:void createView() -> createView
    754:806:void destroy() -> destroy
    733:751:void destroyFragmentView() -> destroyFragmentView
    809:826:void detach() -> detach
    382:398:void ensureInflatedView() -> ensureInflatedView
    149:149:androidx.fragment.app.Fragment getFragment() -> getFragment
    615:625:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    258:379:void moveToExpectedState() -> moveToExpectedState
    629:634:void pause() -> pause
    401:425:void restoreState(java.lang.ClassLoader) -> restoreState
    594:612:void resume() -> resume
    681:713:android.os.Bundle saveBasicState() -> saveBasicState
    673:677:androidx.fragment.app.Fragment$SavedState saveInstanceState() -> saveInstanceState
    646:668:androidx.fragment.app.FragmentState saveState() -> saveState
    717:730:void saveViewState() -> saveViewState
    159:160:void setFragmentManagerState(int) -> setFragmentManagerState
    586:591:void start() -> start
    637:642:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    534:534:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    537:539:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    543:543:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    177:177:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:168:void burpActive() -> burpActive
    291:291:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:105:void dispatchStateChange(int) -> dispatchStateChange
    371:400:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    314:318:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    247:262:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    267:287:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    301:309:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    339:366:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:214:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    229:237:java.util.List getActiveFragments() -> getActiveFragments
    296:296:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    219:224:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:87:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:156:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:129:void moveToExpectedState() -> moveToExpectedState
    132:136:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:52:void resetActiveFragments() -> resetActiveFragments
    55:68:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:185:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    94:123:void <init>() -> <init>
    94:129:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    163:163:androidx.fragment.app.FragmentTransaction add(java.lang.Class,android.os.Bundle,java.lang.String) -> add
    171:172:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    181:181:androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle) -> add
    189:190:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    213:213:androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle,java.lang.String) -> add
    234:235:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:137:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    596:616:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    655:661:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    424:426:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    142:154:androidx.fragment.app.Fragment createFragment(java.lang.Class,android.os.Bundle) -> createFragment
    407:409:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    682:687:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:277:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    373:375:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    672:672:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    481:481:boolean isEmpty() -> isEmpty
    357:359:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    285:285:androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle) -> replace
    293:293:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    318:318:androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle,java.lang.String) -> replace
    340:344:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    818:823:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    792:792:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    732:734:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    747:749:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    701:703:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    716:718:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    538:538:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    575:579:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    472:473:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    447:449:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    782:783:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    626:627:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    639:639:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    389:391:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    73:74:void <init>() -> <init>
    76:81:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    83:88:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:701:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1261:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1130:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:217:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1150:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1029:1046:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:523:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:933:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:868:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:514:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1052:1067:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:811:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:681:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:416:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:297:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1271:1275:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    940:946:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    554:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    567:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:971:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    540:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1090:1111:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:335:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:92:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1013:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:464:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:998:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1074:1081:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:167:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
    1153:1153:boolean supportsTransition() -> supportsTransition
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:279:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:332:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:400:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:462:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:679:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:808:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    331:335:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:115:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:217:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    43:47:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    188:210:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:139:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    339:343:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:327:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:181:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:256:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    78:90:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    347:359:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:289:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:74:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:300:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    52:57:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    171:171:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:167:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    175:175:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    179:179:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:157:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    246:246:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:242:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    250:250:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    254:254:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:237:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    281:281:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:278:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    284:284:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    287:287:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    273:273:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:379:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:235:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    386:391:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    406:411:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:256:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:108:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    398:398:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:167:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:351:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    263:277:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:208:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:206:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:275:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:349:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    44:50:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    101:126:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    79:80:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    132:133:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    55:56:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    88:89:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    63:67:void initialize() -> initialize
    73:73:boolean isInitialized() -> isInitialized
    137:138:void performRestore(android.os.Bundle) -> performRestore
    141:142:void performSave(android.os.Bundle) -> performSave
    84:85:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:32:void <init>(java.lang.String) -> <init>
    35:36:void close() -> close
    39:40:void flush() -> flush
    55:59:void flushBuilder() -> flushBuilder
    43:52:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:94:void <init>(android.view.ViewGroup) -> <init>
    193:225:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:161:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:179:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:188:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:170:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    260:301:void executePendingOperations() -> executePendingOperations
    135:140:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:150:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    304:335:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:257:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    117:130:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    54:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:79:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:250:void markPostponedState() -> markPostponedState
    338:347:void updateFinalState() -> updateFinalState
    228:229:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:213:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:222:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    444:607:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    708:711:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    744:746:void complete() -> complete
    715:740:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    505:533:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    645:646:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    592:604:void cancel() -> cancel
    686:697:void complete() -> complete
    671:674:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    542:542:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    561:561:androidx.fragment.app.Fragment getFragment() -> getFragment
    552:552:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    565:565:boolean isCanceled() -> isCanceled
    677:677:boolean isComplete() -> isComplete
    659:661:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    607:642:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    571:588:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    527:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    530:531:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    484:496:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
# {"id":"sourceFile","fileName":"SpecialEffectsController.java"}
    385:401:void <clinit>() -> <clinit>
    385:385:void <init>(java.lang.String,int) -> <init>
    444:478:void applyState(android.view.View) -> applyState
    412:415:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    426:434:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.app.ActionBarDrawerToggle -> androidx.legacy.app.ActionBarDrawerToggle:
    120:120:void <clinit>() -> <clinit>
    167:169:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int) -> <init>
    133:218:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int) -> <init>
    172:172:boolean assumeMaterial(android.content.Context) -> assumeMaterial
    415:436:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    314:314:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    326:331:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    397:401:void onDrawerClosed(android.view.View) -> onDrawerClosed
    382:386:void onDrawerOpened(android.view.View) -> onDrawerOpened
    364:371:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    412:412:void onDrawerStateChanged(int) -> onDrawerStateChanged
    343:351:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    473:499:void setActionBarDescription(int) -> setActionBarDescription
    441:470:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    298:307:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    254:265:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    279:285:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    230:240:void syncState() -> syncState
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo -> androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo:
    506:540:void <init>(android.app.Activity) -> <init>
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable -> androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable:
    544:552:void <init>(androidx.legacy.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    582:600:void draw(android.graphics.Canvas) -> draw
    565:565:float getPosition() -> getPosition
    576:578:void setOffset(float) -> setOffset
    560:562:void setPosition(float) -> setPosition
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    126:145:boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    94:114:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
androidx.lifecycle.AbstractSavedStateViewModelFactory -> androidx.lifecycle.AbstractSavedStateViewModelFactory:
    53:57:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    67:71:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    80:84:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    103:104:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    234:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:230:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:28:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:39:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    56:57:void <init>() -> <init>
    46:123:void <init>(java.util.concurrent.Executor) -> <init>
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    143:144:void invalidate() -> invalidate
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$1:
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$2:
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$3:
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:30:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:59:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    79:86:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    169:258:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    128:157:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    169:177:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    258:272:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    213:221:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    128:128:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    128:128:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    280:320:void <clinit>() -> <clinit>
    281:281:void <init>(java.lang.String,int) -> <init>
    329:329:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    280:280:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    280:280:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:92:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:98:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:207:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:288:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    335:335:androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner) -> createUnsafe
    315:321:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:269:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    242:243:int getObserverCount() -> getObserverCount
    133:135:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:111:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:150:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:211:void popParentState() -> popParentState
    214:215:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:233:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:122:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:311:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:349:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:356:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:111:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    118:137:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    206:206:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    142:148:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    199:199:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    153:195:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:62:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:105:void <init>(java.lang.Object) -> <init>
    60:113:void <init>() -> <init>
    486:490:void assertMainThread(java.lang.String) -> assertMainThread
    378:398:void changeActiveCounter(int) -> changeActiveCounter
    117:134:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:159:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    322:326:java.lang.Object getValue() -> getValue
    330:330:int getVersion() -> getVersion
    373:373:boolean hasActiveObservers() -> hasActiveObservers
    363:363:boolean hasObservers() -> hasObservers
    191:206:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:235:void observeForever(androidx.lifecycle.Observer) -> observeForever
    341:341:void onActive() -> onActive
    354:354:void onInactive() -> onInactive
    286:294:void postValue(java.lang.Object) -> postValue
    244:251:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    261:267:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    306:310:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:94:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    475:477:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    481:481:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    404:407:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    437:438:void detachObserver() -> detachObserver
    432:432:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    417:428:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    444:448:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    460:470:void activeStateChanged(boolean) -> activeStateChanged
    457:457:void detachObserver() -> detachObserver
    453:453:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:70:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:120:void onActive() -> onActive
    125:128:void onInactive() -> onInactive
    108:112:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    133:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    150:154:void onChanged(java.lang.Object) -> onChanged
    141:142:void plug() -> plug
    145:146:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    33:34:void <init>(java.lang.Object) -> <init>
    40:41:void <init>() -> <init>
    45:46:void postValue(java.lang.Object) -> postValue
    50:51:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:33:void <init>(java.lang.Object) -> <init>
    37:38:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:71:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:146:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    81:84:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    93:96:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    87:90:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    42:56:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:103:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:137:void onDestroy() -> onDestroy
    121:123:void onPause() -> onPause
    114:117:void onResume() -> onResume
    107:110:void onStart() -> onStart
    127:129:void onStop() -> onStop
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    173:173:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    229:229:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:206:void onActivityPaused(android.app.Activity) -> onActivityPaused
    178:179:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:197:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:188:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:225:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:202:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:211:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    192:192:void onActivityResumed(android.app.Activity) -> onActivityResumed
    220:220:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    183:183:void onActivityStarted(android.app.Activity) -> onActivityStarted
    215:215:void onActivityStopped(android.app.Activity) -> onActivityStopped
    167:168:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
    376:408:void <clinit>() -> <clinit>
    58:99:void <init>(java.util.Map) -> <init>
    58:106:void <init>() -> <init>
    343:344:void clearSavedStateProvider(java.lang.String) -> clearSavedStateProvider
    146:146:boolean contains(java.lang.String) -> contains
    110:133:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    240:240:java.lang.Object get(java.lang.String) -> get
    158:158:androidx.lifecycle.MutableLiveData getLiveData(java.lang.String) -> getLiveData
    192:192:androidx.lifecycle.MutableLiveData getLiveData(java.lang.String,java.lang.Object) -> getLiveData
    201:215:androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object) -> getLiveDataInternal
    227:230:java.util.Set keys() -> keys
    292:297:java.lang.Object remove(java.lang.String) -> remove
    138:138:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    251:260:void set(java.lang.String,java.lang.Object) -> set
    329:330:void setSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> setSavedStateProvider
    263:271:void validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandle$1 -> androidx.lifecycle.SavedStateHandle$1:
    64:64:void <init>(androidx.lifecycle.SavedStateHandle) -> <init>
    71:89:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandle$SavingStateLiveData -> androidx.lifecycle.SavedStateHandle$SavingStateLiveData:
    351:354:void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String,java.lang.Object) -> <init>
    357:360:void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String) -> <init>
    371:372:void detach() -> detach
    364:368:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    32:38:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    98:104:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:51:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    67:72:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    62:62:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    41:41:boolean isAttached() -> isAttached
    55:59:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:122:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:119:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:93:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
    149:151:void <clinit>() -> <clinit>
    90:98:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    103:132:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    142:146:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    156:162:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.lang.Class[]) -> findMatchingConstructor
    167:168:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:27:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:33:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:36:void <init>() -> <init>
    176:192:androidx.lifecycle.LiveData distinctUntilChanged(androidx.lifecycle.LiveData) -> distinctUntilChanged
    72:79:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
    137:161:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> switchMap
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    73:73:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    76:77:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$2:
    138:138:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    143:159:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$2$1:
# {"id":"sourceFile","fileName":"Transformations.java"}
    152:152:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    155:156:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$3 -> androidx.lifecycle.Transformations$3:
    177:179:void <init>(androidx.lifecycle.MediatorLiveData) -> <init>
    183:190:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:139:void clear() -> clear
    186:193:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
    121:121:void onCleared() -> onCleared
    156:169:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    99:102:void <init>(androidx.lifecycle.ViewModelStoreOwner) -> <init>
    114:115:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    125:128:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:190:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    257:259:void <init>(android.app.Application) -> <init>
    264:278:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    244:247:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    196:196:void <init>() -> <init>
    219:223:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    207:210:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:65:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    31:33:void <init>() -> <init>
    63:71:androidx.lifecycle.LifecycleOwner get(android.view.View) -> get
    49:50:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:51:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    235:236:void enableDebugLogging(boolean) -> enableDebugLogging
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
    242:242:boolean hasRunningLoaders() -> hasRunningLoaders
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    41:41:void <clinit>() -> <clinit>
    375:378:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    386:405:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> createAndInstallLoader
    458:471:void destroyLoader(int) -> destroyLoader
    507:508:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    476:481:androidx.loader.content.Loader getLoader(int) -> getLoader
    512:512:boolean hasRunningLoaders() -> hasRunningLoaders
    413:429:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    486:487:void markForRedelivery() -> markForRedelivery
    438:452:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> restartLoader
    492:501:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    60:66:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    148:166:androidx.loader.content.Loader destroy(boolean) -> destroy
    215:227:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    70:70:androidx.loader.content.Loader getLoader() -> getLoader
    124:128:boolean isCallbackWaitingForData() -> isCallbackWaitingForData
    110:120:void markForRedelivery() -> markForRedelivery
    75:77:void onActive() -> onActive
    81:83:void onInactive() -> onInactive
    171:184:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    133:137:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    97:106:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> setCallback
    188:194:void setValue(java.lang.Object) -> setValue
    199:210:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    240:245:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    276:278:void dump(java.lang.String,java.io.PrintWriter) -> dump
    258:258:boolean hasDeliveredData() -> hasDeliveredData
    249:255:void onChanged(java.lang.Object) -> onChanged
    263:267:void reset() -> reset
    272:272:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    285:285:void <clinit>() -> <clinit>
    284:300:void <init>() -> <init>
    358:368:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    311:312:void finishCreatingLoader() -> finishCreatingLoader
    296:296:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    320:320:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> getLoader
    328:335:boolean hasRunningLoaders() -> hasRunningLoaders
    307:307:boolean isCreatingLoader() -> isCreatingLoader
    339:344:void markForRedelivery() -> markForRedelivery
    348:355:void onCleared() -> onCleared
    315:316:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> putLoader
    324:325:void removeLoader(int) -> removeLoader
    303:304:void startCreatingLoader() -> startCreatingLoader
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
# {"id":"sourceFile","fileName":"LoaderManagerImpl.java"}
    285:285:void <init>() -> <init>
    290:290:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    104:109:void <init>(android.content.Context) -> <init>
    303:303:void cancelLoadInBackground() -> cancelLoadInBackground
    213:223:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    227:242:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    340:360:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    186:209:void executePendingTask() -> executePendingTask
    329:329:java.util.concurrent.Executor getExecutor() -> getExecutor
    313:313:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    137:171:boolean onCancelLoad() -> onCancelLoad
    182:182:void onCanceled(java.lang.Object) -> onCanceled
    127:132:void onForceLoad() -> onForceLoad
    288:288:java.lang.Object onLoadInBackground() -> onLoadInBackground
    119:123:void setUpdateThrottle(long) -> setUpdateThrottle
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    47:47:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    57:71:java.lang.Object doInBackground() -> doInBackground
    86:87:void onCancelled(java.lang.Object) -> onCancelled
    79:80:void onPostExecute(java.lang.Object) -> onPostExecute
    93:95:void run() -> run
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    124:126:void <init>(android.content.Context) -> <init>
    137:144:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    87:94:void cancelLoadInBackground() -> cancelLoadInBackground
    42:42:void deliverResult(java.lang.Object) -> deliverResult
    99:116:void deliverResult(android.database.Cursor) -> deliverResult
    245:254:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    203:203:java.lang.String[] getProjection() -> getProjection
    212:212:java.lang.String getSelection() -> getSelection
    221:221:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    230:230:java.lang.String getSortOrder() -> getSortOrder
    194:194:android.net.Uri getUri() -> getUri
    42:42:java.lang.Object loadInBackground() -> loadInBackground
    57:81:android.database.Cursor loadInBackground() -> loadInBackground
    42:42:void onCanceled(java.lang.Object) -> onCanceled
    174:177:void onCanceled(android.database.Cursor) -> onCanceled
    181:190:void onReset() -> onReset
    155:161:void onStartLoading() -> onStartLoading
    169:170:void onStopLoading() -> onStopLoading
    207:208:void setProjection(java.lang.String[]) -> setProjection
    216:217:void setSelection(java.lang.String) -> setSelection
    225:226:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    234:235:void setSortOrder(java.lang.String) -> setSortOrder
    198:199:void setUri(android.net.Uri) -> setUri
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    43:119:void <init>(android.content.Context) -> <init>
    408:410:void abandon() -> abandon
    317:317:boolean cancelLoad() -> cancelLoad
    484:485:void commitContentChanged() -> commitContentChanged
    526:536:java.lang.String dataToString(java.lang.Object) -> dataToString
    143:146:void deliverCancellation() -> deliverCancellation
    130:133:void deliverResult(java.lang.Object) -> deliverResult
    566:577:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    346:347:void forceLoad() -> forceLoad
    153:153:android.content.Context getContext() -> getContext
    160:160:int getId() -> getId
    246:246:boolean isAbandoned() -> isAbandoned
    255:255:boolean isReset() -> isReset
    237:237:boolean isStarted() -> isStarted
    424:424:void onAbandon() -> onAbandon
    333:333:boolean onCancelLoad() -> onCancelLoad
    510:518:void onContentChanged() -> onContentChanged
    355:355:void onForceLoad() -> onForceLoad
    462:462:void onReset() -> onReset
    295:295:void onStartLoading() -> onStartLoading
    391:391:void onStopLoading() -> onStopLoading
    172:177:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
    206:210:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    446:452:void reset() -> reset
    495:498:void rollbackContentChanged() -> rollbackContentChanged
    281:285:void startLoading() -> startLoading
    379:381:void stopLoading() -> stopLoading
    470:473:boolean takeContentChanged() -> takeContentChanged
    542:550:java.lang.String toString() -> toString
    186:193:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    222:229:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    57:59:void <init>(androidx.loader.content.Loader) -> <init>
    63:63:boolean deliverSelfNotifications() -> deliverSelfNotifications
    68:69:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    50:128:void <init>() -> <init>
    228:229:boolean cancel(boolean) -> cancel
    252:269:void executeOnExecutor(java.util.concurrent.Executor) -> executeOnExecutor
    272:278:void finish(java.lang.Object) -> finish
    77:82:android.os.Handler getHandler() -> getHandler
    195:195:boolean isCancelled() -> isCancelled
    140:146:void postResult(java.lang.Object) -> postResult
    132:136:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    89:89:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    92:104:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    108:108:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    112:126:void done() -> done
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    140:140:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object) -> <init>
    143:144:void run() -> run
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    253:253:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    61:73:void <clinit>() -> <clinit>
    61:61:void <init>(java.lang.String,int) -> <init>
    61:61:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    61:61:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    100:100:void <clinit>() -> <clinit>
    90:128:void <init>(android.content.Context) -> <init>
    298:317:void executePendingBroadcasts() -> executePendingBroadcasts
    105:110:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    140:158:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    213:280:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    289:292:void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    170:196:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$1:
    115:115:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    119:126:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord:
    79:82:void <init>(android.content.Intent,java.util.ArrayList) -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord:
    55:58:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    62:71:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    173:185:void <clinit>() -> <clinit>
    250:251:void <init>() -> <init>
    253:255:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    619:626:boolean equals(java.lang.Object) -> equals
    324:324:int getContentType() -> getContentType
    342:342:int getFlags() -> getFlags
    294:294:int getLegacyStreamType() -> getLegacyStreamType
    561:561:int getRawLegacyStreamType() -> getRawLegacyStreamType
    333:333:int getUsage() -> getUsage
    271:271:int getVolumeControlStream() -> getVolumeControlStream
    493:493:int hashCode() -> hashCode
    557:558:void setForceLegacyBehavior(boolean) -> setForceLegacyBehavior
    498:498:java.lang.String toString() -> toString
    567:612:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    284:284:java.lang.Object unwrap() -> unwrap
    502:536:java.lang.String usageToString(int) -> usageToString
    305:313:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    373:383:void <init>() -> <init>
    390:400:void <init>(androidx.media.AudioAttributesCompat) -> <init>
    409:409:androidx.media.AudioAttributesCompat build() -> build
    452:453:androidx.media.AudioAttributesCompat$Builder setContentType(int) -> setContentType
    466:467:androidx.media.AudioAttributesCompat$Builder setFlags(int) -> setFlags
    486:487:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
    435:436:androidx.media.AudioAttributesCompat$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    21:23:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    45:56:void <init>() -> <init>
    59:60:void <init>(android.media.AudioAttributes) -> <init>
    45:65:void <init>(android.media.AudioAttributes,int) -> <init>
    114:118:boolean equals(java.lang.Object) -> equals
    70:70:java.lang.Object getAudioAttributes() -> getAudioAttributes
    94:94:int getContentType() -> getContentType
    104:104:int getFlags() -> getFlags
    81:84:int getLegacyStreamType() -> getLegacyStreamType
    89:89:int getRawLegacyStreamType() -> getRawLegacyStreamType
    99:99:int getUsage() -> getUsage
    76:76:int getVolumeControlStream() -> getVolumeControlStream
    109:109:int hashCode() -> hashCode
    124:124:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21$Builder -> androidx.media.AudioAttributesImplApi21$Builder:
    131:133:void <init>() -> <init>
    135:137:void <init>(java.lang.Object) -> <init>
    142:142:androidx.media.AudioAttributesImpl build() -> build
    127:127:androidx.media.AudioAttributesImpl$Builder setContentType(int) -> setContentType
    159:160:androidx.media.AudioAttributesImplApi21$Builder setContentType(int) -> setContentType
    127:127:androidx.media.AudioAttributesImpl$Builder setFlags(int) -> setFlags
    166:167:androidx.media.AudioAttributesImplApi21$Builder setFlags(int) -> setFlags
    127:127:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    173:174:androidx.media.AudioAttributesImplApi21$Builder setLegacyStreamType(int) -> setLegacyStreamType
    127:127:androidx.media.AudioAttributesImpl$Builder setUsage(int) -> setUsage
    148:153:androidx.media.AudioAttributesImplApi21$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    14:17:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:25:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi26 -> androidx.media.AudioAttributesImplApi26:
    41:42:void <init>() -> <init>
    45:46:void <init>(android.media.AudioAttributes) -> <init>
    50:50:int getVolumeControlStream() -> getVolumeControlStream
androidx.media.AudioAttributesImplApi26$Builder -> androidx.media.AudioAttributesImplApi26$Builder:
    56:57:void <init>() -> <init>
    60:61:void <init>(java.lang.Object) -> <init>
    66:66:androidx.media.AudioAttributesImpl build() -> build
    53:53:androidx.media.AudioAttributesImpl$Builder setUsage(int) -> setUsage
    53:53:androidx.media.AudioAttributesImplApi21$Builder setUsage(int) -> setUsage
    72:73:androidx.media.AudioAttributesImplApi26$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesImplApi26Parcelizer -> androidx.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    14:17:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:25:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    63:91:void <init>() -> <init>
    63:98:void <init>(int,int,int,int) -> <init>
    156:162:boolean equals(java.lang.Object) -> equals
    103:103:java.lang.Object getAudioAttributes() -> getAudioAttributes
    126:126:int getContentType() -> getContentType
    136:143:int getFlags() -> getFlags
    113:116:int getLegacyStreamType() -> getLegacyStreamType
    121:121:int getRawLegacyStreamType() -> getRawLegacyStreamType
    131:131:int getUsage() -> getUsage
    108:108:int getVolumeControlStream() -> getVolumeControlStream
    151:151:int hashCode() -> hashCode
    169:180:java.lang.String toString() -> toString
    320:342:int usageForStreamType(int) -> usageForStreamType
androidx.media.AudioAttributesImplBase$Builder -> androidx.media.AudioAttributesImplBase$Builder:
    184:190:void <init>() -> <init>
    184:197:void <init>(androidx.media.AudioAttributesCompat) -> <init>
    202:202:androidx.media.AudioAttributesImpl build() -> build
    183:183:androidx.media.AudioAttributesImpl$Builder setContentType(int) -> setContentType
    240:251:androidx.media.AudioAttributesImplBase$Builder setContentType(int) -> setContentType
    183:183:androidx.media.AudioAttributesImpl$Builder setFlags(int) -> setFlags
    257:259:androidx.media.AudioAttributesImplBase$Builder setFlags(int) -> setFlags
    275:314:androidx.media.AudioAttributesImplBase$Builder setInternalLegacyStreamType(int) -> setInternalLegacyStreamType
    183:183:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    265:271:androidx.media.AudioAttributesImplBase$Builder setLegacyStreamType(int) -> setLegacyStreamType
    183:183:androidx.media.AudioAttributesImpl$Builder setUsage(int) -> setUsage
    208:234:androidx.media.AudioAttributesImplBase$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    14:19:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    24:29:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioFocusRequestCompat -> androidx.media.AudioFocusRequestCompat:
    43:44:void <clinit>() -> <clinit>
    68:89:void <init>(int,android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler,androidx.media.AudioAttributesCompat,boolean) -> <init>
    148:156:boolean equals(java.lang.Object) -> equals
    171:173:android.media.AudioAttributes getAudioAttributes() -> getAudioAttributes
    111:111:androidx.media.AudioAttributesCompat getAudioAttributesCompat() -> getAudioAttributesCompat
    178:178:android.media.AudioFocusRequest getAudioFocusRequest() -> getAudioFocusRequest
    143:143:android.os.Handler getFocusChangeHandler() -> getFocusChangeHandler
    100:100:int getFocusGain() -> getFocusGain
    132:132:android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener() -> getOnAudioFocusChangeListener
    161:166:int hashCode() -> hashCode
    122:122:boolean willPauseWhenDucked() -> willPauseWhenDucked
androidx.media.AudioFocusRequestCompat$Api26Impl -> androidx.media.AudioFocusRequestCompat$Api26Impl:
    444:448:android.media.AudioFocusRequest createInstance(int,android.media.AudioAttributes,boolean,android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler) -> createInstance
androidx.media.AudioFocusRequestCompat$Builder -> androidx.media.AudioFocusRequestCompat$Builder:
    205:228:void <init>(int) -> <init>
    205:249:void <init>(androidx.media.AudioFocusRequestCompat) -> <init>
    367:372:androidx.media.AudioFocusRequestCompat build() -> build
    387:394:boolean isValidFocusGain(int) -> isValidFocusGain
    335:339:androidx.media.AudioFocusRequestCompat$Builder setAudioAttributes(androidx.media.AudioAttributesCompat) -> setAudioAttributes
    262:271:androidx.media.AudioFocusRequestCompat$Builder setFocusGain(int) -> setFocusGain
    289:289:androidx.media.AudioFocusRequestCompat$Builder setOnAudioFocusChangeListener(android.media.AudioManager$OnAudioFocusChangeListener) -> setOnAudioFocusChangeListener
    307:316:androidx.media.AudioFocusRequestCompat$Builder setOnAudioFocusChangeListener(android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler) -> setOnAudioFocusChangeListener
    353:354:androidx.media.AudioFocusRequestCompat$Builder setWillPauseWhenDucked(boolean) -> setWillPauseWhenDucked
androidx.media.AudioFocusRequestCompat$OnAudioFocusChangeListenerHandlerCompat -> androidx.media.AudioFocusRequestCompat$OnAudioFocusChangeListenerHandlerCompat:
    412:416:void <init>(android.media.AudioManager$OnAudioFocusChangeListener,android.os.Handler) -> <init>
    425:429:boolean handleMessage(android.os.Message) -> handleMessage
    420:421:void onAudioFocusChange(int) -> onAudioFocusChange
androidx.media.AudioManagerCompat -> androidx.media.AudioManagerCompat:
    158:158:void <init>() -> <init>
    115:126:int abandonAudioFocusRequest(android.media.AudioManager,androidx.media.AudioFocusRequestCompat) -> abandonAudioFocusRequest
    139:139:int getStreamMaxVolume(android.media.AudioManager,int) -> getStreamMaxVolume
    151:154:int getStreamMinVolume(android.media.AudioManager,int) -> getStreamMinVolume
    86:99:int requestAudioFocus(android.media.AudioManager,androidx.media.AudioFocusRequestCompat) -> requestAudioFocus
androidx.media.AudioManagerCompat$Api26Impl -> androidx.media.AudioManagerCompat$Api26Impl:
    167:167:int abandonAudioFocusRequest(android.media.AudioManager,android.media.AudioFocusRequest) -> abandonAudioFocusRequest
    172:172:int requestAudioFocus(android.media.AudioManager,android.media.AudioFocusRequest) -> requestAudioFocus
androidx.media.AudioManagerCompat$Api28Impl -> androidx.media.AudioManagerCompat$Api28Impl:
    182:182:int getStreamMinVolume(android.media.AudioManager,int) -> getStreamMinVolume
androidx.media.MediaBrowserCompatUtils -> androidx.media.MediaBrowserCompatUtils:
    77:78:void <init>() -> <init>
    32:44:boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> areSameOptions
    49:74:boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle) -> hasDuplicatedItems
androidx.media.MediaBrowserProtocol -> androidx.media.MediaBrowserProtocol:
    214:215:void <init>() -> <init>
androidx.media.MediaBrowserServiceCompat -> androidx.media.MediaBrowserServiceCompat:
    131:131:void <clinit>() -> <clinit>
    129:190:void <init>() -> <init>
    1664:1682:void addSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder,android.os.Bundle) -> addSubscription
    1763:1779:java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    1312:1313:void attachToBaseContext(android.content.Context) -> attachToBaseContext
    1339:1339:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1560:1560:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    1572:1572:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    1541:1541:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1644:1655:boolean isValidPackage(java.lang.String,int) -> isValidPackage
    1584:1588:void notifyChildrenChanged(java.lang.String) -> notifyChildrenChanged
    1602:1609:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1627:1638:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1334:1334:android.os.IBinder onBind(android.content.Intent) -> onBind
    1317:1330:void onCreate() -> onCreate
    1513:1514:void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onCustomAction
    1417:1419:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> onLoadChildren
    1461:1463:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result) -> onLoadItem
    1488:1490:void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onSearch
    1430:1430:void onSubscribe(java.lang.String,android.os.Bundle) -> onSubscribe
    1440:1440:void onUnsubscribe(java.lang.String) -> onUnsubscribe
    1838:1864:void performCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performCustomAction
    1721:1759:void performLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle,android.os.Bundle) -> performLoadChildren
    1784:1806:void performLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performLoadItem
    1810:1834:void performSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performSearch
    1689:1711:boolean removeSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder) -> removeSubscription
    1525:1533:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$1 -> androidx.media.MediaBrowserServiceCompat$1:
    1722:1722:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle,android.os.Bundle) -> <init>
    1722:1722:void onResultSent(java.lang.Object) -> onResultSent
    1725:1744:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$2 -> androidx.media.MediaBrowserServiceCompat$2:
    1785:1785:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1785:1785:void onResultSent(java.lang.Object) -> onResultSent
    1788:1795:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$3 -> androidx.media.MediaBrowserServiceCompat$3:
    1811:1811:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1811:1811:void onResultSent(java.lang.Object) -> onResultSent
    1814:1823:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$4 -> androidx.media.MediaBrowserServiceCompat$4:
    1838:1838:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1851:1852:void onErrorSent(android.os.Bundle) -> onErrorSent
    1846:1847:void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    1838:1838:void onResultSent(java.lang.Object) -> onResultSent
    1841:1842:void onResultSent(android.os.Bundle) -> onResultSent
androidx.media.MediaBrowserServiceCompat$BrowserRoot -> androidx.media.MediaBrowserServiceCompat$BrowserRoot:
    1955:1962:void <init>(java.lang.String,android.os.Bundle) -> <init>
    1870:1870:java.lang.String access$000(androidx.media.MediaBrowserServiceCompat$BrowserRoot) -> access$000
    1870:1870:android.os.Bundle access$100(androidx.media.MediaBrowserServiceCompat$BrowserRoot) -> access$100
    1975:1975:android.os.Bundle getExtras() -> getExtras
    1968:1968:java.lang.String getRootId() -> getRootId
androidx.media.MediaBrowserServiceCompat$ConnectionRecord -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord:
    795:806:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    810:816:void binderDied() -> binderDied
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1 -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    810:810:void <init>(androidx.media.MediaBrowserServiceCompat$ConnectionRecord) -> <init>
    813:814:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21:
    304:305:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    477:485:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    490:494:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    346:348:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    354:355:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    436:445:void notifyChildrenChangedForCompat(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompat
    449:460:void notifyChildrenChangedForCompat(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompat
    465:473:void notifyChildrenChangedForCompatOnHandler(androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompatOnHandler
    432:433:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForFramework
    317:317:android.os.IBinder onBind(android.content.Intent) -> onBind
    311:313:void onCreate() -> onCreate
    359:400:androidx.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    405:429:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ResultWrapper) -> onLoadChildren
    322:328:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
    331:342:void setSessionTokenOnHandler(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionTokenOnHandler
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    322:322:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    325:326:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    406:406:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ResultWrapper) -> <init>
    423:424:void detach() -> detach
    406:406:void onResultSent(java.lang.Object) -> onResultSent
    409:419:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    436:436:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.String,android.os.Bundle) -> <init>
    439:443:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    449:449:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> <init>
    452:458:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$MediaBrowserServiceApi21 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$MediaBrowserServiceApi21:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    499:501:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,android.content.Context) -> <init>
    507:512:android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    518:520:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23:
    525:525:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    528:530:void onCreate() -> onCreate
    533:554:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$ResultWrapper) -> onLoadItem
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    534:534:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ResultWrapper) -> <init>
    548:549:void detach() -> detach
    534:534:void onResultSent(java.lang.Object) -> onResultSent
    537:544:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$MediaBrowserServiceApi23 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$MediaBrowserServiceApi23:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    557:559:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,android.content.Context) -> <init>
    563:565:void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadItem
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26:
    570:570:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    615:622:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    627:632:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForFramework
    573:575:void onCreate() -> onCreate
    580:611:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ResultWrapper,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    581:581:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ResultWrapper,android.os.Bundle) -> <init>
    605:606:void detach() -> detach
    581:581:void onResultSent(java.lang.Object) -> onResultSent
    584:601:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$MediaBrowserServiceApi26 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$MediaBrowserServiceApi26:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    635:637:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26,android.content.Context) -> <init>
    642:647:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28:
    652:652:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    655:662:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase:
    203:203:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    285:289:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    294:298:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    241:250:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    255:267:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    272:281:void notifyChildrenChangedOnHandler(androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> notifyChildrenChangedOnHandler
    213:216:android.os.IBinder onBind(android.content.Intent) -> onBind
    208:209:void onCreate() -> onCreate
    221:237:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    221:221:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    224:235:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    241:241:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,java.lang.String,android.os.Bundle) -> <init>
    244:248:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    255:255:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> <init>
    258:265:void run() -> run
androidx.media.MediaBrowserServiceCompat$Result -> androidx.media.MediaBrowserServiceCompat$Result:
    846:848:void <init>(java.lang.Object) -> <init>
    949:959:void checkExtraFields(android.os.Bundle) -> checkExtraFields
    897:910:void detach() -> detach
    921:921:int getFlags() -> getFlags
    913:913:boolean isDone() -> isDone
    944:944:void onErrorSent(android.os.Bundle) -> onErrorSent
    935:935:void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    929:929:void onResultSent(java.lang.Object) -> onResultSent
    884:890:void sendError(android.os.Bundle) -> sendError
    869:875:void sendProgressUpdate(android.os.Bundle) -> sendProgressUpdate
    854:860:void sendResult(java.lang.Object) -> sendResult
    917:918:void setFlags(int) -> setFlags
androidx.media.MediaBrowserServiceCompat$ResultWrapper -> androidx.media.MediaBrowserServiceCompat$ResultWrapper:
    1264:1266:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    1283:1284:void detach() -> detach
    1287:1296:java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
    1269:1280:void sendResult(java.lang.Object) -> sendResult
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl:
    963:964:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    1034:1050:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> addSubscription
    969:1014:void connect(java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> connect
    1017:1030:void disconnect(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> disconnect
    1076:1093:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> getMediaItem
    1098:1135:void registerCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> registerCallbacks
    1054:1072:void removeSubscription(java.lang.String,android.os.IBinder,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> removeSubscription
    1153:1170:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> search
    1174:1192:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> sendCustomAction
    1139:1149:void unregisterCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> unregisterCallbacks
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    974:974:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    977:1012:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1017:1017:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    1020:1028:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1034:1034:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder,android.os.Bundle) -> <init>
    1037:1048:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1054:1054:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder) -> <init>
    1057:1070:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1080:1080:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    1083:1091:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1098:1098:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,int,java.lang.String,int,android.os.Bundle) -> <init>
    1101:1133:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1139:1139:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    1142:1147:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1157:1157:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1160:1168:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9:
# {"id":"sourceFile","fileName":"MediaBrowserServiceCompat.java"}
    1178:1178:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1181:1190:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat:
    1207:1209:void <init>(android.os.Messenger) -> <init>
    1213:1213:android.os.IBinder asBinder() -> asBinder
    1219:1228:void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onConnect
    1232:1233:void onConnectFailed() -> onConnectFailed
    1239:1248:void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1251:1256:void sendRequest(int,android.os.Bundle) -> sendRequest
androidx.media.MediaBrowserServiceCompat$ServiceHandler -> androidx.media.MediaBrowserServiceCompat$ServiceHandler:
    667:670:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    674:757:void handleMessage(android.os.Message) -> handleMessage
    777:782:void postOrRun(java.lang.Runnable) -> postOrRun
    763:773:boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
androidx.media.MediaSessionManager -> androidx.media.MediaSessionManager:
    43:45:void <clinit>() -> <clinit>
    68:76:void <init>(android.content.Context) -> <init>
    57:65:androidx.media.MediaSessionManager getSessionManager(android.content.Context) -> getSessionManager
    91:94:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo) -> isTrustedForMediaControl
androidx.media.MediaSessionManager$RemoteUserInfo -> androidx.media.MediaSessionManager$RemoteUserInfo:
    155:169:void <init>(java.lang.String,int,int) -> <init>
    184:196:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    236:242:boolean equals(java.lang.Object) -> equals
    203:203:java.lang.String getPackageName() -> getPackageName
    210:210:int getPid() -> getPid
    217:217:int getUid() -> getUid
    247:247:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplApi21 -> androidx.media.MediaSessionManagerImplApi21:
    28:30:void <init>(android.content.Context) -> <init>
    44:46:boolean hasMediaControlPermission(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> hasMediaControlPermission
    36:36:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplApi28 -> androidx.media.MediaSessionManagerImplApi28:
    28:31:void <init>(android.content.Context) -> <init>
    44:44:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28 -> androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28:
    68:71:void <init>(java.lang.String,int,int) -> <init>
    75:78:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    82:82:java.lang.String getPackageName(android.media.session.MediaSessionManager$RemoteUserInfo) -> getPackageName
androidx.media.MediaSessionManagerImplBase -> androidx.media.MediaSessionManagerImplBase:
    34:34:void <clinit>() -> <clinit>
    45:48:void <init>(android.content.Context) -> <init>
    52:52:android.content.Context getContext() -> getContext
    97:111:boolean isEnabledNotificationListener(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isEnabledNotificationListener
    78:83:boolean isPermissionGranted(androidx.media.MediaSessionManager$RemoteUserInfoImpl,java.lang.String) -> isPermissionGranted
    59:73:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase -> androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase:
    119:123:void <init>(java.lang.String,int,int) -> <init>
    142:154:boolean equals(java.lang.Object) -> equals
    127:127:java.lang.String getPackageName() -> getPackageName
    132:132:int getPid() -> getPid
    137:137:int getUid() -> getUid
    161:161:int hashCode() -> hashCode
androidx.media.VolumeProviderCompat -> androidx.media.VolumeProviderCompat:
    88:89:void <init>(int,int,int) -> <init>
    103:108:void <init>(int,int,int,java.lang.String) -> <init>
    116:116:int getCurrentVolume() -> getCurrentVolume
    135:135:int getMaxVolume() -> getMaxVolume
    126:126:int getVolumeControl() -> getVolumeControl
    165:165:java.lang.String getVolumeControlId() -> getVolumeControlId
    203:231:java.lang.Object getVolumeProvider() -> getVolumeProvider
    182:182:void onAdjustVolume(int) -> onAdjustVolume
    174:174:void onSetVolumeTo(int) -> onSetVolumeTo
    191:192:void setCallback(androidx.media.VolumeProviderCompat$Callback) -> setCallback
    145:153:void setCurrentVolume(int) -> setCurrentVolume
androidx.media.VolumeProviderCompat$1 -> androidx.media.VolumeProviderCompat$1:
    206:206:void <init>(androidx.media.VolumeProviderCompat,int,int,int,java.lang.String) -> <init>
    214:215:void onAdjustVolume(int) -> onAdjustVolume
    209:210:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.VolumeProviderCompat$2 -> androidx.media.VolumeProviderCompat$2:
    218:218:void <init>(androidx.media.VolumeProviderCompat,int,int,int) -> <init>
    226:227:void onAdjustVolume(int) -> onAdjustVolume
    221:222:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.VolumeProviderCompat$Api21Impl -> androidx.media.VolumeProviderCompat$Api21Impl:
    247:248:void setCurrentVolume(android.media.VolumeProvider,int) -> setCurrentVolume
androidx.media.VolumeProviderCompat$Callback -> androidx.media.VolumeProviderCompat$Callback:
    237:237:void <init>() -> <init>
androidx.media.app.NotificationCompat -> androidx.media.app.NotificationCompat:
    46:47:void <init>() -> <init>
androidx.media.app.NotificationCompat$Api15Impl -> androidx.media.app.NotificationCompat$Api15Impl:
    503:504:void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence) -> setContentDescription
androidx.media.app.NotificationCompat$Api21Impl -> androidx.media.app.NotificationCompat$Api21Impl:
    518:518:android.app.Notification$MediaStyle createMediaStyle() -> createMediaStyle
    524:530:android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle,int[],android.support.v4.media.session.MediaSessionCompat$Token) -> fillInMediaStyle
    540:541:void setMediaSession(android.app.Notification$MediaStyle,android.media.session.MediaSession$Token) -> setMediaSession
    535:536:void setShowActionsInCompactView(android.app.Notification$MediaStyle,int[]) -> setShowActionsInCompactView
    513:514:void setStyle(android.app.Notification$Builder,android.app.Notification$Style) -> setStyle
androidx.media.app.NotificationCompat$Api24Impl -> androidx.media.app.NotificationCompat$Api24Impl:
    550:550:android.app.Notification$DecoratedMediaCustomViewStyle createDecoratedMediaCustomViewStyle() -> createDecoratedMediaCustomViewStyle
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle -> androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle:
    370:371:void <init>() -> <init>
    379:386:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    457:459:int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
    425:427:int getContentViewLayoutResource() -> getContentViewLayoutResource
    436:452:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    394:420:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    468:484:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    488:493:void setBackgroundColor(android.widget.RemoteViews) -> setBackgroundColor
androidx.media.app.NotificationCompat$MediaStyle -> androidx.media.app.NotificationCompat$MediaStyle:
    131:137:void <init>() -> <init>
    131:141:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    211:218:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    302:321:android.widget.RemoteViews generateBigContentView() -> generateBigContentView
    234:266:android.widget.RemoteViews generateContentView() -> generateContentView
    271:281:android.widget.RemoteViews generateMediaActionButton(androidx.core.app.NotificationCompat$Action) -> generateMediaActionButton
    325:327:int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
    285:285:int getContentViewLayoutResource() -> getContentViewLayoutResource
    103:125:android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification) -> getMediaSession
    294:298:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    226:230:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    201:202:androidx.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    159:160:androidx.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    150:151:androidx.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    188:191:androidx.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
androidx.media.session.MediaButtonReceiver -> androidx.media.session.MediaButtonReceiver:
    103:103:void <init>() -> <init>
    227:233:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long) -> buildMediaButtonPendingIntent
    261:277:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long) -> buildMediaButtonPendingIntent
    285:297:android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context) -> getMediaButtonReceiverComponent
    301:313:android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String) -> getServiceComponentByAction
    193:201:android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent) -> handleIntent
    108:134:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback -> androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback:
    146:150:void <init>(android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult) -> <init>
    176:178:void finish() -> finish
    158:163:void onConnected() -> onConnected
    172:173:void onConnectionFailed() -> onConnectionFailed
    167:168:void onConnectionSuspended() -> onConnectionSuspended
    153:154:void setMediaBrowser(android.support.v4.media.MediaBrowserCompat) -> setMediaBrowser
androidx.media.utils.MediaConstants -> androidx.media.utils.MediaConstants:
    533:533:void <init>() -> <init>
androidx.navigation.ActionOnlyNavDirections -> androidx.navigation.ActionOnlyNavDirections:
    33:35:void <init>(int) -> <init>
    50:63:boolean equals(java.lang.Object) -> equals
    39:39:int getActionId() -> getActionId
    45:45:android.os.Bundle getArguments() -> getArguments
    68:70:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
androidx.navigation.ActivityNavigator -> androidx.navigation.ActivityNavigator:
    60:69:void <init>(android.content.Context) -> <init>
    80:91:void applyPopAnimationsToPendingTransition(android.app.Activity) -> applyPopAnimationsToPendingTransition
    44:44:androidx.navigation.NavDestination createDestination() -> createDestination
    101:101:androidx.navigation.ActivityNavigator$Destination createDestination() -> createDestination
    95:95:android.content.Context getContext() -> getContext
    44:44:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    117:215:androidx.navigation.NavDestination navigate(androidx.navigation.ActivityNavigator$Destination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    106:110:boolean popBackStack() -> popBackStack
androidx.navigation.ActivityNavigator$Destination -> androidx.navigation.ActivityNavigator$Destination:
    235:236:void <init>(androidx.navigation.NavigatorProvider) -> <init>
    248:249:void <init>(androidx.navigation.Navigator) -> <init>
    375:378:java.lang.String getAction() -> getAction
    350:353:android.content.ComponentName getComponent() -> getComponent
    406:409:android.net.Uri getData() -> getData
    434:434:java.lang.String getDataPattern() -> getDataPattern
    296:296:android.content.Intent getIntent() -> getIntent
    323:326:java.lang.String getTargetPackage() -> getTargetPackage
    254:277:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    363:367:androidx.navigation.ActivityNavigator$Destination setAction(java.lang.String) -> setAction
    337:341:androidx.navigation.ActivityNavigator$Destination setComponentName(android.content.ComponentName) -> setComponentName
    394:398:androidx.navigation.ActivityNavigator$Destination setData(android.net.Uri) -> setData
    425:426:androidx.navigation.ActivityNavigator$Destination setDataPattern(java.lang.String) -> setDataPattern
    286:287:androidx.navigation.ActivityNavigator$Destination setIntent(android.content.Intent) -> setIntent
    311:315:androidx.navigation.ActivityNavigator$Destination setTargetPackage(java.lang.String) -> setTargetPackage
    439:439:boolean supportsActions() -> supportsActions
    445:458:java.lang.String toString() -> toString
androidx.navigation.ActivityNavigator$Extras -> androidx.navigation.ActivityNavigator$Extras:
    471:474:void <init>(int,androidx.core.app.ActivityOptionsCompat) -> <init>
    489:489:androidx.core.app.ActivityOptionsCompat getActivityOptions() -> getActivityOptions
    480:480:int getFlags() -> getFlags
androidx.navigation.ActivityNavigator$Extras$Builder -> androidx.navigation.ActivityNavigator$Extras$Builder:
# {"id":"sourceFile","fileName":"ActivityNavigator.java"}
    496:496:void <init>() -> <init>
    508:509:androidx.navigation.ActivityNavigator$Extras$Builder addFlags(int) -> addFlags
    532:532:androidx.navigation.ActivityNavigator$Extras build() -> build
    521:522:androidx.navigation.ActivityNavigator$Extras$Builder setActivityOptions(androidx.core.app.ActivityOptionsCompat) -> setActivityOptions
androidx.navigation.NavAction -> androidx.navigation.NavAction:
    49:50:void <init>(int) -> <init>
    60:61:void <init>(int,androidx.navigation.NavOptions) -> <init>
    73:77:void <init>(int,androidx.navigation.NavOptions,android.os.Bundle) -> <init>
    109:109:android.os.Bundle getDefaultArguments() -> getDefaultArguments
    83:83:int getDestinationId() -> getDestinationId
    100:100:androidx.navigation.NavOptions getNavOptions() -> getNavOptions
    118:119:void setDefaultArguments(android.os.Bundle) -> setDefaultArguments
    92:93:void setNavOptions(androidx.navigation.NavOptions) -> setNavOptions
androidx.navigation.NavArgument -> androidx.navigation.NavArgument:
    41:55:void <init>(androidx.navigation.NavType,boolean,java.lang.Object,boolean) -> <init>
    115:124:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.Object getDefaultValue() -> getDefaultValue
    73:73:androidx.navigation.NavType getType() -> getType
    129:133:int hashCode() -> hashCode
    64:64:boolean isDefaultValuePresent() -> isDefaultValuePresent
    81:81:boolean isNullable() -> isNullable
    96:99:void putDefaultValue(java.lang.String,android.os.Bundle) -> putDefaultValue
    102:110:boolean verify(java.lang.String,android.os.Bundle) -> verify
androidx.navigation.NavArgument$Builder -> androidx.navigation.NavArgument$Builder:
    139:145:void <init>() -> <init>
    193:196:androidx.navigation.NavArgument build() -> build
    180:182:androidx.navigation.NavArgument$Builder setDefaultValue(java.lang.Object) -> setDefaultValue
    167:168:androidx.navigation.NavArgument$Builder setIsNullable(boolean) -> setIsNullable
    154:155:androidx.navigation.NavArgument$Builder setType(androidx.navigation.NavType) -> setType
androidx.navigation.NavBackStackEntry -> androidx.navigation.NavBackStackEntry:
    73:76:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.LifecycleOwner,androidx.navigation.NavControllerViewModel) -> <init>
    56:92:void <init>(android.content.Context,androidx.navigation.NavDestination,android.os.Bundle,androidx.lifecycle.LifecycleOwner,androidx.navigation.NavControllerViewModel,java.util.UUID,android.os.Bundle) -> <init>
    109:109:android.os.Bundle getArguments() -> getArguments
    174:180:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    100:100:androidx.navigation.NavDestination getDestination() -> getDestination
    125:125:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    135:135:androidx.lifecycle.Lifecycle$State getMaxLifecycle() -> getMaxLifecycle
    200:205:androidx.lifecycle.SavedStateHandle getSavedStateHandle() -> getSavedStateHandle
    186:186:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    211:225:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    163:168:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    139:141:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    113:114:void replaceArguments(android.os.Bundle) -> replaceArguments
    190:191:void saveState(android.os.Bundle) -> saveState
    129:131:void setMaxLifecycle(androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    147:152:void updateState() -> updateState
androidx.navigation.NavBackStackEntry$1 -> androidx.navigation.NavBackStackEntry$1:
    211:211:void <clinit>() -> <clinit>
androidx.navigation.NavBackStackEntry$NavResultSavedStateFactory -> androidx.navigation.NavBackStackEntry$NavResultSavedStateFactory:
    235:236:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    243:244:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class,androidx.lifecycle.SavedStateHandle) -> create
androidx.navigation.NavBackStackEntry$SavedStateViewModel -> androidx.navigation.NavBackStackEntry$SavedStateViewModel:
    251:253:void <init>(androidx.lifecycle.SavedStateHandle) -> <init>
    256:256:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
androidx.navigation.NavBackStackEntryState -> androidx.navigation.NavBackStackEntryState:
    85:85:void <clinit>() -> <clinit>
    37:43:void <init>(androidx.navigation.NavBackStackEntry) -> <init>
    46:51:void <init>(android.os.Parcel) -> <init>
    74:74:int describeContents() -> describeContents
    64:64:android.os.Bundle getArgs() -> getArgs
    59:59:int getDestinationId() -> getDestinationId
    69:69:android.os.Bundle getSavedState() -> getSavedState
    55:55:java.util.UUID getUUID() -> getUUID
    79:83:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.navigation.NavBackStackEntryState$1 -> androidx.navigation.NavBackStackEntryState$1:
    86:86:void <init>() -> <init>
    86:86:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:androidx.navigation.NavBackStackEntryState createFromParcel(android.os.Parcel) -> createFromParcel
    86:86:java.lang.Object[] newArray(int) -> newArray
    94:94:androidx.navigation.NavBackStackEntryState[] newArray(int) -> newArray
androidx.navigation.NavController -> androidx.navigation.NavController:
    93:171:void <init>(android.content.Context) -> <init>
    231:237:void addOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener) -> addOnDestinationChangedListener
    1190:1190:androidx.navigation.NavDeepLinkBuilder createDeepLink() -> createDeepLink
    430:509:boolean dispatchOnDestinationChanged() -> dispatchOnDestinationChanged
    1289:1291:void enableOnBackPressed(boolean) -> enableOnBackPressed
    828:840:androidx.navigation.NavDestination findDestination(int) -> findDestination
    779:799:java.lang.String findInvalidDestinationDisplayNameInDeepLink(int[]) -> findInvalidDestinationDisplayNameInDeepLink
    182:182:java.util.Deque getBackStack() -> getBackStack
    1345:1360:androidx.navigation.NavBackStackEntry getBackStackEntry(int) -> getBackStackEntry
    187:187:android.content.Context getContext() -> getContext
    1370:1373:androidx.navigation.NavBackStackEntry getCurrentBackStackEntry() -> getCurrentBackStackEntry
    822:823:androidx.navigation.NavDestination getCurrentDestination() -> getCurrentDestination
    411:417:int getDestinationCountOnBackStack() -> getDestinationCountOnBackStack
    811:814:androidx.navigation.NavGraph getGraph() -> getGraph
    519:522:androidx.navigation.NavInflater getNavInflater() -> getNavInflater
    202:202:androidx.navigation.NavigatorProvider getNavigatorProvider() -> getNavigatorProvider
    1387:1398:androidx.navigation.NavBackStackEntry getPreviousBackStackEntry() -> getPreviousBackStackEntry
    1321:1330:androidx.lifecycle.ViewModelStoreOwner getViewModelStoreOwner(int) -> getViewModelStoreOwner
    668:766:boolean handleDeepLink(android.content.Intent) -> handleDeepLink
    851:852:void navigate(int) -> navigate
    863:864:void navigate(int,android.os.Bundle) -> navigate
    877:878:void navigate(int,android.os.Bundle,androidx.navigation.NavOptions) -> navigate
    893:945:void navigate(int,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    958:959:void navigate(android.net.Uri) -> navigate
    973:974:void navigate(android.net.Uri,androidx.navigation.NavOptions) -> navigate
    990:991:void navigate(android.net.Uri,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    1003:1004:void navigate(androidx.navigation.NavDeepLinkRequest) -> navigate
    1017:1018:void navigate(androidx.navigation.NavDeepLinkRequest,androidx.navigation.NavOptions) -> navigate
    1033:1051:void navigate(androidx.navigation.NavDeepLinkRequest,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    1055:1151:void navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    1159:1160:void navigate(androidx.navigation.NavDirections) -> navigate
    1169:1170:void navigate(androidx.navigation.NavDirections,androidx.navigation.NavOptions) -> navigate
    1180:1181:void navigate(androidx.navigation.NavDirections,androidx.navigation.Navigator$Extras) -> navigate
    356:403:boolean navigateUp() -> navigateUp
    596:644:void onGraphCreated(android.os.Bundle) -> onGraphCreated
    259:264:boolean popBackStack() -> popBackStack
    277:280:boolean popBackStack(int,boolean) -> popBackStack
    294:338:boolean popBackStackInternal(int,boolean) -> popBackStackInternal
    247:248:void removeOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener) -> removeOnDestinationChangedListener
    1253:1262:void restoreState(android.os.Bundle) -> restoreState
    1205:1239:android.os.Bundle saveState() -> saveState
    539:540:void setGraph(int) -> setGraph
    557:558:void setGraph(int,android.os.Bundle) -> setGraph
    572:573:void setGraph(androidx.navigation.NavGraph) -> setGraph
    587:593:void setGraph(androidx.navigation.NavGraph,android.os.Bundle) -> setGraph
    1265:1270:void setLifecycleOwner(androidx.lifecycle.LifecycleOwner) -> setLifecycleOwner
    215:219:void setNavigatorProvider(androidx.navigation.NavigatorProvider) -> setNavigatorProvider
    1273:1286:void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher) -> setOnBackPressedDispatcher
    1299:1306:void setViewModelStore(androidx.lifecycle.ViewModelStore) -> setViewModelStore
    1294:1296:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.navigation.NavController$1 -> androidx.navigation.NavController$1:
    104:104:void <init>(androidx.navigation.NavController) -> <init>
    108:113:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.navigation.NavController$2 -> androidx.navigation.NavController$2:
    116:116:void <init>(androidx.navigation.NavController,boolean) -> <init>
    119:120:void handleOnBackPressed() -> handleOnBackPressed
androidx.navigation.NavControllerViewModel -> androidx.navigation.NavControllerViewModel:
    34:34:void <clinit>() -> <clinit>
    32:50:void <init>() -> <init>
    54:58:void clear(java.util.UUID) -> clear
    46:47:androidx.navigation.NavControllerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    70:75:androidx.lifecycle.ViewModelStore getViewModelStore(java.util.UUID) -> getViewModelStore
    62:66:void onCleared() -> onCleared
    81:92:java.lang.String toString() -> toString
androidx.navigation.NavControllerViewModel$1 -> androidx.navigation.NavControllerViewModel$1:
    34:34:void <init>() -> <init>
    39:40:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.navigation.NavDeepLink -> androidx.navigation.NavDeepLink:
    38:38:void <clinit>() -> <clinit>
    40:124:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    132:154:boolean buildPathRegex(java.lang.String,java.lang.StringBuilder,java.util.regex.Pattern) -> buildPathRegex
    225:225:java.lang.String getAction() -> getAction
    250:292:android.os.Bundle getMatchingArguments(android.net.Uri,java.util.Map) -> getMatchingArguments
    236:236:java.lang.String getMimeType() -> getMimeType
    240:244:int getMimeTypeMatchRating(java.lang.String) -> getMimeTypeMatchRating
    214:214:java.lang.String getUriPattern() -> getUriPattern
    203:203:boolean isExactDeepLink() -> isExactDeepLink
    296:309:boolean parseArgument(android.os.Bundle,java.lang.String,java.lang.String,androidx.navigation.NavArgument) -> parseArgument
androidx.navigation.NavDeepLink$Builder -> androidx.navigation.NavDeepLink$Builder:
    382:382:void <init>() -> <init>
    481:481:androidx.navigation.NavDeepLink build() -> build
    408:413:androidx.navigation.NavDeepLink$Builder fromAction(java.lang.String) -> fromAction
    424:426:androidx.navigation.NavDeepLink$Builder fromMimeType(java.lang.String) -> fromMimeType
    392:394:androidx.navigation.NavDeepLink$Builder fromUriPattern(java.lang.String) -> fromUriPattern
    454:458:androidx.navigation.NavDeepLink$Builder setAction(java.lang.String) -> setAction
    470:471:androidx.navigation.NavDeepLink$Builder setMimeType(java.lang.String) -> setMimeType
    438:439:androidx.navigation.NavDeepLink$Builder setUriPattern(java.lang.String) -> setUriPattern
androidx.navigation.NavDeepLink$MimeType -> androidx.navigation.NavDeepLink$MimeType:
    348:354:void <init>(java.lang.String) -> <init>
    344:344:int compareTo(java.lang.Object) -> compareTo
    358:370:int compareTo(androidx.navigation.NavDeepLink$MimeType) -> compareTo
androidx.navigation.NavDeepLink$ParamQuery -> androidx.navigation.NavDeepLink$ParamQuery:
    319:321:void <init>() -> <init>
    332:333:void addArgumentName(java.lang.String) -> addArgumentName
    336:336:java.lang.String getArgumentName(int) -> getArgumentName
    328:328:java.lang.String getParamRegex() -> getParamRegex
    324:325:void setParamRegex(java.lang.String) -> setParamRegex
    340:340:int size() -> size
androidx.navigation.NavDeepLinkBuilder -> androidx.navigation.NavDeepLinkBuilder:
    71:81:void <init>(android.content.Context) -> <init>
    87:89:void <init>(androidx.navigation.NavController) -> <init>
    251:260:android.app.PendingIntent createPendingIntent() -> createPendingIntent
    213:233:androidx.core.app.TaskStackBuilder createTaskStackBuilder() -> createTaskStackBuilder
    165:184:void fillInIntent() -> fillInIntent
    193:195:androidx.navigation.NavDeepLinkBuilder setArguments(android.os.Bundle) -> setArguments
    101:101:androidx.navigation.NavDeepLinkBuilder setComponentName(java.lang.Class) -> setComponentName
    114:115:androidx.navigation.NavDeepLinkBuilder setComponentName(android.content.ComponentName) -> setComponentName
    157:161:androidx.navigation.NavDeepLinkBuilder setDestination(int) -> setDestination
    126:127:androidx.navigation.NavDeepLinkBuilder setGraph(int) -> setGraph
    142:146:androidx.navigation.NavDeepLinkBuilder setGraph(androidx.navigation.NavGraph) -> setGraph
androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider -> androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider:
    273:296:void <init>() -> <init>
    302:304:androidx.navigation.Navigator getNavigator(java.lang.String) -> getNavigator
androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider$1 -> androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider$1:
# {"id":"sourceFile","fileName":"NavDeepLinkBuilder.java"}
    273:273:void <init>(androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider) -> <init>
    277:277:androidx.navigation.NavDestination createDestination() -> createDestination
    285:285:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    290:290:boolean popBackStack() -> popBackStack
androidx.navigation.NavDeepLinkRequest -> androidx.navigation.NavDeepLinkRequest:
    41:42:void <init>(android.content.Intent) -> <init>
    44:48:void <init>(android.net.Uri,java.lang.String,java.lang.String) -> <init>
    69:69:java.lang.String getAction() -> getAction
    80:80:java.lang.String getMimeType() -> getMimeType
    58:58:android.net.Uri getUri() -> getUri
    86:105:java.lang.String toString() -> toString
androidx.navigation.NavDeepLinkRequest$Builder -> androidx.navigation.NavDeepLinkRequest$Builder:
    116:116:void <init>() -> <init>
    226:226:androidx.navigation.NavDeepLinkRequest build() -> build
    141:147:androidx.navigation.NavDeepLinkRequest$Builder fromAction(java.lang.String) -> fromAction
    158:160:androidx.navigation.NavDeepLinkRequest$Builder fromMimeType(java.lang.String) -> fromMimeType
    126:128:androidx.navigation.NavDeepLinkRequest$Builder fromUri(android.net.Uri) -> fromUri
    187:192:androidx.navigation.NavDeepLinkRequest$Builder setAction(java.lang.String) -> setAction
    207:216:androidx.navigation.NavDeepLinkRequest$Builder setMimeType(java.lang.String) -> setMimeType
    172:173:androidx.navigation.NavDeepLinkRequest$Builder setUri(android.net.Uri) -> setUri
androidx.navigation.NavDestination -> androidx.navigation.NavDestination:
    138:138:void <clinit>() -> <clinit>
    235:236:void <init>(androidx.navigation.Navigator) -> <init>
    241:243:void <init>(java.lang.String) -> <init>
    593:597:void addArgument(java.lang.String,androidx.navigation.NavArgument) -> addArgument
    407:408:void addDeepLink(java.lang.String) -> addDeepLink
    452:456:void addDeepLink(androidx.navigation.NavDeepLink) -> addDeepLink
    618:640:android.os.Bundle addInDefaultArgs(android.os.Bundle) -> addInDefaultArgs
    501:515:int[] buildDeepLinkIds() -> buildDeepLinkIds
    536:540:androidx.navigation.NavAction getAction(int) -> getAction
    225:226:java.util.Map getArguments() -> getArguments
    195:201:java.lang.String getDisplayName(android.content.Context,int) -> getDisplayName
    303:306:java.lang.String getDisplayName() -> getDisplayName
    283:283:int getId() -> getId
    323:323:java.lang.CharSequence getLabel() -> getLabel
    333:333:java.lang.String getNavigatorName() -> getNavigatorName
    272:272:androidx.navigation.NavGraph getParent() -> getParent
    353:353:boolean hasDeepLink(android.net.Uri) -> hasDeepLink
    373:373:boolean hasDeepLink(androidx.navigation.NavDeepLinkRequest) -> hasDeepLink
    467:491:androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest) -> matchDeepLink
    253:259:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    163:179:java.lang.Class parseClassFromName(android.content.Context,java.lang.String,java.lang.Class) -> parseClassFromName
    550:551:void putAction(int,int) -> putAction
    560:573:void putAction(int,androidx.navigation.NavAction) -> putAction
    581:585:void removeAction(int) -> removeAction
    605:609:void removeArgument(java.lang.String) -> removeArgument
    293:295:void setId(int) -> setId
    315:316:void setLabel(java.lang.CharSequence) -> setLabel
    262:263:void setParent(androidx.navigation.NavGraph) -> setParent
    523:523:boolean supportsActions() -> supportsActions
    646:660:java.lang.String toString() -> toString
androidx.navigation.NavDestination$DeepLinkMatch -> androidx.navigation.NavDestination$DeepLinkMatch:
    86:92:void <init>(androidx.navigation.NavDestination,android.os.Bundle,boolean,boolean,int) -> <init>
    75:75:int compareTo(java.lang.Object) -> compareTo
    107:134:int compareTo(androidx.navigation.NavDestination$DeepLinkMatch) -> compareTo
    96:96:androidx.navigation.NavDestination getDestination() -> getDestination
    101:101:android.os.Bundle getMatchingArgs() -> getMatchingArgs
androidx.navigation.NavGraph -> androidx.navigation.NavGraph:
    42:59:void <init>(androidx.navigation.Navigator) -> <init>
    227:233:void addAll(androidx.navigation.NavGraph) -> addAll
    99:121:void addDestination(androidx.navigation.NavDestination) -> addDestination
    134:140:void addDestinations(java.util.Collection) -> addDestinations
    153:159:void addDestinations(androidx.navigation.NavDestination[]) -> addDestinations
    252:257:void clear() -> clear
    171:171:androidx.navigation.NavDestination findNode(int) -> findNode
    176:181:androidx.navigation.NavDestination findNode(int,boolean) -> findNode
    266:266:java.lang.String getDisplayName() -> getDisplayName
    295:298:java.lang.String getStartDestDisplayName() -> getStartDestDisplayName
    276:276:int getStartDestination() -> getStartDestination
    187:187:java.util.Iterator iterator() -> iterator
    76:85:androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest) -> matchDeepLink
    63:70:void onInflate(android.content.Context,android.util.AttributeSet) -> onInflate
    241:246:void remove(androidx.navigation.NavDestination) -> remove
    285:291:void setStartDestination(int) -> setStartDestination
    304:320:java.lang.String toString() -> toString
androidx.navigation.NavGraph$1 -> androidx.navigation.NavGraph$1:
    187:189:void <init>(androidx.navigation.NavGraph) -> <init>
    193:193:boolean hasNext() -> hasNext
    187:187:java.lang.Object next() -> next
    198:202:androidx.navigation.NavDestination next() -> next
    207:215:void remove() -> remove
androidx.navigation.NavGraphNavigator -> androidx.navigation.NavGraphNavigator:
    39:41:void <init>(androidx.navigation.NavigatorProvider) -> <init>
    28:28:androidx.navigation.NavDestination createDestination() -> createDestination
    50:50:androidx.navigation.NavGraph createDestination() -> createDestination
    28:28:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    57:71:androidx.navigation.NavDestination navigate(androidx.navigation.NavGraph,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    77:77:boolean popBackStack() -> popBackStack
androidx.navigation.NavHostController -> androidx.navigation.NavHostController:
    53:54:void <init>(android.content.Context) -> <init>
    97:98:void enableOnBackPressed(boolean) -> enableOnBackPressed
    64:65:void setLifecycleOwner(androidx.lifecycle.LifecycleOwner) -> setLifecycleOwner
    86:87:void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher) -> setOnBackPressedDispatcher
    114:115:void setViewModelStore(androidx.lifecycle.ViewModelStore) -> setViewModelStore
androidx.navigation.NavInflater -> androidx.navigation.NavInflater:
    55:55:void <clinit>() -> <clinit>
    60:63:void <init>(android.content.Context,androidx.navigation.NavigatorProvider) -> <init>
    276:280:androidx.navigation.NavType checkNavType(android.util.TypedValue,androidx.navigation.NavType,androidx.navigation.NavType,java.lang.String,java.lang.String) -> checkNavType
    74:100:androidx.navigation.NavGraph inflate(int) -> inflate
    107:145:androidx.navigation.NavDestination inflate(android.content.res.Resources,android.content.res.XmlResourceParser,android.util.AttributeSet,int) -> inflate
    313:352:void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int) -> inflateAction
    178:270:androidx.navigation.NavArgument inflateArgument(android.content.res.TypedArray,android.content.res.Resources,int) -> inflateArgument
    162:172:void inflateArgumentForBundle(android.content.res.Resources,android.os.Bundle,android.util.AttributeSet,int) -> inflateArgumentForBundle
    150:158:void inflateArgumentForDestination(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,int) -> inflateArgumentForDestination
    285:308:void inflateDeepLink(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet) -> inflateDeepLink
androidx.navigation.NavOptions -> androidx.navigation.NavOptions:
    43:51:void <init>(boolean,int,boolean,int,int,int,int) -> <init>
    125:128:boolean equals(java.lang.Object) -> equals
    91:91:int getEnterAnim() -> getEnterAnim
    100:100:int getExitAnim() -> getExitAnim
    110:110:int getPopEnterAnim() -> getPopEnterAnim
    120:120:int getPopExitAnim() -> getPopExitAnim
    73:73:int getPopUpTo() -> getPopUpTo
    139:146:int hashCode() -> hashCode
    82:82:boolean isPopUpToInclusive() -> isPopUpToInclusive
    61:61:boolean shouldLaunchSingleTop() -> shouldLaunchSingleTop
androidx.navigation.NavOptions$Builder -> androidx.navigation.NavOptions$Builder:
    154:167:void <init>() -> <init>
    262:262:androidx.navigation.NavOptions build() -> build
    209:210:androidx.navigation.NavOptions$Builder setEnterAnim(int) -> setEnterAnim
    223:224:androidx.navigation.NavOptions$Builder setExitAnim(int) -> setExitAnim
    178:179:androidx.navigation.NavOptions$Builder setLaunchSingleTop(boolean) -> setLaunchSingleTop
    238:239:androidx.navigation.NavOptions$Builder setPopEnterAnim(int) -> setPopEnterAnim
    253:254:androidx.navigation.NavOptions$Builder setPopExitAnim(int) -> setPopExitAnim
    194:196:androidx.navigation.NavOptions$Builder setPopUpTo(int,boolean) -> setPopUpTo
androidx.navigation.NavType -> androidx.navigation.NavType:
    269:612:void <clinit>() -> <clinit>
    44:46:void <init>(boolean) -> <init>
    129:184:androidx.navigation.NavType fromArgType(java.lang.String,java.lang.String) -> fromArgType
    192:218:androidx.navigation.NavType inferFromValue(java.lang.String) -> inferFromValue
    224:257:androidx.navigation.NavType inferFromValueType(java.lang.Object) -> inferFromValueType
    53:53:boolean isNullableAllowed() -> isNullableAllowed
    96:98:java.lang.Object parseAndPut(android.os.Bundle,java.lang.String,java.lang.String) -> parseAndPut
    114:114:java.lang.String toString() -> toString
androidx.navigation.NavType$1 -> androidx.navigation.NavType$1:
    269:269:void <init>(boolean) -> <init>
    269:269:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    277:277:java.lang.Integer get(android.os.Bundle,java.lang.String) -> get
    293:293:java.lang.String getName() -> getName
    269:269:java.lang.Object parseValue(java.lang.String) -> parseValue
    283:286:java.lang.Integer parseValue(java.lang.String) -> parseValue
    269:269:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    272:273:void put(android.os.Bundle,java.lang.String,java.lang.Integer) -> put
androidx.navigation.NavType$10 -> androidx.navigation.NavType$10:
    580:580:void <init>(boolean) -> <init>
    580:580:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    588:588:java.lang.String get(android.os.Bundle,java.lang.String) -> get
    600:600:java.lang.String getName() -> getName
    580:580:java.lang.Object parseValue(java.lang.String) -> parseValue
    594:594:java.lang.String parseValue(java.lang.String) -> parseValue
    580:580:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    583:584:void put(android.os.Bundle,java.lang.String,java.lang.String) -> put
androidx.navigation.NavType$11 -> androidx.navigation.NavType$11:
    612:612:void <init>(boolean) -> <init>
    612:612:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    620:620:java.lang.String[] get(android.os.Bundle,java.lang.String) -> get
    632:632:java.lang.String getName() -> getName
    612:612:java.lang.Object parseValue(java.lang.String) -> parseValue
    626:626:java.lang.String[] parseValue(java.lang.String) -> parseValue
    612:612:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    615:616:void put(android.os.Bundle,java.lang.String,java.lang.String[]) -> put
androidx.navigation.NavType$2 -> androidx.navigation.NavType$2:
    304:304:void <init>(boolean) -> <init>
    304:304:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    314:314:java.lang.Integer get(android.os.Bundle,java.lang.String) -> get
    330:330:java.lang.String getName() -> getName
    304:304:java.lang.Object parseValue(java.lang.String) -> parseValue
    320:323:java.lang.Integer parseValue(java.lang.String) -> parseValue
    304:304:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    308:309:void put(android.os.Bundle,java.lang.String,java.lang.Integer) -> put
androidx.navigation.NavType$3 -> androidx.navigation.NavType$3:
    342:342:void <init>(boolean) -> <init>
    342:342:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    350:350:int[] get(android.os.Bundle,java.lang.String) -> get
    362:362:java.lang.String getName() -> getName
    342:342:java.lang.Object parseValue(java.lang.String) -> parseValue
    356:356:int[] parseValue(java.lang.String) -> parseValue
    342:342:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    345:346:void put(android.os.Bundle,java.lang.String,int[]) -> put
androidx.navigation.NavType$4 -> androidx.navigation.NavType$4:
    375:375:void <init>(boolean) -> <init>
    375:375:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    383:383:java.lang.Long get(android.os.Bundle,java.lang.String) -> get
    404:404:java.lang.String getName() -> getName
    375:375:java.lang.Object parseValue(java.lang.String) -> parseValue
    391:397:java.lang.Long parseValue(java.lang.String) -> parseValue
    375:375:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    378:379:void put(android.os.Bundle,java.lang.String,java.lang.Long) -> put
androidx.navigation.NavType$5 -> androidx.navigation.NavType$5:
    416:416:void <init>(boolean) -> <init>
    416:416:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    424:424:long[] get(android.os.Bundle,java.lang.String) -> get
    436:436:java.lang.String getName() -> getName
    416:416:java.lang.Object parseValue(java.lang.String) -> parseValue
    430:430:long[] parseValue(java.lang.String) -> parseValue
    416:416:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    419:420:void put(android.os.Bundle,java.lang.String,long[]) -> put
androidx.navigation.NavType$6 -> androidx.navigation.NavType$6:
    447:447:void <init>(boolean) -> <init>
    447:447:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    455:455:java.lang.Float get(android.os.Bundle,java.lang.String) -> get
    467:467:java.lang.String getName() -> getName
    447:447:java.lang.Object parseValue(java.lang.String) -> parseValue
    461:461:java.lang.Float parseValue(java.lang.String) -> parseValue
    447:447:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    450:451:void put(android.os.Bundle,java.lang.String,java.lang.Float) -> put
androidx.navigation.NavType$7 -> androidx.navigation.NavType$7:
    479:479:void <init>(boolean) -> <init>
    479:479:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    487:487:float[] get(android.os.Bundle,java.lang.String) -> get
    499:499:java.lang.String getName() -> getName
    479:479:java.lang.Object parseValue(java.lang.String) -> parseValue
    493:493:float[] parseValue(java.lang.String) -> parseValue
    479:479:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    482:483:void put(android.os.Bundle,java.lang.String,float[]) -> put
androidx.navigation.NavType$8 -> androidx.navigation.NavType$8:
    510:510:void <init>(boolean) -> <init>
    510:510:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    518:518:java.lang.Boolean get(android.os.Bundle,java.lang.String) -> get
    537:537:java.lang.String getName() -> getName
    510:510:java.lang.Object parseValue(java.lang.String) -> parseValue
    524:529:java.lang.Boolean parseValue(java.lang.String) -> parseValue
    510:510:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    513:514:void put(android.os.Bundle,java.lang.String,java.lang.Boolean) -> put
androidx.navigation.NavType$9 -> androidx.navigation.NavType$9:
    549:549:void <init>(boolean) -> <init>
    549:549:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    557:557:boolean[] get(android.os.Bundle,java.lang.String) -> get
    569:569:java.lang.String getName() -> getName
    549:549:java.lang.Object parseValue(java.lang.String) -> parseValue
    563:563:boolean[] parseValue(java.lang.String) -> parseValue
    549:549:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    552:553:void put(android.os.Bundle,java.lang.String,boolean[]) -> put
androidx.navigation.NavType$EnumType -> androidx.navigation.NavType$EnumType:
    881:887:void <init>(java.lang.Class) -> <init>
    905:905:java.lang.String getName() -> getName
    872:872:java.io.Serializable parseValue(java.lang.String) -> parseValue
    872:872:java.lang.Object parseValue(java.lang.String) -> parseValue
    893:899:java.lang.Enum parseValue(java.lang.String) -> parseValue
androidx.navigation.NavType$ParcelableArrayType -> androidx.navigation.NavType$ParcelableArrayType:
    725:738:void <init>(java.lang.Class) -> <init>
    767:772:boolean equals(java.lang.Object) -> equals
    715:715:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    750:750:android.os.Parcelable[] get(android.os.Bundle,java.lang.String) -> get
    762:762:java.lang.String getName() -> getName
    777:777:int hashCode() -> hashCode
    715:715:java.lang.Object parseValue(java.lang.String) -> parseValue
    756:756:android.os.Parcelable[] parseValue(java.lang.String) -> parseValue
    715:715:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    742:744:void put(android.os.Bundle,java.lang.String,android.os.Parcelable[]) -> put
androidx.navigation.NavType$ParcelableType -> androidx.navigation.NavType$ParcelableType:
    653:660:void <init>(java.lang.Class) -> <init>
    693:698:boolean equals(java.lang.Object) -> equals
    676:676:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    688:688:java.lang.String getName() -> getName
    703:703:int hashCode() -> hashCode
    682:682:java.lang.Object parseValue(java.lang.String) -> parseValue
    664:670:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
androidx.navigation.NavType$SerializableArrayType -> androidx.navigation.NavType$SerializableArrayType:
    928:941:void <init>(java.lang.Class) -> <init>
    970:975:boolean equals(java.lang.Object) -> equals
    918:918:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    953:953:java.io.Serializable[] get(android.os.Bundle,java.lang.String) -> get
    965:965:java.lang.String getName() -> getName
    980:980:int hashCode() -> hashCode
    918:918:java.lang.Object parseValue(java.lang.String) -> parseValue
    959:959:java.io.Serializable[] parseValue(java.lang.String) -> parseValue
    918:918:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    945:947:void put(android.os.Bundle,java.lang.String,java.io.Serializable[]) -> put
androidx.navigation.NavType$SerializableType -> androidx.navigation.NavType$SerializableType:
    800:810:void <init>(java.lang.Class) -> <init>
    813:819:void <init>(boolean,java.lang.Class) -> <init>
    849:854:boolean equals(java.lang.Object) -> equals
    791:791:java.lang.Object get(android.os.Bundle,java.lang.String) -> get
    832:832:java.io.Serializable get(android.os.Bundle,java.lang.String) -> get
    844:844:java.lang.String getName() -> getName
    859:859:int hashCode() -> hashCode
    791:791:java.lang.Object parseValue(java.lang.String) -> parseValue
    838:838:java.io.Serializable parseValue(java.lang.String) -> parseValue
    791:791:void put(android.os.Bundle,java.lang.String,java.lang.Object) -> put
    824:826:void put(android.os.Bundle,java.lang.String,java.io.Serializable) -> put
androidx.navigation.Navigation -> androidx.navigation.Navigation:
    40:41:void <init>() -> <init>
    100:100:android.view.View$OnClickListener createNavigateOnClickListener(int) -> createNavigateOnClickListener
    116:116:android.view.View$OnClickListener createNavigateOnClickListener(int,android.os.Bundle) -> createNavigateOnClickListener
    134:134:android.view.View$OnClickListener createNavigateOnClickListener(androidx.navigation.NavDirections) -> createNavigateOnClickListener
    58:64:androidx.navigation.NavController findNavController(android.app.Activity,int) -> findNavController
    82:86:androidx.navigation.NavController findNavController(android.view.View) -> findNavController
    164:172:androidx.navigation.NavController findViewNavController(android.view.View) -> findViewNavController
    178:185:androidx.navigation.NavController getViewNavController(android.view.View) -> getViewNavController
    154:155:void setViewNavController(android.view.View,androidx.navigation.NavController) -> setViewNavController
androidx.navigation.Navigation$1 -> androidx.navigation.Navigation$1:
    116:116:void <init>(int,android.os.Bundle) -> <init>
    119:120:void onClick(android.view.View) -> onClick
androidx.navigation.Navigation$2 -> androidx.navigation.Navigation$2:
    134:134:void <init>(androidx.navigation.NavDirections) -> <init>
    137:138:void onClick(android.view.View) -> onClick
androidx.navigation.Navigator -> androidx.navigation.Navigator:
    53:53:void <init>() -> <init>
    128:128:void onRestoreState(android.os.Bundle) -> onRestoreState
    114:114:android.os.Bundle onSaveState() -> onSaveState
androidx.navigation.NavigatorProvider -> androidx.navigation.NavigatorProvider:
    34:34:void <clinit>() -> <clinit>
    33:56:void <init>() -> <init>
    117:119:androidx.navigation.Navigator addNavigator(androidx.navigation.Navigator) -> addNavigator
    135:138:androidx.navigation.Navigator addNavigator(java.lang.String,androidx.navigation.Navigator) -> addNavigator
    43:53:java.lang.String getNameForNavigator(java.lang.Class) -> getNameForNavigator
    74:75:androidx.navigation.Navigator getNavigator(java.lang.Class) -> getNavigator
    92:101:androidx.navigation.Navigator getNavigator(java.lang.String) -> getNavigator
    142:142:java.util.Map getNavigators() -> getNavigators
    38:38:boolean validateName(java.lang.String) -> validateName
androidx.navigation.NoOpNavigator -> androidx.navigation.NoOpNavigator:
    32:32:void <init>() -> <init>
    36:36:androidx.navigation.NavDestination createDestination() -> createDestination
    43:43:androidx.navigation.NavDestination navigate(androidx.navigation.NavDestination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras) -> navigate
    48:48:boolean popBackStack() -> popBackStack
androidx.navigation.R$styleable -> androidx.navigation.R$styleable:
    182:252:void <clinit>() -> <clinit>
androidx.navigation.common.R$styleable -> androidx.navigation.common.R$styleable:
    176:236:void <clinit>() -> <clinit>
androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener -> androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener:
    57:66:void <init>(android.content.Context,androidx.navigation.ui.AppBarConfiguration) -> <init>
    75:112:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
    115:136:void setActionBarUpIndicator(boolean) -> setActionBarUpIndicator
androidx.navigation.ui.ActionBarOnDestinationChangedListener -> androidx.navigation.ui.ActionBarOnDestinationChangedListener:
    41:43:void <init>(androidx.appcompat.app.AppCompatActivity,androidx.navigation.ui.AppBarConfiguration) -> <init>
    54:62:void setNavigationIcon(android.graphics.drawable.Drawable,int) -> setNavigationIcon
    47:49:void setTitle(java.lang.CharSequence) -> setTitle
androidx.navigation.ui.AppBarConfiguration -> androidx.navigation.ui.AppBarConfiguration:
    38:38:void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener,androidx.navigation.ui.AppBarConfiguration$1) -> <init>
    64:68:void <init>(java.util.Set,androidx.customview.widget.Openable,androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener) -> <init>
    100:103:androidx.drawerlayout.widget.DrawerLayout getDrawerLayout() -> getDrawerLayout
    114:114:androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener getFallbackOnNavigateUpListener() -> getFallbackOnNavigateUpListener
    88:88:androidx.customview.widget.Openable getOpenableLayout() -> getOpenableLayout
    78:78:java.util.Set getTopLevelDestinations() -> getTopLevelDestinations
androidx.navigation.ui.AppBarConfiguration$Builder -> androidx.navigation.ui.AppBarConfiguration$Builder:
    121:141:void <init>(androidx.navigation.NavGraph) -> <init>
    121:159:void <init>(android.view.Menu) -> <init>
    121:173:void <init>(int[]) -> <init>
    121:185:void <init>(java.util.Set) -> <init>
    240:240:androidx.navigation.ui.AppBarConfiguration build() -> build
    197:198:androidx.navigation.ui.AppBarConfiguration$Builder setDrawerLayout(androidx.drawerlayout.widget.DrawerLayout) -> setDrawerLayout
    227:228:androidx.navigation.ui.AppBarConfiguration$Builder setFallbackOnNavigateUpListener(androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener) -> setFallbackOnNavigateUpListener
    210:211:androidx.navigation.ui.AppBarConfiguration$Builder setOpenableLayout(androidx.customview.widget.Openable) -> setOpenableLayout
androidx.navigation.ui.CollapsingToolbarOnDestinationChangedListener -> androidx.navigation.ui.CollapsingToolbarOnDestinationChangedListener:
    51:54:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.ui.AppBarConfiguration) -> <init>
    59:67:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
    81:90:void setNavigationIcon(android.graphics.drawable.Drawable,int) -> setNavigationIcon
    71:76:void setTitle(java.lang.CharSequence) -> setTitle
androidx.navigation.ui.NavigationUI -> androidx.navigation.ui.NavigationUI:
    54:55:void <init>() -> <init>
    495:509:com.google.android.material.bottomsheet.BottomSheetBehavior findBottomSheetBehavior(android.view.View) -> findBottomSheetBehavior
    596:601:androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph) -> findStartDestination
    565:569:boolean matchDestination(androidx.navigation.NavDestination,int) -> matchDestination
    580:587:boolean matchDestinations(androidx.navigation.NavDestination,java.util.Set) -> matchDestinations
    117:119:boolean navigateUp(androidx.navigation.NavController,androidx.customview.widget.Openable) -> navigateUp
    139:152:boolean navigateUp(androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> navigateUp
    76:100:boolean onNavDestinationSelected(android.view.MenuItem,androidx.navigation.NavController) -> onNavDestinationSelected
    178:181:void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController) -> setupActionBarWithNavController
    208:212:void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.customview.widget.Openable) -> setupActionBarWithNavController
    237:239:void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> setupActionBarWithNavController
    261:263:void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController) -> setupWithNavController
    288:292:void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.customview.widget.Openable) -> setupWithNavController
    316:324:void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> setupWithNavController
    351:353:void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController) -> setupWithNavController
    383:387:void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.customview.widget.Openable) -> setupWithNavController
    417:426:void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> setupWithNavController
    449:487:void setupWithNavController(com.google.android.material.navigation.NavigationView,androidx.navigation.NavController) -> setupWithNavController
    527:555:void setupWithNavController(com.google.android.material.bottomnavigation.BottomNavigationView,androidx.navigation.NavController) -> setupWithNavController
androidx.navigation.ui.NavigationUI$1 -> androidx.navigation.ui.NavigationUI$1:
    318:318:void <init>(androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> <init>
    321:322:void onClick(android.view.View) -> onClick
androidx.navigation.ui.NavigationUI$2 -> androidx.navigation.ui.NavigationUI$2:
    420:420:void <init>(androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration) -> <init>
    423:424:void onClick(android.view.View) -> onClick
androidx.navigation.ui.NavigationUI$3 -> androidx.navigation.ui.NavigationUI$3:
    450:450:void <init>(androidx.navigation.NavController,com.google.android.material.navigation.NavigationView) -> <init>
    453:466:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
androidx.navigation.ui.NavigationUI$4 -> androidx.navigation.ui.NavigationUI$4:
    471:471:void <init>(java.lang.ref.WeakReference,androidx.navigation.NavController) -> <init>
    475:485:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
androidx.navigation.ui.NavigationUI$5 -> androidx.navigation.ui.NavigationUI$5:
    528:528:void <init>(androidx.navigation.NavController) -> <init>
    531:531:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
androidx.navigation.ui.NavigationUI$6 -> androidx.navigation.ui.NavigationUI$6:
    537:537:void <init>(java.lang.ref.WeakReference,androidx.navigation.NavController) -> <init>
    541:553:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
androidx.navigation.ui.ToolbarOnDestinationChangedListener -> androidx.navigation.ui.ToolbarOnDestinationChangedListener:
    46:48:void <init>(androidx.appcompat.widget.Toolbar,androidx.navigation.ui.AppBarConfiguration) -> <init>
    53:59:void onDestinationChanged(androidx.navigation.NavController,androidx.navigation.NavDestination,android.os.Bundle) -> onDestinationChanged
    69:78:void setNavigationIcon(android.graphics.drawable.Drawable,int) -> setNavigationIcon
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
androidx.preference.AndroidResources -> androidx.preference.AndroidResources:
    38:38:void <init>() -> <init>
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    45:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:65:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:73:void <init>(android.content.Context) -> <init>
    77:82:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    90:92:void performClick(android.view.View) -> performClick
    109:118:void syncCheckboxView(android.view.View) -> syncCheckboxView
    95:106:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$Listener:
    121:121:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    125:132:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    52:84:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    87:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:97:void <init>(android.content.Context) -> <init>
    180:180:android.graphics.drawable.Drawable getDialogIcon() -> getDialogIcon
    252:252:int getDialogLayoutResource() -> getDialogLayoutResource
    153:153:java.lang.CharSequence getDialogMessage() -> getDialogMessage
    122:122:java.lang.CharSequence getDialogTitle() -> getDialogTitle
    232:232:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    206:206:java.lang.CharSequence getPositiveButtonText() -> getPositiveButtonText
    257:258:void onClick() -> onClick
    162:163:void setDialogIcon(android.graphics.drawable.Drawable) -> setDialogIcon
    171:172:void setDialogIcon(int) -> setDialogIcon
    243:244:void setDialogLayoutResource(int) -> setDialogLayoutResource
    136:137:void setDialogMessage(java.lang.CharSequence) -> setDialogMessage
    144:145:void setDialogMessage(int) -> setDialogMessage
    105:106:void setDialogTitle(java.lang.CharSequence) -> setDialogTitle
    113:114:void setDialogTitle(int) -> setDialogTitle
    215:216:void setNegativeButtonText(java.lang.CharSequence) -> setNegativeButtonText
    223:224:void setNegativeButtonText(int) -> setNegativeButtonText
    189:190:void setPositiveButtonText(java.lang.CharSequence) -> setPositiveButtonText
    197:198:void setPositiveButtonText(int) -> setPositiveButtonText
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    57:58:void <init>(android.content.Context) -> <init>
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    39:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    98:98:android.widget.ArrayAdapter createAdapter() -> createAdapter
    136:144:int findSpinnerIndexOfValue(java.lang.String) -> findSpinnerIndexOfValue
    118:124:void notifyChanged() -> notifyChanged
    128:133:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    79:80:void onClick() -> onClick
    84:86:void setEntries(java.lang.CharSequence[]) -> setEntries
    113:114:void setValueIndex(int) -> setValueIndex
    103:109:void updateEntries() -> updateEntries
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$1:
    39:39:void <init>(androidx.preference.DropDownPreference) -> <init>
    42:48:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    53:53:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    44:55:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context) -> <init>
    162:162:androidx.preference.EditTextPreference$OnBindEditTextListener getOnBindEditTextListener() -> getOnBindEditTextListener
    96:96:java.lang.String getText() -> getText
    101:101:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    129:138:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    116:124:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    106:107:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    150:151:void setOnBindEditTextListener(androidx.preference.EditTextPreference$OnBindEditTextListener) -> setOnBindEditTextListener
    76:88:void setText(java.lang.String) -> setText
    111:111:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    181:181:void <clinit>() -> <clinit>
    197:199:void <init>(android.os.Parcel) -> <init>
    202:203:void <init>(android.os.Parcelable) -> <init>
    207:209:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$1:
# {"id":"sourceFile","fileName":"EditTextPreference.java"}
    182:182:void <init>() -> <init>
    182:182:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    185:185:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    182:182:java.lang.Object[] newArray(int) -> newArray
    190:190:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$SimpleSummaryProvider:
    221:221:void <init>() -> <init>
    231:234:androidx.preference.EditTextPreference$SimpleSummaryProvider getInstance() -> getInstance
    217:217:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    239:242:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference) -> provideSummary
androidx.preference.EditTextPreferenceDialogFragment -> androidx.preference.EditTextPreferenceDialogFragment:
    44:44:void <init>() -> <init>
    93:93:androidx.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    101:101:boolean needInputMethod() -> needInputMethod
    52:56:androidx.preference.EditTextPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    77:90:void onBindDialogView(android.view.View) -> onBindDialogView
    61:67:void onCreate(android.os.Bundle) -> onCreate
    111:117:void onDialogClosed(boolean) -> onDialogClosed
    71:73:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.EditTextPreferenceDialogFragmentCompat -> androidx.preference.EditTextPreferenceDialogFragmentCompat:
    28:28:void <init>() -> <init>
    82:82:androidx.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    90:90:boolean needInputMethod() -> needInputMethod
    38:42:androidx.preference.EditTextPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    63:79:void onBindDialogView(android.view.View) -> onBindDialogView
    47:53:void onCreate(android.os.Bundle) -> onCreate
    95:102:void onDialogClosed(boolean) -> onDialogClosed
    57:59:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ExpandButton -> androidx.preference.ExpandButton:
    35:42:void <init>(android.content.Context,java.util.List,long) -> <init>
    92:92:long getId() -> getId
    45:50:void initLayout() -> initLayout
    86:88:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    58:82:void setSummary(java.util.List) -> setSummary
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    49:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    78:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:88:void <init>(android.content.Context) -> <init>
    223:230:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    117:117:java.lang.CharSequence[] getEntries() -> getEntries
    212:213:java.lang.CharSequence getEntry() -> getEntry
    145:145:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    161:176:java.lang.CharSequence getSummary() -> getSummary
    203:203:java.lang.String getValue() -> getValue
    245:245:int getValueIndex() -> getValueIndex
    250:250:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    273:282:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    260:268:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    255:256:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    100:101:void setEntries(java.lang.CharSequence[]) -> setEntries
    108:109:void setEntries(int) -> setEntries
    128:129:void setEntryValues(java.lang.CharSequence[]) -> setEntryValues
    136:137:void setEntryValues(int) -> setEntryValues
    150:156:void setSummary(java.lang.CharSequence) -> setSummary
    186:195:void setValue(java.lang.String) -> setValue
    239:242:void setValueIndex(int) -> setValueIndex
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    285:285:void <clinit>() -> <clinit>
    301:303:void <init>(android.os.Parcel) -> <init>
    306:307:void <init>(android.os.Parcelable) -> <init>
    311:313:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$1:
# {"id":"sourceFile","fileName":"ListPreference.java"}
    286:286:void <init>() -> <init>
    286:286:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    289:289:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    286:286:java.lang.Object[] newArray(int) -> newArray
    294:294:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$SimpleSummaryProvider:
    325:325:void <init>() -> <init>
    335:338:androidx.preference.ListPreference$SimpleSummaryProvider getInstance() -> getInstance
    321:321:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    343:346:java.lang.CharSequence provideSummary(androidx.preference.ListPreference) -> provideSummary
androidx.preference.ListPreferenceDialogFragment -> androidx.preference.ListPreferenceDialogFragment:
    44:44:void <init>() -> <init>
    88:88:androidx.preference.ListPreference getListPreference() -> getListPreference
    51:55:androidx.preference.ListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    60:77:void onCreate(android.os.Bundle) -> onCreate
    120:127:void onDialogClosed(boolean) -> onDialogClosed
    93:112:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    81:85:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreferenceDialogFragment$1 -> androidx.preference.ListPreferenceDialogFragment$1:
    96:96:void <init>(androidx.preference.ListPreferenceDialogFragment) -> <init>
    99:106:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.ListPreferenceDialogFragmentCompat -> androidx.preference.ListPreferenceDialogFragmentCompat:
    25:25:void <init>() -> <init>
    76:76:androidx.preference.ListPreference getListPreference() -> getListPreference
    38:43:androidx.preference.ListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    48:65:void onCreate(android.os.Bundle) -> onCreate
    104:111:void onDialogClosed(boolean) -> onDialogClosed
    81:100:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    69:73:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreferenceDialogFragmentCompat$1 -> androidx.preference.ListPreferenceDialogFragmentCompat$1:
    84:84:void <init>(androidx.preference.ListPreferenceDialogFragmentCompat) -> <init>
    87:94:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    45:64:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:78:void <init>(android.content.Context) -> <init>
    167:174:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    107:107:java.lang.CharSequence[] getEntries() -> getEntries
    135:135:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    178:187:boolean[] getSelectedItems() -> getSelectedItems
    157:157:java.util.Set getValues() -> getValues
    192:199:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    223:232:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    210:218:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:206:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    90:91:void setEntries(java.lang.CharSequence[]) -> setEntries
    98:99:void setEntries(int) -> setEntries
    118:119:void setEntryValues(java.lang.CharSequence[]) -> setEntryValues
    126:127:void setEntryValues(int) -> setEntryValues
    144:149:void setValues(java.util.Set) -> setValues
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    235:235:void <clinit>() -> <clinit>
    251:258:void <init>(android.os.Parcel) -> <init>
    261:262:void <init>(android.os.Parcelable) -> <init>
    266:269:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$1:
# {"id":"sourceFile","fileName":"MultiSelectListPreference.java"}
    236:236:void <init>() -> <init>
    236:236:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    239:239:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    236:236:java.lang.Object[] newArray(int) -> newArray
    244:244:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragment -> androidx.preference.MultiSelectListPreferenceDialogFragment:
    44:53:void <init>() -> <init>
    105:105:androidx.preference.MultiSelectListPreference getListPreference() -> getListPreference
    60:65:androidx.preference.MultiSelectListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    70:93:void onCreate(android.os.Bundle) -> onCreate
    138:146:void onDialogClosed(boolean) -> onDialogClosed
    110:130:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    97:102:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.MultiSelectListPreferenceDialogFragment$1 -> androidx.preference.MultiSelectListPreferenceDialogFragment$1:
    118:118:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragment) -> <init>
    121:128:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat:
    29:40:void <init>() -> <init>
    95:95:androidx.preference.MultiSelectListPreference getListPreference() -> getListPreference
    50:55:androidx.preference.MultiSelectListPreferenceDialogFragmentCompat newInstance(java.lang.String) -> newInstance
    60:83:void onCreate(android.os.Bundle) -> onCreate
    124:131:void onDialogClosed(boolean) -> onDialogClosed
    100:120:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    87:92:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1 -> androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1:
    108:108:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragmentCompat) -> <init>
    111:118:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.Preference -> androidx.preference.Preference:
    127:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    297:298:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    312:314:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    323:324:void <init>(android.content.Context) -> <init>
    1341:1347:void assignParent(androidx.preference.PreferenceGroup) -> assignParent
    1118:1118:boolean callChangeListener(java.lang.Object) -> callChangeListener
    1382:1383:void clearWasDetached() -> clearWasDetached
    91:91:int compareTo(java.lang.Object) -> compareTo
    1244:1256:int compareTo(androidx.preference.Preference) -> compareTo
    2061:2072:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    2010:2021:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    1575:1589:void dispatchSetInitialValue() -> dispatchSetInitialValue
    1420:1424:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String) -> findPreferenceInHierarchy
    1212:1212:android.content.Context getContext() -> getContext
    1541:1541:java.lang.String getDependency() -> getDependency
    422:425:android.os.Bundle getExtras() -> getExtras
    1973:1986:java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    376:376:java.lang.String getFragment() -> getFragment
    716:719:android.graphics.drawable.Drawable getIcon() -> getIcon
    920:920:long getId() -> getId
    358:358:android.content.Intent getIntent() -> getIntent
    952:952:java.lang.String getKey() -> getKey
    462:462:int getLayoutResource() -> getLayoutResource
    1139:1139:androidx.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener() -> getOnPreferenceChangeListener
    1157:1157:androidx.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener() -> getOnPreferenceClickListener
    636:636:int getOrder() -> getOrder
    1552:1552:androidx.preference.PreferenceGroup getParent() -> getParent
    1946:1955:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    1838:1847:float getPersistedFloat(float) -> getPersistedFloat
    1784:1793:int getPersistedInt(int) -> getPersistedInt
    1892:1901:long getPersistedLong(long) -> getPersistedLong
    1677:1686:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    1730:1739:java.util.Set getPersistedStringSet(java.util.Set) -> getPersistedStringSet
    408:414:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    1295:1295:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    1228:1232:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    842:842:boolean getShouldDisableView() -> getShouldDisableView
    732:735:java.lang.CharSequence getSummary() -> getSummary
    1107:1107:androidx.preference.Preference$SummaryProvider getSummaryProvider() -> getSummaryProvider
    680:680:java.lang.CharSequence getTitle() -> getTitle
    486:486:int getWidgetLayoutResource() -> getWidgetLayoutResource
    975:975:boolean hasKey() -> hasKey
    1081:1081:boolean isCopyingEnabled() -> isCopyingEnabled
    794:794:boolean isEnabled() -> isEnabled
    1058:1058:boolean isIconSpaceReserved() -> isIconSpaceReserved
    986:986:boolean isPersistent() -> isPersistent
    815:815:boolean isSelectable() -> isSelectable
    890:910:boolean isShown() -> isShown
    1032:1032:boolean isSingleLineTitle() -> isSingleLineTitle
    878:878:boolean isVisible() -> isVisible
    1274:1277:void notifyChanged() -> notifyChanged
    1464:1474:void notifyDependencyChange(boolean) -> notifyDependencyChange
    1284:1287:void notifyHierarchyChanged() -> notifyHierarchyChanged
    1357:1358:void onAttached() -> onAttached
    1305:1312:void onAttachedToHierarchy(androidx.preference.PreferenceManager) -> onAttachedToHierarchy
    1323:1330:void onAttachedToHierarchy(androidx.preference.PreferenceManager,long) -> onAttachedToHierarchy
    502:593:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    929:929:void onClick() -> onClick
    1483:1491:void onDependencyChanged(androidx.preference.Preference,boolean) -> onDependencyChanged
    1366:1368:void onDetached() -> onDetached
    339:339:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    2101:2101:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1500:1508:void onParentChanged(androidx.preference.Preference,boolean) -> onParentChanged
    1561:1562:void onPrepareForRemoval() -> onPrepareForRemoval
    2085:2089:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2035:2036:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1614:1615:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    1628:1628:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    433:433:android.os.Bundle peekExtras() -> peekExtras
    1166:1167:void performClick(android.view.View) -> performClick
    1178:1201:void performClick() -> performClick
    1916:1933:boolean persistBoolean(boolean) -> persistBoolean
    1808:1825:boolean persistFloat(float) -> persistFloat
    1754:1771:boolean persistInt(int) -> persistInt
    1862:1879:boolean persistLong(long) -> persistLong
    1647:1665:boolean persistString(java.lang.String) -> persistString
    1700:1718:boolean persistStringSet(java.util.Set) -> persistStringSet
    1387:1396:void registerDependency() -> registerDependency
    1436:1443:void registerDependent(androidx.preference.Preference) -> registerDependent
    962:967:void requireKey() -> requireKey
    2047:2048:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    1997:1998:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    1068:1072:void setCopyingEnabled(boolean) -> setCopyingEnabled
    1571:1572:void setDefaultValue(java.lang.Object) -> setDefaultValue
    1527:1532:void setDependency(java.lang.String) -> setDependency
    778:786:void setEnabled(boolean) -> setEnabled
    599:607:void setEnabledStateOnViews(android.view.View,boolean) -> setEnabledStateOnViews
    367:368:void setFragment(java.lang.String) -> setFragment
    691:696:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    705:707:void setIcon(int) -> setIcon
    1044:1048:void setIconSpaceReserved(boolean) -> setIconSpaceReserved
    349:350:void setIntent(android.content.Intent) -> setIntent
    938:943:void setKey(java.lang.String) -> setKey
    453:454:void setLayoutResource(int) -> setLayoutResource
    1267:1268:void setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    1129:1130:void setOnPreferenceChangeListener(androidx.preference.Preference$OnPreferenceChangeListener) -> setOnPreferenceChangeListener
    1148:1149:void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    621:627:void setOrder(int) -> setOrder
    1009:1010:void setPersistent(boolean) -> setPersistent
    391:392:void setPreferenceDataStore(androidx.preference.PreferenceDataStore) -> setPreferenceDataStore
    803:807:void setSelectable(boolean) -> setSelectable
    829:833:void setShouldDisableView(boolean) -> setShouldDisableView
    1020:1022:void setSingleLineTitle(boolean) -> setSingleLineTitle
    749:756:void setSummary(java.lang.CharSequence) -> setSummary
    769:770:void setSummary(int) -> setSummary
    1093:1095:void setSummaryProvider(androidx.preference.Preference$SummaryProvider) -> setSummaryProvider
    657:661:void setTitle(java.lang.CharSequence) -> setTitle
    670:671:void setTitle(int) -> setTitle
    646:647:void setViewId(int) -> setViewId
    859:865:void setVisible(boolean) -> setVisible
    477:478:void setWidgetLayoutResource(int) -> setWidgetLayoutResource
    1516:1516:boolean shouldDisableDependents() -> shouldDisableDependents
    998:998:boolean shouldPersist() -> shouldPersist
    1960:1960:java.lang.String toString() -> toString
    1631:1634:void tryCommit(android.content.SharedPreferences$Editor) -> tryCommit
    1399:1405:void unregisterDependency() -> unregisterDependency
    1452:1455:void unregisterDependent(androidx.preference.Preference) -> unregisterDependent
    1375:1375:boolean wasDetached() -> wasDetached
androidx.preference.Preference$1 -> androidx.preference.Preference$1:
    178:178:void <init>(androidx.preference.Preference) -> <init>
    181:182:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2194:2194:void <clinit>() -> <clinit>
    2208:2209:void <init>(android.os.Parcel) -> <init>
    2212:2213:void <init>(android.os.Parcelable) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$1:
# {"id":"sourceFile","fileName":"Preference.java"}
    2195:2195:void <init>() -> <init>
    2195:2195:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2195:2195:java.lang.Object[] newArray(int) -> newArray
    2203:2203:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.Preference$OnPreferenceCopyListener -> androidx.preference.Preference$OnPreferenceCopyListener:
    2227:2229:void <init>(androidx.preference.Preference) -> <init>
    2234:2241:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2245:2255:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    45:46:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:59:void <init>(android.content.Context) -> <init>
    63:63:boolean isEnabled() -> isEnabled
    73:101:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    109:125:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    68:68:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.PreferenceDataStore -> androidx.preference.PreferenceDataStore:
    44:44:void <init>() -> <init>
    195:195:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    183:183:float getFloat(java.lang.String,float) -> getFloat
    159:159:int getInt(java.lang.String,int) -> getInt
    171:171:long getLong(java.lang.String,long) -> getLong
    134:134:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    147:147:java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    121:121:void putBoolean(java.lang.String,boolean) -> putBoolean
    108:108:void putFloat(java.lang.String,float) -> putFloat
    82:82:void putInt(java.lang.String,int) -> putInt
    95:95:void putLong(java.lang.String,long) -> putLong
    56:56:void putString(java.lang.String,java.lang.String) -> putString
    69:69:void putStringSet(java.lang.String,java.util.Set) -> putStringSet
androidx.preference.PreferenceDialogFragment -> androidx.preference.PreferenceDialogFragment:
    86:86:void <init>() -> <init>
    189:195:androidx.preference.DialogPreference getPreference() -> getPreference
    222:222:boolean needInputMethod() -> needInputMethod
    264:282:void onBindDialogView(android.view.View) -> onBindDialogView
    290:291:void onClick(android.content.DialogInterface,int) -> onClick
    90:132:void onCreate(android.os.Bundle) -> onCreate
    151:176:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    244:250:android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    295:297:void onDismiss(android.content.DialogInterface) -> onDismiss
    207:207:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    136:146:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    229:231:void requestInputMethod(android.app.Dialog) -> requestInputMethod
androidx.preference.PreferenceDialogFragmentCompat -> androidx.preference.PreferenceDialogFragmentCompat:
    49:49:void <init>() -> <init>
    172:178:androidx.preference.DialogPreference getPreference() -> getPreference
    202:202:boolean needInputMethod() -> needInputMethod
    237:255:void onBindDialogView(android.view.View) -> onBindDialogView
    259:260:void onClick(android.content.DialogInterface,int) -> onClick
    76:118:void onCreate(android.os.Bundle) -> onCreate
    137:162:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    221:226:android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    264:266:void onDismiss(android.content.DialogInterface) -> onDismiss
    187:187:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    122:132:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    209:211:void requestInputMethod(android.app.Dialog) -> requestInputMethod
androidx.preference.PreferenceFragment -> androidx.preference.PreferenceFragment:
    96:139:void <init>() -> <init>
    384:388:void addPreferencesFromResource(int) -> addPreferencesFromResource
    500:506:void bindPreferences() -> bindPreferences
    482:485:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    650:650:android.app.Fragment getCallbackFragment() -> getCallbackFragment
    529:529:androidx.recyclerview.widget.RecyclerView getListView() -> getListView
    341:341:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    371:371:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    518:518:void onBindPreferences() -> onBindPreferences
    148:168:void onCreate(android.os.Bundle) -> onCreate
    592:592:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> onCreateAdapter
    579:579:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    552:566:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    189:237:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    311:318:void onDestroyView() -> onDestroyView
    608:640:void onDisplayPreferenceDialog(androidx.preference.Preference) -> onDisplayPreferenceDialog
    458:467:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> onNavigateToScreen
    429:441:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    322:330:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    297:300:void onStart() -> onStart
    304:307:void onStop() -> onStop
    522:522:void onUnbindPreferences() -> onUnbindPreferences
    272:293:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    495:497:void postBindPreferences() -> postBindPreferences
    489:492:void requirePreferenceManager() -> requirePreferenceManager
    658:659:void scrollToPreference(java.lang.String) -> scrollToPreference
    666:667:void scrollToPreference(androidx.preference.Preference) -> scrollToPreference
    670:705:void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String) -> scrollToPreferenceInternal
    253:254:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    267:268:void setDividerHeight(int) -> setDividerHeight
    353:360:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> setPreferenceScreen
    403:420:void setPreferencesFromResource(int,java.lang.String) -> setPreferencesFromResource
    509:514:void unbindPreferences() -> unbindPreferences
androidx.preference.PreferenceFragment$1 -> androidx.preference.PreferenceFragment$1:
    128:128:void <init>(androidx.preference.PreferenceFragment) -> <init>
    131:136:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragment$2 -> androidx.preference.PreferenceFragment$2:
    139:139:void <init>(androidx.preference.PreferenceFragment) -> <init>
    142:143:void run() -> run
androidx.preference.PreferenceFragment$3 -> androidx.preference.PreferenceFragment$3:
    670:670:void <init>(androidx.preference.PreferenceFragment,androidx.preference.Preference,java.lang.String) -> <init>
    673:698:void run() -> run
androidx.preference.PreferenceFragment$DividerDecoration -> androidx.preference.PreferenceFragment$DividerDecoration:
    817:819:void <init>(androidx.preference.PreferenceFragment) -> <init>
    841:844:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    823:836:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    880:881:void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    865:872:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    875:877:void setDividerHeight(int) -> setDividerHeight
    847:861:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> shouldDrawDividerBelow
androidx.preference.PreferenceFragment$ScrollToPreferenceObserver -> androidx.preference.PreferenceFragment$ScrollToPreferenceObserver:
    760:765:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView,androidx.preference.Preference,java.lang.String) -> <init>
    784:785:void onChanged() -> onChanged
    789:790:void onItemRangeChanged(int,int) -> onItemRangeChanged
    794:795:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    799:800:void onItemRangeInserted(int,int) -> onItemRangeInserted
    809:810:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    804:805:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    768:780:void scrollToPreference() -> scrollToPreference
androidx.preference.PreferenceFragmentCompat -> androidx.preference.PreferenceFragmentCompat:
    90:132:void <init>() -> <init>
    359:363:void addPreferencesFromResource(int) -> addPreferencesFromResource
    481:487:void bindPreferences() -> bindPreferences
    462:465:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    625:625:androidx.fragment.app.Fragment getCallbackFragment() -> getCallbackFragment
    513:513:androidx.recyclerview.widget.RecyclerView getListView() -> getListView
    325:325:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    334:334:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    503:503:void onBindPreferences() -> onBindPreferences
    141:161:void onCreate(android.os.Bundle) -> onCreate
    567:567:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> onCreateAdapter
    557:557:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    533:547:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    179:230:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    298:305:void onDestroyView() -> onDestroyView
    580:615:void onDisplayPreferenceDialog(androidx.preference.Preference) -> onDisplayPreferenceDialog
    447:456:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> onNavigateToScreen
    399:433:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    309:317:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    284:287:void onStart() -> onStart
    291:294:void onStop() -> onStop
    510:510:void onUnbindPreferences() -> onUnbindPreferences
    259:280:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    475:477:void postBindPreferences() -> postBindPreferences
    469:472:void requirePreferenceManager() -> requirePreferenceManager
    629:630:void scrollToPreference(java.lang.String) -> scrollToPreference
    633:634:void scrollToPreference(androidx.preference.Preference) -> scrollToPreference
    637:673:void scrollToPreferenceInternal(androidx.preference.Preference,java.lang.String) -> scrollToPreferenceInternal
    243:244:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    254:255:void setDividerHeight(int) -> setDividerHeight
    343:350:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> setPreferenceScreen
    375:392:void setPreferencesFromResource(int,java.lang.String) -> setPreferencesFromResource
    490:496:void unbindPreferences() -> unbindPreferences
androidx.preference.PreferenceFragmentCompat$1 -> androidx.preference.PreferenceFragmentCompat$1:
    121:121:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    124:129:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragmentCompat$2 -> androidx.preference.PreferenceFragmentCompat$2:
    132:132:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    135:136:void run() -> run
androidx.preference.PreferenceFragmentCompat$3 -> androidx.preference.PreferenceFragmentCompat$3:
    637:637:void <init>(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference,java.lang.String) -> <init>
    640:666:void run() -> run
androidx.preference.PreferenceFragmentCompat$DividerDecoration -> androidx.preference.PreferenceFragmentCompat$DividerDecoration:
    786:788:void <init>(androidx.preference.PreferenceFragmentCompat) -> <init>
    810:813:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    792:805:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    849:850:void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    834:841:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    844:846:void setDividerHeight(int) -> setDividerHeight
    816:830:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> shouldDrawDividerBelow
androidx.preference.PreferenceFragmentCompat$ScrollToPreferenceObserver -> androidx.preference.PreferenceFragmentCompat$ScrollToPreferenceObserver:
    729:734:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView,androidx.preference.Preference,java.lang.String) -> <init>
    753:754:void onChanged() -> onChanged
    758:759:void onItemRangeChanged(int,int) -> onItemRangeChanged
    763:764:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    768:769:void onItemRangeInserted(int,int) -> onItemRangeInserted
    778:779:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    773:774:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    737:749:void scrollToPreference() -> scrollToPreference
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    58:99:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    102:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    106:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:171:void addItemFromInflater(androidx.preference.Preference) -> addItemFromInflater
    199:258:boolean addPreference(androidx.preference.Preference) -> addPreference
    502:509:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    491:498:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    367:389:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    163:163:int getInitialExpandedChildrenCount() -> getInitialExpandedChildrenCount
    439:439:androidx.preference.PreferenceGroup$OnExpandButtonClickListener getOnExpandButtonClickListener() -> getOnExpandButtonClickListener
    189:189:androidx.preference.Preference getPreference(int) -> getPreference
    179:179:int getPreferenceCount() -> getPreferenceCount
    410:410:boolean isAttached() -> isAttached
    400:400:boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    131:131:boolean isOrderingAsAdded() -> isOrderingAsAdded
    473:481:void notifyDependencyChange(boolean) -> notifyDependencyChange
    444:455:void onAttached() -> onAttached
    459:469:void onDetached() -> onDetached
    350:351:boolean onPrepareAddPreference(androidx.preference.Preference) -> onPrepareAddPreference
    519:527:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    513:514:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    334:341:void removeAll() -> removeAll
    274:276:boolean removePreference(androidx.preference.Preference) -> removePreference
    297:327:boolean removePreferenceInt(androidx.preference.Preference) -> removePreferenceInt
    289:293:boolean removePreferenceRecursively(java.lang.CharSequence) -> removePreferenceRecursively
    149:154:void setInitialExpandedChildrenCount(int) -> setInitialExpandedChildrenCount
    425:426:void setOnExpandButtonClickListener(androidx.preference.PreferenceGroup$OnExpandButtonClickListener) -> setOnExpandButtonClickListener
    121:122:void setOrderingAsAdded(boolean) -> setOrderingAsAdded
    484:487:void sortPreferences() -> sortPreferences
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$1:
    72:72:void <init>(androidx.preference.PreferenceGroup) -> <init>
    75:78:void run() -> run
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    576:576:void <clinit>() -> <clinit>
    592:594:void <init>(android.os.Parcel) -> <init>
    597:599:void <init>(android.os.Parcelable,int) -> <init>
    603:605:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$1:
# {"id":"sourceFile","fileName":"PreferenceGroup.java"}
    577:577:void <init>() -> <init>
    577:577:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    580:580:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    577:577:java.lang.Object[] newArray(int) -> newArray
    585:585:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceGroupAdapter -> androidx.preference.PreferenceGroupAdapter:
    81:107:void <init>(androidx.preference.PreferenceGroup) -> <init>
    288:306:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List) -> createExpandButton
    215:272:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup) -> createVisiblePreferencesList
    184:206:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup) -> flattenPreferenceGroup
    328:329:androidx.preference.Preference getItem(int) -> getItem
    334:334:int getItemCount() -> getItemCount
    339:342:long getItemId(int) -> getItemId
    368:378:int getItemViewType(int) -> getItemViewType
    423:430:int getPreferenceAdapterPosition(java.lang.String) -> getPreferenceAdapterPosition
    435:442:int getPreferenceAdapterPosition(androidx.preference.Preference) -> getPreferenceAdapterPosition
    317:317:boolean isGroupExpandable(androidx.preference.PreferenceGroup) -> isGroupExpandable
    47:47:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    417:419:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int) -> onBindViewHolder
    47:47:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    385:412:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    347:353:void onPreferenceChange(androidx.preference.Preference) -> onPreferenceChange
    357:359:void onPreferenceHierarchyChange(androidx.preference.Preference) -> onPreferenceHierarchyChange
    363:364:void onPreferenceVisibilityChange(androidx.preference.Preference) -> onPreferenceVisibilityChange
    115:173:void updatePreferences() -> updatePreferences
androidx.preference.PreferenceGroupAdapter$1 -> androidx.preference.PreferenceGroupAdapter$1:
    81:81:void <init>(androidx.preference.PreferenceGroupAdapter) -> <init>
    84:85:void run() -> run
androidx.preference.PreferenceGroupAdapter$2 -> androidx.preference.PreferenceGroupAdapter$2:
    139:139:void <init>(androidx.preference.PreferenceGroupAdapter,java.util.List,java.util.List,androidx.preference.PreferenceManager$PreferenceComparisonCallback) -> <init>
    159:161:boolean areContentsTheSame(int,int) -> areContentsTheSame
    152:154:boolean areItemsTheSame(int,int) -> areItemsTheSame
    147:147:int getNewListSize() -> getNewListSize
    142:142:int getOldListSize() -> getOldListSize
androidx.preference.PreferenceGroupAdapter$3 -> androidx.preference.PreferenceGroupAdapter$3:
    293:293:void <init>(androidx.preference.PreferenceGroupAdapter,androidx.preference.PreferenceGroup) -> <init>
    296:303:boolean onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor -> androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor:
    457:461:void <init>(androidx.preference.Preference) -> <init>
    465:471:boolean equals(java.lang.Object) -> equals
    476:480:int hashCode() -> hashCode
androidx.preference.PreferenceInflater -> androidx.preference.PreferenceInflater:
    40:43:void <clinit>() -> <clinit>
    47:54:void <init>(android.content.Context,androidx.preference.PreferenceManager) -> <init>
    205:251:androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> createItem
    274:297:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> createItemFromTag
    94:94:android.content.Context getContext() -> getContext
    107:112:androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup) -> inflate
    133:174:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup) -> inflate
    57:67:void init(androidx.preference.PreferenceManager) -> init
    266:266:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> onCreateItem
    181:185:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup) -> onMergeRoots
    307:350:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet) -> rInflate
    77:78:void setDefaultPackages(java.lang.String[]) -> setDefaultPackages
    354:360:void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
androidx.preference.PreferenceManager -> androidx.preference.PreferenceManager:
    53:108:void <init>(android.content.Context) -> <init>
    226:228:androidx.preference.PreferenceScreen createPreferenceScreen(android.content.Context) -> createPreferenceScreen
    451:455:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    509:509:android.content.Context getContext() -> getContext
    119:120:android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context) -> getDefaultSharedPreferences
    128:128:int getDefaultSharedPreferencesMode() -> getDefaultSharedPreferencesMode
    124:124:java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> getDefaultSharedPreferencesName
    468:479:android.content.SharedPreferences$Editor getEditor() -> getEditor
    237:239:long getNextId() -> getNextId
    522:522:androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener getOnDisplayPreferenceDialogListener() -> getOnDisplayPreferenceDialogListener
    569:569:androidx.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> getOnNavigateToScreenListener
    552:552:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> getOnPreferenceTreeClickListener
    513:513:androidx.preference.PreferenceManager$PreferenceComparisonCallback getPreferenceComparisonCallback() -> getPreferenceComparisonCallback
    380:380:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    419:419:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    391:410:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    276:276:int getSharedPreferencesMode() -> getSharedPreferencesMode
    250:250:java.lang.String getSharedPreferencesName() -> getSharedPreferencesName
    213:222:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen) -> inflateFromResource
    335:338:boolean isStorageDefault() -> isStorageDefault
    350:353:boolean isStorageDeviceProtected() -> isStorageDeviceProtected
    150:152:void setDefaultValues(android.content.Context,int,boolean) -> setDefaultValues
    181:194:void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean) -> setDefaultValues
    497:501:void setNoCommit(boolean) -> setNoCommit
    527:528:void setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    562:563:void setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    548:549:void setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    518:519:void setPreferenceComparisonCallback(androidx.preference.PreferenceManager$PreferenceComparisonCallback) -> setPreferenceComparisonCallback
    368:369:void setPreferenceDataStore(androidx.preference.PreferenceDataStore) -> setPreferenceDataStore
    429:437:boolean setPreferences(androidx.preference.PreferenceScreen) -> setPreferences
    287:289:void setSharedPreferencesMode(int) -> setSharedPreferencesMode
    264:266:void setSharedPreferencesName(java.lang.String) -> setSharedPreferencesName
    296:300:void setStorageDefault() -> setStorageDefault
    321:325:void setStorageDeviceProtected() -> setStorageDeviceProtected
    493:493:boolean shouldCommit() -> shouldCommit
    536:539:void showDialog(androidx.preference.Preference) -> showDialog
androidx.preference.PreferenceManager$PreferenceComparisonCallback -> androidx.preference.PreferenceManager$PreferenceComparisonCallback:
    621:621:void <init>() -> <init>
androidx.preference.PreferenceManager$SimplePreferenceComparisonCallback -> androidx.preference.PreferenceManager$SimplePreferenceComparisonCallback:
    647:647:void <init>() -> <init>
    672:708:boolean arePreferenceContentsTheSame(androidx.preference.Preference,androidx.preference.Preference) -> arePreferenceContentsTheSame
    658:658:boolean arePreferenceItemsTheSame(androidx.preference.Preference,androidx.preference.Preference) -> arePreferenceItemsTheSame
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate:
    47:60:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    58:58:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1:
    61:61:void <init>(androidx.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
    64:79:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    84:84:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    42:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:71:boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    59:67:void onClick() -> onClick
    100:105:void setShouldUseGeneratedIds(boolean) -> setShouldUseGeneratedIds
    81:81:boolean shouldUseGeneratedIds() -> shouldUseGeneratedIds
androidx.preference.PreferenceViewHolder -> androidx.preference.PreferenceViewHolder:
    31:45:void <init>(android.view.View) -> <init>
    50:50:androidx.preference.PreferenceViewHolder createInstanceForTests(android.view.View) -> createInstanceForTests
    61:69:android.view.View findViewById(int) -> findViewById
    80:80:boolean isDividerAllowedAbove() -> isDividerAllowedAbove
    104:104:boolean isDividerAllowedBelow() -> isDividerAllowedBelow
    94:95:void setDividerAllowedAbove(boolean) -> setDividerAllowedAbove
    118:119:void setDividerAllowedBelow(boolean) -> setDividerAllowedBelow
androidx.preference.R$styleable -> androidx.preference.R$styleable:
    1369:2001:void <clinit>() -> <clinit>
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    74:149:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    152:153:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:157:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:161:void <init>(android.content.Context) -> <init>
    265:265:int getMax() -> getMax
    216:216:int getMin() -> getMin
    243:243:int getSeekBarIncrement() -> getSeekBarIncrement
    333:333:boolean getShowSeekBarValue() -> getShowSeekBarValue
    311:311:boolean getUpdatesContinuously() -> getUpdatesContinuously
    371:371:int getValue() -> getValue
    289:289:boolean isAdjustable() -> isAdjustable
    165:195:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    207:207:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    430:443:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    414:425:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    199:203:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    298:299:void setAdjustable(boolean) -> setAdjustable
    274:281:void setMax(int) -> setMax
    225:232:void setMin(int) -> setMin
    253:257:void setSeekBarIncrement(int) -> setSeekBarIncrement
    343:345:void setShowSeekBarValue(boolean) -> setShowSeekBarValue
    323:324:void setUpdatesContinuously(boolean) -> setUpdatesContinuously
    380:381:void setValue(int) -> setValue
    348:363:void setValueInternal(int,boolean) -> setValueInternal
    389:398:void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
    407:410:void updateLabelValue(int) -> updateLabelValue
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$1:
    74:74:void <init>(androidx.preference.SeekBarPreference) -> <init>
    77:83:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    87:88:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    92:96:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$2:
    104:104:void <init>(androidx.preference.SeekBarPreference) -> <init>
    107:127:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    451:451:void <clinit>() -> <clinit>
    469:475:void <init>(android.os.Parcel) -> <init>
    478:479:void <init>(android.os.Parcelable) -> <init>
    483:489:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$1:
# {"id":"sourceFile","fileName":"SeekBarPreference.java"}
    452:452:void <init>() -> <init>
    452:452:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    455:455:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    452:452:java.lang.Object[] newArray(int) -> newArray
    460:460:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    45:89:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    122:123:void <init>(android.content.Context) -> <init>
    176:176:java.lang.CharSequence getSwitchTextOff() -> getSwitchTextOff
    159:159:java.lang.CharSequence getSwitchTextOn() -> getSwitchTextOn
    127:131:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    195:197:void performClick(android.view.View) -> performClick
    151:153:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    186:187:void setSwitchTextOff(int) -> setSwitchTextOff
    140:142:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    169:170:void setSwitchTextOn(int) -> setSwitchTextOn
    214:227:void syncSwitchView(android.view.View) -> syncSwitchView
    200:211:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$Listener:
    230:230:void <init>(androidx.preference.SwitchPreference) -> <init>
    234:242:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    45:89:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    120:121:void <init>(android.content.Context) -> <init>
    174:174:java.lang.CharSequence getSwitchTextOff() -> getSwitchTextOff
    157:157:java.lang.CharSequence getSwitchTextOn() -> getSwitchTextOn
    125:129:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    193:195:void performClick(android.view.View) -> performClick
    149:151:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    184:185:void setSwitchTextOff(int) -> setSwitchTextOff
    138:140:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    167:168:void setSwitchTextOn(int) -> setSwitchTextOn
    212:225:void syncSwitchView(android.view.View) -> syncSwitchView
    198:209:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$Listener:
    228:228:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    232:240:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:60:void <init>(android.content.Context) -> <init>
    178:178:boolean getDisableDependentsState() -> getDisableDependentsState
    159:159:java.lang.CharSequence getSummaryOff() -> getSummaryOff
    127:127:java.lang.CharSequence getSummaryOn() -> getSummaryOn
    78:78:boolean isChecked() -> isChecked
    64:70:void onClick() -> onClick
    193:193:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    264:273:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    251:259:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    198:202:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    88:98:void setChecked(boolean) -> setChecked
    188:189:void setDisableDependentsState(boolean) -> setDisableDependentsState
    147:151:void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    167:168:void setSummaryOff(int) -> setSummaryOff
    115:119:void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    135:136:void setSummaryOn(int) -> setSummaryOn
    102:103:boolean shouldDisableDependents() -> shouldDisableDependents
    211:213:void syncSummaryView(androidx.preference.PreferenceViewHolder) -> syncSummaryView
    220:247:void syncSummaryView(android.view.View) -> syncSummaryView
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    276:276:void <clinit>() -> <clinit>
    292:294:void <init>(android.os.Parcel) -> <init>
    297:298:void <init>(android.os.Parcelable) -> <init>
    302:304:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$1:
# {"id":"sourceFile","fileName":"TwoStatePreference.java"}
    277:277:void <init>() -> <init>
    277:277:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    280:280:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    277:277:java.lang.Object[] newArray(int) -> newArray
    285:285:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void dispatchSetPressed(boolean) -> dispatchSetPressed
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    45:46:void <init>(android.content.Context) -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:int getMaxHeight() -> getMaxHeight
    75:75:int getMaxWidth() -> getMaxWidth
    91:112:void onMeasure(int,int) -> onMeasure
    80:82:void setMaxHeight(int) -> setMaxHeight
    69:71:void setMaxWidth(int) -> setMaxWidth
androidx.print.PrintHelper -> androidx.print.PrintHelper:
    70:78:void <clinit>() -> <clinit>
    139:164:void <init>(android.content.Context) -> <init>
    816:831:android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> convertBitmapForColorMode
    558:573:android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes) -> copyAttributes
    210:210:int getColorMode() -> getColorMode
    589:606:android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    232:235:int getOrientation() -> getOrientation
    187:187:int getScaleMode() -> getScaleMode
    546:546:boolean isPortrait(android.graphics.Bitmap) -> isPortrait
    796:809:android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    746:787:android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri) -> loadConstrainedBitmap
    246:247:void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    258:277:void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    340:341:void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    356:376:void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    199:200:void setColorMode(int) -> setColorMode
    221:222:void setOrientation(int) -> setOrientation
    176:177:void setScaleMode(int) -> setScaleMode
    154:154:boolean systemSupportsPrint() -> systemSupportsPrint
    626:735:void writeBitmap(android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> writeBitmap
androidx.print.PrintHelper$1 -> androidx.print.PrintHelper$1:
    635:635:void <init>(androidx.print.PrintHelper,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback) -> <init>
    635:635:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    639:715:java.lang.Throwable doInBackground(java.lang.Void[]) -> doInBackground
    635:635:void onPostExecute(java.lang.Object) -> onPostExecute
    721:733:void onPostExecute(java.lang.Throwable) -> onPostExecute
androidx.print.PrintHelper$PrintBitmapAdapter -> androidx.print.PrintHelper$PrintBitmapAdapter:
    288:293:void <init>(androidx.print.PrintHelper,java.lang.String,int,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> <init>
    323:326:void onFinish() -> onFinish
    302:310:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    317:319:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter -> androidx.print.PrintHelper$PrintUriAdapter:
    389:395:void <init>(androidx.print.PrintHelper,java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback,int) -> <init>
    502:511:void cancelLoad() -> cancelLoad
    515:527:void onFinish() -> onFinish
    404:498:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    533:535:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter$1 -> androidx.print.PrintHelper$PrintUriAdapter$1:
# {"id":"sourceFile","fileName":"PrintHelper.java"}
    424:424:void <init>(androidx.print.PrintHelper$PrintUriAdapter,android.os.CancellationSignal,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    424:424:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    441:445:android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    424:424:void onCancelled(java.lang.Object) -> onCancelled
    494:496:void onCancelled(android.graphics.Bitmap) -> onCancelled
    424:424:void onPostExecute(java.lang.Object) -> onPostExecute
    450:489:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    428:436:void onPreExecute() -> onPreExecute
androidx.print.PrintHelper$PrintUriAdapter$1$1 -> androidx.print.PrintHelper$PrintUriAdapter$1$1:
# {"id":"sourceFile","fileName":"PrintHelper.java"}
    429:429:void <init>(androidx.print.PrintHelper$PrintUriAdapter$1) -> <init>
    432:434:void onCancel() -> onCancel
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    181:219:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    540:548:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    41:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    87:87:void <clinit>() -> <clinit>
    274:326:androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> backward
    106:106:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    124:178:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    217:264:androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> forward
    191:207:androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray) -> midPoint
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    87:87:void <init>() -> <init>
    87:87:int compare(java.lang.Object,java.lang.Object) -> compare
    90:90:int compare(androidx.recyclerview.widget.DiffUtil$Diagonal,androidx.recyclerview.widget.DiffUtil$Diagonal) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    332:332:void <init>() -> <init>
    396:396:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$CenteredArray -> androidx.recyclerview.widget.DiffUtil$CenteredArray:
    1037:1040:void <init>(int) -> <init>
    1047:1047:int[] backingData() -> backingData
    1043:1043:int get(int) -> get
    1051:1052:void set(int,int) -> set
androidx.recyclerview.widget.DiffUtil$Diagonal -> androidx.recyclerview.widget.DiffUtil$Diagonal:
    481:485:void <init>(int,int,int) -> <init>
    488:488:int endX() -> endX
    492:492:int endY() -> endY
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    664:676:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    683:690:void addEdgeDiagonals() -> addEdgeDiagonals
    840:841:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    855:968:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    738:761:void findMatchingAddition(int) -> findMatchingAddition
    698:714:void findMatchingItems() -> findMatchingItems
    718:730:void findMoveMatches() -> findMoveMatches
    975:994:androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean) -> getPostponedUpdate
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    1021:1025:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    577:578:void <init>() -> <init>
    580:585:void <init>(int,int,int,int) -> <init>
    592:592:int newSize() -> newSize
    588:588:int oldSize() -> oldSize
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    501:501:void <init>() -> <init>
    536:536:int diagonalSize() -> diagonalSize
    528:528:boolean hasAdditionOrRemoval() -> hasAdditionOrRemoval
    532:532:boolean isAddition() -> isAddition
    545:559:androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal() -> toDiagonal
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:259:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:544:int[] getHorizontalRange() -> getHorizontalRange
    533:535:int[] getVerticalRange() -> getVerticalRange
    244:255:void hide(int) -> hide
    461:475:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    268:288:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    262:264:void resetHideDelay(int) -> resetHideDelay
    479:490:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    228:240:void show() -> show
    339:375:void updateScrollPosition(int,int) -> updateScrollPosition
    446:458:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:262:void buildTaskList() -> buildTaskList
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:364:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:369:void prefetch(long) -> prefetch
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:307:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:406:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    112:136:void addPosition(int,int) -> addPosition
    152:156:void clearPrefetchPositions() -> clearPrefetchPositions
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:145:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:76:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:51:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:87:void <init>(android.content.Context,int) -> <init>
    44:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    785:802:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:196:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:315:void calculateItemBorders(int) -> calculateItemBorders
    325:344:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    527:537:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1223:1226:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1205:1208:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1314:1352:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1281:1310:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1232:1235:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1214:1217:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:371:void ensureViewSet() -> ensureViewSet
    422:462:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    811:811:int getSpanCount() -> getSpanCount
    467:479:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    483:500:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    504:521:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    760:763:void guessMeasurement(float,int) -> guessMeasurement
    1277:1277:boolean isUsingSpansToEstimateScrollbarDimensions() -> isUsingSpansToEstimateScrollbarDimensions
    542:714:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    726:747:void measureChild(android.view.View,int,boolean) -> measureChild
    767:777:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1078:1195:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    824:835:void setSpanCount(int) -> setSpanCount
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    108:114:void setStackFromEnd(boolean) -> setStackFromEnd
    1265:1266:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> setUsingSpansToEstimateScrollbarDimensions
    1200:1200:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:286:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1358:1358:void <init>() -> <init>
    1367:1367:int getSpanIndex(int,int) -> getSpanIndex
    1362:1362:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1385:1391:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1395:void <init>(int,int) -> <init>
    1385:1399:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1385:1403:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1385:1407:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1424:1424:int getSpanIndex() -> getSpanIndex
    1434:1434:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    844:850:void <init>() -> <init>
    1007:1025:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    940:949:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    927:936:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1039:1071:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    976:1003:int getSpanIndex(int,int) -> getSpanIndex
    905:906:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    897:898:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    923:923:boolean isSpanGroupIndexCacheEnabled() -> isSpanGroupIndexCacheEnabled
    914:914:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    886:890:void setSpanGroupIndexCacheEnabled(boolean) -> setSpanGroupIndexCacheEnabled
    869:873:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    168:450:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    1294:1317:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    469:484:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1241:1264:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    984:1038:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1268:1290:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    496:511:void destroyCallbacks() -> destroyCallbacks
    918:930:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1159:1169:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1043:1058:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    804:849:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    954:976:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    935:936:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    530:540:void getSelectedDxDy(float[]) -> getSelectedDxDy
    727:733:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    453:456:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    857:890:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    940:944:void obtainVelocityTracker() -> obtainVelocityTracker
    894:894:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    898:911:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    557:566:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    544:552:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    703:723:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    947:951:void releaseVelocityTracker() -> releaseVelocityTracker
    1321:1328:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    741:800:boolean scrollIfNecessary() -> scrollIfNecessary
    577:698:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    487:493:void setupCallbacks() -> setupCallbacks
    1096:1108:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    514:517:void startGestureDetection() -> startGestureDetection
    1143:1155:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    520:527:void stopGestureDetection() -> stopGestureDetection
    1195:1237:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1174:1192:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    259:259:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    262:269:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    315:315:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    319:359:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    422:426:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    364:418:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    638:638:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    641:663:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    703:703:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    706:721:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1298:1298:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1301:1312:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1405:1412:void <clinit>() -> <clinit>
    1389:1425:void <init>() -> <init>
    1630:1630:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1806:1857:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2042:2043:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1577:1592:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1486:1501:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1597:1598:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2136:2142:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1694:1694:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1470:1470:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1905:1909:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1724:1724:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1750:1750:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    1710:1710:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1774:1774:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1602:1603:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    1608:1609:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    2170:2188:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1682:1682:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1667:1667:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1533:1533:int makeFlag(int,int) -> makeFlag
    1516:1518:int makeMovementFlags(int,int) -> makeMovementFlags
    2075:2077:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2109:2111:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1982:1996:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    2001:2026:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1948:1977:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1899:1902:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
# {"id":"sourceFile","fileName":"ItemTouchHelper.java"}
    1405:1405:void <init>() -> <init>
    1408:1408:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
# {"id":"sourceFile","fileName":"ItemTouchHelper.java"}
    1412:1412:void <init>() -> <init>
    1415:1416:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2318:2321:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2328:2329:void doNotReactToLongPress() -> doNotReactToLongPress
    2333:2333:boolean onDown(android.view.MotionEvent) -> onDown
    2338:2369:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2400:2426:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2438:2439:void cancel() -> cancel
    2477:2478:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2469:2473:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2483:2483:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2465:2465:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2429:2430:void setDuration(long) -> setDuration
    2442:2443:void setFraction(float) -> setFraction
    2433:2435:void start() -> start
    2450:2460:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
# {"id":"sourceFile","fileName":"ItemTouchHelper.java"}
    2417:2417:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2420:2421:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:85:void clearView(android.view.View) -> clearView
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:160:void <init>(android.content.Context) -> <init>
    67:172:void <init>(android.content.Context,int,boolean) -> <init>
    67:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1413:1416:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    485:500:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    298:298:boolean canScrollHorizontally() -> canScrollHorizontally
    306:306:boolean canScrollVertically() -> canScrollVertically
    1372:1383:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1294:1320:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1283:1287:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1151:1151:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1141:1141:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1161:1161:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1181:1187:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1170:1176:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1192:1198:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    513:521:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1156:1156:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1146:1146:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1166:1166:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1720:1753:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1059:1059:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1048:1051:void ensureLayoutState() -> ensureLayoutState
    1576:1626:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1967:1968:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1924:1924:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1805:1809:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1787:1791:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1950:1951:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2007:2008:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1928:1928:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1990:1991:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2039:2061:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2017:2034:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1912:1913:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1919:1920:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1837:1906:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    410:423:android.view.View findViewByPosition(int) -> findViewByPosition
    969:986:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    994:1011:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1775:1775:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1765:1765:android.view.View getChildClosestToStart() -> getChildClosestToStart
    450:453:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1366:1366:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    333:333:int getOrientation() -> getOrientation
    212:212:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    379:379:boolean getReverseLayout() -> getReverseLayout
    322:322:boolean getStackFromEnd() -> getStackFromEnd
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1044:1044:boolean isLayoutRTL() -> isLayoutRTL
    1229:1229:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1631:1700:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    759:806:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2116:2123:void logChildren() -> logChildren
    747:747:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2068:2108:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    540:724:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    728:733:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:291:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2187:2214:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1550:1560:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1425:1440:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1506:1536:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1457:1488:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1277:1278:boolean resolveIsInfinite() -> resolveIsInfinite
    365:370:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1386:1408:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1121:1124:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1078:1084:void scrollToPosition(int) -> scrollToPosition
    1106:1112:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1133:1136:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1351:1352:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    343:356:void setOrientation(int) -> setOrientation
    229:230:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    397:403:void setReverseLayout(boolean) -> setReverseLayout
    1219:1220:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    313:319:void setStackFromEnd(boolean) -> setStackFromEnd
    1704:1706:boolean shouldMeasureTwice() -> shouldMeasureTwice
    505:509:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2177:2177:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    838:875:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    883:961:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    810:828:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1235:1274:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1015:1016:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1019:1026:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1029:1030:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1033:1041:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2136:2173:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2482:2484:void <init>() -> <init>
    2498:2501:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2567:2575:void assignFromView(android.view.View,int) -> assignFromView
    2520:2564:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2514:2516:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2487:2491:void reset() -> reset
    2505:2505:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2578:2578:void <init>() -> <init>
    2585:2589:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2220:2306:void <init>() -> <init>
    2360:2361:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2364:2371:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2317:2317:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2327:2332:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2343:2356:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2374:2400:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2458:2458:void <clinit>() -> <clinit>
    2422:2424:void <init>() -> <init>
    2426:2430:void <init>(android.os.Parcel) -> <init>
    2432:2436:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2448:2448:int describeContents() -> describeContents
    2439:2439:boolean hasValidAnchor() -> hasValidAnchor
    2443:2444:void invalidateAnchor() -> invalidateAnchor
    2453:2456:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"LinearLayoutManager.java"}
    2459:2459:void <init>() -> <init>
    2459:2459:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2462:2462:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2459:2459:java.lang.Object[] newArray(int) -> newArray
    2467:2467:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    79:95:void <init>(android.content.Context) -> <init>
    280:299:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    266:271:int clampApplyScroll(int,int) -> clampApplyScroll
    218:219:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:233:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:263:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    222:257:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    142:145:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    161:168:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    183:204:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    271:274:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    262:265:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:330:void offsetChild(android.view.View,int) -> offsetChild
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:428:void offsetChild(android.view.View,int) -> offsetChild
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    171:174:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    200:203:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    218:239:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:142:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    264:267:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    244:249:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    255:258:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    174:174:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    189:189:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    177:185:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    221:609:void <clinit>() -> <clinit>
    681:682:void <init>(android.content.Context) -> <init>
    685:686:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    368:757:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2736:2763:void absorbGlows(int,int) -> absorbGlows
    212:212:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    212:212:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    212:212:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    212:212:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1499:1510:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3077:3080:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1636:1650:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1665:1666:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1335:1339:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3213:3214:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1773:1777:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    1291:1294:void addRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> addRecyclerListener
    4537:4541:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4555:4573:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4545:4550:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3164:3172:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3182:3197:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4848:4849:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3587:3589:void cancelScroll() -> cancelScroll
    4674:4674:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6033:6049:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4728:4736:void clearOldPositions() -> clearOldPositions
    1359:1362:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1794:1797:void clearOnScrollListeners() -> clearOnScrollListeners
    2155:2158:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2130:2133:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2178:2181:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2227:2230:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2203:2206:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2250:2253:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2713:2733:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1996:2031:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    815:865:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3755:3763:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4501:4502:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7864:7875:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7849:7860:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3824:3832:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3986:4032:void dispatchLayout() -> dispatchLayout
    4203:4288:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4295:4318:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4325:4409:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11960:11960:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11965:11965:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11948:11948:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11954:11954:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11928:11928:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11935:11935:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11942:11944:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5370:5387:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5328:5351:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11839:11853:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3890:3891:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1486:1487:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1478:1479:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3253:3264:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4603:4660:void draw(android.graphics.Canvas) -> draw
    5204:5204:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2806:2816:void ensureBottomGlow() -> ensureBottomGlow
    2766:2776:void ensureLeftGlow() -> ensureLeftGlow
    2779:2789:void ensureRightGlow() -> ensureRightGlow
    2792:2803:void ensureTopGlow() -> ensureTopGlow
    764:767:java.lang.String exceptionLabel() -> exceptionLabel
    4185:4193:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5187:5199:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4963:4968:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4980:4981:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3282:3291:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4475:4498:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6011:6026:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4072:4095:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5098:5115:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5160:5175:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5076:5076:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    5048:5048:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    5120:5142:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2571:2618:boolean fling(int,int) -> fling
    2881:2955:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4679:4682:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4687:4690:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4695:4698:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    807:807:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1260:1260:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11856:11861:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1315:1318:int getBaseline() -> getBaseline
    4532:4532:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    5008:5009:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13874:13877:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5034:5038:long getChildItemId(android.view.View) -> getChildItemId
    5023:5024:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4998:4998:int getChildPosition(android.view.View) -> getChildPosition
    4942:4947:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4986:4989:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1131:1131:boolean getClipToPadding() -> getClipToPadding
    791:791:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5266:5267:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5270:5276:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4173:4181:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2846:2846:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    868:874:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3905:3905:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5279:5300:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1677:1682:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1691:1691:int getItemDecorationCount() -> getItemDecorationCount
    1543:1543:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2656:2656:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2646:2646:int getMinFlingVelocity() -> getMinFlingVelocity
    6058:6061:long getNanoTime() -> getNanoTime
    1437:1437:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4915:4915:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1556:1556:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1603:1603:int getScrollState() -> getScrollState
    13903:13906:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4429:4456:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1103:1103:boolean hasFixedSize() -> hasFixedSize
    11917:11917:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11922:11922:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5403:5404:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2037:2047:boolean hasUpdatedView() -> hasUpdatedView
    1001:1081:void initAdapterManager() -> initAdapterManager
    778:782:void initAutofill() -> initAutofill
    878:998:void initChildrenHelper() -> initChildrenHelper
    11868:11881:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2819:2820:void invalidateGlows() -> invalidateGlows
    4893:4902:void invalidateItemDecorations() -> invalidateItemDecorations
    3820:3820:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4710:4710:boolean isAnimating() -> isAnimating
    3153:3153:boolean isAttachedToWindow() -> isAttachedToWindow
    3854:3854:boolean isComputingLayout() -> isComputingLayout
    2410:2410:boolean isLayoutFrozen() -> isLayoutFrozen
    2373:2373:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11892:11892:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2967:3021:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1823:1832:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4593:4599:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4877:4886:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1892:1893:void nestedScrollBy(int,int) -> nestedScrollBy
    1907:1945:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5252:5256:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5214:5218:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4773:4787:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4739:4770:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4791:4817:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3094:3124:void onAttachedToWindow() -> onAttachedToWindow
    5231:5231:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5243:5243:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    3128:3146:void onDetachedFromWindow() -> onDetachedFromWindow
    4664:4670:void onDraw(android.graphics.Canvas) -> onDraw
    3797:3798:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3801:3802:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3805:3817:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3604:3649:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3296:3403:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4577:4581:void onLayout(boolean,int,int,int,int) -> onLayout
    3654:3746:void onMeasure(int,int) -> onMeasure
    3592:3600:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3084:3089:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1456:1471:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1442:1451:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5365:5365:void onScrollStateChanged(int) -> onScrollStateChanged
    5325:5325:void onScrolled(int,int) -> onScrolled
    3767:3772:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3418:3575:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3913:3917:void postAnimationRunner() -> postAnimationRunner
    3920:3920:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3930:3958:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4867:4870:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2663:2687:void pullGlows(float,float,float,float) -> pullGlows
    4465:4472:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4099:4170:void recoverFocusFromState() -> recoverFocusFromState
    2690:2710:void releaseGlows() -> releaseGlows
    1204:1217:void removeAndRecycleViews() -> removeAndRecycleViews
    1520:1532:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4508:4525:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1718:1728:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1700:1706:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1348:1352:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3222:3226:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1785:1788:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    1302:1303:void removeRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> removeRecyclerListener
    5678:5693:void repositionShadowingViews() -> repositionShadowingViews
    3026:3030:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3043:3068:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3072:3072:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3408:3414:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4585:4590:void requestLayout() -> requestLayout
    4056:4059:void resetFocusInfo() -> resetFocusInfo
    3579:3584:void resetScroll() -> resetScroll
    4035:4053:void saveFocusInfo() -> saveFocusInfo
    4714:4725:void saveOldPositions() -> saveOldPositions
    1869:1883:void scrollBy(int,int) -> scrollBy
    2062:2107:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1960:1985:void scrollStep(int,int,int[]) -> scrollStep
    1863:1865:void scrollTo(int,int) -> scrollTo
    1809:1820:void scrollToPosition(int) -> scrollToPosition
    3882:3886:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    801:803:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1193:1197:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1231:1250:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1744:1749:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11829:11835:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1108:1116:void setClipToPadding(boolean) -> setClipToPadding
    2832:2835:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1095:1096:void setHasFixedSize(boolean) -> setHasFixedSize
    3786:3794:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1593:1594:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2401:2402:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1377:1416:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2419:2446:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11887:11888:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1427:1428:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1760:1761:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4932:4933:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1568:1569:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1277:1278:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1607:1619:void setScrollState(int) -> setScrollState
    1144:1158:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1578:1579:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3866:3877:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2455:2456:void smoothScrollBy(int,int) -> smoothScrollBy
    2467:2468:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2486:2487:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2524:2556:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1850:1859:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2268:2272:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11897:11897:boolean startNestedScroll(int) -> startNestedScroll
    11902:11902:boolean startNestedScroll(int,int) -> startNestedScroll
    2285:2316:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11907:11908:void stopNestedScroll() -> stopNestedScroll
    11912:11913:void stopNestedScroll(int) -> stopNestedScroll
    2626:2628:void stopScroll() -> stopScroll
    2634:2638:void stopScrollersInternal() -> stopScrollersInternal
    2345:2363:void suppressLayout(boolean) -> suppressLayout
    1176:1180:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4826:4845:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    401:401:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    404:418:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    599:599:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    602:606:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    609:609:void <init>() -> <init>
    612:613:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    643:643:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    654:655:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    647:649:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    660:672:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    676:677:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    878:878:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    889:894:void addView(android.view.View,int) -> addView
    949:961:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    965:980:void detachViewFromParent(int) -> detachViewFromParent
    923:923:android.view.View getChildAt(int) -> getChildAt
    881:881:int getChildCount() -> getChildCount
    943:943:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    898:898:int indexOfChild(android.view.View) -> indexOfChild
    984:988:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    992:996:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    928:939:void removeAllViews() -> removeAllViews
    903:919:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1001:1001:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1046:1061:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1004:1016:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1036:1038:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1070:1072:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1076:1079:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1021:1024:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1029:1031:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1042:1043:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1065:1066:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
    7813:7813:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    7173:7176:void <init>() -> <init>
    7325:7346:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7813:7819:boolean canRestoreState() -> canRestoreState
    7294:7305:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7279:7282:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    7389:7389:long getItemId(int) -> getItemId
    7361:7361:int getItemViewType(int) -> getItemViewType
    7802:7802:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy getStateRestorationPolicy() -> getStateRestorationPolicy
    7499:7499:boolean hasObservers() -> hasObservers
    7407:7407:boolean hasStableIds() -> hasStableIds
    7584:7585:void notifyDataSetChanged() -> notifyDataSetChanged
    7599:7600:void notifyItemChanged(int) -> notifyItemChanged
    7626:7627:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7689:7690:void notifyItemInserted(int) -> notifyItemInserted
    7704:7705:void notifyItemMoved(int,int) -> notifyItemMoved
    7643:7644:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7673:7674:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7722:7723:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7755:7756:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7738:7739:void notifyItemRemoved(int) -> notifyItemRemoved
    7543:7543:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7254:7255:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7552:7552:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7465:7465:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7479:7479:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7491:7491:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7428:7428:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7518:7519:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7373:7378:void setHasStableIds(boolean) -> setHasStableIds
    7789:7791:void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> setStateRestorationPolicy
    7531:7532:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7827:7843:void <clinit>() -> <clinit>
    7827:7827:void <init>(java.lang.String,int) -> <init>
    7827:7827:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    7827:7827:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12642:12642:void <init>() -> <init>
    12644:12644:boolean hasObservers() -> hasObservers
    12652:12655:void notifyChanged() -> notifyChanged
    12699:12702:void notifyItemMoved(int,int) -> notifyItemMoved
    12664:12665:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12673:12676:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12683:12686:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12693:12696:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    12658:12661:void notifyStateRestorationPolicyChanged() -> notifyStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12106:12106:void <init>() -> <init>
    12109:12109:void onChanged() -> onChanged
    12113:12113:void onItemRangeChanged(int,int) -> onItemRangeChanged
    12118:12119:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    12123:12123:void onItemRangeInserted(int,int) -> onItemRangeInserted
    12131:12131:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    12127:12127:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    12143:12143:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5771:5771:void <init>() -> <init>
    5804:5804:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13138:13208:void <init>() -> <init>
    13525:13536:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13713:13713:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    13741:13741:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13609:13613:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13650:13651:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    13749:13754:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13234:13234:long getAddDuration() -> getAddDuration
    13270:13270:long getChangeDuration() -> getChangeDuration
    13216:13216:long getMoveDuration() -> getMoveDuration
    13252:13252:long getRemoveDuration() -> getRemoveDuration
    13682:13690:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13767:13767:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13624:13624:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13662:13662:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    13357:13357:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13329:13329:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13243:13244:void setAddDuration(long) -> setAddDuration
    13279:13280:void setChangeDuration(long) -> setChangeDuration
    13291:13292:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    13225:13226:void setMoveDuration(long) -> setMoveDuration
    13261:13262:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    13834:13835:void <init>() -> <init>
    13846:13846:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13862:13867:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13096:13097:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13101:13113:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10975:10975:void <init>() -> <init>
    11024:11025:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11049:11051:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10986:10987:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10994:10994:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    11007:11008:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    11015:11015:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7892:7999:void <init>() -> <init>
    8819:8820:void addDisappearingView(android.view.View) -> addDisappearingView
    8837:8838:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8848:8849:void addView(android.view.View) -> addView
    8860:8861:void addView(android.view.View,int) -> addView
    8864:8915:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8170:8173:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    8206:8209:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9103:9113:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9124:9125:void attachView(android.view.View,int) -> attachView
    9135:9136:void attachView(android.view.View) -> attachView
    9998:10004:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8714:8714:boolean canScrollHorizontally() -> canScrollHorizontally
    8724:8724:boolean canScrollVertically() -> canScrollVertically
    8629:8629:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    8185:8194:int chooseSize(int,int,int) -> chooseSize
    8386:8386:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8414:8414:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10427:10427:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10442:10442:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10457:10457:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10472:10472:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10487:10487:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10502:10502:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9490:9495:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9174:9176:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    9188:9190:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    9061:9065:void detachView(android.view.View) -> detachView
    9083:9084:void detachViewAt(int) -> detachViewAt
    9090:9091:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8417:8419:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8422:8424:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8800:8803:void endAnimation(android.view.View) -> endAnimation
    9002:9012:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9030:9042:android.view.View findViewByPosition(int) -> findViewByPosition
    8646:8651:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8670:8670:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8963:8963:int getBaseline() -> getBaseline
    10033:10033:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9233:9233:android.view.View getChildAt(int) -> getChildAt
    9222:9222:int getChildCount() -> getChildCount
    9699:9725:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9741:9782:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10126:10159:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8529:8529:boolean getClipToPadding() -> getClipToPadding
    10801:10801:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9977:9977:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9929:9930:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9941:9941:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9807:9808:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9794:9795:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9965:9965:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9953:9953:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9387:9394:android.view.View getFocusedChild() -> getFocusedChild
    9297:9297:int getHeight() -> getHeight
    9265:9265:int getHeightMode() -> getHeightMode
    9410:9411:int getItemCount() -> getItemCount
    8984:8984:int getItemViewType(android.view.View) -> getItemViewType
    8790:8790:int getLayoutDirection() -> getLayoutDirection
    10048:10048:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10556:10556:int getMinimumHeight() -> getMinimumHeight
    10548:10548:int getMinimumWidth() -> getMinimumWidth
    9337:9337:int getPaddingBottom() -> getPaddingBottom
    9357:9357:int getPaddingEnd() -> getPaddingEnd
    9307:9307:int getPaddingLeft() -> getPaddingLeft
    9327:9327:int getPaddingRight() -> getPaddingRight
    9347:9347:int getPaddingStart() -> getPaddingStart
    9317:9317:int getPaddingTop() -> getPaddingTop
    8974:8974:int getPosition(android.view.View) -> getPosition
    10905:10914:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10063:10063:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10784:10784:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10768:10768:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    10018:10018:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9896:9919:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9281:9281:int getWidth() -> getWidth
    9249:9249:int getWidthMode() -> getWidthMode
    10939:10947:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    9377:9377:boolean hasFocus() -> hasFocus
    9455:9464:void ignoreView(android.view.View) -> ignoreView
    8434:8434:boolean isAttachedToWindow() -> isAttachedToWindow
    8297:8297:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9367:9367:boolean isFocused() -> isFocused
    10265:10280:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8362:8362:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10815:10815:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9622:9622:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    9637:9650:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8778:8778:boolean isSmoothScrolling() -> isSmoothScrolling
    10242:10250:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9841:9844:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9876:9881:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9568:9582:void measureChild(android.view.View,int,int) -> measureChild
    9666:9683:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9155:9162:void moveView(int,int) -> moveView
    9421:9424:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9433:9436:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10331:10331:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10357:10357:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8486:8486:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8494:8494:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8520:8521:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10091:10091:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10680:10681:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10696:10707:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10631:10632:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10661:10676:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10711:10717:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10736:10736:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10112:10112:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10375:10375:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10366:10366:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10412:10412:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10382:10382:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10391:10391:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10399:10400:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8584:8585:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8599:8599:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10529:10530:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10290:10290:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10312:10312:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10586:10586:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10571:10571:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10606:10606:void onScrollStateChanged(int) -> onScrollStateChanged
    10595:10598:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10820:10820:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10836:10862:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10868:10868:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10889:10889:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8447:8450:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8950:8954:void removeAllViews() -> removeAllViews
    10621:10627:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9526:9553:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9199:9201:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9210:9213:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8465:8468:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9145:9146:void removeDetachedView(android.view.View) -> removeDetachedView
    8926:8927:void removeView(android.view.View) -> removeView
    8938:8942:void removeViewAt(int) -> removeViewAt
    10179:10179:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10200:10214:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8157:8160:void requestLayout() -> requestLayout
    10748:10749:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9498:9514:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8687:8687:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8738:8738:void scrollToPosition(int) -> scrollToPosition
    8704:8704:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    8225:8226:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    10918:10922:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8345:8352:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    8068:8079:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8146:8151:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10540:10541:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8095:8124:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    9633:9634:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    8052:8065:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9606:9609:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10935:10935:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9591:9593:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8752:8753:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8766:8772:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    9476:9480:void stopIgnoringView(android.view.View) -> stopIgnoringView
    10589:10592:void stopSmoothScroller() -> stopSmoothScroller
    8323:8323:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7901:7901:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7904:7904:android.view.View getChildAt(int) -> getChildAt
    7926:7928:int getChildEnd(android.view.View) -> getChildEnd
    7919:7921:int getChildStart(android.view.View) -> getChildStart
    7914:7914:int getParentEnd() -> getParentEnd
    7909:7909:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    7937:7937:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7940:7940:android.view.View getChildAt(int) -> getChildAt
    7963:7965:int getChildEnd(android.view.View) -> getChildEnd
    7956:7958:int getChildStart(android.view.View) -> getChildStart
    7950:7951:int getParentEnd() -> getParentEnd
    7945:7945:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    10953:10953:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11976:11985:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11976:11989:void <init>(int,int) -> <init>
    11976:11993:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11976:11997:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11976:12001:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12086:12086:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    12098:12098:int getBindingAdapterPosition() -> getBindingAdapterPosition
    12071:12071:int getViewAdapterPosition() -> getViewAdapterPosition
    12060:12060:int getViewLayoutPosition() -> getViewLayoutPosition
    12050:12050:int getViewPosition() -> getViewPosition
    12042:12042:boolean isItemChanged() -> isItemChanged
    12031:12031:boolean isItemRemoved() -> isItemRemoved
    12020:12020:boolean isViewInvalid() -> isViewInvalid
    12010:12010:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    13074:13074:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11137:11137:void <init>() -> <init>
    11146:11146:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    11160:11160:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5816:5842:void <init>() -> <init>
    5964:5965:void attach() -> attach
    5848:5852:void clear() -> clear
    5968:5969:void detach() -> detach
    5948:5951:void factorInBindTime(int,long) -> factorInBindTime
    5942:5945:void factorInCreateTime(int,long) -> factorInCreateTime
    5886:5895:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5873:5873:int getRecycledViewCount(int) -> getRecycledViewCount
    5997:6002:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5985:5994:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5922:5932:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5935:5938:long runningAverage(long,long) -> runningAverage
    5861:5867:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    5959:5960:boolean willBindInTime(int,long,long) -> willBindInTime
    5954:5955:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    5833:5837:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6078:6088:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6705:6724:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6480:6499:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6220:6249:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    6101:6103:void clear() -> clear
    7100:7115:void clearOldPositions() -> clearOldPositions
    6794:6798:void clearScrap() -> clearScrap
    6270:6277:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6948:6963:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6803:6828:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7058:7061:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6786:6786:int getScrapCount() -> getScrapCount
    6133:6133:java.util.List getScrapList() -> getScrapList
    6894:6942:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6839:6889:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6790:6790:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6296:6296:android.view.View getViewForPosition(int) -> getViewForPosition
    6300:6300:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6502:6505:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6508:6526:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7118:7126:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7084:7097:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7001:7013:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6973:6998:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7022:7041:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6967:6969:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6732:6737:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6571:6579:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6596:6602:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6541:6568:void recycleView(android.view.View) -> recycleView
    6610:6694:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6749:6766:void scrapView(android.view.View) -> scrapView
    7048:7055:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    7044:7045:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    6111:6113:void setViewCacheSize(int) -> setViewCacheSize
    6185:6201:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6323:6476:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6775:6783:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6116:6124:void updateViewCacheSize() -> updateViewCacheSize
    6147:6168:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7065:7081:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5696:5697:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5701:5708:void onChanged() -> onChanged
    5712:5716:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5720:5724:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5736:5740:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5728:5732:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5753:5763:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
    5743:5749:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12741:12741:void <clinit>() -> <clinit>
    12719:12722:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12728:12729:void <init>(android.os.Parcelable) -> <init>
    12738:12739:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12733:12735:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12741:12741:void <init>() -> <init>
    12741:12741:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12741:12741:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12744:12744:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12749:12749:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12741:12741:java.lang.Object[] newArray(int) -> newArray
    12754:12754:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    12157:12175:void <init>() -> <init>
    12231:12238:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12368:12368:android.view.View findViewByPosition(int) -> findViewByPosition
    12361:12361:int getChildCount() -> getChildCount
    12354:12354:int getChildPosition(android.view.View) -> getChildPosition
    12247:12247:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12299:12299:int getTargetPosition() -> getTargetPosition
    12377:12378:void instantScrollToPosition(int) -> instantScrollToPosition
    12281:12281:boolean isPendingInitialRun() -> isPendingInitialRun
    12289:12289:boolean isRunning() -> isRunning
    12395:12399:void normalize(android.graphics.PointF) -> normalize
    12303:12348:void onAnimation(int,int) -> onAnimation
    12381:12387:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12217:12218:void setTargetPosition(int) -> setTargetPosition
    12192:12214:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12257:12271:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
    12469:12470:void <init>(int,int) -> <init>
    12478:12479:void <init>(int,int,int) -> <init>
    12454:12494:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12573:12573:int getDuration() -> getDuration
    12554:12554:int getDx() -> getDx
    12564:12564:int getDy() -> getDy
    12583:12583:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    12516:12516:boolean hasJumpTarget() -> hasJumpTarget
    12512:12513:void jumpTo(int) -> jumpTo
    12520:12541:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12577:12579:void setDuration(int) -> setDuration
    12558:12560:void setDx(int) -> setDx
    12568:12570:void setDy(int) -> setDy
    12594:12596:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    12609:12614:void update(int,int,int,android.view.animation.Interpolator) -> update
    12544:12550:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider:
# {"id":"sourceFile","fileName":"RecyclerView.java"}
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12769:12841:void <init>() -> <init>
    12775:12780:void assertLayoutStep(int) -> assertLayoutStep
    12994:12994:boolean didStructureChange() -> didStructureChange
    12946:12949:java.lang.Object get(int) -> get
    13022:13024:int getItemCount() -> getItemCount
    13035:13035:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    13046:13046:int getRemainingScrollVertical() -> getRemainingScrollVertical
    12976:12976:int getTargetScrollPosition() -> getTargetScrollPosition
    12986:12986:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12889:12889:boolean isMeasuring() -> isMeasuring
    12898:12898:boolean isPreLayout() -> isPreLayout
    12867:12872:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12961:12965:void put(int,java.lang.Object) -> put
    12930:12934:void remove(int) -> remove
    13051:13051:java.lang.String toString() -> toString
    12909:12909:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    12920:12920:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    7142:7142:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5412:5422:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5658:5666:int computeScrollDuration(int,int) -> computeScrollDuration
    5590:5602:void fling(int,int) -> fling
    5585:5587:void internalPostOnAnimation() -> internalPostOnAnimation
    5577:5582:void postOnAnimation() -> postOnAnimation
    5426:5574:void run() -> run
    5620:5649:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5670:5672:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11328:11328:void <clinit>() -> <clinit>
    11222:11363:void <init>(android.view.View) -> <init>
    11661:11667:void addChangePayload(java.lang.Object) -> addChangePayload
    11657:11658:void addFlags(int) -> addFlags
    11388:11390:void clearOldPosition() -> clearOldPosition
    11677:11681:void clearPayload() -> clearPayload
    11604:11605:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11608:11609:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11670:11674:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11815:11815:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11366:11369:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11541:11544:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11453:11453:int getAdapterPosition() -> getAdapterPosition
    11556:11556:androidx.recyclerview.widget.RecyclerView$Adapter getBindingAdapter() -> getBindingAdapter
    11488:11503:int getBindingAdapterPosition() -> getBindingAdapterPosition
    11581:11581:long getItemId() -> getItemId
    11588:11588:int getItemViewType() -> getItemViewType
    11440:11440:int getLayoutPosition() -> getLayoutPosition
    11571:11571:int getOldPosition() -> getOldPosition
    11413:11413:int getPosition() -> getPosition
    11684:11693:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11637:11637:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11649:11649:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11645:11645:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11629:11629:boolean isBound() -> isBound
    11621:11621:boolean isInvalid() -> isInvalid
    11798:11799:boolean isRecyclable() -> isRecyclable
    11633:11633:boolean isRemoved() -> isRemoved
    11592:11592:boolean isScrap() -> isScrap
    11641:11641:boolean isTmpDetached() -> isTmpDetached
    11819:11819:boolean isUpdated() -> isUpdated
    11625:11625:boolean needsUpdate() -> needsUpdate
    11372:11385:void offsetPosition(int,boolean) -> offsetPosition
    11717:11725:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11731:11734:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11698:11710:void resetInternal() -> resetInternal
    11393:11396:void saveOldPosition() -> saveOldPosition
    11653:11654:void setFlags(int,int) -> setFlags
    11774:11791:void setIsRecyclable(boolean) -> setIsRecyclable
    11616:11618:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11807:11807:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11399:11399:boolean shouldIgnore() -> shouldIgnore
    11612:11613:void stopIgnoring() -> stopIgnoring
    11739:11758:java.lang.String toString() -> toString
    11596:11597:void unScrap() -> unScrap
    11600:11600:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    112:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:132:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    137:142:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    210:210:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    226:229:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    123:125:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:117:void setupCallbacks() -> setupCallbacks
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    229:229:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    248:248:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    232:244:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1780:1783:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:827:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1845:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1855:boolean areAllStartsEqual() -> areAllStartsEqual
    527:530:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1737:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:310:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:415:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2129:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2038:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2366:2399:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1711:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1720:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:260:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2192:2200:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1380:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1351:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2209:2216:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1385:1400:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1419:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1866:int getMaxEnd(int) -> getMaxEnd
    1817:1824:int getMaxStart(int) -> getMaxStart
    1870:1877:int getMinEnd(int) -> getMinEnd
    1828:1835:int getMinStart(int) -> getMinStart
    1954:1990:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1505:1545:void handleUpdate(int,int,int) -> handleUpdate
    338:398:android.view.View hasGapsToFix() -> hasGapsToFix
    548:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1197:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1214:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1464:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1472:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:615:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2352:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1311:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1482:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1488:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1493:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1477:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1499:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:730:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:739:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1240:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1289:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    315:318:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2134:2146:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1790:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1776:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1938:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1907:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:788:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:564:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2173:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2057:void scrollToPosition(int) -> scrollToPosition
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1453:1456:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    448:460:void setOrientation(int) -> setOrientation
    476:482:void setReverseLayout(boolean) -> setReverseLayout
    428:439:void setSpanCount(int) -> setSpanCount
    2044:2047:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1799:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:852:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:931:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:841:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1450:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:939:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1814:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1217:1225:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3245:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3272:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3280:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3256:void reset() -> reset
    3259:3267:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2425:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2429:void <init>(int,int) -> <init>
    2432:2433:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2437:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2462:2462:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2983:3003:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2895:void clear() -> clear
    2879:2888:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3042:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3015:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2853:int invalidateAfter(int) -> invalidateAfter
    2957:2979:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2937:void offsetForAddition(int,int) -> offsetForAddition
    2898:2907:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2950:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2925:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2868:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2875:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3105:3105:void <clinit>() -> <clinit>
    3059:3068:void <init>(android.os.Parcel) -> <init>
    3070:3071:void <init>() -> <init>
    3079:3079:int describeContents() -> describeContents
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3093:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3139:void <init>() -> <init>
    3141:3162:void <init>(android.os.Parcel) -> <init>
    3164:3175:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3194:3194:int describeContents() -> describeContents
    3186:3190:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3183:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3213:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
# {"id":"sourceFile","fileName":"StaggeredGridLayoutManager.java"}
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2491:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2584:void appendToSpan(android.view.View) -> appendToSpan
    2589:2606:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2549:void calculateCachedEnd() -> calculateCachedEnd
    2505:2515:void calculateCachedStart() -> calculateCachedStart
    2609:2612:void clear() -> clear
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2730:2757:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2775:2804:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2617:void invalidateCache() -> invalidateCache
    2659:2665:void onOffset(int) -> onOffset
    2624:2635:void popEnd() -> popEnd
    2638:2648:void popStart() -> popStart
    2561:2571:void prependToSpan(android.view.View) -> prependToSpan
    2620:2621:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:149:void addFlags(int) -> addFlags
    166:189:boolean boundsMatch() -> boundsMatch
    156:162:int compare(int,int) -> compare
    152:153:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:56:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:274:void onDetach() -> onDetach
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    326:327:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:66:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:93:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:101:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:113:void add(java.lang.String) -> add
    106:108:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:53:void <init>() -> <init>
    76:88:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    134:134:boolean isRestored() -> isRestored
    190:209:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:230:void performSave(android.os.Bundle) -> performSave
    109:114:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:181:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
    123:124:void unregisterSavedStateProvider(java.lang.String) -> unregisterSavedStateProvider
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:63:void performRestore(android.os.Bundle) -> performRestore
    74:75:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    53:54:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
    245:246:void <init>(android.content.Context) -> <init>
    249:250:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    113:265:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1271:1290:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    945:945:boolean canSlide() -> canSlide
    1315:1315:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    915:916:void close() -> close
    859:863:boolean closePane(int) -> closePane
    925:925:boolean closePane() -> closePane
    1124:1132:void computeScroll() -> computeScroll
    988:1011:void dimChildView(android.view.View,float,int) -> dimChildView
    342:346:void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    335:339:void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    329:332:void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    1202:1233:void draw(android.graphics.Canvas) -> draw
    1015:1034:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1303:1303:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1308:1310:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1320:1320:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    321:321:int getCoveredFadeColor() -> getCoveredFadeColor
    286:286:int getParallaxDistance() -> getParallaxDistance
    303:303:int getSliderFadeColor() -> getSliderFadeColor
    1042:1087:void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    1294:1298:boolean isDimmed(android.view.View) -> isDimmed
    1641:1641:boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    936:936:boolean isOpen() -> isOpen
    955:955:boolean isSlideable() -> isSlideable
    426:428:void onAttachedToWindow() -> onAttachedToWindow
    432:440:void onDetachedFromWindow() -> onDetachedFromWindow
    760:815:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    656:739:void onLayout(boolean,int,int,int,int) -> onLayout
    444:652:void onMeasure(int,int) -> onMeasure
    959:984:void onPanelDragged(int) -> onPanelDragged
    1335:1349:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1325:1330:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    743:748:void onSizeChanged(int,int,int,int) -> onSizeChanged
    820:855:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    888:889:void open() -> open
    867:871:boolean openPane(int) -> openPane
    898:898:boolean openPane() -> openPane
    1236:1257:void parallaxOtherViews(float) -> parallaxOtherViews
    752:756:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    395:401:void setAllChildrenVisible() -> setAllChildrenVisible
    313:314:void setCoveredFadeColor(int) -> setCoveredFadeColor
    325:326:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    275:277:void setParallaxDistance(int) -> setParallaxDistance
    1143:1144:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1153:1154:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1163:1164:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1177:1178:void setShadowResource(int) -> setShadowResource
    1187:1188:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1197:1198:void setShadowResourceRight(int) -> setShadowResourceRight
    295:296:void setSliderFadeColor(int) -> setSliderFadeColor
    906:907:void smoothSlideClosed() -> smoothSlideClosed
    879:880:void smoothSlideOpen() -> smoothSlideOpen
    1096:1119:boolean smoothSlideTo(float,int) -> smoothSlideTo
    349:392:void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    406:421:boolean viewIsOpaque(android.view.View) -> viewIsOpaque
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate:
    1540:1541:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1599:1620:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    1589:1589:boolean filter(android.view.View) -> filter
    1574:1577:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1545:1570:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1582:1585:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable:
    1626:1628:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout,android.view.View) -> <init>
    1632:1637:void run() -> run
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback:
    1353:1354:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1420:1433:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1440:1440:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1415:1415:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1445:1446:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1382:1383:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1367:1377:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1387:1389:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1393:1411:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1358:1362:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams:
    1450:1450:void <clinit>() -> <clinit>
    1458:1475:void <init>() -> <init>
    1458:1479:void <init>(int,int) -> <init>
    1458:1483:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1458:1487:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1458:1492:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams) -> <init>
    1458:1500:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1522:1522:void <clinit>() -> <clinit>
    1508:1509:void <init>(android.os.Parcelable) -> <init>
    1512:1514:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1518:1520:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
# {"id":"sourceFile","fileName":"SlidingPaneLayout.java"}
    1522:1522:void <init>() -> <init>
    1522:1522:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1522:1522:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1525:1525:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1530:1530:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1522:1522:java.lang.Object[] newArray(int) -> newArray
    1535:1535:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener:
    232:232:void <init>() -> <init>
    241:241:void onPanelClosed(android.view.View) -> onPanelClosed
    238:238:void onPanelOpened(android.view.View) -> onPanelOpened
    235:235:void onPanelSlide(android.view.View,float) -> onPanelSlide
androidx.swiperefreshlayout.R$styleable -> androidx.swiperefreshlayout.R$styleable:
    163:201:void <clinit>() -> <clinit>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    58:90:void <init>(android.content.Context) -> <init>
    93:93:boolean elevationSupported() -> elevationSupported
    119:123:void onAnimationEnd() -> onAnimationEnd
    111:115:void onAnimationStart() -> onAnimationStart
    98:103:void onMeasure(int,int) -> onMeasure
    106:107:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    127:131:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    143:148:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    158:162:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    152:154:void onResize(float,float) -> onResize
    165:172:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:146:void <init>(android.content.Context) -> <init>
    519:530:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    537:566:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:404:void draw(android.graphics.Canvas) -> draw
    479:489:int evaluateColorChange(float,int,int) -> evaluateColorChange
    414:414:int getAlpha() -> getAlpha
    436:436:int getOpacity() -> getOpacity
    441:441:boolean isRunning() -> isRunning
    408:410:void setAlpha(int) -> setAlpha
    280:282:void setArrowEnabled(boolean) -> setArrowEnabled
    299:301:void setArrowScale(float) -> setArrowScale
    419:421:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:395:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:352:void setProgressRotation(float) -> setProgressRotation
    424:425:void setRotation(float) -> setRotation
    151:159:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:333:void setStartEndTrim(float,float) -> setStartEndTrim
    192:194:void setStrokeWidth(float) -> setStrokeWidth
    168:175:void setStyle(int) -> setStyle
    569:619:void setupAnimators() -> setupAnimators
    449:462:void start() -> start
    469:475:void stop() -> stop
    502:509:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    571:571:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    574:578:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    583:583:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    598:598:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    593:593:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    602:616:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    587:588:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    626:662:void <init>() -> <init>
    695:724:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    727:756:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    838:838:int getAlpha() -> getAlpha
    878:878:float getEndTrim() -> getEndTrim
    808:808:int getNextColor() -> getNextColor
    812:812:int getNextColorIndex() -> getNextColorIndex
    858:858:float getStartTrim() -> getStartTrim
    870:870:int getStartingColor() -> getStartingColor
    866:866:float getStartingEndTrim() -> getStartingEndTrim
    930:930:float getStartingRotation() -> getStartingRotation
    862:862:float getStartingStartTrim() -> getStartingStartTrim
    820:821:void goToNextColor() -> goToNextColor
    947:953:void resetOriginals() -> resetOriginals
    831:832:void setAlpha(int) -> setAlpha
    671:673:void setArrowDimensions(float,float) -> setArrowDimensions
    917:920:void setArrowScale(float) -> setArrowScale
    893:894:void setCenterRadius(float) -> setCenterRadius
    781:782:void setColor(int) -> setColor
    824:825:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    800:802:void setColorIndex(int) -> setColorIndex
    764:767:void setColors(int[]) -> setColors
    874:875:void setEndTrim(float) -> setEndTrim
    882:883:void setRotation(float) -> setRotation
    904:907:void setShowArrow(boolean) -> setShowArrow
    854:855:void setStartTrim(float) -> setStartTrim
    845:847:void setStrokeWidth(float) -> setStrokeWidth
    938:941:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    92:150:void <clinit>() -> <clinit>
    404:405:void <init>(android.content.Context) -> <init>
    118:1367:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1317:1326:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1329:1343:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    736:742:boolean canChildScrollUp() -> canChildScrollUp
    462:468:void createProgressView() -> createProgressView
    1128:1128:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1133:1133:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1082:1082:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    1122:1122:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1047:1051:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    1075:1075:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    1116:1116:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    651:660:void ensureTarget() -> ensureTarget
    1193:1223:void finishSpinner(float) -> finishSpinner
    447:457:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1005:1005:int getNestedScrollAxes() -> getNestedScrollAxes
    728:728:int getProgressCircleDiameter() -> getProgressCircleDiameter
    344:344:int getProgressViewEndOffset() -> getProgressViewEndOffset
    336:336:int getProgressViewStartOffset() -> getProgressViewStartOffset
    1069:1069:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    1110:1110:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1137:1137:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1095:1095:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    645:645:boolean isRefreshing() -> isRefreshing
    1141:1190:void moveSpinner(float) -> moveSpinner
    1362:1365:void moveToStart(float) -> moveToStart
    294:296:void onDetachedFromWindow() -> onDetachedFromWindow
    756:809:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    673:694:void onLayout(boolean,int,int,int,int) -> onLayout
    698:719:void onMeasure(int,int) -> onMeasure
    1038:1038:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1032:1032:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    948:951:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    975:1001:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    865:906:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    940:942:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1025:1027:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    923:926:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    964:969:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    287:290:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    281:282:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1401:1409:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    912:915:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    957:957:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    932:935:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    1010:1020:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1227:1304:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    843:857:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    219:230:void reset() -> reset
    524:526:void setAnimationProgress(float) -> setAnimationProgress
    609:610:void setColorScheme(int[]) -> setColorScheme
    636:638:void setColorSchemeColors(int[]) -> setColorSchemeColors
    620:626:void setColorSchemeResources(int[]) -> setColorSchemeResources
    299:301:void setColorViewAlpha(int) -> setColorViewAlpha
    668:669:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    234:238:void setEnabled(boolean) -> setEnabled
    835:836:void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean) -> setLegacyRequestDisallowInterceptTouchEventEnabled
    1090:1091:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    751:752:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    475:476:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    583:584:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    601:602:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    592:593:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    361:364:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    323:329:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    485:500:void setRefreshing(boolean) -> setRefreshing
    529:539:void setRefreshing(boolean,boolean) -> setRefreshing
    381:396:void setSize(int) -> setSize
    374:375:void setSlingshotDistance(int) -> setSlingshotDistance
    1395:1398:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    563:575:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1308:1314:void startDragging(float) -> startDragging
    1057:1057:boolean startNestedScroll(int,int) -> startNestedScroll
    1100:1100:boolean startNestedScroll(int) -> startNestedScroll
    559:560:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    555:556:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    542:552:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1376:1392:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    503:517:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1062:1065:void stopNestedScroll(int) -> stopNestedScroll
    1105:1106:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    191:191:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    202:215:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    198:198:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    194:194:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    505:505:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    508:509:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    542:542:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    545:546:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    563:563:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    566:568:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    1201:1201:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1209:1212:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1216:1216:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1205:1205:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1345:1345:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1349:1358:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1367:1367:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1370:1371:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1378:1378:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1381:1384:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    265:265:void <clinit>() -> <clinit>
    247:249:void <init>(android.os.Parcelable,boolean) -> <init>
    255:257:void <init>(android.os.Parcel) -> <init>
    261:263:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
# {"id":"sourceFile","fileName":"SwipeRefreshLayout.java"}
    266:266:void <init>() -> <init>
    266:266:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    269:269:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    266:266:java.lang.Object[] newArray(int) -> newArray
    274:274:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.tracing.Trace -> androidx.tracing.Trace:
    240:241:void <init>() -> <init>
    111:118:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    177:191:void beginAsyncSectionFallback(java.lang.String,int) -> beginAsyncSectionFallback
    80:83:void beginSection(java.lang.String) -> beginSection
    131:138:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    194:208:void endAsyncSectionFallback(java.lang.String,int) -> endAsyncSectionFallback
    93:96:void endSection() -> endSection
    229:238:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:173:boolean isEnabledFallback() -> isEnabledFallback
    149:156:void setCounter(java.lang.String,int) -> setCounter
    211:226:void setCounterFallback(java.lang.String,int) -> setCounterFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:50:void beginSection(java.lang.String) -> beginSection
    60:61:void endSection() -> endSection
androidx.tracing.TraceApi29Impl -> androidx.tracing.TraceApi29Impl:
    46:47:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    58:59:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    68:69:void setCounter(java.lang.String,int) -> setCounter
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:50:void pause(android.animation.Animator) -> pause
    53:66:void resume(android.animation.Animator) -> resume
androidx.transition.ArcMotion -> androidx.transition.ArcMotion:
    56:57:void <clinit>() -> <clinit>
    59:67:void <init>() -> <init>
    59:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    174:174:float getMaximumAngle() -> getMaximumAngle
    116:116:float getMinimumHorizontalAngle() -> getMinimumHorizontalAngle
    147:147:float getMinimumVerticalAngle() -> getMinimumVerticalAngle
    203:279:android.graphics.Path getPath(float,float,float,float) -> getPath
    160:162:void setMaximumAngle(float) -> setMaximumAngle
    101:103:void setMinimumHorizontalAngle(float) -> setMinimumHorizontalAngle
    131:133:void setMinimumVerticalAngle(float) -> setMinimumVerticalAngle
    178:181:float toTangent(float) -> toTangent
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    39:41:void <init>() -> <init>
    44:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:53:void init() -> init
androidx.transition.CanvasUtils -> androidx.transition.CanvasUtils:
    41:79:void enableZ(android.graphics.Canvas,boolean) -> enableZ
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    164:171:void <init>() -> <init>
    164:183:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    244:245:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:240:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:235:void captureValues(androidx.transition.TransitionValues) -> captureValues
    264:458:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    216:216:boolean getResizeClip() -> getResizeClip
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    248:257:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
    205:206:void setResizeClip(boolean) -> setResizeClip
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:78:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:453:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    96:96:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:92:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    109:109:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:105:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    126:126:android.graphics.PointF get(android.view.View) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:122:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    143:143:android.graphics.PointF get(android.view.View) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:139:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    160:160:android.graphics.PointF get(android.view.View) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:156:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:376:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:385:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:401:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:409:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:414:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:419:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:473:void <init>(android.view.View) -> <init>
    485:491:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:497:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:482:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.ChangeClipBounds -> androidx.transition.ChangeClipBounds:
    43:43:void <clinit>() -> <clinit>
    53:54:void <init>() -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:82:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    76:77:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:72:void captureValues(androidx.transition.TransitionValues) -> captureValues
    89:123:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    50:50:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeClipBounds$1 -> androidx.transition.ChangeClipBounds$1:
    116:116:void <init>(androidx.transition.ChangeClipBounds,android.view.View) -> <init>
    119:120:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeImageTransform -> androidx.transition.ChangeImageTransform:
    50:62:void <clinit>() -> <clinit>
    75:76:void <init>() -> <init>
    79:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:112:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    106:107:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    83:102:void captureValues(androidx.transition.TransitionValues) -> captureValues
    222:241:android.graphics.Matrix centerCropMatrix(android.widget.ImageView) -> centerCropMatrix
    190:201:android.graphics.Matrix copyImageMatrix(android.widget.ImageView) -> copyImageMatrix
    135:173:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    184:184:android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix) -> createMatrixAnimator
    178:178:android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView) -> createNullAnimator
    209:214:android.graphics.Matrix fitXYMatrix(android.widget.ImageView) -> fitXYMatrix
    117:117:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeImageTransform$1 -> androidx.transition.ChangeImageTransform$1:
    55:55:void <init>() -> <init>
    55:55:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:58:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
androidx.transition.ChangeImageTransform$2 -> androidx.transition.ChangeImageTransform$2:
    63:63:void <init>(java.lang.Class,java.lang.String) -> <init>
    63:63:java.lang.Object get(java.lang.Object) -> get
    71:71:android.graphics.Matrix get(android.widget.ImageView) -> get
    63:63:void set(java.lang.Object,java.lang.Object) -> set
    66:67:void set(android.widget.ImageView,android.graphics.Matrix) -> set
androidx.transition.ChangeImageTransform$3 -> androidx.transition.ChangeImageTransform$3:
    192:192:void <clinit>() -> <clinit>
androidx.transition.ChangeScroll -> androidx.transition.ChangeScroll:
    39:39:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:58:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    52:53:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    67:69:void captureValues(androidx.transition.TransitionValues) -> captureValues
    75:93:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    63:63:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeTransform -> androidx.transition.ChangeTransform:
    61:102:void <clinit>() -> <clinit>
    104:110:void <init>() -> <init>
    104:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    240:241:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    228:236:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    199:224:void captureValues(androidx.transition.TransitionValues) -> captureValues
    248:285:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    392:422:void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createGhostView
    290:374:android.animation.ObjectAnimator createTransformAnimator(androidx.transition.TransitionValues,androidx.transition.TransitionValues,boolean) -> createTransformAnimator
    176:176:boolean getReparent() -> getReparent
    142:142:boolean getReparentWithOverlay() -> getReparentWithOverlay
    195:195:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    378:387:boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup) -> parentsMatch
    445:446:void setIdentityTransforms(android.view.View) -> setIdentityTransforms
    425:441:void setMatricesForParent(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> setMatricesForParent
    189:190:void setReparent(boolean) -> setReparent
    164:165:void setReparentWithOverlay(boolean) -> setReparentWithOverlay
    452:460:void setTransforms(android.view.View,float,float,float,float,float,float,float,float) -> setTransforms
androidx.transition.ChangeTransform$1 -> androidx.transition.ChangeTransform$1:
    71:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    71:71:java.lang.Object get(java.lang.Object) -> get
    74:74:float[] get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> get
    71:71:void set(java.lang.Object,java.lang.Object) -> set
    79:80:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,float[]) -> set
androidx.transition.ChangeTransform$2 -> androidx.transition.ChangeTransform$2:
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    87:87:java.lang.Object get(java.lang.Object) -> get
    90:90:android.graphics.PointF get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
    95:96:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF) -> set
androidx.transition.ChangeTransform$3 -> androidx.transition.ChangeTransform$3:
    331:333:void <init>(androidx.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,androidx.transition.ChangeTransform$Transforms,androidx.transition.ChangeTransform$PathAnimatorMatrix) -> <init>
    337:338:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    342:352:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    356:358:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    362:363:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    366:369:void setCurrentMatrix(android.graphics.Matrix) -> setCurrentMatrix
androidx.transition.ChangeTransform$GhostListener -> androidx.transition.ChangeTransform$GhostListener:
    525:528:void <init>(android.view.View,androidx.transition.GhostView) -> <init>
    532:536:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    540:541:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    545:546:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeTransform$PathAnimatorMatrix -> androidx.transition.ChangeTransform$PathAnimatorMatrix:
    557:569:void <init>(android.view.View,float[]) -> <init>
    590:590:android.graphics.Matrix getMatrix() -> getMatrix
    583:587:void setAnimationMatrix() -> setAnimationMatrix
    577:580:void setTranslation(android.graphics.PointF) -> setTranslation
    572:574:void setValues(float[]) -> setValues
androidx.transition.ChangeTransform$Transforms -> androidx.transition.ChangeTransform$Transforms:
    473:482:void <init>(android.view.View) -> <init>
    491:495:boolean equals(java.lang.Object) -> equals
    507:515:int hashCode() -> hashCode
    485:487:void restore(android.view.View) -> restore
androidx.transition.CircularPropagation -> androidx.transition.CircularPropagation:
    33:35:void <init>() -> <init>
    101:103:float distance(float,float,float,float) -> distance
    59:97:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getStartDelay
    50:54:void setPropagationSpeed(float) -> setPropagationSpeed
androidx.transition.Explode -> androidx.transition.Explode:
    45:46:void <clinit>() -> <clinit>
    49:53:void <init>() -> <init>
    49:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    176:176:float calculateDistance(float,float) -> calculateDistance
    170:172:float calculateMaxDistance(android.view.View,int,int) -> calculateMaxDistance
    131:167:void calculateOut(android.view.View,android.graphics.Rect,int[]) -> calculateOut
    78:80:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    72:74:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:68:void captureValues(androidx.transition.TransitionValues) -> captureValues
    86:96:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    104:126:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade -> androidx.transition.Fade:
    92:94:void <init>(int) -> <init>
    99:100:void <init>() -> <init>
    105:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    116:119:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    125:144:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    174:181:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    157:161:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    168:170:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    136:136:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    139:142:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    187:191:void <init>(android.view.View) -> <init>
    204:208:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    195:200:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FloatArrayEvaluator -> androidx.transition.FloatArrayEvaluator:
    39:41:void <init>(float[]) -> <init>
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    57:67:float[] evaluate(float,float[],float[]) -> evaluate
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    44:44:void <init>() -> <init>
    334:338:void addTarget(java.lang.Object,android.view.View) -> addTarget
    104:125:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    223:224:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    48:48:boolean canHandle(java.lang.Object) -> canHandle
    53:57:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    128:130:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    195:217:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    136:146:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    342:346:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    308:330:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    152:188:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    231:251:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    88:100:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    350:362:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    267:292:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    73:84:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    297:303:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    62:67:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    93:93:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    96:96:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> onGetEpicenter
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    153:153:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    178:178:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    168:174:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    182:182:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    186:186:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    162:164:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    232:232:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    248:249:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    235:244:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    268:268:void <init>(androidx.transition.FragmentTransitionSupport,androidx.transition.Transition) -> <init>
    271:272:void onCancel() -> onCancel
androidx.transition.FragmentTransitionSupport$5 -> androidx.transition.FragmentTransitionSupport$5:
    274:274:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Runnable) -> <init>
    284:284:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    280:281:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    287:287:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    290:290:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    276:276:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$6 -> androidx.transition.FragmentTransitionSupport$6:
    352:352:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    355:358:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> onGetEpicenter
androidx.transition.GhostViewHolder -> androidx.transition.GhostViewHolder:
    38:44:void <init>(android.view.ViewGroup) -> <init>
    88:97:void addGhostView(androidx.transition.GhostViewPort) -> addGhostView
    69:69:androidx.transition.GhostViewHolder getHolder(android.view.ViewGroup) -> getHolder
    105:121:int getInsertIndex(java.util.ArrayList) -> getInsertIndex
    156:161:void getParents(android.view.View,java.util.ArrayList) -> getParents
    132:149:boolean isOnTop(java.util.ArrayList,java.util.ArrayList) -> isOnTop
    169:197:boolean isOnTop(android.view.View,android.view.View) -> isOnTop
    48:52:void onViewAdded(android.view.View) -> onViewAdded
    56:66:void onViewRemoved(android.view.View) -> onViewRemoved
    73:80:void popToOverlayTop() -> popToOverlayTop
androidx.transition.GhostViewPlatform -> androidx.transition.GhostViewPlatform:
    73:75:void <init>(android.view.View) -> <init>
    43:54:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    99:110:void fetchAddGhostMethod() -> fetchAddGhostMethod
    88:96:void fetchGhostViewClass() -> fetchGhostViewClass
    113:123:void fetchRemoveGhostMethod() -> fetchRemoveGhostMethod
    58:68:void removeGhost(android.view.View) -> removeGhost
    85:85:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    79:80:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort -> androidx.transition.GhostViewPort:
    51:73:void <init>(android.view.View) -> <init>
    164:198:androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    156:161:void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> calculateMatrix
    140:145:void copySize(android.view.View,android.view.View) -> copySize
    148:148:androidx.transition.GhostViewPort getGhostView(android.view.View) -> getGhostView
    101:110:void onAttachedToWindow() -> onAttachedToWindow
    114:121:void onDetachedFromWindow() -> onDetachedFromWindow
    125:137:void onDraw(android.graphics.Canvas) -> onDraw
    87:87:void onLayout(boolean,int,int,int,int) -> onLayout
    202:210:void removeGhost(android.view.View) -> removeGhost
    95:97:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    152:153:void setGhostView(android.view.View,androidx.transition.GhostViewPort) -> setGhostView
    90:91:void setMatrix(android.graphics.Matrix) -> setMatrix
    77:82:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort$1 -> androidx.transition.GhostViewPort$1:
    52:52:void <init>(androidx.transition.GhostViewPort) -> <init>
    56:63:boolean onPreDraw() -> onPreDraw
androidx.transition.GhostViewUtils -> androidx.transition.GhostViewUtils:
    32:36:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    41:47:void removeGhost(android.view.View) -> removeGhost
androidx.transition.ImageViewUtils -> androidx.transition.ImageViewUtils:
    36:36:void <clinit>() -> <clinit>
    45:83:void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    100:109:void fetchDrawMatrixField() -> fetchDrawMatrixField
    88:97:void hiddenAnimateTransform(android.widget.ImageView,android.graphics.Matrix) -> hiddenAnimateTransform
androidx.transition.MatrixUtils -> androidx.transition.MatrixUtils:
    24:24:void <clinit>() -> <clinit>
androidx.transition.MatrixUtils$1 -> androidx.transition.MatrixUtils$1:
    24:24:void <init>() -> <init>
    27:27:void oops() -> oops
    183:184:boolean postConcat(android.graphics.Matrix) -> postConcat
    159:160:boolean postRotate(float,float,float) -> postRotate
    165:166:boolean postRotate(float) -> postRotate
    147:148:boolean postScale(float,float,float,float) -> postScale
    153:154:boolean postScale(float,float) -> postScale
    171:172:boolean postSkew(float,float,float,float) -> postSkew
    177:178:boolean postSkew(float,float) -> postSkew
    141:142:boolean postTranslate(float,float) -> postTranslate
    135:136:boolean preConcat(android.graphics.Matrix) -> preConcat
    111:112:boolean preRotate(float,float,float) -> preRotate
    117:118:boolean preRotate(float) -> preRotate
    99:100:boolean preScale(float,float,float,float) -> preScale
    105:106:boolean preScale(float,float) -> preScale
    123:124:boolean preSkew(float,float,float,float) -> preSkew
    129:130:boolean preSkew(float,float) -> preSkew
    93:94:boolean preTranslate(float,float) -> preTranslate
    37:38:void reset() -> reset
    32:33:void set(android.graphics.Matrix) -> set
    87:88:boolean setConcat(android.graphics.Matrix,android.graphics.Matrix) -> setConcat
    196:197:boolean setPolyToPoly(float[],int,float[],int,int) -> setPolyToPoly
    189:190:boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit) -> setRectToRect
    57:58:void setRotate(float,float,float) -> setRotate
    62:63:void setRotate(float) -> setRotate
    47:48:void setScale(float,float,float,float) -> setScale
    52:53:void setScale(float,float) -> setScale
    67:68:void setSinCos(float,float,float,float) -> setSinCos
    72:73:void setSinCos(float,float) -> setSinCos
    77:78:void setSkew(float,float,float,float) -> setSkew
    82:83:void setSkew(float,float) -> setSkew
    42:43:void setTranslate(float,float) -> setTranslate
    202:203:void setValues(float[]) -> setValues
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    45:46:void <init>() -> <init>
    48:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.transition.PathProperty -> androidx.transition.PathProperty:
    40:49:void <init>(android.util.Property,android.graphics.Path) -> <init>
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
    58:63:void set(java.lang.Object,java.lang.Float) -> set
androidx.transition.PatternPathMotion -> androidx.transition.PatternPathMotion:
    48:58:void <init>() -> <init>
    48:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:87:void <init>(android.graphics.Path) -> <init>
    151:151:float distance(float,float) -> distance
    137:147:android.graphics.Path getPath(float,float,float,float) -> getPath
    97:97:android.graphics.Path getPatternPath() -> getPatternPath
    108:132:void setPatternPath(android.graphics.Path) -> setPatternPath
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:40:void <init>() -> <init>
    52:54:void <init>(android.graphics.Rect) -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    39:91:void <init>(android.view.ViewGroup) -> <init>
    39:112:void <init>(android.view.ViewGroup,int,android.content.Context) -> <init>
    39:127:void <init>(android.view.ViewGroup,android.view.View) -> <init>
    168:185:void enter() -> enter
    149:154:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    63:75:androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context) -> getSceneForLayout
    138:138:android.view.ViewGroup getSceneRoot() -> getSceneRoot
    259:259:boolean isCreatedFromLayoutResource() -> isCreatedFromLayoutResource
    196:197:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
    230:231:void setEnterAction(java.lang.Runnable) -> setEnterAction
    250:251:void setExitAction(java.lang.Runnable) -> setExitAction
androidx.transition.SidePropagation -> androidx.transition.SidePropagation:
    34:37:void <init>() -> <init>
    125:151:int distance(android.view.View,int,int,int,int,int,int,int,int) -> distance
    155:162:int getMaxDistance(android.view.ViewGroup) -> getMaxDistance
    76:119:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getStartDelay
    67:71:void setPropagationSpeed(float) -> setPropagationSpeed
    51:52:void setSide(int) -> setSide
androidx.transition.Slide -> androidx.transition.Slide:
    56:145:void <clinit>() -> <clinit>
    59:158:void <init>() -> <init>
    59:165:void <init>(int) -> <init>
    59:177:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    194:196:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    188:190:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    180:184:void captureValues(androidx.transition.TransitionValues) -> captureValues
    245:245:int getSlideEdge() -> getSlideEdge
    252:261:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    269:278:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    207:233:void setSlideEdge(int) -> setSlideEdge
androidx.transition.Slide$1 -> androidx.transition.Slide$1:
    94:94:void <init>() -> <init>
    97:97:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$2 -> androidx.transition.Slide$2:
    101:101:void <init>() -> <init>
    104:112:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$3 -> androidx.transition.Slide$3:
    116:116:void <init>() -> <init>
    119:119:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$4 -> androidx.transition.Slide$4:
    123:123:void <init>() -> <init>
    126:126:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$5 -> androidx.transition.Slide$5:
    130:130:void <init>() -> <init>
    133:141:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Slide$6 -> androidx.transition.Slide$6:
    145:145:void <init>() -> <init>
    148:148:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$CalculateSlideHorizontal -> androidx.transition.Slide$CalculateSlideHorizontal:
    78:78:void <init>() -> <init>
    78:78:void <init>(androidx.transition.Slide$1) -> <init>
    82:82:float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
androidx.transition.Slide$CalculateSlideVertical -> androidx.transition.Slide$CalculateSlideVertical:
    86:86:void <init>() -> <init>
    86:86:void <init>(androidx.transition.Slide$1) -> <init>
    90:90:float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
androidx.transition.Styleable -> androidx.transition.Styleable:
    30:169:void <clinit>() -> <clinit>
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    181:261:void <init>() -> <init>
    181:298:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2029:2033:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    997:998:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    1021:1024:androidx.transition.Transition addTarget(int) -> addTarget
    1046:1050:androidx.transition.Transition addTarget(java.lang.String) -> addTarget
    1076:1080:androidx.transition.Transition addTarget(java.lang.Class) -> addTarget
    644:660:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1529:1566:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    528:534:boolean alreadyContains(int[],int) -> alreadyContains
    1886:1907:void animate(android.animation.Animator) -> animate
    2004:2017:void cancel() -> cancel
    1596:1650:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2176:2192:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1468:1525:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1574:1583:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2206:2214:androidx.transition.Transition clone() -> clone
    486:486:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    707:800:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1945:1969:void end() -> end
    1268:1269:androidx.transition.Transition excludeChildren(android.view.View,boolean) -> excludeChildren
    1298:1299:androidx.transition.Transition excludeChildren(int,boolean) -> excludeChildren
    1381:1382:androidx.transition.Transition excludeChildren(java.lang.Class,boolean) -> excludeChildren
    1307:1314:java.util.ArrayList excludeId(java.util.ArrayList,int,boolean) -> excludeId
    1158:1165:java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean) -> excludeObject
    1190:1191:androidx.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    1216:1217:androidx.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    1242:1243:androidx.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    1354:1355:androidx.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    1391:1398:java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean) -> excludeType
    1322:1329:java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean) -> excludeView
    1978:1995:void forceToEnd(android.view.ViewGroup) -> forceToEnd
    354:354:long getDuration() -> getDuration
    2133:2136:android.graphics.Rect getEpicenter() -> getEpicenter
    2120:2120:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1679:1704:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2232:2232:java.lang.String getName() -> getName
    2090:2090:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2168:2168:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    856:861:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    435:435:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1660:1664:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1827:1848:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    524:524:boolean isValidMatch(int) -> isValidMatch
    813:852:boolean isValidTarget(android.view.View) -> isValidTarget
    1853:1871:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:608:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:554:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:581:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:635:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:687:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    302:327:int[] parseMatchOrder(java.lang.String) -> parseMatchOrder
    1716:1732:void pause(android.view.View) -> pause
    1769:1810:void playTransition(android.view.ViewGroup) -> playTransition
    2045:2052:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1095:1096:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1111:1114:androidx.transition.Transition removeTarget(int) -> removeTarget
    1129:1132:androidx.transition.Transition removeTarget(java.lang.String) -> removeTarget
    1147:1150:androidx.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    1743:1761:void resume(android.view.View) -> resume
    893:909:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    875:889:void runAnimators() -> runAnimators
    2195:2196:void setCanRemoveViews(boolean) -> setCanRemoveViews
    341:342:androidx.transition.Transition setDuration(long) -> setDuration
    2105:2106:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:396:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    507:521:void setMatchOrder(int[]) -> setMatchOrder
    2072:2077:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2151:2152:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    368:369:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1918:1930:void start() -> start
    2200:2200:java.lang.String toString() -> toString
    2236:2267:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:177:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    895:895:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    903:905:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    898:899:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1898:1898:void <init>(androidx.transition.Transition) -> <init>
    1901:1903:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2350:2356:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$ArrayListManager -> androidx.transition.Transition$ArrayListManager:
    2380:2386:java.util.ArrayList add(java.util.ArrayList,java.lang.Object) -> add
    2395:2401:java.util.ArrayList remove(java.util.ArrayList,java.lang.Object) -> remove
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2413:2413:void <init>() -> <init>
androidx.transition.TransitionInflater -> androidx.transition.TransitionInflater:
    44:46:void <clinit>() -> <clinit>
    50:52:void <init>(android.content.Context) -> <init>
    195:218:java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String) -> createCustom
    118:191:androidx.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,androidx.transition.Transition) -> createTransitionFromXml
    289:308:androidx.transition.TransitionManager createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup) -> createTransitionManagerFromXml
    59:59:androidx.transition.TransitionInflater from(android.content.Context) -> from
    230:278:void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,androidx.transition.Transition) -> getTargetIds
    71:81:androidx.transition.Transition inflateTransition(int) -> inflateTransition
    93:108:androidx.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup) -> inflateTransitionManager
    316:341:void loadTransition(android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,androidx.transition.TransitionManager) -> loadTransition
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
    39:39:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    35:35:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    43:43:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    47:47:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    31:31:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    79:86:void <init>() -> <init>
    379:380:void beginDelayedTransition(android.view.ViewGroup) -> beginDelayedTransition
    407:421:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    169:196:void changeScene(androidx.transition.Scene,androidx.transition.Transition) -> changeScene
    429:439:void endTransitions(android.view.ViewGroup) -> endTransitions
    199:210:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    139:155:androidx.transition.Transition getTransition(androidx.transition.Scene) -> getTransition
    348:349:void go(androidx.transition.Scene) -> go
    366:367:void go(androidx.transition.Scene,androidx.transition.Transition) -> go
    215:220:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    308:325:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
    102:103:void setTransition(androidx.transition.Scene,androidx.transition.Transition) -> setTransition
    119:125:void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition) -> setTransition
    338:339:void transitionTo(androidx.transition.Scene) -> transitionTo
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    237:240:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    267:302:boolean onPreDraw() -> onPreDraw
    249:249:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    253:263:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    243:245:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
# {"id":"sourceFile","fileName":"TransitionManager.java"}
    286:286:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    289:292:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionPropagation -> androidx.transition.TransitionPropagation:
    32:32:void <init>() -> <init>
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    80:111:void <init>() -> <init>
    80:123:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(int) -> addTarget
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    62:62:androidx.transition.Transition addTarget(java.lang.Class) -> addTarget
    62:62:androidx.transition.Transition addTarget(java.lang.String) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    280:283:androidx.transition.TransitionSet addTarget(int) -> addTarget
    289:292:androidx.transition.TransitionSet addTarget(java.lang.String) -> addTarget
    298:301:androidx.transition.TransitionSet addTarget(java.lang.Class) -> addTarget
    179:195:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:201:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    581:586:void cancel() -> cancel
    536:544:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:553:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:532:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    639:645:androidx.transition.Transition clone() -> clone
    466:483:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    349:352:androidx.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    358:361:androidx.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    367:370:androidx.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    376:379:androidx.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    592:597:void forceToEnd(android.view.ViewGroup) -> forceToEnd
    158:158:int getOrdering() -> getOrdering
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:564:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(int) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(java.lang.String) -> removeTarget
    313:316:androidx.transition.TransitionSet removeTarget(int) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    331:334:androidx.transition.TransitionSet removeTarget(java.lang.Class) -> removeTarget
    340:343:androidx.transition.TransitionSet removeTarget(java.lang.String) -> removeTarget
    407:409:androidx.transition.TransitionSet removeTransition(androidx.transition.Transition) -> removeTransition
    570:575:void resume(android.view.View) -> resume
    491:520:void runAnimators() -> runAnimators
    601:606:void setCanRemoveViews(boolean) -> setCanRemoveViews
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:246:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:626:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    135:146:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:397:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:616:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:423:void setupStartEndListeners() -> setupStartEndListeners
    630:634:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:508:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:435:void <init>(androidx.transition.TransitionSet) -> <init>
    447:454:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:443:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionUtils$MatrixEvaluator -> androidx.transition.TransitionUtils$MatrixEvaluator:
    155:161:void <init>() -> <init>
    155:155:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    165:172:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:70:void <init>(android.view.View) -> <init>
    74:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:97:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.TranslationAnimationCreator -> androidx.transition.TranslationAnimationCreator:
    56:82:android.animation.Animator createAnimation(android.view.View,androidx.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,androidx.transition.Transition) -> createAnimation
androidx.transition.TranslationAnimationCreator$TransitionPositionListener -> androidx.transition.TranslationAnimationCreator$TransitionPositionListener:
    99:110:void <init>(android.view.View,android.view.View,int,int,float,float) -> <init>
    114:120:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    124:128:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    132:134:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    149:149:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    142:145:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    153:153:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    157:157:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    138:138:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.ViewGroupOverlayApi14 -> androidx.transition.ViewGroupOverlayApi14:
    28:29:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    37:38:void add(android.view.View) -> add
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    42:43:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> add
    48:49:void add(android.view.View) -> add
    43:44:void remove(android.graphics.drawable.Drawable) -> remove
    53:54:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    37:37:void <clinit>() -> <clinit>
    83:105:int getChildDrawingOrder(android.view.ViewGroup,int) -> getChildDrawingOrder
    46:49:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:77:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:63:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14 -> androidx.transition.ViewGroupUtilsApi14:
    114:132:void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
    46:107:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14$1 -> androidx.transition.ViewGroupUtilsApi14$1:
    47:47:void <init>() -> <init>
    50:50:boolean isChangingLayout() -> isChangingLayout
androidx.transition.ViewOverlayApi14 -> androidx.transition.ViewOverlayApi14:
    47:49:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    81:82:void add(android.graphics.drawable.Drawable) -> add
    65:76:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    52:61:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    86:87:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    116:121:void <clinit>() -> <clinit>
    132:149:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    159:170:void add(android.graphics.drawable.Drawable) -> add
    188:213:void add(android.view.View) -> add
    221:225:void assertNotDisposed() -> assertNotDisposed
    242:255:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    154:154:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    228:232:void disposeIfEmpty() -> disposeIfEmpty
    272:278:void getOffset(int[]) -> getOffset
    302:316:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    237:238:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    260:260:void onLayout(boolean,int,int,int,int) -> onLayout
    174:180:void remove(android.graphics.drawable.Drawable) -> remove
    216:218:void remove(android.view.View) -> remove
    184:184:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    42:43:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:129:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    90:93:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    100:103:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:120:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    187:188:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    199:200:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:108:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:146:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:162:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:178:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:67:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:82:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    72:72:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    67:67:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    36:47:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    33:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    74:83:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    46:55:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:69:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:45:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    32:32:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:51:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    61:62:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    46:47:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:32:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:42:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:57:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    72:75:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    179:189:void fetchSetFrame() -> fetchSetFrame
    55:59:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    64:67:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    109:139:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    142:152:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    46:52:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    155:172:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    78:89:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    92:106:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    98:101:void <init>() -> <init>
    98:116:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    165:166:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:161:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:156:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:262:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    140:140:int getMode() -> getMode
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:243:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    512:523:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    184:190:boolean isVisible(androidx.transition.TransitionValues) -> isVisible
    284:298:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    321:321:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    343:484:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    506:506:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    126:130:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    441:441:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    459:462:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    445:446:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    450:455:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    536:545:void <init>(android.view.View,int,boolean) -> <init>
    609:618:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    567:568:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    580:581:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    551:554:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    572:572:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    560:563:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    576:576:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    596:596:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    590:592:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    600:601:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    605:606:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    586:586:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    621:625:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:88:void <init>() -> <init>
androidx.transition.VisibilityPropagation -> androidx.transition.VisibilityPropagation:
    38:38:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    45:58:void captureValues(androidx.transition.TransitionValues) -> captureValues
    62:62:java.lang.String[] getPropagationProperties() -> getPropagationProperties
    106:115:int getViewCoordinate(androidx.transition.TransitionValues,int) -> getViewCoordinate
    73:80:int getViewVisibility(androidx.transition.TransitionValues) -> getViewVisibility
    91:91:int getViewX(androidx.transition.TransitionValues) -> getViewX
    102:102:int getViewY(androidx.transition.TransitionValues) -> getViewY
androidx.transition.WindowIdApi14 -> androidx.transition.WindowIdApi14:
    25:27:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
# {"id":"sourceFile","fileName":"Animatable2Compat.java"}
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:536:boolean canApplyTheme() -> canApplyTheme
    856:867:void clearAnimationCallbacks() -> clearAnimationCallbacks
    920:929:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    143:143:void clearColorFilter() -> clearColorFilter
    212:241:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    877:889:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:831:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    661:679:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:851:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    899:909:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:652:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:150:void <init>() -> <init>
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:96:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:922:void <init>() -> <init>
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    917:917:boolean isColorType(int) -> isColorType
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:495:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:167:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:199:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    195:223:float getInterpolation(float) -> getInterpolation
    130:134:void initCubic(float,float,float,float) -> initCubic
    137:181:void initPath(android.graphics.Path) -> initPath
    123:127:void initQuad(float,float) -> initQuad
    82:120:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    53:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    311:323:void <init>() -> <init>
    311:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:690:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:670:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:428:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    618:631:float getPixelSize() -> getPixelSize
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:879:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    907:911:boolean needMirroring() -> needMirroring
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    734:748:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:903:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:812:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    477:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1810:1810:boolean isClipPath() -> isClipPath
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1822:1837:void <init>() -> <init>
    1822:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1859:1867:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1872:1880:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1967:boolean onStateChanged(int[]) -> onStateChanged
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1445:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1507:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1669:boolean isStateful() -> isStateful
    1674:1678:boolean onStateChanged(int[]) -> onStateChanged
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
    1563:1568:void updateLocalMatrix() -> updateLocalMatrix
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> isStateful
    1438:1438:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1687:1695:void <init>() -> <init>
    1687:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1744:1744:boolean isClipPath() -> isClipPath
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1730:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1171:1195:void <init>() -> <init>
    1171:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1379:1379:float cross(float,float,float,float) -> cross
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1015:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1123:void <init>() -> <init>
    1093:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1108:boolean canReuseCache() -> canReuseCache
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1149:boolean onStateChanged(int[]) -> onStateChanged
    1114:1119:void updateCacheStates() -> updateCacheStates
    1078:1081:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    45:45:void onPostParceling() -> onPostParceling
    36:36:void onPreParceling(boolean) -> onPreParceling
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    58:61:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:117:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
    91:97:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> putVersionedParcelable
    70:73:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1219:1237:java.lang.Exception createException(int,java.lang.String) -> createException
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1208:1209:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    995:1010:int getType(java.lang.Object) -> getType
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    578:581:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    587:595:boolean[] readBooleanArray() -> readBooleanArray
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1245:1248:byte readByte(byte,int) -> readByte
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    625:636:char[] readCharArray(char[],int) -> readCharArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1344:1386:java.util.Collection readCollection(java.util.Collection) -> readCollection
    441:444:double readDouble(double,int) -> readDouble
    795:798:double[] readDoubleArray(double[],int) -> readDoubleArray
    804:812:double[] readDoubleArray() -> readDoubleArray
    1170:1178:java.lang.Exception readException(java.lang.Exception,int) -> readException
    1198:1199:java.lang.Exception readException(int,java.lang.String) -> readException
    1193:1194:int readExceptionCode() -> readExceptionCode
    430:433:float readFloat(float,int) -> readFloat
    751:754:float[] readFloatArray(float[],int) -> readFloatArray
    760:768:float[] readFloatArray() -> readFloatArray
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    663:666:int[] readIntArray(int[],int) -> readIntArray
    672:680:int[] readIntArray() -> readIntArray
    1337:1340:java.util.List readList(java.util.List,int) -> readList
    419:422:long readLong(long,int) -> readLong
    707:710:long[] readLongArray(long[],int) -> readLongArray
    716:724:long[] readLongArray() -> readLongArray
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1523:1553:java.io.Serializable readSerializable() -> readSerializable
    1318:1321:java.util.Set readSet(java.util.Set,int) -> readSet
    1256:1264:android.util.Size readSize(android.util.Size,int) -> readSize
    1272:1280:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1289:1302:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    941:943:void writeArray(java.lang.Object[],int) -> writeArray
    948:992:void writeArray(java.lang.Object[]) -> writeArray
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    557:559:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    564:573:void writeBooleanArray(boolean[]) -> writeBooleanArray
    285:287:void writeBundle(android.os.Bundle,int) -> writeBundle
    504:506:void writeByte(byte,int) -> writeByte
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    316:318:void writeByteArray(byte[],int,int,int) -> writeByteArray
    601:611:void writeCharArray(char[],int) -> writeCharArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    875:877:void writeCollection(java.util.Collection,int) -> writeCollection
    880:928:void writeCollection(java.util.Collection) -> writeCollection
    361:363:void writeDouble(double,int) -> writeDouble
    774:776:void writeDoubleArray(double[],int) -> writeDoubleArray
    781:790:void writeDoubleArray(double[]) -> writeDoubleArray
    1107:1147:void writeException(java.lang.Exception,int) -> writeException
    352:354:void writeFloat(float,int) -> writeFloat
    730:732:void writeFloatArray(float[],int) -> writeFloatArray
    737:746:void writeFloatArray(float[]) -> writeFloatArray
    334:336:void writeInt(int,int) -> writeInt
    642:644:void writeIntArray(int[],int) -> writeIntArray
    649:658:void writeIntArray(int[]) -> writeIntArray
    840:841:void writeList(java.util.List,int) -> writeList
    343:345:void writeLong(long,int) -> writeLong
    686:688:void writeLongArray(long[],int) -> writeLongArray
    693:702:void writeLongArray(long[]) -> writeLongArray
    1157:1158:void writeNoException() -> writeNoException
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    1057:1059:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    1062:1081:void writeSerializable(java.io.Serializable) -> writeSerializable
    826:827:void writeSet(java.util.Set,int) -> writeSet
    514:520:void writeSize(android.util.Size,int) -> writeSize
    528:534:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    539:552:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    370:372:void writeString(java.lang.String,int) -> writeString
    379:381:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    276:278:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1586:1600:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1643:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:54:void <init>(android.os.Parcel) -> <init>
    41:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    253:253:android.os.Bundle readBundle() -> readBundle
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    221:221:double readDouble() -> readDouble
    70:84:boolean readField(int) -> readField
    216:216:float readFloat() -> readFloat
    206:206:int readInt() -> readInt
    211:211:long readLong() -> readLong
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    231:231:android.os.IBinder readStrongBinder() -> readStrongBinder
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    191:192:void writeBundle(android.os.Bundle) -> writeBundle
    126:132:void writeByteArray(byte[]) -> writeByteArray
    136:142:void writeByteArray(byte[],int,int) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    161:162:void writeDouble(double) -> writeDouble
    156:157:void writeFloat(float) -> writeFloat
    146:147:void writeInt(int) -> writeInt
    151:152:void writeLong(long) -> writeLong
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
    171:172:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    186:187:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    44:44:void <clinit>() -> <clinit>
    76:78:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    71:123:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    142:152:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    127:127:boolean isStream() -> isStream
    402:404:boolean readBoolean() -> readBoolean
    429:438:android.os.Bundle readBundle() -> readBundle
    381:390:byte[] readByteArray() -> readByteArray
    396:396:java.lang.CharSequence readCharSequence() -> readCharSequence
    356:358:double readDouble() -> readDouble
    164:186:boolean readField(int) -> readField
    347:349:float readFloat() -> readFloat
    329:331:int readInt() -> readInt
    338:340:long readLong() -> readLong
    489:538:void readObject(int,java.lang.String,android.os.Bundle) -> readObject
    323:323:android.os.Parcelable readParcelable() -> readParcelable
    365:374:java.lang.String readString() -> readString
    317:317:android.os.IBinder readStrongBinder() -> readStrongBinder
    191:194:void setOutputField(int) -> setOutputField
    134:138:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:292:void writeBoolean(boolean) -> writeBoolean
    411:425:void writeBundle(android.os.Bundle) -> writeBundle
    199:208:void writeByteArray(byte[]) -> writeByteArray
    213:222:void writeByteArray(byte[],int,int) -> writeByteArray
    226:229:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    263:268:void writeDouble(double) -> writeDouble
    253:258:void writeFloat(float) -> writeFloat
    234:238:void writeInt(int) -> writeInt
    243:248:void writeLong(long) -> writeLong
    442:486:void writeObject(java.lang.Object) -> writeObject
    303:306:void writeParcelable(android.os.Parcelable) -> writeParcelable
    273:283:void writeString(java.lang.String) -> writeString
    296:299:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    310:313:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$1 -> androidx.versionedparcelable.VersionedParcelStream$1:
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:93:int read() -> read
    98:105:int read(byte[],int,int) -> read
    110:117:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    544:552:void <init>(int,java.io.DataOutputStream) -> <init>
    555:563:void flushField() -> flushField
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:295:void notifyDataSetChanged() -> notifyDataSetChanged
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:319:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    155:393:void <init>(android.content.Context) -> <init>
    155:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    2528:2544:boolean beginFakeDrag() -> beginFakeDrag
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:748:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2554:2576:void endFakeDrag() -> endFakeDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2628:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2289:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1847:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1279:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:672:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    939:940:void smoothScrollTo(int,int) -> smoothScrollTo
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3126:3146:void <init>() -> <init>
    3126:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3083:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
# {"id":"sourceFile","fileName":"ViewPager.java"}
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
androidx.viewpager2.R$styleable -> androidx.viewpager2.R$styleable:
    179:230:void <clinit>() -> <clinit>
androidx.viewpager2.adapter.FragmentStateAdapter -> androidx.viewpager2.adapter.FragmentStateAdapter:
    102:103:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    112:113:void <init>(androidx.fragment.app.Fragment) -> <init>
    82:127:void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle) -> <init>
    386:403:void addViewToContainer(android.view.View,android.widget.FrameLayout) -> addViewToContainer
    496:496:boolean containsItem(long) -> containsItem
    600:600:java.lang.String createKey(java.lang.String,long) -> createKey
    265:272:void ensureFragment(int) -> ensureFragment
    201:230:void gcFragments() -> gcFragments
    486:486:long getItemId(int) -> getItemId
    233:247:boolean isFragmentViewBound(long) -> isFragmentViewBound
    605:605:boolean isValidKey(java.lang.String,java.lang.String) -> isValidKey
    251:261:java.lang.Long itemForViewHolder(int) -> itemForViewHolder
    132:135:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    67:67:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    166:197:void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int) -> onBindViewHolder
    67:67:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    161:161:androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    140:142:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    67:67:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    430:430:boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder) -> onFailedToRecycleView
    67:67:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    276:278:void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder) -> onViewAttachedToWindow
    67:67:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    407:413:void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder) -> onViewRecycled
    610:610:long parseIdFromKey(java.lang.String,java.lang.String) -> parseIdFromKey
    285:361:void placeFragmentInViewHolder(androidx.viewpager2.adapter.FragmentViewHolder) -> placeFragmentInViewHolder
    434:466:void removeFragment(long) -> removeFragment
    535:572:void restoreState(android.os.Parcelable) -> restoreState
    509:530:android.os.Parcelable saveState() -> saveState
    575:596:void scheduleGracePeriodEnd() -> scheduleGracePeriodEnd
    368:382:void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout) -> scheduleViewAttach
    501:501:void setHasStableIds(boolean) -> setHasStableIds
    470:470:boolean shouldDelayFragmentTransactions() -> shouldDelayFragmentTransactions
androidx.viewpager2.adapter.FragmentStateAdapter$1 -> androidx.viewpager2.adapter.FragmentStateAdapter$1:
    184:184:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.widget.FrameLayout,androidx.viewpager2.adapter.FragmentViewHolder) -> <init>
    188:192:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    347:347:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder) -> <init>
    351:358:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$3:
    369:369:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.fragment.app.Fragment,android.widget.FrameLayout) -> <init>
    376:380:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
androidx.viewpager2.adapter.FragmentStateAdapter$4 -> androidx.viewpager2.adapter.FragmentStateAdapter$4:
    576:576:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter) -> <init>
    579:581:void run() -> run
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    584:584:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable) -> <init>
    588:592:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver -> androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver:
    744:744:void <init>() -> <init>
    744:744:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$1) -> <init>
    750:751:void onItemRangeChanged(int,int) -> onItemRangeChanged
    756:757:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    761:762:void onItemRangeInserted(int,int) -> onItemRangeInserted
    771:772:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    766:767:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
    617:623:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter) -> <init>
    732:736:androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView) -> inferViewPager
    626:661:void register(androidx.recyclerview.widget.RecyclerView) -> register
    664:669:void unregister(androidx.recyclerview.widget.RecyclerView) -> unregister
    672:728:void updateFragmentMaxLifecycle(boolean) -> updateFragmentMaxLifecycle
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    629:629:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    632:633:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    637:638:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    643:643:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    646:647:void onChanged() -> onChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
# {"id":"sourceFile","fileName":"FragmentStateAdapter.java"}
    653:653:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    657:658:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentViewHolder -> androidx.viewpager2.adapter.FragmentViewHolder:
    33:34:void <init>(android.widget.FrameLayout) -> <init>
    37:43:androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup) -> create
    47:47:android.widget.FrameLayout getContainer() -> getContainer
androidx.viewpager2.widget.AnimateLayoutChangeDetector -> androidx.viewpager2.widget.AnimateLayoutChangeDetector:
    46:48:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    66:113:boolean arePagesLaidOutContiguously() -> arePagesLaidOutContiguously
    117:123:boolean hasRunningChangingLayoutTransition() -> hasRunningChangingLayoutTransition
    127:140:boolean hasRunningChangingLayoutTransition(android.view.View) -> hasRunningChangingLayoutTransition
    60:61:boolean mayHaveInterferingAnimations() -> mayHaveInterferingAnimations
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 -> androidx.viewpager2.widget.AnimateLayoutChangeDetector$1:
    94:94:void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector) -> <init>
    94:94:int compare(java.lang.Object,java.lang.Object) -> compare
    97:97:int compare(int[],int[]) -> compare
androidx.viewpager2.widget.CompositeOnPageChangeCallback -> androidx.viewpager2.widget.CompositeOnPageChangeCallback:
    34:36:void <init>(int) -> <init>
    42:43:void addOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> addOnPageChangeCallback
    86:92:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    58:64:void onPageScrolled(int,float,int) -> onPageScrolled
    72:78:void onPageSelected(int) -> onPageSelected
    49:50:void removeOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> removeOnPageChangeCallback
    95:95:void throwCallbackListModifiedWhileInUse(java.util.ConcurrentModificationException) -> throwCallbackListModifiedWhileInUse
androidx.viewpager2.widget.CompositePageTransformer -> androidx.viewpager2.widget.CompositePageTransformer:
    33:34:void <init>() -> <init>
    42:43:void addTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> addTransformer
    47:48:void removeTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> removeTransformer
    52:55:void transformPage(android.view.View,float) -> transformPage
androidx.viewpager2.widget.FakeDrag -> androidx.viewpager2.widget.FakeDrag:
    44:48:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ScrollEventAdapter,androidx.recyclerview.widget.RecyclerView) -> <init>
    134:137:void addFakeMotionEvent(long,int,float,float) -> addFakeMotionEvent
    56:69:boolean beginFakeDrag() -> beginFakeDrag
    124:131:void beginFakeVelocityTracker() -> beginFakeVelocityTracker
    102:120:boolean endFakeDrag() -> endFakeDrag
    74:97:boolean fakeDragBy(float) -> fakeDragBy
    51:51:boolean isFakeDragging() -> isFakeDragging
androidx.viewpager2.widget.MarginPageTransformer -> androidx.viewpager2.widget.MarginPageTransformer:
    47:50:void <init>(int) -> <init>
    66:73:androidx.viewpager2.widget.ViewPager2 requireViewPager(android.view.View) -> requireViewPager
    54:63:void transformPage(android.view.View,float) -> transformPage
androidx.viewpager2.widget.PageTransformerAdapter -> androidx.viewpager2.widget.PageTransformerAdapter:
    36:38:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    41:41:androidx.viewpager2.widget.ViewPager2$PageTransformer getPageTransformer() -> getPageTransformer
    82:82:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    58:74:void onPageScrolled(int,float,int) -> onPageScrolled
    78:78:void onPageSelected(int) -> onPageSelected
    53:54:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
androidx.viewpager2.widget.ScrollEventAdapter -> androidx.viewpager2.widget.ScrollEventAdapter:
    77:84:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    437:440:void dispatchScrolled(int,float,int) -> dispatchScrolled
    431:434:void dispatchSelected(int) -> dispatchSelected
    416:428:void dispatchStateChanged(int) -> dispatchStateChanged
    443:443:int getPosition() -> getPosition
    407:408:double getRelativeScrollPosition() -> getRelativeScrollPosition
    360:360:int getScrollState() -> getScrollState
    375:375:boolean isDragging() -> isDragging
    383:383:boolean isFakeDragging() -> isFakeDragging
    367:367:boolean isIdle() -> isIdle
    392:392:boolean isInAnyDraggingState() -> isInAnyDraggingState
    328:330:void notifyBeginFakeDrag() -> notifyBeginFakeDrag
    303:304:void notifyDataSetChangeHappened() -> notifyDataSetChangeHappened
    336:353:void notifyEndFakeDrag() -> notifyEndFakeDrag
    310:322:void notifyProgrammaticScroll(int,boolean) -> notifyProgrammaticScroll
    105:169:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    177:217:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
    87:96:void resetState() -> resetState
    356:357:void setOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> setOnPageChangeCallback
    287:300:void startDrag(boolean) -> startDrag
    224:284:void updateScrollEventValues() -> updateScrollEventValues
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues -> androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues:
    452:453:void <init>() -> <init>
    456:459:void reset() -> reset
androidx.viewpager2.widget.ViewPager2 -> androidx.viewpager2.widget.ViewPager2:
    121:121:void <clinit>() -> <clinit>
    124:159:void <init>(android.content.Context) -> <init>
    124:164:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:169:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    124:176:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1144:1145:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1163:1164:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    713:713:boolean beginFakeDrag() -> beginFakeDrag
    855:855:boolean canScrollHorizontally(int) -> canScrollHorizontally
    860:860:boolean canScrollVertically(int) -> canScrollVertically
    364:376:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    749:749:boolean endFakeDrag() -> endFakeDrag
    263:263:androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener enforceChildFillListener() -> enforceChildFillListener
    735:735:boolean fakeDragBy(float) -> fakeDragBy
    285:288:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    482:482:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    675:675:int getCurrentItem() -> getCurrentItem
    1175:1175:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1184:1184:int getItemDecorationCount() -> getItemDecorationCount
    850:850:int getOffscreenPageLimit() -> getOffscreenPageLimit
    573:573:int getOrientation() -> getOrientation
    556:559:int getPageSize() -> getPageSize
    687:687:int getScrollState() -> getScrollState
    179:255:void initialize(android.content.Context,android.util.AttributeSet) -> initialize
    1192:1193:void invalidateItemDecorations() -> invalidateItemDecorations
    761:761:boolean isFakeDragging() -> isFakeDragging
    577:577:boolean isRtl() -> isRtl
    803:803:boolean isUserInputEnabled() -> isUserInputEnabled
    949:951:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    516:533:void onLayout(boolean,int,int,int,int) -> onLayout
    498:512:void onMeasure(int,int) -> onMeasure
    328:337:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    308:323:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    488:489:void onViewAdded(android.view.View) -> onViewAdded
    956:959:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    469:472:void registerCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> registerCurrentItemDataSetTracker
    872:873:void registerOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> registerOnPageChangeCallback
    1215:1216:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1202:1203:void removeItemDecorationAt(int) -> removeItemDecorationAt
    930:938:void requestTransform() -> requestTransform
    340:359:void restorePendingState() -> restorePendingState
    458:466:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    591:592:void setCurrentItem(int) -> setCurrentItem
    603:608:void setCurrentItem(int,boolean) -> setCurrentItem
    614:666:void setCurrentItemInternal(int,boolean) -> setCurrentItemInternal
    943:945:void setLayoutDirection(int) -> setLayoutDirection
    832:839:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    292:302:void setOrientation(android.content.Context,android.util.AttributeSet) -> setOrientation
    568:570:void setOrientation(int) -> setOrientation
    900:921:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
    792:794:void setUserInputEnabled(boolean) -> setUserInputEnabled
    770:779:void snapToPage() -> snapToPage
    475:478:void unregisterCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> unregisterCurrentItemDataSetTracker
    882:883:void unregisterOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> unregisterOnPageChangeCallback
    537:553:void updateCurrentItem() -> updateCurrentItem
androidx.viewpager2.widget.ViewPager2$1 -> androidx.viewpager2.widget.ViewPager2$1:
    133:133:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    136:138:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$2 -> androidx.viewpager2.widget.ViewPager2$2:
    212:212:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    223:226:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    215:219:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$3 -> androidx.viewpager2.widget.ViewPager2$3:
    230:230:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    233:237:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$4 -> androidx.viewpager2.widget.ViewPager2$4:
    263:263:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    266:273:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    278:278:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$AccessibilityProvider:
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ViewPager2$1) -> <init>
    1226:1226:boolean handlesGetAccessibilityClassName() -> handlesGetAccessibilityClassName
    1269:1269:boolean handlesLmPerformAccessibilityAction(int) -> handlesLmPerformAccessibilityAction
    1258:1258:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> handlesPerformAccessibilityAction
    1280:1280:boolean handlesRvGetAccessibilityClassName() -> handlesRvGetAccessibilityClassName
    1237:1237:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onAttachAdapter
    1240:1240:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onDetachAdapter
    1230:1230:java.lang.String onGetAccessibilityClassName() -> onGetAccessibilityClassName
    1223:1223:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> onInitialize
    1255:1255:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1277:1277:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onLmInitializeAccessibilityNodeInfo
    1273:1273:boolean onLmPerformAccessibilityAction(int) -> onLmPerformAccessibilityAction
    1262:1262:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> onPerformAccessibilityAction
    1234:1234:void onRestorePendingState() -> onRestorePendingState
    1284:1284:java.lang.CharSequence onRvGetAccessibilityClassName() -> onRvGetAccessibilityClassName
    1266:1266:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onRvInitializeAccessibilityEvent
    1252:1252:void onSetLayoutDirection() -> onSetLayoutDirection
    1246:1246:void onSetNewCurrentItem() -> onSetNewCurrentItem
    1243:1243:void onSetOrientation() -> onSetOrientation
    1249:1249:void onSetUserInputEnabled() -> onSetUserInputEnabled
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider:
    1288:1288:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1291:1293:boolean handlesLmPerformAccessibilityAction(int) -> handlesLmPerformAccessibilityAction
    1316:1316:boolean handlesRvGetAccessibilityClassName() -> handlesRvGetAccessibilityClassName
    1307:1312:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onLmInitializeAccessibilityNodeInfo
    1298:1301:boolean onLmPerformAccessibilityAction(int) -> onLmPerformAccessibilityAction
    1321:1324:java.lang.CharSequence onRvGetAccessibilityClassName() -> onRvGetAccessibilityClassName
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver -> androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver:
    1577:1577:void <init>() -> <init>
    1577:1577:void <init>(androidx.viewpager2.widget.ViewPager2$1) -> <init>
    1583:1584:void onItemRangeChanged(int,int) -> onItemRangeChanged
    1589:1590:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    1594:1595:void onItemRangeInserted(int,int) -> onItemRangeInserted
    1604:1605:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    1599:1600:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl -> androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl:
    1001:1003:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    1024:1033:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    1017:1019:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1008:1011:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    1039:1039:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback -> androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback:
    1076:1076:void <init>() -> <init>
    1106:1106:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    1088:1088:void onPageScrolled(int,float,int) -> onPageScrolled
    1097:1097:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider:
    1328:1340:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1537:1552:void addCollectionInfo(android.view.accessibility.AccessibilityNodeInfo) -> addCollectionInfo
    1555:1570:void addScrollActions(android.view.accessibility.AccessibilityNodeInfo) -> addScrollActions
    1375:1375:boolean handlesGetAccessibilityClassName() -> handlesGetAccessibilityClassName
    1439:1439:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> handlesPerformAccessibilityAction
    1393:1397:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onAttachAdapter
    1401:1404:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> onDetachAdapter
    1380:1383:java.lang.String onGetAccessibilityClassName() -> onGetAccessibilityClassName
    1356:1371:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> onInitialize
    1431:1435:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1445:1453:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> onPerformAccessibilityAction
    1388:1389:void onRestorePendingState() -> onRestorePendingState
    1458:1460:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onRvInitializeAccessibilityEvent
    1426:1427:void onSetLayoutDirection() -> onSetLayoutDirection
    1413:1414:void onSetNewCurrentItem() -> onSetNewCurrentItem
    1408:1409:void onSetOrientation() -> onSetOrientation
    1418:1422:void onSetUserInputEnabled() -> onSetUserInputEnabled
    1468:1471:void setCurrentItemFromAccessibilityCommand(int) -> setCurrentItemFromAccessibilityCommand
    1478:1534:void updatePageAccessibilityActions() -> updatePageAccessibilityActions
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1330:1330:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1334:1336:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1341:1341:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1345:1347:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3 -> androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    1359:1359:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1362:1363:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl -> androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl:
    1044:1045:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1054:1054:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl -> androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl:
    967:969:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    974:977:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    982:986:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    996:996:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    991:991:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.viewpager2.widget.ViewPager2$SavedState -> androidx.viewpager2.widget.ViewPager2$SavedState:
    412:412:void <clinit>() -> <clinit>
    385:387:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    390:392:void <init>(android.os.Parcel) -> <init>
    395:396:void <init>(android.os.Parcelable) -> <init>
    399:402:void readValues(android.os.Parcel,java.lang.ClassLoader) -> readValues
    406:410:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager2.widget.ViewPager2$SavedState$1 -> androidx.viewpager2.widget.ViewPager2$SavedState$1:
# {"id":"sourceFile","fileName":"ViewPager2.java"}
    412:412:void <init>() -> <init>
    412:412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    415:415:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    422:422:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object[] newArray(int) -> newArray
    427:427:androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int) -> newArray
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition -> androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition:
    1062:1065:void <init>(int,androidx.recyclerview.widget.RecyclerView) -> <init>
    1069:1070:void run() -> run
com.google.android.gms.ads.identifier.AdvertisingIdClient -> com.google.android.gms.ads.identifier.AdvertisingIdClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:1:void <init>(android.content.Context) -> <init>
    2:3:void <init>(android.content.Context,long,boolean,boolean) -> <init>
    1:2:void finalize() -> finalize
    1:10:com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context) -> getAdvertisingIdInfo
    1:15:com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo() -> getInfo
    1:18:boolean getIsAdIdFakeForDebugLogging(android.content.Context) -> getIsAdIdFakeForDebugLogging
    1:1:void start() -> start
    1:6:void zza() -> zza
    1:21:void zzb(boolean) -> zzb
    1:10:boolean zzc(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable) -> zzc
    1:5:void zzd() -> zzd
com.google.android.gms.ads.identifier.AdvertisingIdClient$Info -> com.google.android.gms.ads.identifier.AdvertisingIdClient$Info:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:1:java.lang.String toString() -> toString
com.google.android.gms.ads.identifier.zza -> com.google.android.gms.ads.identifier.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:1:void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,java.util.Map) -> <init>
    1:5:void run() -> run
com.google.android.gms.ads.identifier.zzb -> com.google.android.gms.ads.identifier.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:4:void <init>(com.google.android.gms.ads.identifier.AdvertisingIdClient,long) -> <init>
    1:3:void run() -> run
    1:2:void zza() -> zza
com.google.android.gms.ads.identifier.zzc -> com.google.android.gms.ads.identifier.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:12:void zza(java.lang.String) -> zza
com.google.android.gms.auth.api.signin.GoogleSignInAccount -> com.google.android.gms.auth.api.signin.GoogleSignInAccount:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,long,java.lang.String,java.util.List,java.lang.String,java.lang.String) -> <init>
    1:4:boolean equals(java.lang.Object) -> equals
    1:2:java.util.Set getRequestedScopes() -> getRequestedScopes
    1:2:int hashCode() -> hashCode
    1:22:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:20:com.google.android.gms.auth.api.signin.GoogleSignInAccount zaa(java.lang.String) -> zaa
    1:3:com.google.android.gms.auth.api.signin.GoogleSignInAccount zab(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.Long,java.lang.String,java.util.Set) -> zab
com.google.android.gms.auth.api.signin.internal.Storage -> com.google.android.gms.auth.api.signin.internal.Storage:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(android.content.Context) -> <init>
    1:5:com.google.android.gms.auth.api.signin.internal.Storage getInstance(android.content.Context) -> getInstance
    1:4:com.google.android.gms.auth.api.signin.GoogleSignInAccount getSavedDefaultGoogleSignInAccount() -> getSavedDefaultGoogleSignInAccount
    1:4:java.lang.String zab(java.lang.String) -> zab
    1:1:java.lang.String zae(java.lang.String,java.lang.String) -> zae
com.google.android.gms.auth.api.signin.zab -> com.google.android.gms.auth.api.signin.zab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.BlockingServiceConnection -> com.google.android.gms.common.BlockingServiceConnection:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    1:4:android.os.IBinder getServiceWithTimeout(long,java.util.concurrent.TimeUnit) -> getServiceWithTimeout
    1:1:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.google.android.gms.common.ConnectionResult -> com.google.android.gms.common.ConnectionResult:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(int) -> <init>
    2:2:void <init>(int,android.app.PendingIntent) -> <init>
    3:3:void <init>(int,android.app.PendingIntent,java.lang.String) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:2:void startResolutionForResult(android.app.Activity,int) -> startResolutionForResult
    1:5:java.lang.String toString() -> toString
    1:6:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:1:java.lang.String zza(int) -> zza
com.google.android.gms.common.ErrorDialogFragment -> com.google.android.gms.common.ErrorDialogFragment:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>() -> <init>
    2:5:com.google.android.gms.common.ErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener) -> newInstance
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
    1:2:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    1:1:void show(android.app.FragmentManager,java.lang.String) -> show
com.google.android.gms.common.Feature -> com.google.android.gms.common.Feature:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:4:java.lang.String toString() -> toString
    1:7:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.GoogleApiAvailability -> com.google.android.gms.common.GoogleApiAvailability:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String) -> getErrorResolutionIntent
    1:1:android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int) -> getErrorResolutionPendingIntent
    2:4:android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,com.google.android.gms.common.ConnectionResult) -> getErrorResolutionPendingIntent
    1:1:java.lang.String getErrorString(int) -> getErrorString
    1:1:int isGooglePlayServicesAvailable(android.content.Context) -> isGooglePlayServicesAvailable
    2:2:int isGooglePlayServicesAvailable(android.content.Context,int) -> isGooglePlayServicesAvailable
    1:1:boolean isUserResolvableError(int) -> isUserResolvableError
    1:2:void showErrorNotification(android.content.Context,int) -> showErrorNotification
    1:3:boolean zaa(android.app.Activity,com.google.android.gms.common.api.internal.LifecycleFragment,int,int,android.content.DialogInterface$OnCancelListener) -> zaa
    1:41:void zab(android.content.Context,int,java.lang.String,android.app.PendingIntent) -> zab
    1:5:boolean zac(android.content.Context,com.google.android.gms.common.ConnectionResult,int) -> zac
    1:10:android.app.Dialog zad(android.app.Activity,android.content.DialogInterface$OnCancelListener) -> zad
    1:8:com.google.android.gms.common.api.internal.zabr zae(android.content.Context,com.google.android.gms.common.api.internal.zabq) -> zae
    1:16:android.app.Dialog zaf(android.content.Context,int,com.google.android.gms.common.internal.zag,android.content.DialogInterface$OnCancelListener) -> zaf
    1:8:void zag(android.app.Activity,android.app.Dialog,java.lang.String,android.content.DialogInterface$OnCancelListener) -> zag
    1:2:void zah(android.content.Context) -> zah
com.google.android.gms.common.GoogleApiAvailabilityLight -> com.google.android.gms.common.GoogleApiAvailabilityLight:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:int getApkVersion(android.content.Context) -> getApkVersion
    2:18:android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String) -> getErrorResolutionIntent
    1:1:android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int) -> getErrorResolutionPendingIntent
    2:3:android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int,java.lang.String) -> getErrorResolutionPendingIntent
    1:1:java.lang.String getErrorString(int) -> getErrorString
    1:1:int isGooglePlayServicesAvailable(android.content.Context) -> isGooglePlayServicesAvailable
    2:3:int isGooglePlayServicesAvailable(android.content.Context,int) -> isGooglePlayServicesAvailable
    1:1:boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String) -> isUninstalledAppPossiblyUpdating
    1:1:boolean isUserResolvableError(int) -> isUserResolvableError
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException -> com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(int) -> <init>
com.google.android.gms.common.GooglePlayServicesManifestException -> com.google.android.gms.common.GooglePlayServicesManifestException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(int,java.lang.String) -> <init>
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException -> com.google.android.gms.common.GooglePlayServicesMissingManifestValueException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.GooglePlayServicesNotAvailableException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(int) -> <init>
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.GooglePlayServicesUtil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:android.content.res.Resources getRemoteResource(android.content.Context) -> getRemoteResource
com.google.android.gms.common.GooglePlayServicesUtilLight -> com.google.android.gms.common.GooglePlayServicesUtilLight:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
    1:3:int getApkVersion(android.content.Context) -> getApkVersion
    1:1:java.lang.String getErrorString(int) -> getErrorString
    1:2:android.content.res.Resources getRemoteResource(android.content.Context) -> getRemoteResource
    1:8:boolean honorsDebugCertificates(android.content.Context) -> honorsDebugCertificates
    2:32:int isGooglePlayServicesAvailable(android.content.Context,int) -> isGooglePlayServicesAvailable
    1:1:boolean isPlayServicesPossiblyUpdating(android.content.Context,int) -> isPlayServicesPossiblyUpdating
    1:3:boolean isRestrictedUserProfile(android.content.Context) -> isRestrictedUserProfile
    1:1:boolean uidHasPackageName(android.content.Context,int,java.lang.String) -> uidHasPackageName
    1:8:boolean zza(android.content.Context,java.lang.String) -> zza
com.google.android.gms.common.GoogleSignatureVerifier -> com.google.android.gms.common.GoogleSignatureVerifier:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.content.Context) -> <init>
    1:4:com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context) -> getInstance
    1:4:boolean isGooglePublicSignedPackage(android.content.pm.PackageInfo) -> isGooglePublicSignedPackage
    1:5:boolean isUidGoogleSigned(int) -> isUidGoogleSigned
    1:7:com.google.android.gms.common.zzi zza(android.content.pm.PackageInfo,com.google.android.gms.common.zzi[]) -> zza
    1:3:boolean zzb(android.content.pm.PackageInfo,boolean) -> zzb
    1:14:com.google.android.gms.common.zzw zzc(java.lang.String,boolean,boolean) -> zzc
com.google.android.gms.common.SupportErrorDialogFragment -> com.google.android.gms.common.SupportErrorDialogFragment:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>() -> <init>
    2:5:com.google.android.gms.common.SupportErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener) -> newInstance
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
    1:2:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    1:1:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
com.google.android.gms.common.annotation.KeepName -> com.google.android.gms.common.annotation.KeepName:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.Api -> com.google.android.gms.common.api.Api:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <init>(java.lang.String,com.google.android.gms.common.api.Api$AbstractClientBuilder,com.google.android.gms.common.api.Api$ClientKey) -> <init>
com.google.android.gms.common.api.Api$AbstractClientBuilder -> com.google.android.gms.common.api.Api$AbstractClientBuilder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> buildClient
    2:2:com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener) -> buildClient
com.google.android.gms.common.api.Api$AnyClient -> com.google.android.gms.common.api.Api$AnyClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.Api$AnyClientKey -> com.google.android.gms.common.api.Api$AnyClientKey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.Api$ApiOptions -> com.google.android.gms.common.api.Api$ApiOptions:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.Api$ApiOptions$NoOptions -> com.google.android.gms.common.api.Api$ApiOptions$NoOptions:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.Api$BaseClientBuilder -> com.google.android.gms.common.api.Api$BaseClientBuilder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:java.util.List getImpliedScopes(java.lang.Object) -> getImpliedScopes
com.google.android.gms.common.api.Api$Client -> com.google.android.gms.common.api.Api$Client:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.Api$ClientKey -> com.google.android.gms.common.api.Api$ClientKey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.ApiException -> com.google.android.gms.common.api.ApiException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:void <init>(com.google.android.gms.common.api.Status) -> <init>
com.google.android.gms.common.api.AvailabilityException -> com.google.android.gms.common.api.AvailabilityException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(androidx.collection.ArrayMap) -> <init>
    1:10:java.lang.String getMessage() -> getMessage
com.google.android.gms.common.api.CommonStatusCodes -> com.google.android.gms.common.api.CommonStatusCodes:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:java.lang.String getStatusCodeString(int) -> getStatusCodeString
com.google.android.gms.common.api.GoogleApi -> com.google.android.gms.common.api.GoogleApi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:15:void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings) -> <init>
    16:17:void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper) -> <init>
    18:18:void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,android.os.Looper,com.google.android.gms.common.api.internal.StatusExceptionMapper) -> <init>
    19:30:void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings) -> <init>
    31:31:void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper) -> <init>
    1:17:com.google.android.gms.common.internal.ClientSettings$Builder createClientSettingsBuilder() -> createClientSettingsBuilder
    1:1:com.google.android.gms.tasks.Task disconnectService() -> disconnectService
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doBestEffortWrite(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> doBestEffortWrite
    2:2:com.google.android.gms.tasks.Task doBestEffortWrite(com.google.android.gms.common.api.internal.TaskApiCall) -> doBestEffortWrite
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doRead(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> doRead
    2:2:com.google.android.gms.tasks.Task doRead(com.google.android.gms.common.api.internal.TaskApiCall) -> doRead
    1:9:com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod) -> doRegisterEventListener
    10:14:com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegistrationMethods) -> doRegisterEventListener
    1:1:com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey) -> doUnregisterEventListener
    2:3:com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int) -> doUnregisterEventListener
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doWrite(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> doWrite
    2:2:com.google.android.gms.tasks.Task doWrite(com.google.android.gms.common.api.internal.TaskApiCall) -> doWrite
    1:1:com.google.android.gms.common.api.internal.ListenerHolder registerListener(java.lang.Object,java.lang.String) -> registerListener
    1:8:com.google.android.gms.common.api.Api$Client zaa(android.os.Looper,com.google.android.gms.common.api.internal.zabl) -> zaa
    1:1:com.google.android.gms.common.api.internal.zaco zac(android.content.Context,android.os.Handler) -> zac
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zad(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> zad
    1:3:com.google.android.gms.tasks.Task zae(int,com.google.android.gms.common.api.internal.TaskApiCall) -> zae
    1:3:java.lang.String zaf(java.lang.Object) -> zaf
com.google.android.gms.common.api.GoogleApi$Settings -> com.google.android.gms.common.api.GoogleApi$Settings:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.common.api.GoogleApi$Settings$Builder -> com.google.android.gms.common.api.GoogleApi$Settings$Builder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:com.google.android.gms.common.api.GoogleApi$Settings build() -> build
    1:1:com.google.android.gms.common.api.GoogleApi$Settings$Builder setLooper(android.os.Looper) -> setLooper
    1:1:com.google.android.gms.common.api.GoogleApi$Settings$Builder setMapper(com.google.android.gms.common.api.internal.StatusExceptionMapper) -> setMapper
com.google.android.gms.common.api.GoogleApiActivity -> com.google.android.gms.common.api.GoogleApiActivity:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:4:android.content.Intent zaa(android.content.Context,android.app.PendingIntent,int,boolean) -> zaa
com.google.android.gms.common.api.GoogleApiClient -> com.google.android.gms.common.api.GoogleApiClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
    1:1:void connect(int) -> connect
    1:6:void dumpAll(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpAll
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> enqueue
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> execute
    1:3:java.util.Set getAllClients() -> getAllClients
    1:1:com.google.android.gms.common.api.Api$Client getClient(com.google.android.gms.common.api.Api$AnyClientKey) -> getClient
    1:1:android.content.Context getContext() -> getContext
    1:1:android.os.Looper getLooper() -> getLooper
    1:1:boolean hasApi(com.google.android.gms.common.api.Api) -> hasApi
    1:1:boolean maybeSignIn(com.google.android.gms.common.api.internal.SignInConnectionListener) -> maybeSignIn
    1:1:void maybeSignOut() -> maybeSignOut
    1:1:com.google.android.gms.common.api.internal.ListenerHolder registerListener(java.lang.Object) -> registerListener
    1:1:void zao(com.google.android.gms.common.api.internal.zacv) -> zao
    1:1:void zap(com.google.android.gms.common.api.internal.zacv) -> zap
com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks -> com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener -> com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.HasApiKey -> com.google.android.gms.common.api.HasApiKey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.PendingResult -> com.google.android.gms.common.api.PendingResult:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener) -> addStatusListener
    1:1:com.google.android.gms.common.api.TransformedResult then(com.google.android.gms.common.api.ResultTransform) -> then
com.google.android.gms.common.api.PendingResult$StatusListener -> com.google.android.gms.common.api.PendingResult$StatusListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.ResolvableApiException -> com.google.android.gms.common.api.ResolvableApiException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.Status) -> <init>
com.google.android.gms.common.api.Result -> com.google.android.gms.common.api.Result:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.ResultCallback -> com.google.android.gms.common.api.ResultCallback:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.ResultCallbacks -> com.google.android.gms.common.api.ResultCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:void onResult(com.google.android.gms.common.api.Result) -> onResult
com.google.android.gms.common.api.ResultTransform -> com.google.android.gms.common.api.ResultTransform:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.api.PendingResult createFailedResult(com.google.android.gms.common.api.Status) -> createFailedResult
com.google.android.gms.common.api.Scope -> com.google.android.gms.common.api.Scope:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(int,java.lang.String) -> <init>
    2:2:void <init>(java.lang.String) -> <init>
    1:2:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:4:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.api.Status -> com.google.android.gms.common.api.Status:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:7:void <clinit>() -> <clinit>
    1:1:void <init>(int) -> <init>
    2:2:void <init>(int,int,java.lang.String,android.app.PendingIntent) -> <init>
    3:3:void <init>(int,java.lang.String) -> <init>
    4:4:void <init>(int,java.lang.String,android.app.PendingIntent) -> <init>
    5:5:void <init>(com.google.android.gms.common.ConnectionResult,java.lang.String) -> <init>
    6:7:void <init>(com.google.android.gms.common.ConnectionResult,java.lang.String,int) -> <init>
    1:6:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:2:void startResolutionForResult(android.app.Activity,int) -> startResolutionForResult
    1:4:java.lang.String toString() -> toString
    1:7:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:1:java.lang.String zza() -> zza
com.google.android.gms.common.api.TransformedResult -> com.google.android.gms.common.api.TransformedResult:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.UnsupportedApiCallException -> com.google.android.gms.common.api.UnsupportedApiCallException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.Feature) -> <init>
    1:1:java.lang.String getMessage() -> getMessage
com.google.android.gms.common.api.internal.ApiExceptionMapper -> com.google.android.gms.common.api.internal.ApiExceptionMapper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:java.lang.Exception getException(com.google.android.gms.common.api.Status) -> getException
com.google.android.gms.common.api.internal.ApiKey -> com.google.android.gms.common.api.internal.ApiKey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:com.google.android.gms.common.api.internal.ApiKey zaa(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,java.lang.String) -> zaa
    1:1:java.lang.String zab() -> zab
com.google.android.gms.common.api.internal.BackgroundDetector -> com.google.android.gms.common.api.internal.BackgroundDetector:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:3:void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener) -> addListener
    1:5:void initialize(android.app.Application) -> initialize
    1:1:boolean isInBackground() -> isInBackground
    1:3:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    1:3:void onActivityResumed(android.app.Activity) -> onActivityResumed
    1:3:void onTrimMemory(int) -> onTrimMemory
    1:6:boolean readCurrentStateIfPossible(boolean) -> readCurrentStateIfPossible
    1:4:void zza(boolean) -> zza
com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener -> com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl -> com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.BasePendingResult -> com.google.android.gms.common.api.internal.BasePendingResult:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.common.api.internal.ConnectionCallbacks -> com.google.android.gms.common.api.internal.ConnectionCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.GoogleApiManager -> com.google.android.gms.common.api.internal.GoogleApiManager:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
    1:9:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.GoogleApiAvailability) -> <init>
    1:85:boolean handleMessage(android.os.Message) -> handleMessage
    1:7:com.google.android.gms.common.api.internal.zabl zaH(com.google.android.gms.common.api.GoogleApi) -> zaH
    1:2:void zaI(com.google.android.gms.tasks.TaskCompletionSource,int,com.google.android.gms.common.api.GoogleApi) -> zaI
    1:2:com.google.android.gms.common.api.Status zaJ(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult) -> zaJ
    1:2:void zaK() -> zaK
    1:1:com.google.android.gms.common.internal.TelemetryLoggingClient zaL() -> zaL
    1:7:com.google.android.gms.common.api.internal.GoogleApiManager zaa(android.content.Context) -> zaa
    1:1:int zac() -> zac
    1:1:void zad(com.google.android.gms.common.api.GoogleApi) -> zad
    1:4:void zae(com.google.android.gms.common.api.internal.zaab) -> zae
    1:3:void zaf(com.google.android.gms.common.api.internal.zaab) -> zaf
    1:1:com.google.android.gms.common.api.internal.zabl zag(com.google.android.gms.common.api.internal.ApiKey) -> zag
    1:1:void zai() -> zai
    1:3:com.google.android.gms.tasks.Task zaj(com.google.android.gms.common.api.GoogleApi) -> zaj
    1:5:void zal(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper) -> zal
    1:3:boolean zam() -> zam
    1:7:com.google.android.gms.tasks.Task zan(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod,java.lang.Runnable) -> zan
    1:7:com.google.android.gms.tasks.Task zao(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,int) -> zao
    1:1:boolean zap(com.google.android.gms.common.ConnectionResult,int) -> zap
    1:3:void zaq(com.google.android.gms.common.ConnectionResult,int) -> zaq
    1:2:void zar(com.google.android.gms.common.internal.MethodInvocation,int,long,int) -> zar
com.google.android.gms.common.api.internal.LifecycleActivity -> com.google.android.gms.common.api.internal.LifecycleActivity:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.app.Activity) -> <init>
    1:1:androidx.fragment.app.FragmentActivity asFragmentActivity() -> asFragmentActivity
    1:1:boolean isSupport() -> isSupport
    1:1:boolean zza() -> zza
com.google.android.gms.common.api.internal.LifecycleCallback -> com.google.android.gms.common.api.internal.LifecycleCallback:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:android.app.Activity getActivity() -> getActivity
    1:1:com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity) -> getChimeraLifecycleFragmentImpl
    1:1:com.google.android.gms.common.api.internal.LifecycleFragment getFragment(android.app.Activity) -> getFragment
    3:7:com.google.android.gms.common.api.internal.LifecycleFragment getFragment(com.google.android.gms.common.api.internal.LifecycleActivity) -> getFragment
com.google.android.gms.common.api.internal.LifecycleFragment -> com.google.android.gms.common.api.internal.LifecycleFragment:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.internal.ListenerHolder -> com.google.android.gms.common.api.internal.ListenerHolder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void <init>(android.os.Looper,java.lang.Object,java.lang.String) -> <init>
    1:3:void notifyListener(com.google.android.gms.common.api.internal.ListenerHolder$Notifier) -> notifyListener
    1:4:void notifyListenerInternal(com.google.android.gms.common.api.internal.ListenerHolder$Notifier) -> notifyListenerInternal
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey -> com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
com.google.android.gms.common.api.internal.ListenerHolder$Notifier -> com.google.android.gms.common.api.internal.ListenerHolder$Notifier:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.ListenerHolders -> com.google.android.gms.common.api.internal.ListenerHolders:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:4:com.google.android.gms.common.api.internal.ListenerHolder createListenerHolder(java.lang.Object,android.os.Looper,java.lang.String) -> createListenerHolder
com.google.android.gms.common.api.internal.OnConnectionFailedListener -> com.google.android.gms.common.api.internal.OnConnectionFailedListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.RegisterListenerMethod -> com.google.android.gms.common.api.internal.RegisterListenerMethod:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.ListenerHolder) -> <init>
    2:2:void <init>(com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.Feature[],boolean) -> <init>
    1:1:void clearListener() -> clearListener
    1:1:com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey() -> getListenerKey
com.google.android.gms.common.api.internal.RegistrationMethods -> com.google.android.gms.common.api.internal.RegistrationMethods:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.api.internal.RegistrationMethods$Builder builder() -> builder
com.google.android.gms.common.api.internal.RegistrationMethods$Builder -> com.google.android.gms.common.api.internal.RegistrationMethods$Builder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:5:com.google.android.gms.common.api.internal.RegistrationMethods build() -> build
    1:1:com.google.android.gms.common.api.internal.RegistrationMethods$Builder register(com.google.android.gms.common.util.BiConsumer) -> register
    1:1:com.google.android.gms.common.api.internal.RegistrationMethods$Builder unregister(com.google.android.gms.common.util.BiConsumer) -> unregister
com.google.android.gms.common.api.internal.RemoteCall -> com.google.android.gms.common.api.internal.RemoteCall:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.SignInConnectionListener -> com.google.android.gms.common.api.internal.SignInConnectionListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.StatusExceptionMapper -> com.google.android.gms.common.api.internal.StatusExceptionMapper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.internal.TaskApiCall -> com.google.android.gms.common.api.internal.TaskApiCall:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.api.internal.TaskApiCall$Builder builder() -> builder
com.google.android.gms.common.api.internal.TaskApiCall$Builder -> com.google.android.gms.common.api.internal.TaskApiCall$Builder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:com.google.android.gms.common.api.internal.TaskApiCall build() -> build
    1:1:com.google.android.gms.common.api.internal.TaskApiCall$Builder execute(com.google.android.gms.common.util.BiConsumer) -> execute
com.google.android.gms.common.api.internal.TaskUtil -> com.google.android.gms.common.api.internal.TaskUtil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    2:4:void setResultOrApiException(com.google.android.gms.common.api.Status,java.lang.Object,com.google.android.gms.tasks.TaskCompletionSource) -> setResultOrApiException
com.google.android.gms.common.api.internal.UnregisterListenerMethod -> com.google.android.gms.common.api.internal.UnregisterListenerMethod:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zaaa -> com.google.android.gms.common.api.internal.zaaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:4:void <init>() -> <init>
    1:3:void zab(com.google.android.gms.tasks.TaskCompletionSource,boolean) -> zab
    1:1:boolean zac() -> zac
    1:1:void zad() -> zad
    1:7:void zae(int,java.lang.String) -> zae
    1:12:void zah(boolean,com.google.android.gms.common.api.Status) -> zah
com.google.android.gms.common.api.internal.zaab -> com.google.android.gms.common.api.internal.zaab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void <init>(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.GoogleApiAvailability) -> <init>
    1:2:void onResume() -> onResume
    1:2:void onStart() -> onStart
    1:2:void onStop() -> onStop
    1:6:void zaa(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.ApiKey) -> zaa
    1:2:void zac() -> zac
    1:1:void zad(com.google.android.gms.common.ConnectionResult,int) -> zad
    1:1:void zae() -> zae
com.google.android.gms.common.api.internal.zaac -> com.google.android.gms.common.api.internal.zaac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.ApiKey) -> <init>
com.google.android.gms.common.api.internal.zaad -> com.google.android.gms.common.api.internal.zaad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.ConnectionResult blockingConnect() -> blockingConnect
    2:2:com.google.android.gms.common.ConnectionResult blockingConnect(long,java.util.concurrent.TimeUnit) -> blockingConnect
    1:1:com.google.android.gms.common.api.PendingResult clearDefaultAccountAndReconnect() -> clearDefaultAccountAndReconnect
    1:1:void connect() -> connect
    1:1:void disconnect() -> disconnect
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1:1:com.google.android.gms.common.ConnectionResult getConnectionResult(com.google.android.gms.common.api.Api) -> getConnectionResult
    1:1:boolean hasConnectedApi(com.google.android.gms.common.api.Api) -> hasConnectedApi
    1:1:boolean isConnected() -> isConnected
    1:1:boolean isConnecting() -> isConnecting
    1:1:boolean isConnectionCallbacksRegistered(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    1:1:boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    1:1:void reconnect() -> reconnect
    1:1:void registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks) -> registerConnectionCallbacks
    1:1:void registerConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    1:1:void stopAutoManage(androidx.fragment.app.FragmentActivity) -> stopAutoManage
    1:1:void unregisterConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    1:1:void unregisterConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
com.google.android.gms.common.api.internal.zabf -> com.google.android.gms.common.api.internal.zabf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zabg -> com.google.android.gms.common.api.internal.zabg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void onBackgroundStateChanged(boolean) -> onBackgroundStateChanged
com.google.android.gms.common.api.internal.zabh -> com.google.android.gms.common.api.internal.zabh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void run() -> run
com.google.android.gms.common.api.internal.zabi -> com.google.android.gms.common.api.internal.zabi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void run() -> run
com.google.android.gms.common.api.internal.zabj -> com.google.android.gms.common.api.internal.zabj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void run() -> run
com.google.android.gms.common.api.internal.zabk -> com.google.android.gms.common.api.internal.zabk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void onSignOutComplete() -> onSignOutComplete
com.google.android.gms.common.api.internal.zabl -> com.google.android.gms.common.api.internal.zabl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:10:void <init>(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.GoogleApi) -> <init>
    1:3:void onConnected(android.os.Bundle) -> onConnected
    1:1:void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    1:3:void onConnectionSuspended(int) -> onConnectionSuspended
    1:14:void zaB() -> zaB
    1:10:void zaC(int) -> zaC
    1:6:boolean zaD(com.google.android.gms.common.ConnectionResult) -> zaD
    1:4:void zaE() -> zaE
    1:26:boolean zaF(com.google.android.gms.common.api.internal.zai) -> zaF
    1:7:void zaG(com.google.android.gms.common.api.internal.zai) -> zaG
    1:9:void zaH(com.google.android.gms.common.api.Status,java.lang.Exception,boolean) -> zaH
    1:2:void zaI(com.google.android.gms.common.api.Status) -> zaI
    1:2:void zaJ() -> zaJ
    1:3:void zaK() -> zaK
    1:5:boolean zaL(boolean) -> zaL
    1:5:void zaM(com.google.android.gms.common.ConnectionResult) -> zaM
    0:7:com.google.android.gms.common.Feature zaN(com.google.android.gms.common.Feature[]) -> zaN
    1:3:void zab(com.google.android.gms.common.ConnectionResult) -> zab
    1:28:void zac(com.google.android.gms.common.ConnectionResult,java.lang.Exception) -> zac
    1:9:void zad(com.google.android.gms.common.api.internal.zai) -> zad
    1:8:void zae() -> zae
    1:1:void zah() -> zah
    1:1:com.google.android.gms.common.ConnectionResult zai() -> zai
    1:2:void zaj() -> zaj
    1:7:void zak() -> zak
    1:1:boolean zal() -> zal
    1:15:void zam() -> zam
    1:2:void zan(com.google.android.gms.common.api.internal.zal) -> zan
    1:1:boolean zao() -> zao
    1:1:boolean zap() -> zap
com.google.android.gms.common.api.internal.zabm -> com.google.android.gms.common.api.internal.zabm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:4:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.google.android.gms.common.api.internal.zabn -> com.google.android.gms.common.api.internal.zabn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:12:void run() -> run
com.google.android.gms.common.api.internal.zabo -> com.google.android.gms.common.api.internal.zabo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void onReportServiceBinding(com.google.android.gms.common.ConnectionResult) -> onReportServiceBinding
    1:2:void zaa(com.google.android.gms.common.ConnectionResult) -> zaa
    0:3:void zab(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set) -> zab
    1:1:void zag() -> zag
com.google.android.gms.common.api.internal.zabp -> com.google.android.gms.common.api.internal.zabp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.GoogleApi) -> <init>
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> enqueue
    1:1:com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl) -> execute
    1:1:android.content.Context getContext() -> getContext
    1:1:android.os.Looper getLooper() -> getLooper
com.google.android.gms.common.api.internal.zabq -> com.google.android.gms.common.api.internal.zabq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zabr -> com.google.android.gms.common.api.internal.zabr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.zabq) -> <init>
    1:5:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    1:1:void zab() -> zab
com.google.android.gms.common.api.internal.zabv -> com.google.android.gms.common.api.internal.zabv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.ListenerHolder,android.os.Looper) -> <init>
    1:3:void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.common.api.internal.zabx -> com.google.android.gms.common.api.internal.zabx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:27:void onComplete(com.google.android.gms.tasks.Task) -> onComplete
    1:12:com.google.android.gms.common.api.internal.zabx zaa(com.google.android.gms.common.api.internal.GoogleApiManager,int,com.google.android.gms.common.api.internal.ApiKey) -> zaa
    1:7:com.google.android.gms.common.internal.ConnectionTelemetryConfiguration zab(com.google.android.gms.common.api.internal.zabl,com.google.android.gms.common.internal.BaseGmsClient,int) -> zab
com.google.android.gms.common.api.internal.zaby -> com.google.android.gms.common.api.internal.zaby:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zac -> com.google.android.gms.common.api.internal.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int) -> <init>
com.google.android.gms.common.api.internal.zacb -> com.google.android.gms.common.api.internal.zacb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zacc -> com.google.android.gms.common.api.internal.zacc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zacd -> com.google.android.gms.common.api.internal.zacd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zace -> com.google.android.gms.common.api.internal.zace:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zacf -> com.google.android.gms.common.api.internal.zacf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void accept(java.lang.Object,java.lang.Object) -> accept
com.google.android.gms.common.api.internal.zacg -> com.google.android.gms.common.api.internal.zacg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zach -> com.google.android.gms.common.api.internal.zach:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.RegistrationMethods$Builder,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.common.Feature[],boolean,int) -> <init>
    1:1:void registerListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource) -> registerListener
com.google.android.gms.common.api.internal.zaci -> com.google.android.gms.common.api.internal.zaci:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.RegistrationMethods$Builder,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey) -> <init>
    1:1:void unregisterListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource) -> unregisterListener
com.google.android.gms.common.api.internal.zacj -> com.google.android.gms.common.api.internal.zacj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
com.google.android.gms.common.api.internal.zack -> com.google.android.gms.common.api.internal.zack:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <init>(com.google.android.gms.common.api.Status) -> <init>
    1:1:void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener) -> addStatusListener
    1:1:com.google.android.gms.common.api.Result await() -> await
    2:2:com.google.android.gms.common.api.Result await(long,java.util.concurrent.TimeUnit) -> await
    1:1:void cancel() -> cancel
    1:1:boolean isCanceled() -> isCanceled
    1:1:void setResultCallback(com.google.android.gms.common.api.ResultCallback) -> setResultCallback
    2:2:void setResultCallback(com.google.android.gms.common.api.ResultCallback,long,java.util.concurrent.TimeUnit) -> setResultCallback
    1:1:com.google.android.gms.common.api.TransformedResult then(com.google.android.gms.common.api.ResultTransform) -> then
com.google.android.gms.common.api.internal.zacl -> com.google.android.gms.common.api.internal.zacl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void run() -> run
com.google.android.gms.common.api.internal.zacm -> com.google.android.gms.common.api.internal.zacm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void run() -> run
com.google.android.gms.common.api.internal.zacn -> com.google.android.gms.common.api.internal.zacn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zaco -> com.google.android.gms.common.api.internal.zaco:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.ClientSettings) -> <init>
    1:1:void onConnected(android.os.Bundle) -> onConnected
    1:1:void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    1:1:void onConnectionSuspended(int) -> onConnectionSuspended
    1:1:void zab(com.google.android.gms.signin.internal.zak) -> zab
    1:8:void zac(com.google.android.gms.common.api.internal.zacn) -> zac
    1:1:void zad() -> zad
com.google.android.gms.common.api.internal.zacp -> com.google.android.gms.common.api.internal.zacp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zacq -> com.google.android.gms.common.api.internal.zacq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void accept(java.lang.Object,java.lang.Object) -> accept
com.google.android.gms.common.api.internal.zacr -> com.google.android.gms.common.api.internal.zacr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.TaskApiCall$Builder,com.google.android.gms.common.Feature[],boolean,int) -> <init>
    1:1:void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource) -> doExecute
com.google.android.gms.common.api.internal.zact -> com.google.android.gms.common.api.internal.zact:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:11:void run() -> run
com.google.android.gms.common.api.internal.zacu -> com.google.android.gms.common.api.internal.zacu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.zacv,android.os.Looper) -> <init>
    1:13:void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.common.api.internal.zacv -> com.google.android.gms.common.api.internal.zacv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void <init>(java.lang.ref.WeakReference) -> <init>
    0:4:void andFinally(com.google.android.gms.common.api.ResultCallbacks) -> andFinally
    1:8:void onResult(com.google.android.gms.common.api.Result) -> onResult
    0:6:com.google.android.gms.common.api.TransformedResult then(com.google.android.gms.common.api.ResultTransform) -> then
    1:2:void zaa(com.google.android.gms.common.api.PendingResult) -> zaa
    0:4:void zaj() -> zaj
    1:2:void zak(com.google.android.gms.common.api.Status) -> zak
    1:6:void zal(com.google.android.gms.common.api.Status) -> zal
    1:1:boolean zam() -> zam
    1:2:void zan(com.google.android.gms.common.api.Result) -> zan
com.google.android.gms.common.api.internal.zad -> com.google.android.gms.common.api.internal.zad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    1:1:void zac(com.google.android.gms.common.api.Status) -> zac
    1:1:void zad(java.lang.Exception) -> zad
    1:5:void zaf(com.google.android.gms.common.api.internal.zabl) -> zaf
com.google.android.gms.common.api.internal.zaf -> com.google.android.gms.common.api.internal.zaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.zacc,com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    1:1:com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.zabl) -> zaa
    1:1:boolean zab(com.google.android.gms.common.api.internal.zabl) -> zab
    1:3:void zag(com.google.android.gms.common.api.internal.zabl) -> zag
com.google.android.gms.common.api.internal.zag -> com.google.android.gms.common.api.internal.zag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void <init>(int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper) -> <init>
    1:1:com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.zabl) -> zaa
    1:1:boolean zab(com.google.android.gms.common.api.internal.zabl) -> zab
    1:1:void zac(com.google.android.gms.common.api.Status) -> zac
    1:1:void zad(java.lang.Exception) -> zad
    1:1:void zae(com.google.android.gms.common.api.internal.zaaa,boolean) -> zae
    1:4:void zaf(com.google.android.gms.common.api.internal.zabl) -> zaf
com.google.android.gms.common.api.internal.zah -> com.google.android.gms.common.api.internal.zah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    1:2:com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.zabl) -> zaa
    1:2:boolean zab(com.google.android.gms.common.api.internal.zabl) -> zab
    1:4:void zag(com.google.android.gms.common.api.internal.zabl) -> zag
com.google.android.gms.common.api.internal.zai -> com.google.android.gms.common.api.internal.zai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zal -> com.google.android.gms.common.api.internal.zal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:6:void <init>(java.lang.Iterable) -> <init>
    1:1:java.util.Set zaa() -> zaa
    1:1:com.google.android.gms.tasks.Task zab() -> zab
    1:6:void zac(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult,java.lang.String) -> zac
com.google.android.gms.common.api.internal.zam -> com.google.android.gms.common.api.internal.zam:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.ConnectionResult,int) -> <init>
com.google.android.gms.common.api.internal.zan -> com.google.android.gms.common.api.internal.zan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void zaa() -> zaa
com.google.android.gms.common.api.internal.zao -> com.google.android.gms.common.api.internal.zao:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:15:void run() -> run
com.google.android.gms.common.api.internal.zap -> com.google.android.gms.common.api.internal.zap:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:void <init>(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.GoogleApiAvailability) -> <init>
    1:9:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:2:void onCancel(android.content.DialogInterface) -> onCancel
    1:7:void onCreate(android.os.Bundle) -> onCreate
    1:6:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1:1:void onStart() -> onStart
    1:1:void onStop() -> onStop
    1:2:void zaa() -> zaa
    1:2:void zab(com.google.android.gms.common.ConnectionResult,int) -> zab
    1:3:void zaf(com.google.android.gms.common.ConnectionResult,int) -> zaf
com.google.android.gms.common.api.internal.zaq -> com.google.android.gms.common.api.internal.zaq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>() -> <init>
com.google.android.gms.common.api.internal.zat -> com.google.android.gms.common.api.internal.zat:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.internal.zaz -> com.google.android.gms.common.api.internal.zaz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void onComplete(com.google.android.gms.tasks.Task) -> onComplete
com.google.android.gms.common.api.internal.zza -> com.google.android.gms.common.api.internal.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:void run() -> run
com.google.android.gms.common.api.internal.zzb -> com.google.android.gms.common.api.internal.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:5:void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback) -> addCallback
    1:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1:1:com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class) -> getCallbackOrNull
    1:1:android.app.Activity getLifecycleActivity() -> getLifecycleActivity
    1:3:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:5:void onCreate(android.os.Bundle) -> onCreate
    1:3:void onDestroy() -> onDestroy
    1:3:void onResume() -> onResume
    1:5:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1:3:void onStart() -> onStart
    1:3:void onStop() -> onStop
    1:8:com.google.android.gms.common.api.internal.zzb zza(android.app.Activity) -> zza
com.google.android.gms.common.api.internal.zzc -> com.google.android.gms.common.api.internal.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:void run() -> run
com.google.android.gms.common.api.internal.zzd -> com.google.android.gms.common.api.internal.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:5:void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback) -> addCallback
    1:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1:1:com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class) -> getCallbackOrNull
    1:3:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:5:void onCreate(android.os.Bundle) -> onCreate
    1:3:void onDestroy() -> onDestroy
    1:3:void onResume() -> onResume
    1:5:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1:3:void onStart() -> onStart
    1:3:void onStop() -> onStop
    1:8:com.google.android.gms.common.api.internal.zzd zza(androidx.fragment.app.FragmentActivity) -> zza
com.google.android.gms.common.api.zaa -> com.google.android.gms.common.api.zaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.zac -> com.google.android.gms.common.api.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.zad -> com.google.android.gms.common.api.zad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.api.zza -> com.google.android.gms.common.api.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.api.zzb -> com.google.android.gms.common.api.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.AccountAccessor -> com.google.android.gms.common.internal.AccountAccessor:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:5:android.accounts.Account getAccountBinderSafe(com.google.android.gms.common.internal.IAccountAccessor) -> getAccountBinderSafe
com.google.android.gms.common.internal.ApiExceptionUtil -> com.google.android.gms.common.internal.ApiExceptionUtil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:com.google.android.gms.common.api.ApiException fromStatus(com.google.android.gms.common.api.Status) -> fromStatus
com.google.android.gms.common.internal.BaseGmsClient -> com.google.android.gms.common.internal.BaseGmsClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    8:12:void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String) -> <init>
    13:19:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailabilityLight,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String) -> <init>
    1:4:void checkAvailabilityAndConnect() -> checkAvailabilityAndConnect
    1:2:void checkConnected() -> checkConnected
    1:2:void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks) -> connect
    1:7:void disconnect() -> disconnect
    8:8:void disconnect(java.lang.String) -> disconnect
    1:34:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1:2:java.lang.String getEndpointPackageName() -> getEndpointPackageName
    1:1:android.os.Bundle getGetServiceRequestExtraArgs() -> getGetServiceRequestExtraArgs
    1:22:void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set) -> getRemoteService
    1:1:java.util.Set getScopes() -> getScopes
    1:4:android.os.IInterface getService() -> getService
    1:3:android.os.IBinder getServiceBrokerBinder() -> getServiceBrokerBinder
    1:1:android.content.Intent getSignInIntent() -> getSignInIntent
    1:2:boolean isConnected() -> isConnected
    1:2:boolean isConnecting() -> isConnecting
    1:1:void onConnectedLocked(android.os.IInterface) -> onConnectedLocked
    1:2:void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    1:1:void onConnectionSuspended(int) -> onConnectionSuspended
    1:2:void onPostInitHandler(int,android.os.IBinder,android.os.Bundle,int) -> onPostInitHandler
    1:1:void onUserSignOut(com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks) -> onUserSignOut
    1:3:void triggerConnectionSuspended(int) -> triggerConnectionSuspended
    1:4:void triggerNotAvailable(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks,int,android.app.PendingIntent) -> triggerNotAvailable
    1:1:java.lang.String zza() -> zza
    1:2:void zzb(int,android.os.Bundle,int) -> zzb
    0:41:void zzp(int,android.os.IInterface) -> zzp
com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks -> com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener -> com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks -> com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter -> com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:void onReportServiceBinding(com.google.android.gms.common.ConnectionResult) -> onReportServiceBinding
com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks -> com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.ClientSettings -> com.google.android.gms.common.internal.ClientSettings:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    2:7:void <init>(android.accounts.Account,java.util.Set,java.util.Map,int,android.view.View,java.lang.String,java.lang.String,com.google.android.gms.signin.SignInOptions,boolean) -> <init>
    1:1:android.accounts.Account getAccountOrDefault() -> getAccountOrDefault
com.google.android.gms.common.internal.ClientSettings$Builder -> com.google.android.gms.common.internal.ClientSettings$Builder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.internal.ClientSettings build() -> build
    1:2:com.google.android.gms.common.internal.ClientSettings$Builder zab(java.util.Collection) -> zab
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration -> com.google.android.gms.common.internal.ConnectionTelemetryConfiguration:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:14:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.GetServiceRequest -> com.google.android.gms.common.internal.GetServiceRequest:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.Feature[],com.google.android.gms.common.Feature[],boolean,int,boolean,java.lang.String) -> <init>
    4:4:void <init>(int,java.lang.String) -> <init>
    1:1:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.GmsClient -> com.google.android.gms.common.internal.GmsClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    10:10:void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> <init>
    11:15:void <init>(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener) -> <init>
    0:21:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailability,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener) -> <init>
    1:1:java.util.Set getScopesForConnectionlessNonSignIn() -> getScopesForConnectionlessNonSignIn
    1:4:java.util.Set zaa(java.util.Set) -> zaa
com.google.android.gms.common.internal.GmsClientSupervisor -> com.google.android.gms.common.internal.GmsClientSupervisor:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:com.google.android.gms.common.internal.GmsClientSupervisor getInstance(android.content.Context) -> getInstance
    1:1:void zza(java.lang.String,java.lang.String,int,android.content.ServiceConnection,java.lang.String,boolean) -> zza
com.google.android.gms.common.internal.IAccountAccessor -> com.google.android.gms.common.internal.IAccountAccessor:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.IAccountAccessor$Stub -> com.google.android.gms.common.internal.IAccountAccessor$Stub:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:com.google.android.gms.common.internal.IAccountAccessor asInterface(android.os.IBinder) -> asInterface
com.google.android.gms.common.internal.IGmsCallbacks -> com.google.android.gms.common.internal.IGmsCallbacks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.IGmsServiceBroker -> com.google.android.gms.common.internal.IGmsServiceBroker:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.MethodInvocation -> com.google.android.gms.common.internal.MethodInvocation:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,int,int,long,long,java.lang.String,java.lang.String,int) -> <init>
    1:10:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.Objects -> com.google.android.gms.common.internal.Objects:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:boolean equal(java.lang.Object,java.lang.Object) -> equal
    1:1:int hashCode(java.lang.Object[]) -> hashCode
    1:1:com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.android.gms.common.internal.Objects$ToStringHelper -> com.google.android.gms.common.internal.Objects$ToStringHelper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    1:6:java.lang.String toString() -> toString
com.google.android.gms.common.internal.Preconditions -> com.google.android.gms.common.internal.Preconditions:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    0:1:void checkArgument(boolean) -> checkArgument
    0:2:void checkArgument(boolean,java.lang.Object) -> checkArgument
    1:4:void checkHandlerThread(android.os.Handler) -> checkHandlerThread
    1:2:void checkMainThread(java.lang.String) -> checkMainThread
    1:2:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    3:4:java.lang.String checkNotEmpty(java.lang.String,java.lang.Object) -> checkNotEmpty
    1:1:void checkNotMainThread() -> checkNotMainThread
    2:3:void checkNotMainThread(java.lang.String) -> checkNotMainThread
    0:1:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    0:2:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    0:1:int checkNotZero(int) -> checkNotZero
    0:1:void checkState(boolean) -> checkState
    0:2:void checkState(boolean,java.lang.Object) -> checkState
com.google.android.gms.common.internal.ReflectedParcelable -> com.google.android.gms.common.internal.ReflectedParcelable:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.RootTelemetryConfigManager -> com.google.android.gms.common.internal.RootTelemetryConfigManager:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:void zza(com.google.android.gms.common.internal.RootTelemetryConfiguration) -> zza
com.google.android.gms.common.internal.RootTelemetryConfiguration -> com.google.android.gms.common.internal.RootTelemetryConfiguration:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:12:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.StringResourceValueReader -> com.google.android.gms.common.internal.StringResourceValueReader:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:void <init>(android.content.Context) -> <init>
    1:2:java.lang.String getString(java.lang.String) -> getString
com.google.android.gms.common.internal.TelemetryData -> com.google.android.gms.common.internal.TelemetryData:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,java.util.List) -> <init>
    1:4:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:2:void zac(com.google.android.gms.common.internal.MethodInvocation) -> zac
com.google.android.gms.common.internal.TelemetryLogging -> com.google.android.gms.common.internal.TelemetryLogging:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context) -> getClient
    2:2:com.google.android.gms.common.internal.TelemetryLoggingClient getClient(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions) -> getClient
com.google.android.gms.common.internal.TelemetryLoggingClient -> com.google.android.gms.common.internal.TelemetryLoggingClient:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.TelemetryLoggingOptions -> com.google.android.gms.common.internal.TelemetryLoggingOptions:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:2:android.os.Bundle zaa() -> zaa
com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder -> com.google.android.gms.common.internal.TelemetryLoggingOptions$Builder:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:com.google.android.gms.common.internal.TelemetryLoggingOptions build() -> build
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable -> com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.safeparcel.SafeParcelReader -> com.google.android.gms.common.internal.safeparcel.SafeParcelReader:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:android.os.Bundle createBundle(android.os.Parcel,int) -> createBundle
    1:4:int[] createIntArray(android.os.Parcel,int) -> createIntArray
    1:4:android.os.Parcelable createParcelable(android.os.Parcel,int,android.os.Parcelable$Creator) -> createParcelable
    1:4:java.lang.String createString(android.os.Parcel,int) -> createString
    1:4:java.util.ArrayList createStringList(android.os.Parcel,int) -> createStringList
    1:4:java.lang.Object[] createTypedArray(android.os.Parcel,int,android.os.Parcelable$Creator) -> createTypedArray
    1:4:java.util.ArrayList createTypedList(android.os.Parcel,int,android.os.Parcelable$Creator) -> createTypedList
    1:2:void ensureAtEnd(android.os.Parcel,int) -> ensureAtEnd
    1:2:boolean readBoolean(android.os.Parcel,int) -> readBoolean
    1:3:java.lang.Boolean readBooleanObject(android.os.Parcel,int) -> readBooleanObject
    1:3:java.lang.Double readDoubleObject(android.os.Parcel,int) -> readDoubleObject
    1:3:java.lang.Float readFloatObject(android.os.Parcel,int) -> readFloatObject
    1:1:int readHeader(android.os.Parcel) -> readHeader
    1:4:android.os.IBinder readIBinder(android.os.Parcel,int) -> readIBinder
    1:2:int readInt(android.os.Parcel,int) -> readInt
    1:2:long readLong(android.os.Parcel,int) -> readLong
    1:3:java.lang.Long readLongObject(android.os.Parcel,int) -> readLongObject
    1:1:int readSize(android.os.Parcel,int) -> readSize
    1:2:void skipUnknownField(android.os.Parcel,int) -> skipUnknownField
    1:6:int validateObjectHeader(android.os.Parcel) -> validateObjectHeader
    1:2:void zza(android.os.Parcel,int,int) -> zza
    0:1:void zzb(android.os.Parcel,int,int,int) -> zzb
com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException -> com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(java.lang.String,android.os.Parcel) -> <init>
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter -> com.google.android.gms.common.internal.safeparcel.SafeParcelWriter:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:int beginObjectHeader(android.os.Parcel) -> beginObjectHeader
    1:1:void finishObjectHeader(android.os.Parcel,int) -> finishObjectHeader
    1:2:void writeBoolean(android.os.Parcel,int,boolean) -> writeBoolean
    1:3:void writeBooleanObject(android.os.Parcel,int,java.lang.Boolean,boolean) -> writeBooleanObject
    1:4:void writeBundle(android.os.Parcel,int,android.os.Bundle,boolean) -> writeBundle
    1:3:void writeDoubleObject(android.os.Parcel,int,java.lang.Double,boolean) -> writeDoubleObject
    1:3:void writeFloatObject(android.os.Parcel,int,java.lang.Float,boolean) -> writeFloatObject
    1:4:void writeIBinder(android.os.Parcel,int,android.os.IBinder,boolean) -> writeIBinder
    1:2:void writeInt(android.os.Parcel,int,int) -> writeInt
    1:4:void writeIntArray(android.os.Parcel,int,int[],boolean) -> writeIntArray
    1:2:void writeLong(android.os.Parcel,int,long) -> writeLong
    1:3:void writeLongObject(android.os.Parcel,int,java.lang.Long,boolean) -> writeLongObject
    1:4:void writeParcelable(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> writeParcelable
    1:4:void writeString(android.os.Parcel,int,java.lang.String,boolean) -> writeString
    1:4:void writeStringList(android.os.Parcel,int,java.util.List,boolean) -> writeStringList
    1:7:void writeTypedArray(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> writeTypedArray
    1:8:void writeTypedList(android.os.Parcel,int,java.util.List,boolean) -> writeTypedList
    1:1:void zza(android.os.Parcel,int,int) -> zza
    1:3:int zzb(android.os.Parcel,int) -> zzb
    1:4:void zzc(android.os.Parcel,int) -> zzc
    1:8:void zzd(android.os.Parcel,android.os.Parcelable,int) -> zzd
com.google.android.gms.common.internal.safeparcel.SafeParcelable -> com.google.android.gms.common.internal.safeparcel.SafeParcelable:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer -> com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromBytes(byte[],android.os.Parcelable$Creator) -> deserializeFromBytes
    1:2:com.google.android.gms.common.internal.safeparcel.SafeParcelable deserializeFromIntentExtra(android.content.Intent,java.lang.String,android.os.Parcelable$Creator) -> deserializeFromIntentExtra
com.google.android.gms.common.internal.service.zai -> com.google.android.gms.common.internal.service.zai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:3:void zae(com.google.android.gms.common.internal.TelemetryData) -> zae
com.google.android.gms.common.internal.service.zam -> com.google.android.gms.common.internal.service.zam:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void accept(java.lang.Object,java.lang.Object) -> accept
com.google.android.gms.common.internal.service.zan -> com.google.android.gms.common.internal.service.zan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.service.zao -> com.google.android.gms.common.internal.service.zao:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(android.content.Context,com.google.android.gms.common.internal.TelemetryLoggingOptions) -> <init>
    1:6:com.google.android.gms.tasks.Task log(com.google.android.gms.common.internal.TelemetryData) -> log
com.google.android.gms.common.internal.service.zap -> com.google.android.gms.common.internal.service.zap:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.internal.TelemetryLoggingOptions,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener) -> <init>
    1:1:com.google.android.gms.common.Feature[] getApiFeatures() -> getApiFeatures
    1:1:android.os.Bundle getGetServiceRequestExtraArgs() -> getGetServiceRequestExtraArgs
com.google.android.gms.common.internal.zaab -> com.google.android.gms.common.internal.zaab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zaac -> com.google.android.gms.common.internal.zaac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zab -> com.google.android.gms.common.internal.zab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zac -> com.google.android.gms.common.internal.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:18:java.lang.String zaa(android.content.Context,int) -> zaa
    1:4:java.lang.String zab(android.content.Context,int) -> zab
    1:15:java.lang.String zac(android.content.Context,int) -> zac
    1:3:java.lang.String zad(android.content.Context,int) -> zad
    1:5:java.lang.String zae(android.content.Context,int) -> zae
    1:4:java.lang.String zaf(android.content.Context) -> zaf
    1:2:java.lang.String zag(android.content.Context) -> zag
    1:5:java.lang.String zah(android.content.Context,java.lang.String,java.lang.String) -> zah
    1:18:java.lang.String zai(android.content.Context,java.lang.String) -> zai
com.google.android.gms.common.internal.zaf -> com.google.android.gms.common.internal.zaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void zaa() -> zaa
com.google.android.gms.common.internal.zag -> com.google.android.gms.common.internal.zag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:5:void onClick(android.content.DialogInterface,int) -> onClick
    1:1:com.google.android.gms.common.internal.zag zad(com.google.android.gms.common.api.internal.LifecycleFragment,android.content.Intent,int) -> zad
com.google.android.gms.common.internal.zah -> com.google.android.gms.common.internal.zah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void onConnected(android.os.Bundle) -> onConnected
    1:1:void onConnectionSuspended(int) -> onConnectionSuspended
com.google.android.gms.common.internal.zai -> com.google.android.gms.common.internal.zai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
com.google.android.gms.common.internal.zal -> com.google.android.gms.common.internal.zal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    2:3:void <init>(com.google.android.gms.common.GoogleApiAvailabilityLight) -> <init>
    1:10:int zaa(android.content.Context,com.google.android.gms.common.api.Api$Client) -> zaa
    1:1:int zab(android.content.Context,int) -> zab
    1:1:void zac() -> zac
com.google.android.gms.common.internal.zan -> com.google.android.gms.common.internal.zan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zat -> com.google.android.gms.common.internal.zat:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount) -> <init>
    2:2:void <init>(android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount) -> <init>
    1:6:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.zau -> com.google.android.gms.common.internal.zau:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zav -> com.google.android.gms.common.internal.zav:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,android.os.IBinder,com.google.android.gms.common.ConnectionResult,boolean,boolean) -> <init>
    1:4:boolean equals(java.lang.Object) -> equals
    1:7:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:1:com.google.android.gms.common.internal.IAccountAccessor zaa() -> zaa
com.google.android.gms.common.internal.zaw -> com.google.android.gms.common.internal.zaw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.common.internal.zza -> com.google.android.gms.common.internal.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle) -> <init>
com.google.android.gms.common.internal.zzaa -> com.google.android.gms.common.internal.zzaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    1:12:boolean zza(int,android.os.Parcel,android.os.Parcel,int) -> zza
com.google.android.gms.common.internal.zzab -> com.google.android.gms.common.internal.zzab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:12:void getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest) -> getService
com.google.android.gms.common.internal.zzac -> com.google.android.gms.common.internal.zzac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:6:boolean zze(com.google.android.gms.common.zzs,com.google.android.gms.dynamic.IObjectWrapper) -> zze
    1:5:com.google.android.gms.common.zzq zzf(com.google.android.gms.common.zzn) -> zzf
    1:4:boolean zzg() -> zzg
com.google.android.gms.common.internal.zzad -> com.google.android.gms.common.internal.zzad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:com.google.android.gms.common.internal.zzae zzb(android.os.IBinder) -> zzb
com.google.android.gms.common.internal.zzae -> com.google.android.gms.common.internal.zzae:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzaf -> com.google.android.gms.common.internal.zzaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:int zzb(android.content.Context) -> zzb
    1:10:void zzc(android.content.Context) -> zzc
com.google.android.gms.common.internal.zzag -> com.google.android.gms.common.internal.zzag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzah -> com.google.android.gms.common.internal.zzah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzb -> com.google.android.gms.common.internal.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.BaseGmsClient,android.os.Looper) -> <init>
    1:34:void handleMessage(android.os.Message) -> handleMessage
    1:3:void zza(android.os.Message) -> zza
    1:1:boolean zzb(android.os.Message) -> zzb
com.google.android.gms.common.internal.zzc -> com.google.android.gms.common.internal.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:void zze() -> zze
    1:3:void zzf() -> zzf
    1:1:void zzg() -> zzg
com.google.android.gms.common.internal.zzd -> com.google.android.gms.common.internal.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.BaseGmsClient,int) -> <init>
    1:2:void onPostInitComplete(int,android.os.IBinder,android.os.Bundle) -> onPostInitComplete
    1:1:void zzb(int,android.os.Bundle) -> zzb
    1:4:void zzc(int,android.os.IBinder,com.google.android.gms.common.internal.zzi) -> zzc
com.google.android.gms.common.internal.zze -> com.google.android.gms.common.internal.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:8:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1:4:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.common.internal.zzf -> com.google.android.gms.common.internal.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IBinder,android.os.Bundle) -> <init>
    1:10:boolean zza() -> zza
    1:3:void zzb(com.google.android.gms.common.ConnectionResult) -> zzb
com.google.android.gms.common.internal.zzg -> com.google.android.gms.common.internal.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle) -> <init>
    1:1:boolean zza() -> zza
    1:4:void zzb(com.google.android.gms.common.ConnectionResult) -> zzb
com.google.android.gms.common.internal.zzi -> com.google.android.gms.common.internal.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.internal.zzj -> com.google.android.gms.common.internal.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzk -> com.google.android.gms.common.internal.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzl -> com.google.android.gms.common.internal.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:16:void zza(com.google.android.gms.common.internal.GetServiceRequest,android.os.Parcel,int) -> zza
com.google.android.gms.common.internal.zzm -> com.google.android.gms.common.internal.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:void <clinit>() -> <clinit>
    3:4:void <init>(java.lang.String,java.lang.String,int,boolean) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:2:java.lang.String toString() -> toString
    1:9:android.content.Intent zzd(android.content.Context) -> zzd
com.google.android.gms.common.internal.zzn -> com.google.android.gms.common.internal.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzo -> com.google.android.gms.common.internal.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(com.google.android.gms.common.internal.zzq,com.google.android.gms.common.internal.zzm) -> <init>
    1:4:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1:4:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    1:5:void zza(java.lang.String) -> zza
    1:2:void zzb(java.lang.String) -> zzb
    1:1:void zzc(android.content.ServiceConnection,android.content.ServiceConnection,java.lang.String) -> zzc
    1:1:void zzd(android.content.ServiceConnection,java.lang.String) -> zzd
    1:1:boolean zzg(android.content.ServiceConnection) -> zzg
    1:1:boolean zzh() -> zzh
com.google.android.gms.common.internal.zzp -> com.google.android.gms.common.internal.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:14:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.common.internal.zzq -> com.google.android.gms.common.internal.zzq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:void <init>(android.content.Context) -> <init>
    1:14:boolean zzb(com.google.android.gms.common.internal.zzm,android.content.ServiceConnection,java.lang.String) -> zzb
    1:10:void zzc(com.google.android.gms.common.internal.zzm,android.content.ServiceConnection,java.lang.String) -> zzc
com.google.android.gms.common.internal.zzr -> com.google.android.gms.common.internal.zzr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzs -> com.google.android.gms.common.internal.zzs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
    1:3:android.content.Intent zza(java.lang.String) -> zza
    1:10:android.content.Intent zzb(java.lang.String,java.lang.String) -> zzb
    1:2:android.content.Intent zzc() -> zzc
com.google.android.gms.common.internal.zzt -> com.google.android.gms.common.internal.zzt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.internal.zzu -> com.google.android.gms.common.internal.zzu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:android.accounts.Account zzb() -> zzb
com.google.android.gms.common.internal.zzw -> com.google.android.gms.common.internal.zzw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:com.google.android.gms.dynamic.IObjectWrapper zzd() -> zzd
    1:4:int zze() -> zze
com.google.android.gms.common.internal.zzx -> com.google.android.gms.common.internal.zzx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    1:5:boolean zza(int,android.os.Parcel,android.os.Parcel,int) -> zza
    1:4:com.google.android.gms.common.internal.zzy zzg(android.os.IBinder) -> zzg
com.google.android.gms.common.internal.zzy -> com.google.android.gms.common.internal.zzy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.stats.ConnectionTracker -> com.google.android.gms.common.stats.ConnectionTracker:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    1:2:boolean bindService(android.content.Context,android.content.Intent,android.content.ServiceConnection,int) -> bindService
    1:3:com.google.android.gms.common.stats.ConnectionTracker getInstance() -> getInstance
    1:5:void unbindService(android.content.Context,android.content.ServiceConnection) -> unbindService
    1:1:boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int) -> zza
    1:15:boolean zzb(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int,boolean) -> zzb
    1:1:boolean zzc(android.content.ServiceConnection) -> zzc
    1:1:void zzd(android.content.Context,android.content.ServiceConnection) -> zzd
com.google.android.gms.common.util.AndroidUtilsLight -> com.google.android.gms.common.util.AndroidUtilsLight:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String) -> getPackageCertificateHashBytes
    1:1:java.security.MessageDigest zza(java.lang.String) -> zza
com.google.android.gms.common.util.ArrayUtils -> com.google.android.gms.common.util.ArrayUtils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:9:java.lang.Object[] concat(java.lang.Object[][]) -> concat
    1:1:boolean contains(int[],int) -> contains
    0:2:boolean contains(java.lang.Object[],java.lang.Object) -> contains
com.google.android.gms.common.util.Base64Utils -> com.google.android.gms.common.util.Base64Utils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:java.lang.String encodeUrlSafeNoPadding(byte[]) -> encodeUrlSafeNoPadding
com.google.android.gms.common.util.BiConsumer -> com.google.android.gms.common.util.BiConsumer:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.util.Clock -> com.google.android.gms.common.util.Clock:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.util.CollectionUtils -> com.google.android.gms.common.util.CollectionUtils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:java.util.List listOf() -> listOf
    2:2:java.util.List listOf(java.lang.Object) -> listOf
    3:6:java.util.List listOf(java.lang.Object[]) -> listOf
com.google.android.gms.common.util.CrashUtils -> com.google.android.gms.common.util.CrashUtils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:boolean addDynamiteErrorToDropBox(android.content.Context,java.lang.Throwable) -> addDynamiteErrorToDropBox
com.google.android.gms.common.util.DefaultClock -> com.google.android.gms.common.util.DefaultClock:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:long currentTimeMillis() -> currentTimeMillis
    1:1:long elapsedRealtime() -> elapsedRealtime
    1:1:long nanoTime() -> nanoTime
com.google.android.gms.common.util.DeviceProperties -> com.google.android.gms.common.util.DeviceProperties:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:boolean isAuto(android.content.Context) -> isAuto
    2:3:boolean isAuto(android.content.pm.PackageManager) -> isAuto
    1:2:boolean isUserBuild() -> isUserBuild
    1:1:boolean isWearable(android.content.Context) -> isWearable
    2:4:boolean isWearable(android.content.pm.PackageManager) -> isWearable
    1:2:boolean isWearableWithoutPlayStore(android.content.Context) -> isWearableWithoutPlayStore
    1:3:boolean zza(android.content.Context) -> zza
    1:3:boolean zzb(android.content.Context) -> zzb
com.google.android.gms.common.util.DynamiteApi -> com.google.android.gms.common.util.DynamiteApi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.util.Hex -> com.google.android.gms.common.util.Hex:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:6:java.lang.String bytesToStringLowercase(byte[]) -> bytesToStringLowercase
    2:7:java.lang.String bytesToStringUppercase(byte[],boolean) -> bytesToStringUppercase
com.google.android.gms.common.util.IOUtils -> com.google.android.gms.common.util.IOUtils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    2:2:void closeQuietly(java.io.Closeable) -> closeQuietly
com.google.android.gms.common.util.PlatformVersion -> com.google.android.gms.common.util.PlatformVersion:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.util.ProcessUtils -> com.google.android.gms.common.util.ProcessUtils:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:9:java.lang.String getMyProcessName() -> getMyProcessName
com.google.android.gms.common.util.Strings -> com.google.android.gms.common.util.Strings:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:boolean isEmptyOrWhitespace(java.lang.String) -> isEmptyOrWhitespace
com.google.android.gms.common.util.UidVerifier -> com.google.android.gms.common.util.UidVerifier:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:7:boolean isGooglePlayServicesUid(android.content.Context,int) -> isGooglePlayServicesUid
    1:1:boolean uidHasPackageName(android.content.Context,int,java.lang.String) -> uidHasPackageName
com.google.android.gms.common.util.WorkSourceUtil -> com.google.android.gms.common.util.WorkSourceUtil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:11:void <clinit>() -> <clinit>
    1:7:android.os.WorkSource fromPackage(android.content.Context,java.lang.String) -> fromPackage
    1:3:boolean hasWorkSourcePermission(android.content.Context) -> hasWorkSourcePermission
    1:4:void zza(android.os.WorkSource,int,java.lang.String) -> zza
com.google.android.gms.common.util.concurrent.NumberedThreadFactory -> com.google.android.gms.common.util.concurrent.NumberedThreadFactory:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:void <init>(java.lang.String) -> <init>
    1:2:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.android.gms.common.util.concurrent.zza -> com.google.android.gms.common.util.concurrent.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:void run() -> run
com.google.android.gms.common.util.zza -> com.google.android.gms.common.util.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.util.zzb -> com.google.android.gms.common.util.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:boolean zza() -> zza
com.google.android.gms.common.wrappers.InstantApps -> com.google.android.gms.common.wrappers.InstantApps:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    0:8:boolean isInstantApp(android.content.Context) -> isInstantApp
com.google.android.gms.common.wrappers.PackageManagerWrapper -> com.google.android.gms.common.wrappers.PackageManagerWrapper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:int checkCallingOrSelfPermission(java.lang.String) -> checkCallingOrSelfPermission
    1:1:int checkPermission(java.lang.String,java.lang.String) -> checkPermission
    1:1:android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int) -> getApplicationInfo
    1:2:java.lang.CharSequence getApplicationLabel(java.lang.String) -> getApplicationLabel
    1:1:android.content.pm.PackageInfo getPackageInfo(java.lang.String,int) -> getPackageInfo
    1:4:boolean isCallerInstantApp() -> isCallerInstantApp
    1:5:boolean zza(int,java.lang.String) -> zza
com.google.android.gms.common.wrappers.Wrappers -> com.google.android.gms.common.wrappers.Wrappers:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context) -> packageManager
    0:2:com.google.android.gms.common.wrappers.PackageManagerWrapper zza(android.content.Context) -> zza
com.google.android.gms.common.zac -> com.google.android.gms.common.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <init>(com.google.android.gms.common.GoogleApiAvailability,android.content.Context) -> <init>
    1:5:void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.common.zzb -> com.google.android.gms.common.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzc -> com.google.android.gms.common.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzd -> com.google.android.gms.common.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zze -> com.google.android.gms.common.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(byte[]) -> <init>
    1:1:byte[] zzb() -> zzb
com.google.android.gms.common.zzf -> com.google.android.gms.common.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(byte[]) -> <init>
    1:1:byte[] zzb() -> zzb
com.google.android.gms.common.zzg -> com.google.android.gms.common.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(byte[]) -> <init>
    1:1:byte[] zzb() -> zzb
com.google.android.gms.common.zzh -> com.google.android.gms.common.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(byte[]) -> <init>
    1:1:byte[] zzb() -> zzb
com.google.android.gms.common.zzi -> com.google.android.gms.common.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:void <init>(byte[]) -> <init>
    1:7:boolean equals(java.lang.Object) -> equals
    1:1:com.google.android.gms.dynamic.IObjectWrapper zzd() -> zzd
    1:2:byte[] zzf(java.lang.String) -> zzf
com.google.android.gms.common.zzj -> com.google.android.gms.common.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(byte[]) -> <init>
com.google.android.gms.common.zzk -> com.google.android.gms.common.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(byte[]) -> <init>
    1:5:byte[] zzc() -> zzc
com.google.android.gms.common.zzl -> com.google.android.gms.common.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.common.zzm -> com.google.android.gms.common.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:5:void <clinit>() -> <clinit>
    0:2:void zza(android.content.Context) -> zza
    1:14:com.google.android.gms.common.zzw zzb(java.lang.String,boolean,boolean,boolean) -> zzb
    1:4:com.google.android.gms.common.zzw zzc(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean) -> zzc
    1:6:boolean zzd() -> zzd
    1:7:void zzf() -> zzf
    1:9:com.google.android.gms.common.zzw zzg(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean) -> zzg
com.google.android.gms.common.zzn -> com.google.android.gms.common.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(java.lang.String,boolean,boolean,android.os.IBinder,boolean) -> <init>
    1:8:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.zzo -> com.google.android.gms.common.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzp -> com.google.android.gms.common.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:int zza(int) -> zza
com.google.android.gms.common.zzq -> com.google.android.gms.common.zzq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(boolean,java.lang.String,int) -> <init>
    1:5:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:1:int zzc() -> zzc
com.google.android.gms.common.zzr -> com.google.android.gms.common.zzr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzs -> com.google.android.gms.common.zzs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    0:5:void <init>(java.lang.String,android.os.IBinder,boolean,boolean) -> <init>
    1:7:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.zzt -> com.google.android.gms.common.zzt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzu -> com.google.android.gms.common.zzu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.common.zzv -> com.google.android.gms.common.zzv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:java.lang.String zza() -> zza
com.google.android.gms.common.zzw -> com.google.android.gms.common.zzw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:com.google.android.gms.common.zzw zzc(java.util.concurrent.Callable) -> zzc
    1:1:com.google.android.gms.common.zzw zzd(java.lang.String) -> zzd
    1:1:com.google.android.gms.common.zzw zze(java.lang.String,java.lang.Throwable) -> zze
    1:3:void zzf() -> zzf
    0:4:java.lang.String zzg(java.lang.String,com.google.android.gms.common.zzi,boolean,boolean) -> zzg
com.google.android.gms.dynamic.IObjectWrapper -> com.google.android.gms.dynamic.IObjectWrapper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamic.IObjectWrapper$Stub -> com.google.android.gms.dynamic.IObjectWrapper$Stub:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    1:4:com.google.android.gms.dynamic.IObjectWrapper asInterface(android.os.IBinder) -> asInterface
com.google.android.gms.dynamic.ObjectWrapper -> com.google.android.gms.dynamic.ObjectWrapper:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(java.lang.Object) -> <init>
    1:14:java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper) -> unwrap
    1:1:com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object) -> wrap
com.google.android.gms.dynamic.zzb -> com.google.android.gms.dynamic.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
com.google.android.gms.dynamite.DynamiteModule -> com.google.android.gms.dynamite.DynamiteModule:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(android.content.Context) -> <init>
    1:11:int getLocalVersion(android.content.Context,java.lang.String) -> getLocalVersion
    1:1:int getRemoteVersion(android.content.Context,java.lang.String) -> getRemoteVersion
    1:3:android.os.IBinder instantiate(java.lang.String) -> instantiate
    1:63:com.google.android.gms.dynamite.DynamiteModule load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String) -> load
    1:46:int zza(android.content.Context,java.lang.String,boolean) -> zza
    1:24:int zzb(android.content.Context,java.lang.String,boolean) -> zzb
    1:1:boolean zzc(android.database.Cursor) -> zzc
    1:2:com.google.android.gms.dynamite.DynamiteModule zzd(android.content.Context,java.lang.String) -> zzd
    1:6:void zze(java.lang.ClassLoader) -> zze
    1:12:com.google.android.gms.dynamite.zzo zzf(android.content.Context) -> zzf
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader -> com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.DynamiteModule$LoadingException -> com.google.android.gms.dynamite.DynamiteModule$LoadingException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy -> com.google.android.gms.dynamite.DynamiteModule$VersionPolicy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor -> com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
com.google.android.gms.dynamite.zza -> com.google.android.gms.dynamite.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(java.lang.String,java.lang.ClassLoader) -> <init>
    1:3:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
com.google.android.gms.dynamite.zzb -> com.google.android.gms.dynamite.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
com.google.android.gms.dynamite.zzc -> com.google.android.gms.dynamite.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:int zza(android.content.Context,java.lang.String,boolean) -> zza
    1:1:int zzb(android.content.Context,java.lang.String) -> zzb
com.google.android.gms.dynamite.zzd -> com.google.android.gms.dynamite.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zze -> com.google.android.gms.dynamite.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzf -> com.google.android.gms.dynamite.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzg -> com.google.android.gms.dynamite.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzh -> com.google.android.gms.dynamite.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzi -> com.google.android.gms.dynamite.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:3:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzj -> com.google.android.gms.dynamite.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:4:com.google.android.gms.dynamite.zzn zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzm) -> zza
com.google.android.gms.dynamite.zzk -> com.google.android.gms.dynamite.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.zzl -> com.google.android.gms.dynamite.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.zzm -> com.google.android.gms.dynamite.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.zzn -> com.google.android.gms.dynamite.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
com.google.android.gms.dynamite.zzo -> com.google.android.gms.dynamite.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:7:com.google.android.gms.dynamic.IObjectWrapper zze(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int) -> zze
    1:7:int zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean) -> zzf
    1:7:com.google.android.gms.dynamic.IObjectWrapper zzg(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int) -> zzg
    1:7:int zzh(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean) -> zzh
    1:4:int zzi() -> zzi
    1:8:com.google.android.gms.dynamic.IObjectWrapper zzj(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean,long) -> zzj
    1:8:com.google.android.gms.dynamic.IObjectWrapper zzk(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper) -> zzk
com.google.android.gms.dynamite.zzp -> com.google.android.gms.dynamite.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:8:com.google.android.gms.dynamic.IObjectWrapper zze(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper) -> zze
    1:8:com.google.android.gms.dynamic.IObjectWrapper zzf(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper) -> zzf
com.google.android.gms.internal.ads_identifier.zza -> com.google.android.gms.internal.ads_identifier.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:2:android.os.Parcel zza() -> zza
    1:7:android.os.Parcel zzb(int,android.os.Parcel) -> zzb
com.google.android.gms.internal.ads_identifier.zzb -> com.google.android.gms.internal.ads_identifier.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
com.google.android.gms.internal.ads_identifier.zzc -> com.google.android.gms.internal.ads_identifier.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:1:void zza(android.os.Parcel,boolean) -> zza
    1:1:boolean zzb(android.os.Parcel) -> zzb
com.google.android.gms.internal.ads_identifier.zzd -> com.google.android.gms.internal.ads_identifier.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:java.lang.String zzc() -> zzc
    1:4:boolean zzd() -> zzd
    1:5:boolean zze(boolean) -> zze
com.google.android.gms.internal.ads_identifier.zze -> com.google.android.gms.internal.ads_identifier.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
    1:4:com.google.android.gms.internal.ads_identifier.zzf zza(android.os.IBinder) -> zza
com.google.android.gms.internal.ads_identifier.zzf -> com.google.android.gms.internal.ads_identifier.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
com.google.android.gms.internal.ads_identifier.zzg -> com.google.android.gms.internal.ads_identifier.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
com.google.android.gms.internal.ads_identifier.zzh -> com.google.android.gms.internal.ads_identifier.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
com.google.android.gms.internal.ads_identifier.zzi -> com.google.android.gms.internal.ads_identifier.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-ads-identifier@@17.0.1"}
com.google.android.gms.internal.base.zaa -> com.google.android.gms.internal.base.zaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:android.os.Parcel zaa() -> zaa
    1:6:void zac(int,android.os.Parcel) -> zac
    1:3:void zad(int,android.os.Parcel) -> zad
com.google.android.gms.internal.base.zab -> com.google.android.gms.internal.base.zab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <init>(java.lang.String) -> <init>
    1:3:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.base.zac -> com.google.android.gms.internal.base.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:2:android.os.Parcelable zab(android.os.Parcel,android.os.Parcelable$Creator) -> zab
    1:3:void zac(android.os.Parcel,android.os.Parcelable) -> zac
    1:2:void zad(android.os.Parcel,android.os.IInterface) -> zad
com.google.android.gms.internal.base.zad -> com.google.android.gms.internal.base.zad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.internal.base.zal -> com.google.android.gms.internal.base.zal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.internal.base.zam -> com.google.android.gms.internal.base.zam:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.internal.base.zan -> com.google.android.gms.internal.base.zan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:3:java.util.concurrent.ExecutorService zab(int,java.util.concurrent.ThreadFactory,int) -> zab
    1:1:java.util.concurrent.ExecutorService zac(java.util.concurrent.ThreadFactory,int) -> zac
com.google.android.gms.internal.base.zao -> com.google.android.gms.internal.base.zao:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.internal.base.zap -> com.google.android.gms.internal.base.zap:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    2:2:void <init>(android.os.Looper) -> <init>
    3:3:void <init>(android.os.Looper,android.os.Handler$Callback) -> <init>
com.google.android.gms.internal.common.zza -> com.google.android.gms.internal.common.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:7:android.os.Parcel zzB(int,android.os.Parcel) -> zzB
    1:2:android.os.Parcel zza() -> zza
com.google.android.gms.internal.common.zzb -> com.google.android.gms.internal.common.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:2:void <init>(java.lang.String) -> <init>
    1:3:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.common.zzc -> com.google.android.gms.internal.common.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:1:boolean zza(android.os.Parcel) -> zza
    1:1:void zzb(android.os.Parcel,boolean) -> zzb
    1:2:android.os.Parcelable zzc(android.os.Parcel,android.os.Parcelable$Creator) -> zzc
    1:3:void zzd(android.os.Parcel,android.os.Parcelable) -> zzd
    1:2:void zzf(android.os.Parcel,android.os.IInterface) -> zzf
com.google.android.gms.internal.common.zzh -> com.google.android.gms.internal.common.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    2:2:void <init>(android.os.Looper) -> <init>
    3:3:void <init>(android.os.Looper,android.os.Handler$Callback) -> <init>
com.google.android.gms.internal.measurement.zza -> com.google.android.gms.internal.measurement.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzaa -> com.google.android.gms.internal.measurement.zzaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(java.lang.String,long,java.util.Map) -> <init>
    1:1:java.lang.Object clone() -> clone
    1:5:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
    1:1:com.google.android.gms.internal.measurement.zzaa zzb() -> zzb
    1:2:java.lang.Object zzc(java.lang.String) -> zzc
    1:2:void zzg(java.lang.String,java.lang.Object) -> zzg
com.google.android.gms.internal.measurement.zzab -> com.google.android.gms.internal.measurement.zzab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:void <init>() -> <init>
    4:5:void <init>(com.google.android.gms.internal.measurement.zzaa) -> <init>
    1:3:java.lang.Object clone() -> clone
    1:2:void zzd(com.google.android.gms.internal.measurement.zzaa) -> zzd
    1:1:void zze(java.lang.String,long,java.util.Map) -> zze
com.google.android.gms.internal.measurement.zzac -> com.google.android.gms.internal.measurement.zzac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:boolean hasNext() -> hasNext
    1:5:java.lang.Object next() -> next
com.google.android.gms.internal.measurement.zzad -> com.google.android.gms.internal.measurement.zzad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean hasNext() -> hasNext
    1:3:java.lang.Object next() -> next
com.google.android.gms.internal.measurement.zzae -> com.google.android.gms.internal.measurement.zzae:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>() -> <init>
    3:5:void <init>(java.util.List) -> <init>
    1:7:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.util.Iterator iterator() -> iterator
    1:1:java.lang.String toString() -> toString
    1:1:int zzb() -> zzb
    1:22:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:2:int zzc() -> zzc
    1:5:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:4:com.google.android.gms.internal.measurement.zzap zze(int) -> zze
    1:4:com.google.android.gms.internal.measurement.zzap zzf(java.lang.String) -> zzf
    1:1:java.lang.Boolean zzg() -> zzg
    1:5:java.lang.Double zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
    1:9:java.lang.String zzj(java.lang.String) -> zzj
    1:1:java.util.Iterator zzk() -> zzk
    1:3:java.util.Iterator zzl() -> zzl
    1:3:java.util.List zzm() -> zzm
    1:1:void zzn() -> zzn
    0:8:void zzo(int,com.google.android.gms.internal.measurement.zzap) -> zzo
    1:8:void zzp(int) -> zzp
    0:4:void zzq(int,com.google.android.gms.internal.measurement.zzap) -> zzq
    1:2:void zzr(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zzr
    1:3:boolean zzs(int) -> zzs
    1:1:boolean zzt(java.lang.String) -> zzt
com.google.android.gms.internal.measurement.zzaf -> com.google.android.gms.internal.measurement.zzaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.Boolean) -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
    1:5:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
com.google.android.gms.internal.measurement.zzag -> com.google.android.gms.internal.measurement.zzag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
com.google.android.gms.internal.measurement.zzah -> com.google.android.gms.internal.measurement.zzah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.Double) -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
    1:3:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:1:java.lang.Boolean zzg() -> zzg
    1:15:java.lang.String zzi() -> zzi
com.google.android.gms.internal.measurement.zzai -> com.google.android.gms.internal.measurement.zzai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.String) -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:3:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:2:com.google.android.gms.internal.measurement.zzap zzf(java.lang.String) -> zzf
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
    1:1:java.util.Iterator zzl() -> zzl
    1:2:void zzr(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zzr
    1:1:boolean zzt(java.lang.String) -> zzt
com.google.android.gms.internal.measurement.zzaj -> com.google.android.gms.internal.measurement.zzaj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:10:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzal,com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:2:java.util.Iterator zzb(java.util.Map) -> zzb
com.google.android.gms.internal.measurement.zzak -> com.google.android.gms.internal.measurement.zzak:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean hasNext() -> hasNext
    1:1:java.lang.Object next() -> next
com.google.android.gms.internal.measurement.zzal -> com.google.android.gms.internal.measurement.zzal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzam -> com.google.android.gms.internal.measurement.zzam:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:7:java.lang.String toString() -> toString
    1:1:java.util.List zzb() -> zzb
    1:3:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:5:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:2:com.google.android.gms.internal.measurement.zzap zzf(java.lang.String) -> zzf
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
    1:1:java.util.Iterator zzl() -> zzl
    1:2:void zzr(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zzr
    1:1:boolean zzt(java.lang.String) -> zzt
com.google.android.gms.internal.measurement.zzan -> com.google.android.gms.internal.measurement.zzan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
com.google.android.gms.internal.measurement.zzao -> com.google.android.gms.internal.measurement.zzao:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:5:void <init>(com.google.android.gms.internal.measurement.zzao) -> <init>
    6:11:void <init>(java.lang.String,java.util.List,java.util.List,com.google.android.gms.internal.measurement.zzg) -> <init>
    1:11:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:1:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
com.google.android.gms.internal.measurement.zzap -> com.google.android.gms.internal.measurement.zzap:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:6:void <clinit>() -> <clinit>
com.google.android.gms.internal.measurement.zzaq -> com.google.android.gms.internal.measurement.zzaq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(java.lang.String,java.util.List) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:1:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
com.google.android.gms.internal.measurement.zzar -> com.google.android.gms.internal.measurement.zzar:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean hasNext() -> hasNext
    1:3:java.lang.Object next() -> next
com.google.android.gms.internal.measurement.zzas -> com.google.android.gms.internal.measurement.zzas:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean hasNext() -> hasNext
    1:3:java.lang.Object next() -> next
com.google.android.gms.internal.measurement.zzat -> com.google.android.gms.internal.measurement.zzat:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    0:1:void <init>(java.lang.String) -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.util.Iterator iterator() -> iterator
    1:1:java.lang.String toString() -> toString
    1:124:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:com.google.android.gms.internal.measurement.zzap zzd() -> zzd
    1:1:java.lang.Boolean zzg() -> zzg
    1:4:java.lang.Double zzh() -> zzh
    1:1:java.util.Iterator zzl() -> zzl
com.google.android.gms.internal.measurement.zzau -> com.google.android.gms.internal.measurement.zzau:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
    1:1:java.lang.Boolean zzg() -> zzg
    1:1:java.lang.Double zzh() -> zzh
com.google.android.gms.internal.measurement.zzav -> com.google.android.gms.internal.measurement.zzav:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:8:void <init>() -> <init>
    1:29:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzaw -> com.google.android.gms.internal.measurement.zzaw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:3:com.google.android.gms.internal.measurement.zzap zzb(java.lang.String) -> zzb
com.google.android.gms.internal.measurement.zzax -> com.google.android.gms.internal.measurement.zzax:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:void <init>() -> <init>
    1:7:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzap) -> zza
    1:4:void zzb(com.google.android.gms.internal.measurement.zzaw) -> zzb
com.google.android.gms.internal.measurement.zzay -> com.google.android.gms.internal.measurement.zzay:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:void <init>() -> <init>
    1:15:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:22:boolean zzc(com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zzc
    1:12:boolean zzd(com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zzd
    1:7:boolean zze(com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zze
com.google.android.gms.internal.measurement.zzaz -> com.google.android.gms.internal.measurement.zzaz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:14:void <init>() -> <init>
    1:70:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:13:com.google.android.gms.internal.measurement.zzap zzc(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzc
com.google.android.gms.internal.measurement.zzb -> com.google.android.gms.internal.measurement.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:java.lang.Object call() -> call
com.google.android.gms.internal.measurement.zzba -> com.google.android.gms.internal.measurement.zzba:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:6:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.internal.measurement.zzbb -> com.google.android.gms.internal.measurement.zzbb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:193:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzae,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:8:com.google.android.gms.internal.measurement.zzae zzb(com.google.android.gms.internal.measurement.zzae,com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzai,java.lang.Boolean,java.lang.Boolean) -> zzb
    1:19:com.google.android.gms.internal.measurement.zzap zzc(com.google.android.gms.internal.measurement.zzae,com.google.android.gms.internal.measurement.zzg,java.util.List,boolean) -> zzc
com.google.android.gms.internal.measurement.zzbc -> com.google.android.gms.internal.measurement.zzbc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void <init>() -> <init>
    1:13:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzbd -> com.google.android.gms.internal.measurement.zzbd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:com.google.android.gms.internal.measurement.zzg zza(com.google.android.gms.internal.measurement.zzap) -> zza
com.google.android.gms.internal.measurement.zzbe -> com.google.android.gms.internal.measurement.zzbe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:com.google.android.gms.internal.measurement.zzg zza(com.google.android.gms.internal.measurement.zzap) -> zza
com.google.android.gms.internal.measurement.zzbf -> com.google.android.gms.internal.measurement.zzbf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzbg -> com.google.android.gms.internal.measurement.zzbg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:com.google.android.gms.internal.measurement.zzg zza(com.google.android.gms.internal.measurement.zzap) -> zza
com.google.android.gms.internal.measurement.zzbh -> com.google.android.gms.internal.measurement.zzbh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:void <init>() -> <init>
    1:86:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
    1:8:com.google.android.gms.internal.measurement.zzap zzc(com.google.android.gms.internal.measurement.zzbf,java.util.Iterator,com.google.android.gms.internal.measurement.zzap) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzap zzd(com.google.android.gms.internal.measurement.zzbf,com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zzd
    1:4:com.google.android.gms.internal.measurement.zzap zze(com.google.android.gms.internal.measurement.zzbf,com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zze
com.google.android.gms.internal.measurement.zzbi -> com.google.android.gms.internal.measurement.zzbi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:11:void <init>() -> <init>
    1:33:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzbj -> com.google.android.gms.internal.measurement.zzbj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:6:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzbk -> com.google.android.gms.internal.measurement.zzbk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:14:void <init>() -> <init>
    1:101:com.google.android.gms.internal.measurement.zzap zza(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzbl -> com.google.android.gms.internal.measurement.zzbl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:69:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int,int) -> <init>
    1:2:java.lang.String toString() -> toString
    1:1:com.google.android.gms.internal.measurement.zzbl[] values() -> values
    1:1:com.google.android.gms.internal.measurement.zzbl zza(int) -> zza
    1:1:java.lang.Integer zzb() -> zzb
com.google.android.gms.internal.measurement.zzbm -> com.google.android.gms.internal.measurement.zzbm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:android.os.Parcel zza() -> zza
    1:7:android.os.Parcel zzb(int,android.os.Parcel) -> zzb
    1:6:void zzc(int,android.os.Parcel) -> zzc
com.google.android.gms.internal.measurement.zzbn -> com.google.android.gms.internal.measurement.zzbn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <init>(java.lang.String) -> <init>
    1:3:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.measurement.zzbo -> com.google.android.gms.internal.measurement.zzbo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator) -> zza
    1:1:java.util.HashMap zzb(android.os.Parcel) -> zzb
    1:1:void zzc(android.os.Parcel,boolean) -> zzc
    1:3:void zzd(android.os.Parcel,android.os.Parcelable) -> zzd
    1:2:void zze(android.os.Parcel,android.os.IInterface) -> zze
    1:1:boolean zzf(android.os.Parcel) -> zzf
com.google.android.gms.internal.measurement.zzbp -> com.google.android.gms.internal.measurement.zzbp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:5:android.os.Bundle zzd(android.os.Bundle) -> zzd
com.google.android.gms.internal.measurement.zzbq -> com.google.android.gms.internal.measurement.zzbq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:com.google.android.gms.internal.measurement.zzbr zzb(android.os.IBinder) -> zzb
com.google.android.gms.internal.measurement.zzbr -> com.google.android.gms.internal.measurement.zzbr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzbs -> com.google.android.gms.internal.measurement.zzbs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    0:3:void <clinit>() -> <clinit>
    1:1:android.app.PendingIntent zza(android.content.Context,int,android.content.Intent,int) -> zza
com.google.android.gms.internal.measurement.zzbt -> com.google.android.gms.internal.measurement.zzbt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:6:void <clinit>() -> <clinit>
    1:12:int zza(android.content.Context,android.app.job.JobInfo,java.lang.String,java.lang.String) -> zza
com.google.android.gms.internal.measurement.zzbu -> com.google.android.gms.internal.measurement.zzbu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
com.google.android.gms.internal.measurement.zzbv -> com.google.android.gms.internal.measurement.zzbv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
com.google.android.gms.internal.measurement.zzbw -> com.google.android.gms.internal.measurement.zzbw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:java.util.concurrent.ExecutorService zzb(java.util.concurrent.ThreadFactory,int) -> zzb
    1:3:java.util.concurrent.ExecutorService zzc(int,java.util.concurrent.ThreadFactory,int) -> zzc
com.google.android.gms.internal.measurement.zzbx -> com.google.android.gms.internal.measurement.zzbx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
com.google.android.gms.internal.measurement.zzby -> com.google.android.gms.internal.measurement.zzby:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    2:2:void <init>(android.os.Looper) -> <init>
com.google.android.gms.internal.measurement.zzbz -> com.google.android.gms.internal.measurement.zzbz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <init>() -> <init>
    1:5:android.os.Bundle zzb(long) -> zzb
    1:1:java.lang.String zzc(long) -> zzc
    1:5:void zzd(android.os.Bundle) -> zzd
    1:6:java.lang.Object zze(android.os.Bundle,java.lang.Class) -> zze
com.google.android.gms.internal.measurement.zzc -> com.google.android.gms.internal.measurement.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:8:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzai zzb() -> zzb
    1:21:void zzc(com.google.android.gms.internal.measurement.zzgo) -> zzc
    1:1:void zzd(java.lang.String,java.util.concurrent.Callable) -> zzd
    1:5:boolean zze(com.google.android.gms.internal.measurement.zzaa) -> zze
    1:1:boolean zzf() -> zzf
    1:1:boolean zzg() -> zzg
com.google.android.gms.internal.measurement.zzca -> com.google.android.gms.internal.measurement.zzca:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:void beginAdUnitExposure(java.lang.String,long) -> beginAdUnitExposure
    1:5:void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle) -> clearConditionalUserProperty
    1:3:void clearMeasurementEnabled(long) -> clearMeasurementEnabled
    1:4:void endAdUnitExposure(java.lang.String,long) -> endAdUnitExposure
    1:3:void generateEventId(com.google.android.gms.internal.measurement.zzcf) -> generateEventId
    1:3:void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf) -> getAppInstanceId
    1:3:void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf) -> getCachedAppInstanceId
    1:5:void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf) -> getConditionalUserProperties
    1:3:void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf) -> getCurrentScreenClass
    1:3:void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf) -> getCurrentScreenName
    1:3:void getGmpAppId(com.google.android.gms.internal.measurement.zzcf) -> getGmpAppId
    1:4:void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf) -> getMaxUserProperties
    1:4:void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int) -> getTestFlag
    1:6:void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf) -> getUserProperties
    1:5:void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long) -> initialize
    1:8:void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long) -> logEvent
    1:7:void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper) -> logHealthData
    1:5:void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long) -> onActivityCreated
    1:4:void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityDestroyed
    1:4:void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityPaused
    1:4:void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityResumed
    1:5:void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long) -> onActivitySaveInstanceState
    1:4:void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityStarted
    1:4:void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityStopped
    1:5:void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long) -> performAction
    1:3:void resetAnalyticsData(long) -> resetAnalyticsData
    1:4:void setConditionalUserProperty(android.os.Bundle,long) -> setConditionalUserProperty
    1:4:void setConsent(android.os.Bundle,long) -> setConsent
    1:4:void setConsentThirdParty(android.os.Bundle,long) -> setConsentThirdParty
    1:6:void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long) -> setCurrentScreen
    1:3:void setDataCollectionEnabled(boolean) -> setDataCollectionEnabled
    1:3:void setDefaultEventParameters(android.os.Bundle) -> setDefaultEventParameters
    1:4:void setMeasurementEnabled(boolean,long) -> setMeasurementEnabled
    1:3:void setSessionTimeoutDuration(long) -> setSessionTimeoutDuration
    1:4:void setUserId(java.lang.String,long) -> setUserId
    1:7:void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long) -> setUserProperty
com.google.android.gms.internal.measurement.zzcb -> com.google.android.gms.internal.measurement.zzcb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>() -> <init>
    1:4:com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder) -> asInterface
    1:210:boolean zza(int,android.os.Parcel,android.os.Parcel,int) -> zza
com.google.android.gms.internal.measurement.zzcc -> com.google.android.gms.internal.measurement.zzcc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzcd -> com.google.android.gms.internal.measurement.zzcd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:3:void zzd(android.os.Bundle) -> zzd
com.google.android.gms.internal.measurement.zzce -> com.google.android.gms.internal.measurement.zzce:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>() -> <init>
    1:3:boolean zza(int,android.os.Parcel,android.os.Parcel,int) -> zza
com.google.android.gms.internal.measurement.zzcf -> com.google.android.gms.internal.measurement.zzcf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzcg -> com.google.android.gms.internal.measurement.zzcg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:int zzd() -> zzd
    1:6:void zze(java.lang.String,java.lang.String,android.os.Bundle,long) -> zze
com.google.android.gms.internal.measurement.zzci -> com.google.android.gms.internal.measurement.zzci:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzcj -> com.google.android.gms.internal.measurement.zzcj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
com.google.android.gms.internal.measurement.zzck -> com.google.android.gms.internal.measurement.zzck:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzcl -> com.google.android.gms.internal.measurement.zzcl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(long,long,boolean,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String) -> <init>
    1:10:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.measurement.zzcm -> com.google.android.gms.internal.measurement.zzcm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:15:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.google.android.gms.internal.measurement.zzcn -> com.google.android.gms.internal.measurement.zzcn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.os.Bundle) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzco -> com.google.android.gms.internal.measurement.zzco:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,java.lang.String,android.os.Bundle) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzcp -> com.google.android.gms.internal.measurement.zzcp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:2:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzcq -> com.google.android.gms.internal.measurement.zzcq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzcr -> com.google.android.gms.internal.measurement.zzcr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.app.Activity,java.lang.String,java.lang.String) -> <init>
    1:3:void zza() -> zza
com.google.android.gms.internal.measurement.zzcs -> com.google.android.gms.internal.measurement.zzcs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.Boolean) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzct -> com.google.android.gms.internal.measurement.zzct:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.os.Bundle) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzcu -> com.google.android.gms.internal.measurement.zzcu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.os.Bundle) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzcv -> com.google.android.gms.internal.measurement.zzcv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzcw -> com.google.android.gms.internal.measurement.zzcw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,long) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzcx -> com.google.android.gms.internal.measurement.zzcx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,java.lang.String,android.content.Context,android.os.Bundle) -> <init>
    1:13:void zza() -> zza
com.google.android.gms.internal.measurement.zzcy -> com.google.android.gms.internal.measurement.zzcy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzcz -> com.google.android.gms.internal.measurement.zzcz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzd -> com.google.android.gms.internal.measurement.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.Throwable) -> <init>
com.google.android.gms.internal.measurement.zzda -> com.google.android.gms.internal.measurement.zzda:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdb -> com.google.android.gms.internal.measurement.zzdb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdc -> com.google.android.gms.internal.measurement.zzdc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdd -> com.google.android.gms.internal.measurement.zzdd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzde -> com.google.android.gms.internal.measurement.zzde:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdf -> com.google.android.gms.internal.measurement.zzdf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:2:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdg -> com.google.android.gms.internal.measurement.zzdg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,boolean,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    1:5:void zza() -> zza
com.google.android.gms.internal.measurement.zzdh -> com.google.android.gms.internal.measurement.zzdh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.os.Bundle,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdi -> com.google.android.gms.internal.measurement.zzdi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee) -> <init>
    1:2:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.android.gms.internal.measurement.zzdj -> com.google.android.gms.internal.measurement.zzdj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdk -> com.google.android.gms.internal.measurement.zzdk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdl -> com.google.android.gms.internal.measurement.zzdl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,com.google.android.gms.internal.measurement.zzbz,int) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.internal.measurement.zzdm -> com.google.android.gms.internal.measurement.zzdm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,boolean) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzdn -> com.google.android.gms.internal.measurement.zzdn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,android.os.Bundle) -> <init>
    1:1:void zza() -> zza
com.google.android.gms.internal.measurement.zzdr -> com.google.android.gms.internal.measurement.zzdr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.Long,java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean) -> <init>
    0:3:void zza() -> zza
com.google.android.gms.internal.measurement.zzds -> com.google.android.gms.internal.measurement.zzds:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee,java.lang.String,java.lang.String,java.lang.Object,boolean) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzdt -> com.google.android.gms.internal.measurement.zzdt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:2:void <init>(com.google.android.gms.internal.measurement.zzee,boolean) -> <init>
    1:4:void run() -> run
com.google.android.gms.internal.measurement.zzdw -> com.google.android.gms.internal.measurement.zzdw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.os.Bundle,android.app.Activity) -> <init>
    1:8:void zza() -> zza
com.google.android.gms.internal.measurement.zzdx -> com.google.android.gms.internal.measurement.zzdx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzdy -> com.google.android.gms.internal.measurement.zzdy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzdz -> com.google.android.gms.internal.measurement.zzdz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zze -> com.google.android.gms.internal.measurement.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzea -> com.google.android.gms.internal.measurement.zzea:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzeb -> com.google.android.gms.internal.measurement.zzeb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity,com.google.android.gms.internal.measurement.zzbz) -> <init>
    1:3:void zza() -> zza
com.google.android.gms.internal.measurement.zzec -> com.google.android.gms.internal.measurement.zzec:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzed,android.app.Activity) -> <init>
    1:2:void zza() -> zza
com.google.android.gms.internal.measurement.zzed -> com.google.android.gms.internal.measurement.zzed:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    1:1:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    1:1:void onActivityPaused(android.app.Activity) -> onActivityPaused
    1:1:void onActivityResumed(android.app.Activity) -> onActivityResumed
    1:4:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    1:1:void onActivityStarted(android.app.Activity) -> onActivityStarted
    1:1:void onActivityStopped(android.app.Activity) -> onActivityStopped
com.google.android.gms.internal.measurement.zzee -> com.google.android.gms.internal.measurement.zzee:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:17:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> <init>
    1:1:void zzA(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> zzA
    1:1:void zzC() -> zzC
    1:1:void zzD(android.os.Bundle) -> zzD
    1:1:void zzE(android.os.Bundle) -> zzE
    1:1:void zzF(android.os.Bundle) -> zzF
    1:1:void zzG(android.app.Activity,java.lang.String,java.lang.String) -> zzG
    1:1:void zzH(boolean) -> zzH
    1:1:void zzI(android.os.Bundle) -> zzI
    1:1:void zzK(java.lang.Boolean) -> zzK
    1:1:void zzL(long) -> zzL
    1:1:void zzM(java.lang.String) -> zzM
    1:1:void zzN(java.lang.String,java.lang.String,java.lang.Object,boolean) -> zzN
    1:1:boolean zzR() -> zzR
    1:3:void zzS(java.lang.Exception,boolean,boolean) -> zzS
    1:1:void zzT(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,java.lang.Long) -> zzT
    1:1:void zzU(com.google.android.gms.internal.measurement.zzdt) -> zzU
    1:1:boolean zzV(java.lang.String,java.lang.String) -> zzV
    1:4:int zza(java.lang.String) -> zza
    1:5:long zzb() -> zzb
    1:3:android.os.Bundle zzc(android.os.Bundle,boolean) -> zzc
    1:5:com.google.android.gms.internal.measurement.zzcc zzf(android.content.Context,boolean) -> zzf
    1:3:com.google.android.gms.internal.measurement.zzee zzg(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> zzg
    1:3:java.lang.Object zzh(int) -> zzh
    1:3:java.lang.String zzk() -> zzk
    1:3:java.lang.String zzl() -> zzl
    1:3:java.lang.String zzm() -> zzm
    1:3:java.lang.String zzn() -> zzn
    1:3:java.lang.String zzo() -> zzo
    1:4:java.util.List zzp(java.lang.String,java.lang.String) -> zzp
    1:10:java.util.Map zzq(java.lang.String,java.lang.String,boolean) -> zzq
    1:1:void zzu(java.lang.String) -> zzu
    1:1:void zzv(java.lang.String,java.lang.String,android.os.Bundle) -> zzv
    1:1:void zzw(java.lang.String) -> zzw
    1:1:void zzx(java.lang.String,android.os.Bundle) -> zzx
    1:1:void zzy(java.lang.String,java.lang.String,android.os.Bundle) -> zzy
    1:1:void zzz(java.lang.String,java.lang.String,android.os.Bundle,long) -> zzz
com.google.android.gms.internal.measurement.zzef -> com.google.android.gms.internal.measurement.zzef:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzeg -> com.google.android.gms.internal.measurement.zzeg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
    1:1:int zza() -> zza
    1:1:int zzb() -> zzb
    1:3:com.google.android.gms.internal.measurement.zzeg zzc(int,com.google.android.gms.internal.measurement.zzei) -> zzc
    1:3:com.google.android.gms.internal.measurement.zzeg zzd(int,com.google.android.gms.internal.measurement.zzer) -> zzd
    1:1:com.google.android.gms.internal.measurement.zzej zze(int) -> zze
    1:1:com.google.android.gms.internal.measurement.zzes zzf(int) -> zzf
com.google.android.gms.internal.measurement.zzeh -> com.google.android.gms.internal.measurement.zzeh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:1:int zzb() -> zzb
    1:1:int zzc() -> zzc
    1:1:com.google.android.gms.internal.measurement.zzej zze(int) -> zze
    1:1:com.google.android.gms.internal.measurement.zzes zzf(int) -> zzf
    1:4:void zzi(com.google.android.gms.internal.measurement.zzeh,int,com.google.android.gms.internal.measurement.zzes) -> zzi
    1:4:void zzj(com.google.android.gms.internal.measurement.zzeh,int,com.google.android.gms.internal.measurement.zzej) -> zzj
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzei -> com.google.android.gms.internal.measurement.zzei:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
    1:1:int zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzei zzb(java.lang.String) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzei zzc(int,com.google.android.gms.internal.measurement.zzel) -> zzc
    1:1:com.google.android.gms.internal.measurement.zzel zzd(int) -> zzd
    1:1:java.lang.String zze() -> zze
com.google.android.gms.internal.measurement.zzej -> com.google.android.gms.internal.measurement.zzej:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzei zzc() -> zzc
    1:1:com.google.android.gms.internal.measurement.zzel zze(int) -> zze
    1:1:com.google.android.gms.internal.measurement.zzeq zzf() -> zzf
    1:4:void zzj(com.google.android.gms.internal.measurement.zzej,int,com.google.android.gms.internal.measurement.zzel) -> zzj
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzek -> com.google.android.gms.internal.measurement.zzek:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzek zza(java.lang.String) -> zza
com.google.android.gms.internal.measurement.zzel -> com.google.android.gms.internal.measurement.zzel:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzeq zzc() -> zzc
    1:1:com.google.android.gms.internal.measurement.zzex zzd() -> zzd
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzem -> com.google.android.gms.internal.measurement.zzem:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
com.google.android.gms.internal.measurement.zzen -> com.google.android.gms.internal.measurement.zzen:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzeo -> com.google.android.gms.internal.measurement.zzeo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzep -> com.google.android.gms.internal.measurement.zzep:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzeq -> com.google.android.gms.internal.measurement.zzeq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzer -> com.google.android.gms.internal.measurement.zzer:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzer zza(java.lang.String) -> zza
com.google.android.gms.internal.measurement.zzes -> com.google.android.gms.internal.measurement.zzes:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzel zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zzer zzc() -> zzc
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzet -> com.google.android.gms.internal.measurement.zzet:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzef) -> <init>
com.google.android.gms.internal.measurement.zzeu -> com.google.android.gms.internal.measurement.zzeu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzev -> com.google.android.gms.internal.measurement.zzev:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzew -> com.google.android.gms.internal.measurement.zzew:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzex -> com.google.android.gms.internal.measurement.zzex:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zza() -> zza
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzey -> com.google.android.gms.internal.measurement.zzey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzez -> com.google.android.gms.internal.measurement.zzez:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzey) -> <init>
    1:1:int zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzez zzb(java.lang.String) -> zzb
    1:1:java.lang.String zzc() -> zzc
    1:1:boolean zzd() -> zzd
    1:1:boolean zze() -> zze
    1:1:boolean zzf() -> zzf
com.google.android.gms.internal.measurement.zzf -> com.google.android.gms.internal.measurement.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:7:void <init>() -> <init>
    1:6:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzgt[]) -> zza
com.google.android.gms.internal.measurement.zzfa -> com.google.android.gms.internal.measurement.zzfa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void zzd(com.google.android.gms.internal.measurement.zzfa,java.lang.String) -> zzd
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfb -> com.google.android.gms.internal.measurement.zzfb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzey) -> <init>
    1:1:int zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzfa zzb(int) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzfb zzc() -> zzc
    1:3:com.google.android.gms.internal.measurement.zzfb zzd(int,com.google.android.gms.internal.measurement.zzez) -> zzd
    1:2:java.util.List zze() -> zze
com.google.android.gms.internal.measurement.zzfc -> com.google.android.gms.internal.measurement.zzfc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:int zza() -> zza
    1:1:int zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zzfa zzd(int) -> zzd
    1:1:com.google.android.gms.internal.measurement.zzfb zze() -> zze
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
    1:4:void zzm(com.google.android.gms.internal.measurement.zzfc,int,com.google.android.gms.internal.measurement.zzfa) -> zzm
    1:1:void zzn(com.google.android.gms.internal.measurement.zzfc) -> zzn
com.google.android.gms.internal.measurement.zzfd -> com.google.android.gms.internal.measurement.zzfd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzey) -> <init>
com.google.android.gms.internal.measurement.zzfe -> com.google.android.gms.internal.measurement.zzfe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzff -> com.google.android.gms.internal.measurement.zzff:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzfg -> com.google.android.gms.internal.measurement.zzfg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzfh -> com.google.android.gms.internal.measurement.zzfh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
com.google.android.gms.internal.measurement.zzfi -> com.google.android.gms.internal.measurement.zzfi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfj -> com.google.android.gms.internal.measurement.zzfj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfj zza(int) -> zza
    1:2:com.google.android.gms.internal.measurement.zzfj zzb(com.google.android.gms.internal.measurement.zzgc) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzfj zzc(boolean) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzfj zzd(com.google.android.gms.internal.measurement.zzgd) -> zzd
com.google.android.gms.internal.measurement.zzfk -> com.google.android.gms.internal.measurement.zzfk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzfj zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zzgd zzd() -> zzd
    1:1:com.google.android.gms.internal.measurement.zzgd zze() -> zze
    1:1:void zzg(com.google.android.gms.internal.measurement.zzfk,com.google.android.gms.internal.measurement.zzgd) -> zzg
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfl -> com.google.android.gms.internal.measurement.zzfl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfl zza(long) -> zza
    1:2:com.google.android.gms.internal.measurement.zzfl zzb(int) -> zzb
com.google.android.gms.internal.measurement.zzfm -> com.google.android.gms.internal.measurement.zzfm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzfl zzc() -> zzc
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfn -> com.google.android.gms.internal.measurement.zzfn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:1:int zza() -> zza
    1:1:long zzb() -> zzb
    1:1:long zzc() -> zzc
    1:2:com.google.android.gms.internal.measurement.zzfn zzd(java.lang.Iterable) -> zzd
    1:2:com.google.android.gms.internal.measurement.zzfn zze(com.google.android.gms.internal.measurement.zzfr) -> zze
    1:2:com.google.android.gms.internal.measurement.zzfn zzf(com.google.android.gms.internal.measurement.zzfs) -> zzf
    1:2:com.google.android.gms.internal.measurement.zzfn zzg() -> zzg
    1:2:com.google.android.gms.internal.measurement.zzfn zzh(int) -> zzh
    1:2:com.google.android.gms.internal.measurement.zzfn zzi(java.lang.String) -> zzi
    1:3:com.google.android.gms.internal.measurement.zzfn zzj(int,com.google.android.gms.internal.measurement.zzfr) -> zzj
    1:2:com.google.android.gms.internal.measurement.zzfn zzk(int,com.google.android.gms.internal.measurement.zzfs) -> zzk
    1:2:com.google.android.gms.internal.measurement.zzfn zzl(long) -> zzl
    1:2:com.google.android.gms.internal.measurement.zzfn zzm(long) -> zzm
    1:1:com.google.android.gms.internal.measurement.zzfs zzn(int) -> zzn
    1:1:java.lang.String zzo() -> zzo
    1:2:java.util.List zzp() -> zzp
    1:1:boolean zzq() -> zzq
com.google.android.gms.internal.measurement.zzfo -> com.google.android.gms.internal.measurement.zzfo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zzfn zze() -> zze
    1:1:com.google.android.gms.internal.measurement.zzfs zzg(int) -> zzg
    1:3:void zzj(com.google.android.gms.internal.measurement.zzfo,int,com.google.android.gms.internal.measurement.zzfs) -> zzj
    1:3:void zzk(com.google.android.gms.internal.measurement.zzfo,com.google.android.gms.internal.measurement.zzfs) -> zzk
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
    1:2:void zzm(com.google.android.gms.internal.measurement.zzfo,java.lang.Iterable) -> zzm
    1:1:void zzn(com.google.android.gms.internal.measurement.zzfo) -> zzn
    1:2:void zzo(com.google.android.gms.internal.measurement.zzfo,int) -> zzo
    1:1:void zzp(com.google.android.gms.internal.measurement.zzfo,java.lang.String) -> zzp
    1:2:void zzv() -> zzv
com.google.android.gms.internal.measurement.zzfp -> com.google.android.gms.internal.measurement.zzfp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfp zza(long) -> zza
    1:2:com.google.android.gms.internal.measurement.zzfp zzb(java.lang.String) -> zzb
com.google.android.gms.internal.measurement.zzfq -> com.google.android.gms.internal.measurement.zzfq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzfp zza() -> zza
    1:1:void zzc(com.google.android.gms.internal.measurement.zzfq,java.lang.String) -> zzc
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfr -> com.google.android.gms.internal.measurement.zzfr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:1:int zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzfr zzb(java.lang.Iterable) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzfr zzc(com.google.android.gms.internal.measurement.zzfr) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzfr zzd() -> zzd
    1:2:com.google.android.gms.internal.measurement.zzfr zze() -> zze
    1:2:com.google.android.gms.internal.measurement.zzfr zzf() -> zzf
    1:2:com.google.android.gms.internal.measurement.zzfr zzg() -> zzg
    1:2:com.google.android.gms.internal.measurement.zzfr zzh(double) -> zzh
    1:2:com.google.android.gms.internal.measurement.zzfr zzi(long) -> zzi
    1:2:com.google.android.gms.internal.measurement.zzfr zzj(java.lang.String) -> zzj
    1:2:com.google.android.gms.internal.measurement.zzfr zzk(java.lang.String) -> zzk
com.google.android.gms.internal.measurement.zzfs -> com.google.android.gms.internal.measurement.zzfs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zzc() -> zzc
    1:1:com.google.android.gms.internal.measurement.zzfr zze() -> zze
    1:1:void zzj(com.google.android.gms.internal.measurement.zzfs,java.lang.String) -> zzj
    1:1:void zzk(com.google.android.gms.internal.measurement.zzfs,java.lang.String) -> zzk
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
    1:3:void zzr(com.google.android.gms.internal.measurement.zzfs,com.google.android.gms.internal.measurement.zzfs) -> zzr
    1:2:void zzs(com.google.android.gms.internal.measurement.zzfs,java.lang.Iterable) -> zzs
    1:1:void zzt(com.google.android.gms.internal.measurement.zzfs) -> zzt
    1:2:void zzz() -> zzz
com.google.android.gms.internal.measurement.zzft -> com.google.android.gms.internal.measurement.zzft:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
com.google.android.gms.internal.measurement.zzfu -> com.google.android.gms.internal.measurement.zzfu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfv -> com.google.android.gms.internal.measurement.zzfv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfv zza(com.google.android.gms.internal.measurement.zzfx) -> zza
    1:1:com.google.android.gms.internal.measurement.zzfy zzb(int) -> zzb
com.google.android.gms.internal.measurement.zzfw -> com.google.android.gms.internal.measurement.zzfw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzfv zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzfy zzc(int) -> zzc
    1:4:void zze(com.google.android.gms.internal.measurement.zzfw,com.google.android.gms.internal.measurement.zzfy) -> zze
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzfx -> com.google.android.gms.internal.measurement.zzfx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfx zzA(java.lang.String) -> zzA
    1:2:com.google.android.gms.internal.measurement.zzfx zzB(java.lang.String) -> zzB
    1:2:com.google.android.gms.internal.measurement.zzfx zzC(java.lang.String) -> zzC
    1:2:com.google.android.gms.internal.measurement.zzfx zzD(java.lang.String) -> zzD
    1:2:com.google.android.gms.internal.measurement.zzfx zzE(int) -> zzE
    1:2:com.google.android.gms.internal.measurement.zzfx zzF(int) -> zzF
    1:2:com.google.android.gms.internal.measurement.zzfx zzG(long) -> zzG
    1:2:com.google.android.gms.internal.measurement.zzfx zzH(long) -> zzH
    1:2:com.google.android.gms.internal.measurement.zzfx zzI(java.lang.String) -> zzI
    1:2:com.google.android.gms.internal.measurement.zzfx zzJ(long) -> zzJ
    1:2:com.google.android.gms.internal.measurement.zzfx zzK(java.lang.String) -> zzK
    0:3:com.google.android.gms.internal.measurement.zzfx zzL(java.lang.String) -> zzL
    1:2:com.google.android.gms.internal.measurement.zzfx zzM(long) -> zzM
    1:2:com.google.android.gms.internal.measurement.zzfx zzN(long) -> zzN
    1:3:com.google.android.gms.internal.measurement.zzfx zzO(int,com.google.android.gms.internal.measurement.zzfn) -> zzO
    1:2:com.google.android.gms.internal.measurement.zzfx zzP(java.lang.String) -> zzP
    1:2:com.google.android.gms.internal.measurement.zzfx zzQ(java.lang.String) -> zzQ
    1:2:com.google.android.gms.internal.measurement.zzfx zzR(java.lang.String) -> zzR
    1:2:com.google.android.gms.internal.measurement.zzfx zzS(long) -> zzS
    1:2:com.google.android.gms.internal.measurement.zzfx zzT(java.lang.String) -> zzT
    1:2:com.google.android.gms.internal.measurement.zzfx zzU(boolean) -> zzU
    1:2:com.google.android.gms.internal.measurement.zzfx zzV(java.lang.String) -> zzV
    1:2:com.google.android.gms.internal.measurement.zzfx zzW(java.lang.String) -> zzW
    1:2:com.google.android.gms.internal.measurement.zzfx zzX(com.google.android.gms.internal.measurement.zzfz) -> zzX
    1:2:com.google.android.gms.internal.measurement.zzfx zzY(long) -> zzY
    1:2:com.google.android.gms.internal.measurement.zzfx zzZ(long) -> zzZ
    1:1:int zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzfx zzaa(int) -> zzaa
    1:2:com.google.android.gms.internal.measurement.zzfx zzab(java.lang.String) -> zzab
    1:2:com.google.android.gms.internal.measurement.zzfx zzac(int) -> zzac
    1:2:com.google.android.gms.internal.measurement.zzfx zzad(boolean) -> zzad
    1:2:com.google.android.gms.internal.measurement.zzfx zzae(long) -> zzae
    1:2:com.google.android.gms.internal.measurement.zzfx zzaf(int) -> zzaf
    1:2:com.google.android.gms.internal.measurement.zzfx zzag(long) -> zzag
    1:2:com.google.android.gms.internal.measurement.zzfx zzah(long) -> zzah
    1:2:com.google.android.gms.internal.measurement.zzfx zzai(int,com.google.android.gms.internal.measurement.zzgh) -> zzai
    1:2:com.google.android.gms.internal.measurement.zzfx zzaj(java.lang.String) -> zzaj
    1:1:com.google.android.gms.internal.measurement.zzgh zzak(int) -> zzak
    1:1:java.lang.String zzal() -> zzal
    1:1:java.lang.String zzam() -> zzam
    1:1:java.lang.String zzan() -> zzan
    1:2:java.util.List zzao() -> zzao
    1:2:java.util.List zzap() -> zzap
    1:1:int zzb() -> zzb
    1:1:long zzc() -> zzc
    1:1:long zzd() -> zzd
    1:1:com.google.android.gms.internal.measurement.zzfo zze(int) -> zze
    1:2:com.google.android.gms.internal.measurement.zzfx zzf(java.lang.Iterable) -> zzf
    1:2:com.google.android.gms.internal.measurement.zzfx zzg(java.lang.Iterable) -> zzg
    1:2:com.google.android.gms.internal.measurement.zzfx zzh(java.lang.Iterable) -> zzh
    1:2:com.google.android.gms.internal.measurement.zzfx zzi(java.lang.Iterable) -> zzi
    1:2:com.google.android.gms.internal.measurement.zzfx zzj(com.google.android.gms.internal.measurement.zzfn) -> zzj
    1:2:com.google.android.gms.internal.measurement.zzfx zzk(com.google.android.gms.internal.measurement.zzgg) -> zzk
    1:2:com.google.android.gms.internal.measurement.zzfx zzl(com.google.android.gms.internal.measurement.zzgh) -> zzl
    1:2:com.google.android.gms.internal.measurement.zzfx zzm() -> zzm
    1:2:com.google.android.gms.internal.measurement.zzfx zzn() -> zzn
    1:2:com.google.android.gms.internal.measurement.zzfx zzo() -> zzo
    1:2:com.google.android.gms.internal.measurement.zzfx zzp() -> zzp
    1:2:com.google.android.gms.internal.measurement.zzfx zzq() -> zzq
    1:2:com.google.android.gms.internal.measurement.zzfx zzr() -> zzr
    1:2:com.google.android.gms.internal.measurement.zzfx zzs() -> zzs
    1:2:com.google.android.gms.internal.measurement.zzfx zzt() -> zzt
    1:2:com.google.android.gms.internal.measurement.zzfx zzu() -> zzu
    1:2:com.google.android.gms.internal.measurement.zzfx zzv() -> zzv
    1:2:com.google.android.gms.internal.measurement.zzfx zzw(int) -> zzw
    1:2:com.google.android.gms.internal.measurement.zzfx zzx(int) -> zzx
    1:2:com.google.android.gms.internal.measurement.zzfx zzy(java.lang.String) -> zzy
    1:2:com.google.android.gms.internal.measurement.zzfx zzz(long) -> zzz
com.google.android.gms.internal.measurement.zzfy -> com.google.android.gms.internal.measurement.zzfy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:3:void zzT(com.google.android.gms.internal.measurement.zzfy,int,com.google.android.gms.internal.measurement.zzfo) -> zzT
    1:1:void zzU(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzU
    1:1:void zzV(com.google.android.gms.internal.measurement.zzfy,com.google.android.gms.internal.measurement.zzgb) -> zzV
    1:4:void zzW(com.google.android.gms.internal.measurement.zzfy,java.lang.Iterable) -> zzW
    1:3:void zzX(com.google.android.gms.internal.measurement.zzfy,com.google.android.gms.internal.measurement.zzfo) -> zzX
    1:1:void zzaA(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaA
    1:1:void zzaE(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaE
    1:1:void zzaK(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaK
    1:3:void zzaM(com.google.android.gms.internal.measurement.zzfy,java.lang.Iterable) -> zzaM
    1:1:void zzaN(com.google.android.gms.internal.measurement.zzfy) -> zzaN
    1:1:void zzaO(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaO
    1:1:void zzaa(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaa
    1:1:void zzab(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzab
    1:2:void zzac(com.google.android.gms.internal.measurement.zzfy,java.lang.Iterable) -> zzac
    1:1:void zzad(com.google.android.gms.internal.measurement.zzfy) -> zzad
    1:2:void zzae(com.google.android.gms.internal.measurement.zzfy,int) -> zzae
    1:3:void zzaf(com.google.android.gms.internal.measurement.zzfy,int,com.google.android.gms.internal.measurement.zzgh) -> zzaf
    1:3:void zzag(com.google.android.gms.internal.measurement.zzfy,com.google.android.gms.internal.measurement.zzgh) -> zzag
    1:2:void zzah(com.google.android.gms.internal.measurement.zzfy,java.lang.Iterable) -> zzah
    1:2:void zzai(com.google.android.gms.internal.measurement.zzfy,int) -> zzai
    1:1:void zzar(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzar
    1:1:void zzas(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzas
    1:1:void zzat(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzat
    1:1:void zzav(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzav
    1:1:void zzaw(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzaw
    1:1:void zzax(com.google.android.gms.internal.measurement.zzfy,java.lang.String) -> zzax
    1:2:void zzbI() -> zzbI
    1:2:void zzbJ() -> zzbJ
    1:1:int zzc() -> zzc
    1:1:int zzg() -> zzg
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
    1:1:com.google.android.gms.internal.measurement.zzfo zzt(int) -> zzt
    1:1:com.google.android.gms.internal.measurement.zzfx zzu() -> zzu
    1:1:com.google.android.gms.internal.measurement.zzgh zzw(int) -> zzw
com.google.android.gms.internal.measurement.zzfz -> com.google.android.gms.internal.measurement.zzfz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzfz zza(com.google.android.gms.internal.measurement.zzfp) -> zza
com.google.android.gms.internal.measurement.zzg -> com.google.android.gms.internal.measurement.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzax) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzg zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzap zzb(com.google.android.gms.internal.measurement.zzap) -> zzb
    1:5:com.google.android.gms.internal.measurement.zzap zzc(com.google.android.gms.internal.measurement.zzae) -> zzc
    1:4:com.google.android.gms.internal.measurement.zzap zzd(java.lang.String) -> zzd
    1:3:void zze(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zze
    1:2:void zzf(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zzf
    1:5:void zzg(java.lang.String,com.google.android.gms.internal.measurement.zzap) -> zzg
    1:2:boolean zzh(java.lang.String) -> zzh
com.google.android.gms.internal.measurement.zzga -> com.google.android.gms.internal.measurement.zzga:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzgb -> com.google.android.gms.internal.measurement.zzgb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzfz zza() -> zza
    1:4:void zzc(com.google.android.gms.internal.measurement.zzgb,com.google.android.gms.internal.measurement.zzfq) -> zzc
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgc -> com.google.android.gms.internal.measurement.zzgc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzgc zza(java.lang.Iterable) -> zza
    1:2:com.google.android.gms.internal.measurement.zzgc zzb(java.lang.Iterable) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzgc zzc(java.lang.Iterable) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzgc zzd(java.lang.Iterable) -> zzd
    1:2:com.google.android.gms.internal.measurement.zzgc zze() -> zze
    1:2:com.google.android.gms.internal.measurement.zzgc zzf() -> zzf
    1:2:com.google.android.gms.internal.measurement.zzgc zzg(int) -> zzg
    1:2:com.google.android.gms.internal.measurement.zzgc zzh(int) -> zzh
com.google.android.gms.internal.measurement.zzgd -> com.google.android.gms.internal.measurement.zzgd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:int zza() -> zza
    1:1:int zzb() -> zzb
    1:1:int zzc() -> zzc
    1:1:int zzd() -> zzd
    1:1:com.google.android.gms.internal.measurement.zzfm zze(int) -> zze
    1:1:com.google.android.gms.internal.measurement.zzgc zzf() -> zzf
    1:1:com.google.android.gms.internal.measurement.zzgf zzi(int) -> zzi
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
    1:3:void zzo(com.google.android.gms.internal.measurement.zzgd,java.lang.Iterable) -> zzo
    1:1:void zzp(com.google.android.gms.internal.measurement.zzgd) -> zzp
    1:3:void zzq(com.google.android.gms.internal.measurement.zzgd,java.lang.Iterable) -> zzq
    1:1:void zzr(com.google.android.gms.internal.measurement.zzgd) -> zzr
    1:2:void zzs(com.google.android.gms.internal.measurement.zzgd,java.lang.Iterable) -> zzs
    1:2:void zzt(com.google.android.gms.internal.measurement.zzgd,int) -> zzt
    1:2:void zzu(com.google.android.gms.internal.measurement.zzgd,java.lang.Iterable) -> zzu
    1:2:void zzv(com.google.android.gms.internal.measurement.zzgd,int) -> zzv
    1:2:void zzw() -> zzw
    1:2:void zzx() -> zzx
com.google.android.gms.internal.measurement.zzge -> com.google.android.gms.internal.measurement.zzge:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzge zza(java.lang.Iterable) -> zza
    1:2:com.google.android.gms.internal.measurement.zzge zzb(int) -> zzb
com.google.android.gms.internal.measurement.zzgf -> com.google.android.gms.internal.measurement.zzgf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zza() -> zza
    1:1:long zzc(int) -> zzc
    1:1:com.google.android.gms.internal.measurement.zzge zzd() -> zzd
    1:3:void zzh(com.google.android.gms.internal.measurement.zzgf,java.lang.Iterable) -> zzh
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgg -> com.google.android.gms.internal.measurement.zzgg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzff) -> <init>
    1:2:com.google.android.gms.internal.measurement.zzgg zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzgg zzb() -> zzb
    1:2:com.google.android.gms.internal.measurement.zzgg zzc() -> zzc
    1:2:com.google.android.gms.internal.measurement.zzgg zzd(double) -> zzd
    1:2:com.google.android.gms.internal.measurement.zzgg zze(long) -> zze
    1:2:com.google.android.gms.internal.measurement.zzgg zzf(java.lang.String) -> zzf
    1:2:com.google.android.gms.internal.measurement.zzgg zzg(long) -> zzg
    1:2:com.google.android.gms.internal.measurement.zzgg zzh(java.lang.String) -> zzh
com.google.android.gms.internal.measurement.zzgh -> com.google.android.gms.internal.measurement.zzgh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzgg zzd() -> zzd
    1:1:void zzi(com.google.android.gms.internal.measurement.zzgh,java.lang.String) -> zzi
    1:1:void zzj(com.google.android.gms.internal.measurement.zzgh,java.lang.String) -> zzj
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgi -> com.google.android.gms.internal.measurement.zzgi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzgj -> com.google.android.gms.internal.measurement.zzgj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzgi) -> <init>
com.google.android.gms.internal.measurement.zzgk -> com.google.android.gms.internal.measurement.zzgk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:int zza() -> zza
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgl -> com.google.android.gms.internal.measurement.zzgl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzgi) -> <init>
com.google.android.gms.internal.measurement.zzgm -> com.google.android.gms.internal.measurement.zzgm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgn -> com.google.android.gms.internal.measurement.zzgn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzgi) -> <init>
com.google.android.gms.internal.measurement.zzgo -> com.google.android.gms.internal.measurement.zzgo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:com.google.android.gms.internal.measurement.zzgk zza() -> zza
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgp -> com.google.android.gms.internal.measurement.zzgp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    2:2:void <init>(com.google.android.gms.internal.measurement.zzgi) -> <init>
com.google.android.gms.internal.measurement.zzgq -> com.google.android.gms.internal.measurement.zzgq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzgr -> com.google.android.gms.internal.measurement.zzgr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzgs -> com.google.android.gms.internal.measurement.zzgs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzgt -> com.google.android.gms.internal.measurement.zzgt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    0:4:java.lang.Object zzl(int,java.lang.Object,java.lang.Object) -> zzl
com.google.android.gms.internal.measurement.zzgu -> com.google.android.gms.internal.measurement.zzgu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(android.os.Handler) -> <init>
    1:1:void onChange(boolean) -> onChange
com.google.android.gms.internal.measurement.zzgv -> com.google.android.gms.internal.measurement.zzgv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void <clinit>() -> <clinit>
    1:33:java.lang.String zza(android.content.ContentResolver,java.lang.String,java.lang.String) -> zza
    1:2:void zzc(java.lang.Object,java.lang.String,java.lang.String) -> zzc
com.google.android.gms.internal.measurement.zzgw -> com.google.android.gms.internal.measurement.zzgw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzgx -> com.google.android.gms.internal.measurement.zzgx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    0:1:void <init>(android.content.Context,com.google.android.gms.internal.measurement.zzib) -> <init>
    1:4:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.google.android.gms.internal.measurement.zzgy -> com.google.android.gms.internal.measurement.zzgy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzgz -> com.google.android.gms.internal.measurement.zzgz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzha,android.os.Handler) -> <init>
    1:1:void onChange(boolean) -> onChange
com.google.android.gms.internal.measurement.zzh -> com.google.android.gms.internal.measurement.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:double zza(double) -> zza
    1:2:int zzb(double) -> zzb
    1:3:int zzc(com.google.android.gms.internal.measurement.zzg) -> zzc
    1:1:long zzd(double) -> zzd
    1:3:com.google.android.gms.internal.measurement.zzbl zze(java.lang.String) -> zze
    1:12:java.lang.Object zzf(com.google.android.gms.internal.measurement.zzap) -> zzf
    1:4:java.util.Map zzg(com.google.android.gms.internal.measurement.zzam) -> zzg
    1:3:void zzh(java.lang.String,int,java.util.List) -> zzh
    1:3:void zzi(java.lang.String,int,java.util.List) -> zzi
    1:3:void zzj(java.lang.String,int,java.util.List) -> zzj
    1:2:boolean zzk(com.google.android.gms.internal.measurement.zzap) -> zzk
    1:9:boolean zzl(com.google.android.gms.internal.measurement.zzap,com.google.android.gms.internal.measurement.zzap) -> zzl
com.google.android.gms.internal.measurement.zzha -> com.google.android.gms.internal.measurement.zzha:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    1:5:com.google.android.gms.internal.measurement.zzha zza(android.content.ContentResolver,android.net.Uri) -> zza
    1:1:java.lang.Object zzb(java.lang.String) -> zzb
    1:8:java.util.Map zzc() -> zzc
    1:10:java.util.Map zzd() -> zzd
    0:3:void zze() -> zze
    1:6:void zzf() -> zzf
com.google.android.gms.internal.measurement.zzhb -> com.google.android.gms.internal.measurement.zzhb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhc -> com.google.android.gms.internal.measurement.zzhc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:java.lang.Object zza(com.google.android.gms.internal.measurement.zzhd) -> zza
com.google.android.gms.internal.measurement.zzhd -> com.google.android.gms.internal.measurement.zzhd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhe -> com.google.android.gms.internal.measurement.zzhe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhf -> com.google.android.gms.internal.measurement.zzhf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhg -> com.google.android.gms.internal.measurement.zzhg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhh,android.os.Handler) -> <init>
    1:1:void onChange(boolean) -> onChange
com.google.android.gms.internal.measurement.zzhh -> com.google.android.gms.internal.measurement.zzhh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(android.content.Context) -> <init>
    1:4:com.google.android.gms.internal.measurement.zzhh zza(android.content.Context) -> zza
    1:1:java.lang.Object zzb(java.lang.String) -> zzb
    1:2:java.lang.String zzc(java.lang.String) -> zzc
    1:1:java.lang.String zzd(java.lang.String) -> zzd
    0:2:void zze() -> zze
com.google.android.gms.internal.measurement.zzhi -> com.google.android.gms.internal.measurement.zzhi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:java.lang.String zza(android.net.Uri,java.lang.String,java.lang.String,java.lang.String) -> zza
com.google.android.gms.internal.measurement.zzhj -> com.google.android.gms.internal.measurement.zzhj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:18:boolean zza(android.content.Context,android.net.Uri) -> zza
com.google.android.gms.internal.measurement.zzhk -> com.google.android.gms.internal.measurement.zzhk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    0:3:android.net.Uri zza(java.lang.String) -> zza
com.google.android.gms.internal.measurement.zzhl -> com.google.android.gms.internal.measurement.zzhl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhm -> com.google.android.gms.internal.measurement.zzhm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:37:java.lang.Object zza() -> zza
com.google.android.gms.internal.measurement.zzhn -> com.google.android.gms.internal.measurement.zzhn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhr,java.lang.String,java.lang.Long,boolean) -> <init>
    1:2:java.lang.Object zza(java.lang.Object) -> zza
com.google.android.gms.internal.measurement.zzho -> com.google.android.gms.internal.measurement.zzho:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhr,java.lang.String,java.lang.Boolean,boolean) -> <init>
    1:5:java.lang.Object zza(java.lang.Object) -> zza
com.google.android.gms.internal.measurement.zzhp -> com.google.android.gms.internal.measurement.zzhp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhr,java.lang.String,java.lang.Double,boolean) -> <init>
    1:2:java.lang.Object zza(java.lang.Object) -> zza
com.google.android.gms.internal.measurement.zzhq -> com.google.android.gms.internal.measurement.zzhq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhr,java.lang.String,java.lang.String,boolean) -> <init>
com.google.android.gms.internal.measurement.zzhr -> com.google.android.gms.internal.measurement.zzhr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(android.net.Uri) -> <init>
    1:3:com.google.android.gms.internal.measurement.zzhr zza() -> zza
    1:2:com.google.android.gms.internal.measurement.zzhu zzb(java.lang.String,double) -> zzb
    1:2:com.google.android.gms.internal.measurement.zzhu zzc(java.lang.String,long) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzhu zzd(java.lang.String,java.lang.String) -> zzd
    1:2:com.google.android.gms.internal.measurement.zzhu zze(java.lang.String,boolean) -> zze
com.google.android.gms.internal.measurement.zzhs -> com.google.android.gms.internal.measurement.zzhs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzht -> com.google.android.gms.internal.measurement.zzht:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzhu -> com.google.android.gms.internal.measurement.zzhu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    0:1:void <init>(com.google.android.gms.internal.measurement.zzhr,java.lang.String,java.lang.Object,boolean,com.google.android.gms.internal.measurement.zzht) -> <init>
    0:30:java.lang.Object zzb() -> zzb
    1:1:java.lang.String zzc() -> zzc
    1:9:void zzd(android.content.Context) -> zzd
    1:1:void zze() -> zze
com.google.android.gms.internal.measurement.zzhv -> com.google.android.gms.internal.measurement.zzhv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:9:com.google.android.gms.internal.measurement.zzhv zza(android.content.Context,java.lang.String) -> zza
    0:3:void zzc() -> zzc
com.google.android.gms.internal.measurement.zzhw -> com.google.android.gms.internal.measurement.zzhw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzhl,byte[]) -> <init>
com.google.android.gms.internal.measurement.zzhx -> com.google.android.gms.internal.measurement.zzhx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.internal.measurement.zzhy -> com.google.android.gms.internal.measurement.zzhy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzhz -> com.google.android.gms.internal.measurement.zzhz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:com.google.android.gms.internal.measurement.zzhz zzd(java.lang.Object) -> zzd
com.google.android.gms.internal.measurement.zzi -> com.google.android.gms.internal.measurement.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:12:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzgt) -> zza
    1:26:com.google.android.gms.internal.measurement.zzap zzb(java.lang.Object) -> zzb
com.google.android.gms.internal.measurement.zzia -> com.google.android.gms.internal.measurement.zzia:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.google.android.gms.internal.measurement.zzib -> com.google.android.gms.internal.measurement.zzib:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzic -> com.google.android.gms.internal.measurement.zzic:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    0:1:void <init>(com.google.android.gms.internal.measurement.zzib) -> <init>
    1:1:java.lang.String toString() -> toString
    1:3:java.lang.Object zza() -> zza
com.google.android.gms.internal.measurement.zzid -> com.google.android.gms.internal.measurement.zzid:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    0:1:void <init>(com.google.android.gms.internal.measurement.zzib) -> <init>
    1:1:java.lang.String toString() -> toString
    1:3:java.lang.Object zza() -> zza
com.google.android.gms.internal.measurement.zzie -> com.google.android.gms.internal.measurement.zzie:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.google.android.gms.internal.measurement.zzif -> com.google.android.gms.internal.measurement.zzif:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:com.google.android.gms.internal.measurement.zzib zza(com.google.android.gms.internal.measurement.zzib) -> zza
    1:1:com.google.android.gms.internal.measurement.zzib zzb(java.lang.Object) -> zzb
com.google.android.gms.internal.measurement.zzig -> com.google.android.gms.internal.measurement.zzig:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:com.google.android.gms.internal.measurement.zzlf zzau(com.google.android.gms.internal.measurement.zzlg) -> zzau
    1:1:com.google.android.gms.internal.measurement.zzlf zzav(byte[]) -> zzav
    1:1:com.google.android.gms.internal.measurement.zzlf zzaw(byte[],com.google.android.gms.internal.measurement.zzjl) -> zzaw
com.google.android.gms.internal.measurement.zzih -> com.google.android.gms.internal.measurement.zzih:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:24:void zzbq(java.lang.Iterable,java.util.List) -> zzbq
    1:6:byte[] zzbs() -> zzbs
com.google.android.gms.internal.measurement.zzii -> com.google.android.gms.internal.measurement.zzii:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>() -> <init>
    3:4:boolean add(java.lang.Object) -> add
    1:2:boolean addAll(int,java.util.Collection) -> addAll
    3:4:boolean addAll(java.util.Collection) -> addAll
    1:2:void clear() -> clear
    1:7:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    3:5:boolean remove(java.lang.Object) -> remove
    1:2:boolean removeAll(java.util.Collection) -> removeAll
    1:2:boolean retainAll(java.util.Collection) -> retainAll
    0:1:void zzbM() -> zzbM
com.google.android.gms.internal.measurement.zzij -> com.google.android.gms.internal.measurement.zzij:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzik -> com.google.android.gms.internal.measurement.zzik:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    0:3:void <init>(com.google.android.gms.internal.measurement.zzjl) -> <init>
com.google.android.gms.internal.measurement.zzil -> com.google.android.gms.internal.measurement.zzil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:6:int zza(byte[],int,com.google.android.gms.internal.measurement.zzik) -> zza
    1:1:int zzb(byte[],int) -> zzb
    1:4:int zzc(com.google.android.gms.internal.measurement.zzlr,byte[],int,int,int,com.google.android.gms.internal.measurement.zzik) -> zzc
    1:6:int zzd(com.google.android.gms.internal.measurement.zzlr,byte[],int,int,com.google.android.gms.internal.measurement.zzik) -> zzd
    1:5:int zze(com.google.android.gms.internal.measurement.zzlr,int,byte[],int,int,com.google.android.gms.internal.measurement.zzkg,com.google.android.gms.internal.measurement.zzik) -> zze
    1:5:int zzf(byte[],int,com.google.android.gms.internal.measurement.zzkg,com.google.android.gms.internal.measurement.zzik) -> zzf
    1:3:int zzg(byte[],int,com.google.android.gms.internal.measurement.zzik) -> zzg
    1:3:int zzh(byte[],int,com.google.android.gms.internal.measurement.zzik) -> zzh
    0:16:int zzi(int,byte[],int,int,com.google.android.gms.internal.measurement.zzmj,com.google.android.gms.internal.measurement.zzik) -> zzi
    1:2:int zzj(byte[],int,com.google.android.gms.internal.measurement.zzik) -> zzj
    1:5:int zzk(int,byte[],int,com.google.android.gms.internal.measurement.zzik) -> zzk
    1:6:int zzl(int,byte[],int,int,com.google.android.gms.internal.measurement.zzkg,com.google.android.gms.internal.measurement.zzik) -> zzl
    1:3:int zzm(byte[],int,com.google.android.gms.internal.measurement.zzik) -> zzm
    1:1:long zzn(byte[],int) -> zzn
com.google.android.gms.internal.measurement.zzim -> com.google.android.gms.internal.measurement.zzim:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzin -> com.google.android.gms.internal.measurement.zzin:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzio -> com.google.android.gms.internal.measurement.zzio:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    0:2:byte zza() -> zza
com.google.android.gms.internal.measurement.zzip -> com.google.android.gms.internal.measurement.zzip:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zziq -> com.google.android.gms.internal.measurement.zziq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:5:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.internal.measurement.zzir -> com.google.android.gms.internal.measurement.zzir:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:java.lang.Object next() -> next
    1:1:void remove() -> remove
com.google.android.gms.internal.measurement.zzis -> com.google.android.gms.internal.measurement.zzis:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <init>(byte[],int,int) -> <init>
    1:3:byte zza(int) -> zza
    1:1:byte zzb(int) -> zzb
com.google.android.gms.internal.measurement.zzit -> com.google.android.gms.internal.measurement.zzit:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zziu -> com.google.android.gms.internal.measurement.zziu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>() -> <init>
com.google.android.gms.internal.measurement.zziv -> com.google.android.gms.internal.measurement.zziv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <init>(byte[]) -> <init>
    1:15:boolean equals(java.lang.Object) -> equals
    1:1:byte zza(int) -> zza
    1:1:byte zzb(int) -> zzb
    1:1:int zze(int,int,int) -> zze
    1:2:com.google.android.gms.internal.measurement.zziy zzf(int,int) -> zzf
    1:1:java.lang.String zzg(java.nio.charset.Charset) -> zzg
    1:1:void zzh(com.google.android.gms.internal.measurement.zzin) -> zzh
    1:1:boolean zzi() -> zzi
com.google.android.gms.internal.measurement.zziw -> com.google.android.gms.internal.measurement.zziw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzix -> com.google.android.gms.internal.measurement.zzix:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zziy -> com.google.android.gms.internal.measurement.zziy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:int hashCode() -> hashCode
    1:1:java.util.Iterator iterator() -> iterator
    1:4:java.lang.String toString() -> toString
    0:3:int zzj(int,int,int) -> zzj
    1:3:com.google.android.gms.internal.measurement.zziy zzl(byte[],int,int) -> zzl
    1:1:com.google.android.gms.internal.measurement.zziy zzm(java.lang.String) -> zzm
    0:1:java.lang.String zzn(java.nio.charset.Charset) -> zzn
com.google.android.gms.internal.measurement.zziz -> com.google.android.gms.internal.measurement.zziz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzj -> com.google.android.gms.internal.measurement.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:1:void zza(java.lang.String,java.util.concurrent.Callable) -> zza
com.google.android.gms.internal.measurement.zzja -> com.google.android.gms.internal.measurement.zzja:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(byte[],int,int,boolean,com.google.android.gms.internal.measurement.zziz) -> <init>
com.google.android.gms.internal.measurement.zzjb -> com.google.android.gms.internal.measurement.zzjb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjc -> com.google.android.gms.internal.measurement.zzjc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjd -> com.google.android.gms.internal.measurement.zzjd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    0:3:void <init>(byte[],int,int) -> <init>
    0:2:void zzb(byte) -> zzb
    0:2:void zzc(byte[],int,int) -> zzc
    1:2:void zzd(int,boolean) -> zzd
    1:3:void zze(int,com.google.android.gms.internal.measurement.zziy) -> zze
    1:2:void zzf(int,int) -> zzf
    1:5:void zzg(int) -> zzg
    1:2:void zzh(int,long) -> zzh
    1:9:void zzi(long) -> zzi
    1:2:void zzj(int,int) -> zzj
    1:2:void zzk(int) -> zzk
    1:1:void zzl(byte[],int,int) -> zzl
    1:2:void zzm(int,java.lang.String) -> zzm
    1:9:void zzn(java.lang.String) -> zzn
    1:1:void zzo(int,int) -> zzo
    1:2:void zzp(int,int) -> zzp
    1:4:void zzq(int) -> zzq
    1:2:void zzr(int,long) -> zzr
    1:5:void zzs(long) -> zzs
com.google.android.gms.internal.measurement.zzje -> com.google.android.gms.internal.measurement.zzje:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    2:2:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    3:3:void <init>(java.lang.Throwable) -> <init>
com.google.android.gms.internal.measurement.zzjf -> com.google.android.gms.internal.measurement.zzjf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjg -> com.google.android.gms.internal.measurement.zzjg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:2:com.google.android.gms.internal.measurement.zzjg zzC(byte[]) -> zzC
    0:1:void zzD() -> zzD
    1:6:void zzE(java.lang.String,com.google.android.gms.internal.measurement.zzmw) -> zzE
    1:1:int zzt(com.google.android.gms.internal.measurement.zziy) -> zzt
    1:2:int zzu(int,com.google.android.gms.internal.measurement.zzlg,com.google.android.gms.internal.measurement.zzlr) -> zzu
    1:2:int zzx(com.google.android.gms.internal.measurement.zzlg,com.google.android.gms.internal.measurement.zzlr) -> zzx
    1:3:int zzy(java.lang.String) -> zzy
com.google.android.gms.internal.measurement.zzjh -> com.google.android.gms.internal.measurement.zzjh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzjg) -> <init>
    1:1:void zzA(int,int) -> zzA
    1:8:void zzB(int,java.util.List,boolean) -> zzB
    1:1:void zzC(int,long) -> zzC
    1:8:void zzD(int,java.util.List,boolean) -> zzD
    1:1:void zzE(int) -> zzE
    1:1:void zzF(int,java.lang.String) -> zzF
    1:9:void zzG(int,java.util.List) -> zzG
    1:1:void zzH(int,int) -> zzH
    1:8:void zzI(int,java.util.List,boolean) -> zzI
    1:1:void zzJ(int,long) -> zzJ
    1:8:void zzK(int,java.util.List,boolean) -> zzK
    1:1:com.google.android.gms.internal.measurement.zzjh zza(com.google.android.gms.internal.measurement.zzjg) -> zza
    1:1:void zzb(int,boolean) -> zzb
    1:8:void zzc(int,java.util.List,boolean) -> zzc
    1:1:void zzd(int,com.google.android.gms.internal.measurement.zziy) -> zzd
    1:2:void zze(int,java.util.List) -> zze
    1:2:void zzf(int,double) -> zzf
    1:10:void zzg(int,java.util.List,boolean) -> zzg
    1:1:void zzh(int) -> zzh
    1:1:void zzi(int,int) -> zzi
    1:8:void zzj(int,java.util.List,boolean) -> zzj
    1:1:void zzk(int,int) -> zzk
    1:8:void zzl(int,java.util.List,boolean) -> zzl
    1:1:void zzm(int,long) -> zzm
    1:8:void zzn(int,java.util.List,boolean) -> zzn
    1:2:void zzo(int,float) -> zzo
    1:10:void zzp(int,java.util.List,boolean) -> zzp
    1:2:void zzq(int,java.lang.Object,com.google.android.gms.internal.measurement.zzlr) -> zzq
    1:1:void zzr(int,int) -> zzr
    1:8:void zzs(int,java.util.List,boolean) -> zzs
    1:1:void zzt(int,long) -> zzt
    1:8:void zzu(int,java.util.List,boolean) -> zzu
    1:5:void zzv(int,java.lang.Object,com.google.android.gms.internal.measurement.zzlr) -> zzv
    1:1:void zzw(int,int) -> zzw
    1:8:void zzx(int,java.util.List,boolean) -> zzx
    1:1:void zzy(int,long) -> zzy
    1:8:void zzz(int,java.util.List,boolean) -> zzz
com.google.android.gms.internal.measurement.zzji -> com.google.android.gms.internal.measurement.zzji:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjj -> com.google.android.gms.internal.measurement.zzjj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjk -> com.google.android.gms.internal.measurement.zzjk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
com.google.android.gms.internal.measurement.zzjl -> com.google.android.gms.internal.measurement.zzjl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    2:2:void <init>(boolean) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzjl zza() -> zza
    1:4:com.google.android.gms.internal.measurement.zzjl zzb() -> zzb
    1:2:com.google.android.gms.internal.measurement.zzjx zzc(com.google.android.gms.internal.measurement.zzlg,int) -> zzc
com.google.android.gms.internal.measurement.zzjm -> com.google.android.gms.internal.measurement.zzjm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjn -> com.google.android.gms.internal.measurement.zzjn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:com.google.android.gms.internal.measurement.zzjq zza(java.lang.Object) -> zza
    1:1:void zzb(java.lang.Object) -> zzb
    1:1:boolean zzc(com.google.android.gms.internal.measurement.zzlg) -> zzc
com.google.android.gms.internal.measurement.zzjo -> com.google.android.gms.internal.measurement.zzjo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    0:1:com.google.android.gms.internal.measurement.zzjm zza() -> zza
com.google.android.gms.internal.measurement.zzjq -> com.google.android.gms.internal.measurement.zzjq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjr -> com.google.android.gms.internal.measurement.zzjr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:55:void <clinit>() -> <clinit>
    1:5:void <init>(java.lang.String,int,int,int,com.google.android.gms.internal.measurement.zzkk) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzjr[] values() -> values
com.google.android.gms.internal.measurement.zzjs -> com.google.android.gms.internal.measurement.zzjs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjt -> com.google.android.gms.internal.measurement.zzjt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:28:com.google.android.gms.internal.measurement.zzjl zzb(java.lang.Class) -> zzb
com.google.android.gms.internal.measurement.zzju -> com.google.android.gms.internal.measurement.zzju:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:6:com.google.android.gms.internal.measurement.zzld zzb(java.lang.Class) -> zzb
    1:1:boolean zzc(java.lang.Class) -> zzc
com.google.android.gms.internal.measurement.zzjv -> com.google.android.gms.internal.measurement.zzjv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzjz) -> <init>
    1:1:java.lang.Object clone() -> clone
    1:2:void zza(com.google.android.gms.internal.measurement.zzjz,com.google.android.gms.internal.measurement.zzjz) -> zza
    1:7:com.google.android.gms.internal.measurement.zzjz zzaA() -> zzaA
    1:2:com.google.android.gms.internal.measurement.zzjz zzaB() -> zzaB
    1:1:com.google.android.gms.internal.measurement.zzlg zzaC() -> zzaC
    1:2:void zzaE() -> zzaE
    1:2:com.google.android.gms.internal.measurement.zzig zzar(com.google.android.gms.internal.measurement.zzih) -> zzar
    1:1:com.google.android.gms.internal.measurement.zzig zzas(byte[],int,int) -> zzas
    1:1:com.google.android.gms.internal.measurement.zzig zzat(byte[],int,int,com.google.android.gms.internal.measurement.zzjl) -> zzat
    1:3:com.google.android.gms.internal.measurement.zzjv zzax() -> zzax
    1:2:com.google.android.gms.internal.measurement.zzjv zzay(com.google.android.gms.internal.measurement.zzjz) -> zzay
    1:6:com.google.android.gms.internal.measurement.zzjv zzaz(byte[],int,int,com.google.android.gms.internal.measurement.zzjl) -> zzaz
com.google.android.gms.internal.measurement.zzjw -> com.google.android.gms.internal.measurement.zzjw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjx -> com.google.android.gms.internal.measurement.zzjx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzjz -> com.google.android.gms.internal.measurement.zzjz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
    1:1:com.google.android.gms.internal.measurement.zzkg zzbA() -> zzbA
    1:2:com.google.android.gms.internal.measurement.zzkg zzbB(com.google.android.gms.internal.measurement.zzkg) -> zzbB
    1:2:com.google.android.gms.internal.measurement.zzlf zzbC() -> zzbC
    1:3:com.google.android.gms.internal.measurement.zzlf zzbD() -> zzbD
    1:8:java.lang.Object zzbE(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> zzbE
    1:1:java.lang.Object zzbF(com.google.android.gms.internal.measurement.zzlg,java.lang.String,java.lang.Object[]) -> zzbF
    1:1:void zzbG(java.lang.Class,com.google.android.gms.internal.measurement.zzjz) -> zzbG
    1:3:void zzbH(com.google.android.gms.internal.measurement.zzjg) -> zzbH
    1:2:com.google.android.gms.internal.measurement.zzlg zzbL() -> zzbL
    1:1:int zzbt() -> zzbt
    1:2:com.google.android.gms.internal.measurement.zzjv zzbu() -> zzbu
    1:3:com.google.android.gms.internal.measurement.zzjv zzbv() -> zzbv
    1:8:com.google.android.gms.internal.measurement.zzjz zzbw(java.lang.Class) -> zzbw
    1:1:com.google.android.gms.internal.measurement.zzke zzbx() -> zzbx
    1:1:com.google.android.gms.internal.measurement.zzkf zzby() -> zzby
    1:2:com.google.android.gms.internal.measurement.zzkf zzbz(com.google.android.gms.internal.measurement.zzkf) -> zzbz
com.google.android.gms.internal.measurement.zzk -> com.google.android.gms.internal.measurement.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzab) -> <init>
    1:9:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzka -> com.google.android.gms.internal.measurement.zzka:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    2:2:void <init>(int[],int) -> <init>
    1:11:void add(int,java.lang.Object) -> add
    12:13:boolean add(java.lang.Object) -> add
    1:11:boolean addAll(java.util.Collection) -> addAll
    1:1:boolean contains(java.lang.Object) -> contains
    1:6:boolean equals(java.lang.Object) -> equals
    1:3:java.lang.Object get(int) -> get
    1:1:int hashCode() -> hashCode
    1:3:int indexOf(java.lang.Object) -> indexOf
    1:6:java.lang.Object remove(int) -> remove
    1:4:void removeRange(int,int) -> removeRange
    1:6:java.lang.Object set(int,java.lang.Object) -> set
    1:1:com.google.android.gms.internal.measurement.zzkg zzd(int) -> zzd
    1:2:int zze(int) -> zze
    0:2:com.google.android.gms.internal.measurement.zzke zzg(int) -> zzg
    1:5:void zzh(int) -> zzh
    1:1:java.lang.String zzi(int) -> zzi
    0:1:void zzj(int) -> zzj
com.google.android.gms.internal.measurement.zzkc -> com.google.android.gms.internal.measurement.zzkc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkd -> com.google.android.gms.internal.measurement.zzkd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzke -> com.google.android.gms.internal.measurement.zzke:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkf -> com.google.android.gms.internal.measurement.zzkf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkg -> com.google.android.gms.internal.measurement.zzkg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkh -> com.google.android.gms.internal.measurement.zzkh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:8:void <clinit>() -> <clinit>
    1:2:int zzb(byte[]) -> zzb
    1:1:int zzd(int,byte[],int,int) -> zzd
    0:1:java.lang.Object zze(java.lang.Object) -> zze
    0:1:java.lang.Object zzf(java.lang.Object,java.lang.String) -> zzf
    1:1:java.lang.Object zzg(java.lang.Object,java.lang.Object) -> zzg
    1:1:java.lang.String zzh(byte[]) -> zzh
    1:1:boolean zzi(byte[]) -> zzi
com.google.android.gms.internal.measurement.zzki -> com.google.android.gms.internal.measurement.zzki:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(java.lang.String) -> <init>
com.google.android.gms.internal.measurement.zzkj -> com.google.android.gms.internal.measurement.zzkj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(java.lang.String) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzki zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzkj zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zzkj zzc() -> zzc
    1:1:com.google.android.gms.internal.measurement.zzkj zzd() -> zzd
    1:1:com.google.android.gms.internal.measurement.zzkj zze() -> zze
    1:1:com.google.android.gms.internal.measurement.zzkj zzf() -> zzf
com.google.android.gms.internal.measurement.zzkk -> com.google.android.gms.internal.measurement.zzkk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:10:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class,java.lang.Object) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzkk[] values() -> values
com.google.android.gms.internal.measurement.zzkn -> com.google.android.gms.internal.measurement.zzkn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    2:3:void <init>(int) -> <init>
    4:4:void <init>(java.util.ArrayList) -> <init>
    1:4:void add(int,java.lang.Object) -> add
    1:4:boolean addAll(int,java.util.Collection) -> addAll
    5:5:boolean addAll(java.util.Collection) -> addAll
    1:3:void clear() -> clear
    1:1:java.lang.Object get(int) -> get
    1:4:java.lang.Object remove(int) -> remove
    1:4:java.lang.Object set(int,java.lang.Object) -> set
    1:1:int size() -> size
    1:5:com.google.android.gms.internal.measurement.zzkg zzd(int) -> zzd
    1:1:com.google.android.gms.internal.measurement.zzko zze() -> zze
    1:1:java.lang.Object zzf(int) -> zzf
    1:13:java.lang.String zzg(int) -> zzg
    1:1:java.util.List zzh() -> zzh
    1:3:void zzi(com.google.android.gms.internal.measurement.zziy) -> zzi
    1:6:java.lang.String zzj(java.lang.Object) -> zzj
com.google.android.gms.internal.measurement.zzko -> com.google.android.gms.internal.measurement.zzko:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkp -> com.google.android.gms.internal.measurement.zzkp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzkq -> com.google.android.gms.internal.measurement.zzkq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:9:void zza(java.lang.Object,long) -> zza
    1:27:void zzb(java.lang.Object,java.lang.Object,long) -> zzb
com.google.android.gms.internal.measurement.zzkr -> com.google.android.gms.internal.measurement.zzkr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzks -> com.google.android.gms.internal.measurement.zzks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void zza(java.lang.Object,long) -> zza
    1:8:void zzb(java.lang.Object,java.lang.Object,long) -> zzb
com.google.android.gms.internal.measurement.zzkt -> com.google.android.gms.internal.measurement.zzkt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzku -> com.google.android.gms.internal.measurement.zzku:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.internal.measurement.zzkv -> com.google.android.gms.internal.measurement.zzkv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    2:2:void <init>(long[],int) -> <init>
    1:11:void add(int,java.lang.Object) -> add
    12:13:boolean add(java.lang.Object) -> add
    1:11:boolean addAll(java.util.Collection) -> addAll
    1:1:boolean contains(java.lang.Object) -> contains
    1:6:boolean equals(java.lang.Object) -> equals
    1:3:java.lang.Object get(int) -> get
    1:1:int hashCode() -> hashCode
    1:3:int indexOf(java.lang.Object) -> indexOf
    1:6:java.lang.Object remove(int) -> remove
    1:4:void removeRange(int,int) -> removeRange
    1:6:java.lang.Object set(int,java.lang.Object) -> set
    1:2:long zza(int) -> zza
    1:1:com.google.android.gms.internal.measurement.zzkg zzd(int) -> zzd
    0:2:com.google.android.gms.internal.measurement.zzkf zze(int) -> zze
    1:5:void zzg(long) -> zzg
    1:1:java.lang.String zzh(int) -> zzh
    0:1:void zzi(int) -> zzi
com.google.android.gms.internal.measurement.zzkw -> com.google.android.gms.internal.measurement.zzkw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:com.google.android.gms.internal.measurement.zzld zzb(java.lang.Class) -> zzb
com.google.android.gms.internal.measurement.zzkx -> com.google.android.gms.internal.measurement.zzkx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:com.google.android.gms.internal.measurement.zzld zzb(java.lang.Class) -> zzb
    1:1:boolean zzc(java.lang.Class) -> zzc
com.google.android.gms.internal.measurement.zzky -> com.google.android.gms.internal.measurement.zzky:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:4:void <init>() -> <init>
    1:31:com.google.android.gms.internal.measurement.zzlr zza(java.lang.Class) -> zza
    1:1:boolean zzb(com.google.android.gms.internal.measurement.zzld) -> zzb
com.google.android.gms.internal.measurement.zzkz -> com.google.android.gms.internal.measurement.zzkz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzl -> com.google.android.gms.internal.measurement.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzab) -> <init>
    1:25:com.google.android.gms.internal.measurement.zzap zzbK(java.lang.String,com.google.android.gms.internal.measurement.zzg,java.util.List) -> zzbK
com.google.android.gms.internal.measurement.zzla -> com.google.android.gms.internal.measurement.zzla:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:void <init>(java.util.Map) -> <init>
    1:2:void clear() -> clear
    1:1:java.util.Set entrySet() -> entrySet
    1:8:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:4:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1:5:void putAll(java.util.Map) -> putAll
    1:2:java.lang.Object remove(java.lang.Object) -> remove
    1:1:com.google.android.gms.internal.measurement.zzla zzb() -> zzb
    1:3:void zzd(com.google.android.gms.internal.measurement.zzla) -> zzd
    1:5:int zzf(java.lang.Object) -> zzf
    0:1:void zzg() -> zzg
com.google.android.gms.internal.measurement.zzlb -> com.google.android.gms.internal.measurement.zzlb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:6:int zza(int,java.lang.Object,java.lang.Object) -> zza
    1:6:java.lang.Object zzb(java.lang.Object,java.lang.Object) -> zzb
com.google.android.gms.internal.measurement.zzlc -> com.google.android.gms.internal.measurement.zzlc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
com.google.android.gms.internal.measurement.zzld -> com.google.android.gms.internal.measurement.zzld:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzle -> com.google.android.gms.internal.measurement.zzle:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlf -> com.google.android.gms.internal.measurement.zzlf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlg -> com.google.android.gms.internal.measurement.zzlg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlh -> com.google.android.gms.internal.measurement.zzlh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzli -> com.google.android.gms.internal.measurement.zzli:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:4:java.lang.String zza(com.google.android.gms.internal.measurement.zzlg,java.lang.String) -> zza
    1:31:void zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object) -> zzb
    1:7:java.lang.String zzc(java.lang.String) -> zzc
    1:63:void zzd(com.google.android.gms.internal.measurement.zzlg,java.lang.StringBuilder,int) -> zzd
com.google.android.gms.internal.measurement.zzlj -> com.google.android.gms.internal.measurement.zzlj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(int[],java.lang.Object[],int,int,com.google.android.gms.internal.measurement.zzlg,boolean,boolean,int[],int,int,com.google.android.gms.internal.measurement.zzll,com.google.android.gms.internal.measurement.zzku,com.google.android.gms.internal.measurement.zzmi,com.google.android.gms.internal.measurement.zzjm,com.google.android.gms.internal.measurement.zzlb,byte[]) -> <init>
    1:1:int zzB(int) -> zzB
    1:1:long zzC(java.lang.Object,long) -> zzC
    1:1:com.google.android.gms.internal.measurement.zzkd zzD(int) -> zzD
    1:3:com.google.android.gms.internal.measurement.zzlr zzE(int) -> zzE
    1:1:java.lang.Object zzF(int) -> zzF
    1:6:java.lang.reflect.Field zzG(java.lang.Class,java.lang.String) -> zzG
    1:9:void zzH(java.lang.Object,java.lang.Object,int) -> zzH
    1:11:void zzI(java.lang.Object,java.lang.Object,int) -> zzI
    1:3:void zzJ(java.lang.Object,int) -> zzJ
    1:2:void zzK(java.lang.Object,int,int) -> zzK
    1:1:boolean zzL(java.lang.Object,java.lang.Object,int) -> zzL
    1:27:boolean zzM(java.lang.Object,int) -> zzM
    1:1:boolean zzN(java.lang.Object,int,int,int,int) -> zzN
    1:2:boolean zzO(java.lang.Object,int,com.google.android.gms.internal.measurement.zzlr) -> zzO
    1:2:boolean zzP(java.lang.Object,int,int) -> zzP
    1:1:boolean zzQ(java.lang.Object,long) -> zzQ
    1:168:void zzR(java.lang.Object,com.google.android.gms.internal.measurement.zzjh) -> zzR
    1:3:void zzS(com.google.android.gms.internal.measurement.zzjh,int,java.lang.Object,int) -> zzS
    1:3:void zzT(int,java.lang.Object,com.google.android.gms.internal.measurement.zzjh) -> zzT
    1:1:int zza(java.lang.Object) -> zza
    1:66:int zzb(java.lang.Object) -> zzb
    1:77:int zzc(java.lang.Object,byte[],int,int,int,com.google.android.gms.internal.measurement.zzik) -> zzc
    1:2:com.google.android.gms.internal.measurement.zzmj zzd(java.lang.Object) -> zzd
    1:1:java.lang.Object zze() -> zze
    1:8:void zzf(java.lang.Object) -> zzf
    1:66:void zzg(java.lang.Object,java.lang.Object) -> zzg
    1:2:void zzh(java.lang.Object,byte[],int,int,com.google.android.gms.internal.measurement.zzik) -> zzh
    1:59:boolean zzi(java.lang.Object,java.lang.Object) -> zzi
    1:23:boolean zzj(java.lang.Object) -> zzj
    1:4:com.google.android.gms.internal.measurement.zzlj zzk(java.lang.Class,com.google.android.gms.internal.measurement.zzld,com.google.android.gms.internal.measurement.zzll,com.google.android.gms.internal.measurement.zzku,com.google.android.gms.internal.measurement.zzmi,com.google.android.gms.internal.measurement.zzjm,com.google.android.gms.internal.measurement.zzlb) -> zzk
    1:70:com.google.android.gms.internal.measurement.zzlj zzl(com.google.android.gms.internal.measurement.zzlq,com.google.android.gms.internal.measurement.zzll,com.google.android.gms.internal.measurement.zzku,com.google.android.gms.internal.measurement.zzmi,com.google.android.gms.internal.measurement.zzjm,com.google.android.gms.internal.measurement.zzlb) -> zzl
    1:200:void zzm(java.lang.Object,com.google.android.gms.internal.measurement.zzjh) -> zzm
    1:1:double zzn(java.lang.Object,long) -> zzn
    1:1:float zzo(java.lang.Object,long) -> zzo
    1:162:int zzp(java.lang.Object) -> zzp
    1:182:int zzq(java.lang.Object) -> zzq
    1:1:int zzr(java.lang.Object,long) -> zzr
    1:8:int zzs(java.lang.Object,byte[],int,int,int,long,com.google.android.gms.internal.measurement.zzik) -> zzs
    1:57:int zzt(java.lang.Object,byte[],int,int,int,int,int,int,int,long,int,com.google.android.gms.internal.measurement.zzik) -> zzt
    1:53:int zzu(java.lang.Object,byte[],int,int,com.google.android.gms.internal.measurement.zzik) -> zzu
    1:142:int zzv(java.lang.Object,byte[],int,int,int,int,int,int,long,int,long,com.google.android.gms.internal.measurement.zzik) -> zzv
    1:1:int zzw(int) -> zzw
    1:1:int zzx(int,int) -> zzx
    1:1:int zzy(int) -> zzy
    1:2:int zzz(int,int) -> zzz
com.google.android.gms.internal.measurement.zzlk -> com.google.android.gms.internal.measurement.zzlk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzmi,com.google.android.gms.internal.measurement.zzjm,com.google.android.gms.internal.measurement.zzlg) -> <init>
    1:3:int zza(java.lang.Object) -> zza
    1:3:int zzb(java.lang.Object) -> zzb
    1:1:com.google.android.gms.internal.measurement.zzlk zzc(com.google.android.gms.internal.measurement.zzmi,com.google.android.gms.internal.measurement.zzjm,com.google.android.gms.internal.measurement.zzlg) -> zzc
    1:1:java.lang.Object zze() -> zze
    1:2:void zzf(java.lang.Object) -> zzf
    1:2:void zzg(java.lang.Object,java.lang.Object) -> zzg
    1:4:void zzh(java.lang.Object,byte[],int,int,com.google.android.gms.internal.measurement.zzik) -> zzh
    1:6:boolean zzi(java.lang.Object,java.lang.Object) -> zzi
    1:2:boolean zzj(java.lang.Object) -> zzj
    1:2:void zzm(java.lang.Object,com.google.android.gms.internal.measurement.zzjh) -> zzm
com.google.android.gms.internal.measurement.zzll -> com.google.android.gms.internal.measurement.zzll:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlm -> com.google.android.gms.internal.measurement.zzlm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
com.google.android.gms.internal.measurement.zzln -> com.google.android.gms.internal.measurement.zzln:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlo -> com.google.android.gms.internal.measurement.zzlo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:6:com.google.android.gms.internal.measurement.zzlr zzb(java.lang.Class) -> zzb
com.google.android.gms.internal.measurement.zzlp -> com.google.android.gms.internal.measurement.zzlp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    2:2:void <init>(java.lang.Object[],int) -> <init>
    1:9:void add(int,java.lang.Object) -> add
    10:14:boolean add(java.lang.Object) -> add
    1:2:java.lang.Object get(int) -> get
    1:5:java.lang.Object remove(int) -> remove
    1:5:java.lang.Object set(int,java.lang.Object) -> set
    0:3:com.google.android.gms.internal.measurement.zzkg zzd(int) -> zzd
    1:1:java.lang.String zzf(int) -> zzf
    0:1:void zzg(int) -> zzg
com.google.android.gms.internal.measurement.zzlq -> com.google.android.gms.internal.measurement.zzlq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <init>(com.google.android.gms.internal.measurement.zzlg,java.lang.String,java.lang.Object[]) -> <init>
com.google.android.gms.internal.measurement.zzlr -> com.google.android.gms.internal.measurement.zzlr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzls -> com.google.android.gms.internal.measurement.zzls:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzlt -> com.google.android.gms.internal.measurement.zzlt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:10:java.lang.Object zzC(int,java.util.List,com.google.android.gms.internal.measurement.zzkd,java.lang.Object,com.google.android.gms.internal.measurement.zzmi) -> zzC
    1:2:java.lang.Object zzD(int,int,java.lang.Object,com.google.android.gms.internal.measurement.zzmi) -> zzD
    1:2:void zzE(com.google.android.gms.internal.measurement.zzjm,java.lang.Object,java.lang.Object) -> zzE
    1:4:void zzF(com.google.android.gms.internal.measurement.zzmi,java.lang.Object,java.lang.Object) -> zzF
    1:3:void zzG(java.lang.Class) -> zzG
    1:1:boolean zzH(java.lang.Object,java.lang.Object) -> zzH
    1:3:void zzI(com.google.android.gms.internal.measurement.zzlb,java.lang.Object,java.lang.Object,long) -> zzI
    1:2:void zzJ(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzJ
    1:2:void zzK(int,java.util.List,com.google.android.gms.internal.measurement.zzjh) -> zzK
    1:2:void zzL(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzL
    1:2:void zzM(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzM
    1:2:void zzN(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzN
    1:2:void zzO(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzO
    1:2:void zzP(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzP
    1:4:void zzQ(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,com.google.android.gms.internal.measurement.zzlr) -> zzQ
    1:2:void zzR(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzR
    1:2:void zzS(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzS
    1:4:void zzT(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,com.google.android.gms.internal.measurement.zzlr) -> zzT
    1:2:void zzU(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzU
    1:2:void zzV(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzV
    1:2:void zzW(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzW
    1:2:void zzX(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzX
    1:2:void zzY(int,java.util.List,com.google.android.gms.internal.measurement.zzjh) -> zzY
    1:2:void zzZ(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzZ
    1:2:int zza(int,java.util.List,boolean) -> zza
    1:2:void zzaa(int,java.util.List,com.google.android.gms.internal.measurement.zzjh,boolean) -> zzaa
    1:2:com.google.android.gms.internal.measurement.zzmi zzab(boolean) -> zzab
    1:1:int zzb(java.util.List) -> zzb
    1:4:int zzc(int,java.util.List) -> zzc
    1:3:int zzd(int,java.util.List,boolean) -> zzd
    1:5:int zze(java.util.List) -> zze
    1:2:int zzf(int,java.util.List,boolean) -> zzf
    1:1:int zzg(java.util.List) -> zzg
    1:2:int zzh(int,java.util.List,boolean) -> zzh
    1:1:int zzi(java.util.List) -> zzi
    1:2:int zzj(int,java.util.List,com.google.android.gms.internal.measurement.zzlr) -> zzj
    1:3:int zzk(int,java.util.List,boolean) -> zzk
    1:5:int zzl(java.util.List) -> zzl
    1:3:int zzm(int,java.util.List,boolean) -> zzm
    1:5:int zzn(java.util.List) -> zzn
    1:5:int zzo(int,java.lang.Object,com.google.android.gms.internal.measurement.zzlr) -> zzo
    1:6:int zzp(int,java.util.List,com.google.android.gms.internal.measurement.zzlr) -> zzp
    1:3:int zzq(int,java.util.List,boolean) -> zzq
    1:5:int zzr(java.util.List) -> zzr
    1:3:int zzs(int,java.util.List,boolean) -> zzs
    1:5:int zzt(java.util.List) -> zzt
    1:12:int zzu(int,java.util.List) -> zzu
    1:3:int zzv(int,java.util.List,boolean) -> zzv
    1:5:int zzw(java.util.List) -> zzw
    1:3:int zzx(int,java.util.List,boolean) -> zzx
    1:5:int zzy(java.util.List) -> zzy
com.google.android.gms.internal.measurement.zzm -> com.google.android.gms.internal.measurement.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzn,java.lang.String,com.google.android.gms.internal.measurement.zzo) -> <init>
    1:6:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzmf -> com.google.android.gms.internal.measurement.zzmf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzmg -> com.google.android.gms.internal.measurement.zzmg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:20:java.lang.String zza(com.google.android.gms.internal.measurement.zziy) -> zza
com.google.android.gms.internal.measurement.zzmh -> com.google.android.gms.internal.measurement.zzmh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzlg) -> <init>
com.google.android.gms.internal.measurement.zzmi -> com.google.android.gms.internal.measurement.zzmi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.internal.measurement.zzmj -> com.google.android.gms.internal.measurement.zzmj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:4:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:9:int zza() -> zza
    1:4:int zzb() -> zzb
    1:6:com.google.android.gms.internal.measurement.zzmj zzd(com.google.android.gms.internal.measurement.zzmj,com.google.android.gms.internal.measurement.zzmj) -> zzd
    1:1:com.google.android.gms.internal.measurement.zzmj zze() -> zze
    1:2:void zzg(java.lang.StringBuilder,int) -> zzg
    1:6:void zzh(int,java.lang.Object) -> zzh
    1:9:void zzi(com.google.android.gms.internal.measurement.zzjh) -> zzi
com.google.android.gms.internal.measurement.zzmk -> com.google.android.gms.internal.measurement.zzmk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:int zza(java.lang.Object) -> zza
    1:1:int zzb(java.lang.Object) -> zzb
    1:1:java.lang.Object zzc(java.lang.Object) -> zzc
    1:2:java.lang.Object zzd(java.lang.Object,java.lang.Object) -> zzd
    1:1:void zzf(java.lang.Object,int,long) -> zzf
    1:2:void zzg(java.lang.Object) -> zzg
    1:1:void zzh(java.lang.Object,java.lang.Object) -> zzh
    1:1:void zzi(java.lang.Object,com.google.android.gms.internal.measurement.zzjh) -> zzi
com.google.android.gms.internal.measurement.zzml -> com.google.android.gms.internal.measurement.zzml:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzmn,int) -> <init>
    1:2:void add(java.lang.Object) -> add
    1:1:boolean hasNext() -> hasNext
    1:1:boolean hasPrevious() -> hasPrevious
    1:1:java.lang.Object next() -> next
    1:1:int nextIndex() -> nextIndex
    1:1:java.lang.Object previous() -> previous
    1:1:int previousIndex() -> previousIndex
    1:1:void remove() -> remove
    1:2:void set(java.lang.Object) -> set
com.google.android.gms.internal.measurement.zzmm -> com.google.android.gms.internal.measurement.zzmm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzmn) -> <init>
    1:1:boolean hasNext() -> hasNext
    1:1:java.lang.Object next() -> next
    1:1:void remove() -> remove
com.google.android.gms.internal.measurement.zzmn -> com.google.android.gms.internal.measurement.zzmn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzko) -> <init>
    1:1:java.lang.Object get(int) -> get
    1:1:java.util.Iterator iterator() -> iterator
    1:1:java.util.ListIterator listIterator(int) -> listIterator
    1:1:int size() -> size
    1:1:java.lang.Object zzf(int) -> zzf
    1:1:java.util.List zzh() -> zzh
    1:1:void zzi(com.google.android.gms.internal.measurement.zziy) -> zzi
com.google.android.gms.internal.measurement.zzmo -> com.google.android.gms.internal.measurement.zzmo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:java.lang.Object run() -> run
    1:5:sun.misc.Unsafe zza() -> zza
com.google.android.gms.internal.measurement.zzmp -> com.google.android.gms.internal.measurement.zzmp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(sun.misc.Unsafe) -> <init>
    1:1:double zza(java.lang.Object,long) -> zza
    1:1:float zzb(java.lang.Object,long) -> zzb
    1:3:void zzc(java.lang.Object,long,boolean) -> zzc
    1:3:void zzd(java.lang.Object,long,byte) -> zzd
    1:1:void zze(java.lang.Object,long,double) -> zze
    1:1:void zzf(java.lang.Object,long,float) -> zzf
    1:3:boolean zzg(java.lang.Object,long) -> zzg
com.google.android.gms.internal.measurement.zzmq -> com.google.android.gms.internal.measurement.zzmq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(sun.misc.Unsafe) -> <init>
    1:1:double zza(java.lang.Object,long) -> zza
    1:1:float zzb(java.lang.Object,long) -> zzb
    1:3:void zzc(java.lang.Object,long,boolean) -> zzc
    1:3:void zzd(java.lang.Object,long,byte) -> zzd
    1:1:void zze(java.lang.Object,long,double) -> zze
    1:1:void zzf(java.lang.Object,long,float) -> zzf
    1:3:boolean zzg(java.lang.Object,long) -> zzg
com.google.android.gms.internal.measurement.zzmr -> com.google.android.gms.internal.measurement.zzmr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:int zzh(java.lang.Class) -> zzh
    1:1:int zzi(java.lang.Class) -> zzi
    1:1:int zzj(java.lang.Object,long) -> zzj
    1:1:long zzk(java.lang.Object,long) -> zzk
    1:1:long zzl(java.lang.reflect.Field) -> zzl
    1:1:java.lang.Object zzm(java.lang.Object,long) -> zzm
    1:1:void zzn(java.lang.Object,long,int) -> zzn
    1:1:void zzo(java.lang.Object,long,long) -> zzo
    1:1:void zzp(java.lang.Object,long,java.lang.Object) -> zzp
com.google.android.gms.internal.measurement.zzms -> com.google.android.gms.internal.measurement.zzms:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:36:void <clinit>() -> <clinit>
    1:1:int zzA(java.lang.Class) -> zzA
    1:4:java.lang.reflect.Field zzB() -> zzB
    1:1:java.lang.reflect.Field zzC(java.lang.Class,java.lang.String) -> zzC
    1:2:void zzD(java.lang.Object,long,byte) -> zzD
    1:2:void zzE(java.lang.Object,long,byte) -> zzE
    1:1:double zza(java.lang.Object,long) -> zza
    1:1:float zzb(java.lang.Object,long) -> zzb
    1:1:int zzc(java.lang.Object,long) -> zzc
    1:1:long zzd(java.lang.Object,long) -> zzd
    1:2:java.lang.Object zze(java.lang.Class) -> zze
    1:1:java.lang.Object zzf(java.lang.Object,long) -> zzf
    1:2:sun.misc.Unsafe zzg() -> zzg
    1:2:void zzh(java.lang.Throwable) -> zzh
    1:1:void zzi(java.lang.Object,long,boolean) -> zzi
    1:1:void zzj(java.lang.Object,long,boolean) -> zzj
    1:1:void zzm(java.lang.Object,long,boolean) -> zzm
    1:1:void zzn(byte[],long,byte) -> zzn
    1:1:void zzo(java.lang.Object,long,double) -> zzo
    1:1:void zzp(java.lang.Object,long,float) -> zzp
    1:1:void zzq(java.lang.Object,long,int) -> zzq
    1:1:void zzr(java.lang.Object,long,long) -> zzr
    1:1:void zzs(java.lang.Object,long,java.lang.Object) -> zzs
    1:1:boolean zzt(java.lang.Object,long) -> zzt
    1:1:boolean zzu(java.lang.Object,long) -> zzu
    1:9:boolean zzv(java.lang.Class) -> zzv
    1:1:boolean zzw(java.lang.Object,long) -> zzw
    1:1:int zzz(java.lang.Class) -> zzz
com.google.android.gms.internal.measurement.zzmt -> com.google.android.gms.internal.measurement.zzmt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:void zza(byte,byte,byte,byte,char[],int) -> zza
    1:2:void zzb(byte,byte,byte,char[],int) -> zzb
    1:2:void zzc(byte,byte,char[],int) -> zzc
com.google.android.gms.internal.measurement.zzmu -> com.google.android.gms.internal.measurement.zzmu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:boolean zzb(byte[],int,int) -> zzb
com.google.android.gms.internal.measurement.zzmv -> com.google.android.gms.internal.measurement.zzmv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:7:int zza(int,byte[],int,int) -> zza
com.google.android.gms.internal.measurement.zzmw -> com.google.android.gms.internal.measurement.zzmw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:void <init>(int,int) -> <init>
com.google.android.gms.internal.measurement.zzmx -> com.google.android.gms.internal.measurement.zzmx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:4:int zza(byte[],int,int) -> zza
    1:20:int zzb(java.lang.CharSequence,byte[],int,int) -> zzb
    1:8:int zzc(java.lang.CharSequence) -> zzc
    1:15:java.lang.String zzd(byte[],int,int) -> zzd
    1:1:boolean zze(byte[]) -> zze
    1:1:boolean zzf(byte[],int,int) -> zzf
com.google.android.gms.internal.measurement.zzn -> com.google.android.gms.internal.measurement.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(java.lang.String,com.google.android.gms.internal.measurement.zzo) -> <init>
com.google.android.gms.internal.measurement.zzna -> com.google.android.gms.internal.measurement.zzna:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznb zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
    1:1:boolean zze() -> zze
com.google.android.gms.internal.measurement.zznb -> com.google.android.gms.internal.measurement.zznb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznc -> com.google.android.gms.internal.measurement.zznc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zznd -> com.google.android.gms.internal.measurement.zznd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzne zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzne -> com.google.android.gms.internal.measurement.zzne:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznf -> com.google.android.gms.internal.measurement.zznf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzng -> com.google.android.gms.internal.measurement.zzng:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznh zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zznh -> com.google.android.gms.internal.measurement.zznh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzni -> com.google.android.gms.internal.measurement.zzni:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zznj -> com.google.android.gms.internal.measurement.zznj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznk zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zznk -> com.google.android.gms.internal.measurement.zznk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznl -> com.google.android.gms.internal.measurement.zznl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zznm -> com.google.android.gms.internal.measurement.zznm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:long zzA() -> zzA
    1:1:long zzB() -> zzB
    1:1:long zzC() -> zzC
    1:1:long zzD() -> zzD
    1:1:long zzE() -> zzE
    1:1:long zzF() -> zzF
    1:1:long zzG() -> zzG
    1:1:com.google.android.gms.internal.measurement.zznn zzH() -> zzH
    1:1:java.lang.String zzI() -> zzI
    1:1:java.lang.String zzJ() -> zzJ
    1:1:java.lang.String zzK() -> zzK
    1:1:java.lang.Object zza() -> zza
    1:1:long zzb() -> zzb
    1:1:long zzc() -> zzc
    1:1:long zzd() -> zzd
    1:1:long zze() -> zze
    1:1:long zzf() -> zzf
    1:1:long zzg() -> zzg
    1:1:long zzh() -> zzh
    1:1:long zzi() -> zzi
    1:1:long zzj() -> zzj
    1:1:long zzk() -> zzk
    1:1:long zzl() -> zzl
    1:1:long zzm() -> zzm
    1:1:long zzn() -> zzn
    1:1:long zzo() -> zzo
    1:1:long zzp() -> zzp
    1:1:long zzq() -> zzq
    1:1:long zzr() -> zzr
    1:1:long zzs() -> zzs
    1:1:long zzt() -> zzt
    1:1:long zzu() -> zzu
    1:1:long zzv() -> zzv
    1:1:long zzw() -> zzw
    1:1:long zzx() -> zzx
    1:1:long zzy() -> zzy
    1:1:long zzz() -> zzz
com.google.android.gms.internal.measurement.zznn -> com.google.android.gms.internal.measurement.zznn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzno -> com.google.android.gms.internal.measurement.zzno:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:39:void <clinit>() -> <clinit>
    1:1:long zzA() -> zzA
    1:1:long zzB() -> zzB
    1:1:long zzC() -> zzC
    1:1:long zzD() -> zzD
    1:1:long zzE() -> zzE
    1:1:long zzF() -> zzF
    1:1:java.lang.String zzG() -> zzG
    1:1:java.lang.String zzH() -> zzH
    1:1:java.lang.String zzI() -> zzI
    1:1:long zza() -> zza
    1:1:long zzb() -> zzb
    1:1:long zzc() -> zzc
    1:1:long zzd() -> zzd
    1:1:long zze() -> zze
    1:1:long zzf() -> zzf
    1:1:long zzg() -> zzg
    1:1:long zzh() -> zzh
    1:1:long zzi() -> zzi
    1:1:long zzj() -> zzj
    1:1:long zzk() -> zzk
    1:1:long zzl() -> zzl
    1:1:long zzm() -> zzm
    1:1:long zzn() -> zzn
    1:1:long zzo() -> zzo
    1:1:long zzp() -> zzp
    1:1:long zzq() -> zzq
    1:1:long zzr() -> zzr
    1:1:long zzs() -> zzs
    1:1:long zzt() -> zzt
    1:1:long zzu() -> zzu
    1:1:long zzv() -> zzv
    1:1:long zzw() -> zzw
    1:1:long zzx() -> zzx
    1:1:long zzy() -> zzy
    1:1:long zzz() -> zzz
com.google.android.gms.internal.measurement.zznp -> com.google.android.gms.internal.measurement.zznp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:long zzb() -> zzb
    1:1:com.google.android.gms.internal.measurement.zznq zzc() -> zzc
com.google.android.gms.internal.measurement.zznq -> com.google.android.gms.internal.measurement.zznq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznr -> com.google.android.gms.internal.measurement.zznr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void <clinit>() -> <clinit>
    1:1:long zza() -> zza
com.google.android.gms.internal.measurement.zzns -> com.google.android.gms.internal.measurement.zzns:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznt zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zznt -> com.google.android.gms.internal.measurement.zznt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznu -> com.google.android.gms.internal.measurement.zznu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zznv -> com.google.android.gms.internal.measurement.zznv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznw zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zznw -> com.google.android.gms.internal.measurement.zznw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zznx -> com.google.android.gms.internal.measurement.zznx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzny -> com.google.android.gms.internal.measurement.zzny:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zznz zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zznz -> com.google.android.gms.internal.measurement.zznz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzo -> com.google.android.gms.internal.measurement.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzoa -> com.google.android.gms.internal.measurement.zzoa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzob -> com.google.android.gms.internal.measurement.zzob:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzoc zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzoc -> com.google.android.gms.internal.measurement.zzoc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzod -> com.google.android.gms.internal.measurement.zzod:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzoe -> com.google.android.gms.internal.measurement.zzoe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzof zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
    1:1:boolean zze() -> zze
    1:1:boolean zzf() -> zzf
com.google.android.gms.internal.measurement.zzof -> com.google.android.gms.internal.measurement.zzof:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzog -> com.google.android.gms.internal.measurement.zzog:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzoh -> com.google.android.gms.internal.measurement.zzoh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzoi zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzoi -> com.google.android.gms.internal.measurement.zzoi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzoj -> com.google.android.gms.internal.measurement.zzoj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzok -> com.google.android.gms.internal.measurement.zzok:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzol zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzol -> com.google.android.gms.internal.measurement.zzol:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzom -> com.google.android.gms.internal.measurement.zzom:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzon -> com.google.android.gms.internal.measurement.zzon:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzoo zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzoo -> com.google.android.gms.internal.measurement.zzoo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzop -> com.google.android.gms.internal.measurement.zzop:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzoq -> com.google.android.gms.internal.measurement.zzoq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzor zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzor -> com.google.android.gms.internal.measurement.zzor:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzos -> com.google.android.gms.internal.measurement.zzos:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzot -> com.google.android.gms.internal.measurement.zzot:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzou zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzou -> com.google.android.gms.internal.measurement.zzou:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzov -> com.google.android.gms.internal.measurement.zzov:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzow -> com.google.android.gms.internal.measurement.zzow:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzox zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzox -> com.google.android.gms.internal.measurement.zzox:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzoy -> com.google.android.gms.internal.measurement.zzoy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzoz -> com.google.android.gms.internal.measurement.zzoz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpa zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzp -> com.google.android.gms.internal.measurement.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzt,java.lang.String) -> <init>
com.google.android.gms.internal.measurement.zzpa -> com.google.android.gms.internal.measurement.zzpa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpb -> com.google.android.gms.internal.measurement.zzpb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzpc -> com.google.android.gms.internal.measurement.zzpc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpd zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzpd -> com.google.android.gms.internal.measurement.zzpd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpe -> com.google.android.gms.internal.measurement.zzpe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzpf -> com.google.android.gms.internal.measurement.zzpf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpg zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzpg -> com.google.android.gms.internal.measurement.zzpg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzph -> com.google.android.gms.internal.measurement.zzph:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzpi -> com.google.android.gms.internal.measurement.zzpi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:double zzb() -> zzb
    1:1:long zzc() -> zzc
    1:1:long zzd() -> zzd
    1:1:com.google.android.gms.internal.measurement.zzpj zze() -> zze
    1:1:java.lang.String zzf() -> zzf
    1:1:boolean zzg() -> zzg
com.google.android.gms.internal.measurement.zzpj -> com.google.android.gms.internal.measurement.zzpj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpk -> com.google.android.gms.internal.measurement.zzpk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void <clinit>() -> <clinit>
    1:1:double zza() -> zza
    1:1:long zzb() -> zzb
    1:1:long zzc() -> zzc
    1:1:java.lang.String zzd() -> zzd
    1:1:boolean zze() -> zze
com.google.android.gms.internal.measurement.zzpl -> com.google.android.gms.internal.measurement.zzpl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpm zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzpm -> com.google.android.gms.internal.measurement.zzpm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpn -> com.google.android.gms.internal.measurement.zzpn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzpo -> com.google.android.gms.internal.measurement.zzpo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpp zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzpp -> com.google.android.gms.internal.measurement.zzpp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpq -> com.google.android.gms.internal.measurement.zzpq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzpr -> com.google.android.gms.internal.measurement.zzpr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzps zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzps -> com.google.android.gms.internal.measurement.zzps:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpt -> com.google.android.gms.internal.measurement.zzpt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzpu -> com.google.android.gms.internal.measurement.zzpu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpv zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzpv -> com.google.android.gms.internal.measurement.zzpv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpw -> com.google.android.gms.internal.measurement.zzpw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzpx -> com.google.android.gms.internal.measurement.zzpx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzpy zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzpy -> com.google.android.gms.internal.measurement.zzpy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzpz -> com.google.android.gms.internal.measurement.zzpz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzq -> com.google.android.gms.internal.measurement.zzq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzt,java.lang.String) -> <init>
com.google.android.gms.internal.measurement.zzqa -> com.google.android.gms.internal.measurement.zzqa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzqb zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzqb -> com.google.android.gms.internal.measurement.zzqb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzqc -> com.google.android.gms.internal.measurement.zzqc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzqd -> com.google.android.gms.internal.measurement.zzqd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzqe zzb() -> zzb
    1:1:boolean zzc() -> zzc
    1:1:boolean zzd() -> zzd
com.google.android.gms.internal.measurement.zzqe -> com.google.android.gms.internal.measurement.zzqe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzqf -> com.google.android.gms.internal.measurement.zzqf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zzb() -> zzb
com.google.android.gms.internal.measurement.zzqg -> com.google.android.gms.internal.measurement.zzqg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzqh zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzqh -> com.google.android.gms.internal.measurement.zzqh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzqi -> com.google.android.gms.internal.measurement.zzqi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzqj -> com.google.android.gms.internal.measurement.zzqj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzqk zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzqk -> com.google.android.gms.internal.measurement.zzqk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzql -> com.google.android.gms.internal.measurement.zzql:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzqm -> com.google.android.gms.internal.measurement.zzqm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:java.lang.Object zza() -> zza
    1:1:com.google.android.gms.internal.measurement.zzqn zzb() -> zzb
    1:1:boolean zzc() -> zzc
com.google.android.gms.internal.measurement.zzqn -> com.google.android.gms.internal.measurement.zzqn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.internal.measurement.zzqo -> com.google.android.gms.internal.measurement.zzqo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:boolean zza() -> zza
com.google.android.gms.internal.measurement.zzr -> com.google.android.gms.internal.measurement.zzr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.internal.measurement.zzs -> com.google.android.gms.internal.measurement.zzs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzt,boolean,boolean) -> <init>
    1:13:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzt -> com.google.android.gms.internal.measurement.zzt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:6:void <init>(com.google.android.gms.internal.measurement.zzr) -> <init>
com.google.android.gms.internal.measurement.zzu -> com.google.android.gms.internal.measurement.zzu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.String,java.util.concurrent.Callable) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzv -> com.google.android.gms.internal.measurement.zzv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzz) -> <init>
    1:15:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzw -> com.google.android.gms.internal.measurement.zzw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.internal.measurement.zzj) -> <init>
    1:10:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzx -> com.google.android.gms.internal.measurement.zzx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzy,java.lang.String) -> <init>
    1:1:com.google.android.gms.internal.measurement.zzap zza(com.google.android.gms.internal.measurement.zzg,java.util.List) -> zza
com.google.android.gms.internal.measurement.zzy -> com.google.android.gms.internal.measurement.zzy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>() -> <init>
com.google.android.gms.internal.measurement.zzz -> com.google.android.gms.internal.measurement.zzz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>() -> <init>
    1:6:void zza(java.lang.String,int,com.google.android.gms.internal.measurement.zzao,java.lang.String) -> zza
    1:7:void zzb(com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzab) -> zzb
    1:3:int zzc(com.google.android.gms.internal.measurement.zzg,com.google.android.gms.internal.measurement.zzao,com.google.android.gms.internal.measurement.zzap) -> zzc
com.google.android.gms.internal.stats.zza -> com.google.android.gms.internal.stats.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzb -> com.google.android.gms.internal.stats.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzc -> com.google.android.gms.internal.stats.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzd -> com.google.android.gms.internal.stats.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zze -> com.google.android.gms.internal.stats.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzf -> com.google.android.gms.internal.stats.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzg -> com.google.android.gms.internal.stats.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzh -> com.google.android.gms.internal.stats.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.internal.stats.zzi -> com.google.android.gms.internal.stats.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
    2:2:void <init>(java.lang.String) -> <init>
com.google.android.gms.internal.tasks.zza -> com.google.android.gms.internal.tasks.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    2:2:void <init>(android.os.Looper) -> <init>
com.google.android.gms.measurement.AppMeasurement -> com.google.android.gms.measurement.AppMeasurement:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    2:2:void <init>(com.google.android.gms.measurement.internal.zzhw) -> <init>
    1:1:void beginAdUnitExposure(java.lang.String) -> beginAdUnitExposure
    1:1:void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle) -> clearConditionalUserProperty
    1:1:void endAdUnitExposure(java.lang.String) -> endAdUnitExposure
    1:1:long generateEventId() -> generateEventId
    1:1:java.lang.String getAppInstanceId() -> getAppInstanceId
    1:1:java.lang.Boolean getBoolean() -> getBoolean
    1:4:java.util.List getConditionalUserProperties(java.lang.String,java.lang.String) -> getConditionalUserProperties
    1:1:java.lang.String getCurrentScreenClass() -> getCurrentScreenClass
    1:1:java.lang.String getCurrentScreenName() -> getCurrentScreenName
    1:1:java.lang.Double getDouble() -> getDouble
    1:1:java.lang.String getGmpAppId() -> getGmpAppId
    1:8:com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context) -> getInstance
    1:1:java.lang.Integer getInteger() -> getInteger
    1:1:java.lang.Long getLong() -> getLong
    1:1:int getMaxUserProperties(java.lang.String) -> getMaxUserProperties
    1:1:java.lang.String getString() -> getString
    1:1:java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean) -> getUserProperties
    2:2:java.util.Map getUserProperties(boolean) -> getUserProperties
    1:1:void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle) -> logEventInternal
    1:1:void logEventInternalNoInterceptor(java.lang.String,java.lang.String,android.os.Bundle,long) -> logEventInternalNoInterceptor
    1:19:void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty) -> setConditionalUserProperty
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty -> com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:19:void <init>(android.os.Bundle) -> <init>
    20:41:void <init>(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty) -> <init>
com.google.android.gms.measurement.AppMeasurementContentProvider -> com.google.android.gms.measurement.AppMeasurementContentProvider:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>() -> <init>
    1:3:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    1:3:boolean onCreate() -> onCreate
com.google.android.gms.measurement.AppMeasurementJobService -> com.google.android.gms.measurement.AppMeasurementJobService:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:2:void onCreate() -> onCreate
    1:2:void onDestroy() -> onDestroy
    1:1:void onRebind(android.content.Intent) -> onRebind
    1:1:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    1:1:boolean onUnbind(android.content.Intent) -> onUnbind
    1:1:void zzb(android.app.job.JobParameters,boolean) -> zzb
    1:1:boolean zzc(int) -> zzc
    1:1:com.google.android.gms.measurement.internal.zzjp zzd() -> zzd
com.google.android.gms.measurement.AppMeasurementReceiver -> com.google.android.gms.measurement.AppMeasurementReceiver:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:1:android.content.BroadcastReceiver$PendingResult doGoAsync() -> doGoAsync
    1:1:void doStartService(android.content.Context,android.content.Intent) -> doStartService
    1:2:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.gms.measurement.AppMeasurementService -> com.google.android.gms.measurement.AppMeasurementService:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>() -> <init>
    1:1:android.os.IBinder onBind(android.content.Intent) -> onBind
    1:2:void onCreate() -> onCreate
    1:2:void onDestroy() -> onDestroy
    1:1:void onRebind(android.content.Intent) -> onRebind
    1:1:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    1:1:boolean onUnbind(android.content.Intent) -> onUnbind
    1:1:void zza(android.content.Intent) -> zza
    1:1:void zzb(android.app.job.JobParameters,boolean) -> zzb
    1:1:boolean zzc(int) -> zzc
    1:1:com.google.android.gms.measurement.internal.zzjp zzd() -> zzd
com.google.android.gms.measurement.api.AppMeasurementSdk -> com.google.android.gms.measurement.api.AppMeasurementSdk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
    1:1:void beginAdUnitExposure(java.lang.String) -> beginAdUnitExposure
    1:1:void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle) -> clearConditionalUserProperty
    1:1:void endAdUnitExposure(java.lang.String) -> endAdUnitExposure
    1:1:long generateEventId() -> generateEventId
    1:1:java.lang.String getAppInstanceId() -> getAppInstanceId
    1:1:java.util.List getConditionalUserProperties(java.lang.String,java.lang.String) -> getConditionalUserProperties
    1:1:java.lang.String getCurrentScreenClass() -> getCurrentScreenClass
    1:1:java.lang.String getCurrentScreenName() -> getCurrentScreenName
    1:1:java.lang.String getGmpAppId() -> getGmpAppId
    1:2:com.google.android.gms.measurement.api.AppMeasurementSdk getInstance(android.content.Context) -> getInstance
    3:4:com.google.android.gms.measurement.api.AppMeasurementSdk getInstance(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> getInstance
    1:1:int getMaxUserProperties(java.lang.String) -> getMaxUserProperties
    1:1:java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean) -> getUserProperties
    1:1:void logEvent(java.lang.String,java.lang.String,android.os.Bundle) -> logEvent
    1:1:void logEventNoInterceptor(java.lang.String,java.lang.String,android.os.Bundle,long) -> logEventNoInterceptor
    1:1:void performAction(android.os.Bundle) -> performAction
    1:1:android.os.Bundle performActionWithResponse(android.os.Bundle) -> performActionWithResponse
    1:1:void setConditionalUserProperty(android.os.Bundle) -> setConditionalUserProperty
    1:1:void setConsent(android.os.Bundle) -> setConsent
    1:1:void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String) -> setCurrentScreen
    1:1:void setMeasurementEnabled(java.lang.Boolean) -> setMeasurementEnabled
    2:2:void setMeasurementEnabled(boolean) -> setMeasurementEnabled
    1:1:void setUserProperty(java.lang.String,java.lang.String,java.lang.Object) -> setUserProperty
    1:1:void zza(boolean) -> zza
com.google.android.gms.measurement.api.AppMeasurementSdk$ConditionalUserProperty -> com.google.android.gms.measurement.api.AppMeasurementSdk$ConditionalUserProperty:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk-api@@19.0.1"}
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService -> com.google.android.gms.measurement.internal.AppMeasurementDynamiteService:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void <init>() -> <init>
    1:2:void beginAdUnitExposure(java.lang.String,long) -> beginAdUnitExposure
    1:3:void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle) -> clearConditionalUserProperty
    1:2:void clearMeasurementEnabled(long) -> clearMeasurementEnabled
    1:2:void endAdUnitExposure(java.lang.String,long) -> endAdUnitExposure
    1:4:void generateEventId(com.google.android.gms.internal.measurement.zzcf) -> generateEventId
    1:3:void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf) -> getAppInstanceId
    1:2:void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf) -> getCachedAppInstanceId
    1:3:void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf) -> getConditionalUserProperties
    1:2:void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf) -> getCurrentScreenClass
    1:2:void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf) -> getCurrentScreenName
    1:8:void getGmpAppId(com.google.android.gms.internal.measurement.zzcf) -> getGmpAppId
    1:4:void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf) -> getMaxUserProperties
    1:13:void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int) -> getTestFlag
    1:3:void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf) -> getUserProperties
    1:1:void initForTests(java.util.Map) -> initForTests
    1:3:void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long) -> initialize
    1:3:void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf) -> isDataCollectionEnabled
    1:2:void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long) -> logEvent
    1:7:void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long) -> logEventAndBundle
    1:5:void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper) -> logHealthData
    1:4:void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long) -> onActivityCreated
    1:4:void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityDestroyed
    1:4:void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityPaused
    1:4:void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityResumed
    1:7:void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long) -> onActivitySaveInstanceState
    1:4:void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityStarted
    1:4:void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long) -> onActivityStopped
    1:2:void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long) -> performAction
    1:7:void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci) -> registerOnMeasurementEventListener
    1:2:void resetAnalyticsData(long) -> resetAnalyticsData
    1:3:void setConditionalUserProperty(android.os.Bundle,long) -> setConditionalUserProperty
    1:9:void setConsent(android.os.Bundle,long) -> setConsent
    1:2:void setConsentThirdParty(android.os.Bundle,long) -> setConsentThirdParty
    1:3:void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long) -> setCurrentScreen
    1:5:void setDataCollectionEnabled(boolean) -> setDataCollectionEnabled
    1:6:void setDefaultEventParameters(android.os.Bundle) -> setDefaultEventParameters
    1:6:void setEventInterceptor(com.google.android.gms.internal.measurement.zzci) -> setEventInterceptor
    1:1:void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck) -> setInstanceIdProvider
    1:2:void setMeasurementEnabled(boolean,long) -> setMeasurementEnabled
    1:1:void setMinimumSessionDuration(long) -> setMinimumSessionDuration
    1:5:void setSessionTimeoutDuration(long) -> setSessionTimeoutDuration
    1:6:void setUserId(java.lang.String,long) -> setUserId
    1:3:void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long) -> setUserProperty
    1:6:void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci) -> unregisterOnMeasurementEventListener
    0:1:void zzb() -> zzb
    1:2:void zzc(com.google.android.gms.internal.measurement.zzcf,java.lang.String) -> zzc
com.google.android.gms.measurement.internal.zza -> com.google.android.gms.measurement.internal.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzaa -> com.google.android.gms.measurement.internal.zzaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:boolean zza() -> zza
com.google.android.gms.measurement.internal.zzab -> com.google.android.gms.measurement.internal.zzab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:13:void <init>(com.google.android.gms.measurement.internal.zzab) -> <init>
    14:14:void <init>(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzkq,long,boolean,java.lang.String,com.google.android.gms.measurement.internal.zzat,long,com.google.android.gms.measurement.internal.zzat,long,com.google.android.gms.measurement.internal.zzat) -> <init>
    1:13:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.measurement.internal.zzac -> com.google.android.gms.measurement.internal.zzac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:22:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.google.android.gms.measurement.internal.zzad -> com.google.android.gms.measurement.internal.zzad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzae -> com.google.android.gms.measurement.internal.zzae:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzaf -> com.google.android.gms.measurement.internal.zzaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:long zzA() -> zzA
    1:12:java.lang.String zzB(java.lang.String,java.lang.String) -> zzB
    1:7:double zza(java.lang.String,com.google.android.gms.measurement.internal.zzdv) -> zza
    1:1:int zzb(java.lang.String) -> zzb
    1:4:int zzc() -> zzc
    1:1:int zzd(java.lang.String) -> zzd
    1:7:int zze(java.lang.String,com.google.android.gms.measurement.internal.zzdv) -> zze
    1:3:int zzf(java.lang.String,com.google.android.gms.measurement.internal.zzdv,int,int) -> zzf
    1:1:long zzh() -> zzh
    1:7:long zzi(java.lang.String,com.google.android.gms.measurement.internal.zzdv) -> zzi
    1:13:android.os.Bundle zzj() -> zzj
    1:6:java.lang.Boolean zzk(java.lang.String) -> zzk
    1:1:java.lang.String zzl() -> zzl
    1:1:java.lang.String zzm() -> zzm
    1:1:java.lang.String zzn() -> zzn
    1:2:java.lang.String zzo(java.lang.String,com.google.android.gms.measurement.internal.zzdv) -> zzo
    1:11:java.util.List zzp(java.lang.String) -> zzp
    1:2:boolean zzr() -> zzr
    1:6:boolean zzs(java.lang.String,com.google.android.gms.measurement.internal.zzdv) -> zzs
    1:1:boolean zzt(java.lang.String) -> zzt
    1:2:boolean zzu() -> zzu
    1:3:boolean zzv() -> zzv
    1:1:boolean zzw(java.lang.String) -> zzw
    1:3:boolean zzx() -> zzx
    1:9:boolean zzy() -> zzy
    1:1:long zzz() -> zzz
com.google.android.gms.measurement.internal.zzag -> com.google.android.gms.measurement.internal.zzag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:4:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:8:java.lang.String toString() -> toString
    1:2:com.google.android.gms.measurement.internal.zzag zza(android.os.Bundle) -> zza
    1:5:com.google.android.gms.measurement.internal.zzag zzb(java.lang.String) -> zzb
    1:2:com.google.android.gms.measurement.internal.zzag zzc(com.google.android.gms.measurement.internal.zzag) -> zzc
    1:2:com.google.android.gms.measurement.internal.zzag zzd(com.google.android.gms.measurement.internal.zzag) -> zzd
    1:1:java.lang.Boolean zzg(java.lang.Boolean,java.lang.Boolean) -> zzg
    1:4:java.lang.String zzh(android.os.Bundle) -> zzh
    1:4:java.lang.String zzi() -> zzi
    1:1:boolean zzj() -> zzj
    1:1:boolean zzk() -> zzk
    1:1:boolean zzm(com.google.android.gms.measurement.internal.zzag) -> zzm
    1:1:int zzn(java.lang.Boolean) -> zzn
    1:2:java.lang.Boolean zzo(java.lang.String) -> zzo
    1:1:char zzq(java.lang.Boolean) -> zzq
com.google.android.gms.measurement.internal.zzah -> com.google.android.gms.measurement.internal.zzah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzai -> com.google.android.gms.measurement.internal.zzai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzaj,android.content.Context,java.lang.String) -> <init>
    1:17:android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    1:2:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    1:28:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
com.google.android.gms.measurement.internal.zzaj -> com.google.android.gms.measurement.internal.zzaj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:6:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:11:void zzA(java.lang.String,java.lang.String) -> zzA
    1:149:void zzB(java.lang.String,java.util.List) -> zzB
    1:2:void zzC() -> zzC
    1:50:void zzD(com.google.android.gms.measurement.internal.zzg) -> zzD
    1:25:void zzE(com.google.android.gms.measurement.internal.zzap) -> zzE
    1:14:void zzF(java.lang.String,byte[],java.lang.String) -> zzF
    1:1:boolean zzG() -> zzG
    1:1:boolean zzH() -> zzH
    1:1:boolean zzI() -> zzI
    1:42:boolean zzJ(com.google.android.gms.internal.measurement.zzfy,boolean) -> zzJ
    1:3:boolean zzK() -> zzK
    1:25:boolean zzL(java.lang.String,java.lang.Long,long,com.google.android.gms.internal.measurement.zzfo) -> zzL
    1:33:boolean zzM(com.google.android.gms.measurement.internal.zzab) -> zzM
    1:26:boolean zzN(com.google.android.gms.measurement.internal.zzks) -> zzN
    1:55:void zzW(java.lang.String,long,long,com.google.android.gms.measurement.internal.zzkm) -> zzW
    1:9:void zzX(android.content.ContentValues,java.lang.String,java.lang.Object) -> zzX
    1:11:int zza(java.lang.String,java.lang.String) -> zza
    1:10:long zzab(java.lang.String,java.lang.String[]) -> zzab
    1:9:long zzac(java.lang.String,java.lang.String[],long) -> zzac
    1:29:long zzc(java.lang.String,java.lang.String) -> zzc
    1:1:long zzd() -> zzd
    1:1:long zze() -> zze
    1:2:long zzf(java.lang.String) -> zzf
    1:5:android.database.sqlite.SQLiteDatabase zzh() -> zzh
    1:29:android.os.Bundle zzi(java.lang.String) -> zzi
    1:50:com.google.android.gms.measurement.internal.zzg zzj(java.lang.String) -> zzj
    1:36:com.google.android.gms.measurement.internal.zzab zzk(java.lang.String,java.lang.String) -> zzk
    1:1:com.google.android.gms.measurement.internal.zzah zzl(long,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> zzl
    1:28:com.google.android.gms.measurement.internal.zzah zzm(long,java.lang.String,long,boolean,boolean,boolean,boolean,boolean) -> zzm
    1:31:com.google.android.gms.measurement.internal.zzap zzn(java.lang.String,java.lang.String) -> zzn
    1:22:com.google.android.gms.measurement.internal.zzks zzp(java.lang.String,java.lang.String) -> zzp
    1:10:java.lang.Object zzq(android.database.Cursor,int) -> zzq
    1:8:java.lang.String zzr() -> zzr
    1:14:java.util.List zzs(java.lang.String,java.lang.String,java.lang.String) -> zzs
    1:39:java.util.List zzt(java.lang.String,java.lang.String[]) -> zzt
    1:24:java.util.List zzu(java.lang.String) -> zzu
    1:42:java.util.List zzv(java.lang.String,java.lang.String,java.lang.String) -> zzv
    1:2:void zzw() -> zzw
    1:2:void zzx() -> zzx
    1:14:void zzy(java.util.List) -> zzy
    1:21:void zzz() -> zzz
com.google.android.gms.measurement.internal.zzak -> com.google.android.gms.measurement.internal.zzak:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    0:22:void zza(com.google.android.gms.measurement.internal.zzei,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> zza
    0:10:void zzb(com.google.android.gms.measurement.internal.zzei,android.database.sqlite.SQLiteDatabase) -> zzb
com.google.android.gms.measurement.internal.zzal -> com.google.android.gms.measurement.internal.zzal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void run() -> run
com.google.android.gms.measurement.internal.zzam -> com.google.android.gms.measurement.internal.zzam:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzgn) -> <init>
    1:1:void zzb() -> zzb
    1:6:void zzd(long) -> zzd
    1:3:android.os.Handler zzf() -> zzf
com.google.android.gms.measurement.internal.zzan -> com.google.android.gms.measurement.internal.zzan:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:long zza() -> zza
    1:1:long zzb() -> zzb
    1:1:java.lang.String zzc() -> zzc
    1:1:void zzd() -> zzd
    1:20:boolean zze() -> zze
    1:6:boolean zzf() -> zzf
com.google.android.gms.measurement.internal.zzao -> com.google.android.gms.measurement.internal.zzao:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:22:void <init>(com.google.android.gms.measurement.internal.zzfs,java.lang.String,java.lang.String,java.lang.String,long,long,android.os.Bundle) -> <init>
    23:29:void <init>(com.google.android.gms.measurement.internal.zzfs,java.lang.String,java.lang.String,java.lang.String,long,long,com.google.android.gms.measurement.internal.zzar) -> <init>
    1:1:java.lang.String toString() -> toString
    1:1:com.google.android.gms.measurement.internal.zzao zza(com.google.android.gms.measurement.internal.zzfs,long) -> zza
com.google.android.gms.measurement.internal.zzap -> com.google.android.gms.measurement.internal.zzap:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void <init>(java.lang.String,java.lang.String,long,long,long,long,long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Boolean) -> <init>
    1:2:com.google.android.gms.measurement.internal.zzap zza(java.lang.Long,java.lang.Long,java.lang.Boolean) -> zza
    1:1:com.google.android.gms.measurement.internal.zzap zzb(long,long) -> zzb
    1:1:com.google.android.gms.measurement.internal.zzap zzc(long) -> zzc
com.google.android.gms.measurement.internal.zzaq -> com.google.android.gms.measurement.internal.zzaq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzar) -> <init>
    1:1:boolean hasNext() -> hasNext
    1:1:java.lang.Object next() -> next
    1:1:void remove() -> remove
    1:1:java.lang.String zza() -> zza
com.google.android.gms.measurement.internal.zzar -> com.google.android.gms.measurement.internal.zzar:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(android.os.Bundle) -> <init>
    1:1:java.util.Iterator iterator() -> iterator
    1:1:java.lang.String toString() -> toString
    1:4:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1:1:int zza() -> zza
    1:1:android.os.Bundle zzc() -> zzc
    1:1:java.lang.Double zzd(java.lang.String) -> zzd
    1:1:java.lang.Long zze(java.lang.String) -> zze
    1:1:java.lang.Object zzf(java.lang.String) -> zzf
    1:1:java.lang.String zzg(java.lang.String) -> zzg
com.google.android.gms.measurement.internal.zzas -> com.google.android.gms.measurement.internal.zzas:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:8:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.google.android.gms.measurement.internal.zzat -> com.google.android.gms.measurement.internal.zzat:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void <init>(com.google.android.gms.measurement.internal.zzat,long) -> <init>
    6:6:void <init>(java.lang.String,com.google.android.gms.measurement.internal.zzar,java.lang.String,long) -> <init>
    1:1:java.lang.String toString() -> toString
    1:1:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.measurement.internal.zzau -> com.google.android.gms.measurement.internal.zzau:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:12:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    1:6:void zza(com.google.android.gms.measurement.internal.zzat,android.os.Parcel,int) -> zza
com.google.android.gms.measurement.internal.zzav -> com.google.android.gms.measurement.internal.zzav:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzaw -> com.google.android.gms.measurement.internal.zzaw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzax -> com.google.android.gms.measurement.internal.zzax:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzay -> com.google.android.gms.measurement.internal.zzay:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzaz -> com.google.android.gms.measurement.internal.zzaz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzb -> com.google.android.gms.measurement.internal.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzba -> com.google.android.gms.measurement.internal.zzba:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbb -> com.google.android.gms.measurement.internal.zzbb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbc -> com.google.android.gms.measurement.internal.zzbc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbd -> com.google.android.gms.measurement.internal.zzbd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbe -> com.google.android.gms.measurement.internal.zzbe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbf -> com.google.android.gms.measurement.internal.zzbf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbg -> com.google.android.gms.measurement.internal.zzbg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbh -> com.google.android.gms.measurement.internal.zzbh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbi -> com.google.android.gms.measurement.internal.zzbi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbj -> com.google.android.gms.measurement.internal.zzbj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbk -> com.google.android.gms.measurement.internal.zzbk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbl -> com.google.android.gms.measurement.internal.zzbl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbm -> com.google.android.gms.measurement.internal.zzbm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbn -> com.google.android.gms.measurement.internal.zzbn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbo -> com.google.android.gms.measurement.internal.zzbo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbp -> com.google.android.gms.measurement.internal.zzbp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbq -> com.google.android.gms.measurement.internal.zzbq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbr -> com.google.android.gms.measurement.internal.zzbr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbs -> com.google.android.gms.measurement.internal.zzbs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbt -> com.google.android.gms.measurement.internal.zzbt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbu -> com.google.android.gms.measurement.internal.zzbu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbv -> com.google.android.gms.measurement.internal.zzbv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbw -> com.google.android.gms.measurement.internal.zzbw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbx -> com.google.android.gms.measurement.internal.zzbx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzby -> com.google.android.gms.measurement.internal.zzby:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzbz -> com.google.android.gms.measurement.internal.zzbz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzc -> com.google.android.gms.measurement.internal.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzca -> com.google.android.gms.measurement.internal.zzca:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcb -> com.google.android.gms.measurement.internal.zzcb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcc -> com.google.android.gms.measurement.internal.zzcc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcd -> com.google.android.gms.measurement.internal.zzcd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzce -> com.google.android.gms.measurement.internal.zzce:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcf -> com.google.android.gms.measurement.internal.zzcf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcg -> com.google.android.gms.measurement.internal.zzcg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzch -> com.google.android.gms.measurement.internal.zzch:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzci -> com.google.android.gms.measurement.internal.zzci:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcj -> com.google.android.gms.measurement.internal.zzcj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzck -> com.google.android.gms.measurement.internal.zzck:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcl -> com.google.android.gms.measurement.internal.zzcl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcm -> com.google.android.gms.measurement.internal.zzcm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcn -> com.google.android.gms.measurement.internal.zzcn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzco -> com.google.android.gms.measurement.internal.zzco:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcp -> com.google.android.gms.measurement.internal.zzcp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcq -> com.google.android.gms.measurement.internal.zzcq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcr -> com.google.android.gms.measurement.internal.zzcr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcs -> com.google.android.gms.measurement.internal.zzcs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzct -> com.google.android.gms.measurement.internal.zzct:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcu -> com.google.android.gms.measurement.internal.zzcu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcv -> com.google.android.gms.measurement.internal.zzcv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcw -> com.google.android.gms.measurement.internal.zzcw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcx -> com.google.android.gms.measurement.internal.zzcx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcy -> com.google.android.gms.measurement.internal.zzcy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzcz -> com.google.android.gms.measurement.internal.zzcz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzd -> com.google.android.gms.measurement.internal.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:10:void zza(com.google.android.gms.measurement.internal.zzd,java.lang.String,long) -> zza
    1:20:void zzb(com.google.android.gms.measurement.internal.zzd,java.lang.String,long) -> zzb
    1:6:void zzd(java.lang.String,long) -> zzd
    1:6:void zze(java.lang.String,long) -> zze
    1:8:void zzf(long) -> zzf
    1:10:void zzh(long,com.google.android.gms.measurement.internal.zzic) -> zzh
    1:11:void zzi(java.lang.String,long,com.google.android.gms.measurement.internal.zzic) -> zzi
    1:3:void zzj(long) -> zzj
com.google.android.gms.measurement.internal.zzda -> com.google.android.gms.measurement.internal.zzda:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdb -> com.google.android.gms.measurement.internal.zzdb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdc -> com.google.android.gms.measurement.internal.zzdc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdd -> com.google.android.gms.measurement.internal.zzdd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzde -> com.google.android.gms.measurement.internal.zzde:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdf -> com.google.android.gms.measurement.internal.zzdf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdg -> com.google.android.gms.measurement.internal.zzdg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdh -> com.google.android.gms.measurement.internal.zzdh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdi -> com.google.android.gms.measurement.internal.zzdi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdj -> com.google.android.gms.measurement.internal.zzdj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdk -> com.google.android.gms.measurement.internal.zzdk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdl -> com.google.android.gms.measurement.internal.zzdl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdm -> com.google.android.gms.measurement.internal.zzdm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdn -> com.google.android.gms.measurement.internal.zzdn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdo -> com.google.android.gms.measurement.internal.zzdo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdp -> com.google.android.gms.measurement.internal.zzdp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdq -> com.google.android.gms.measurement.internal.zzdq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzdr -> com.google.android.gms.measurement.internal.zzdr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.Object zza() -> zza
com.google.android.gms.measurement.internal.zzds -> com.google.android.gms.measurement.internal.zzds:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzdt -> com.google.android.gms.measurement.internal.zzdt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzdu -> com.google.android.gms.measurement.internal.zzdu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzdv -> com.google.android.gms.measurement.internal.zzdv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:10:java.lang.Object zza(java.lang.Object) -> zza
com.google.android.gms.measurement.internal.zzdw -> com.google.android.gms.measurement.internal.zzdw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:112:void <clinit>() -> <clinit>
    1:2:com.google.android.gms.measurement.internal.zzdv zza(java.lang.String,java.lang.Object,java.lang.Object,com.google.android.gms.measurement.internal.zzds) -> zza
    1:4:java.util.Map zzc(android.content.Context) -> zzc
com.google.android.gms.measurement.internal.zzdx -> com.google.android.gms.measurement.internal.zzdx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:5:java.lang.String zzd(com.google.android.gms.measurement.internal.zzp) -> zzd
    1:6:java.util.List zze(com.google.android.gms.measurement.internal.zzp,boolean) -> zze
    1:7:java.util.List zzf(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp) -> zzf
    1:7:java.util.List zzg(java.lang.String,java.lang.String,java.lang.String) -> zzg
    1:8:java.util.List zzh(java.lang.String,java.lang.String,boolean,com.google.android.gms.measurement.internal.zzp) -> zzh
    1:8:java.util.List zzi(java.lang.String,java.lang.String,java.lang.String,boolean) -> zzi
    1:3:void zzj(com.google.android.gms.measurement.internal.zzp) -> zzj
    1:4:void zzk(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzk
    1:3:void zzm(com.google.android.gms.measurement.internal.zzp) -> zzm
    1:4:void zzn(com.google.android.gms.measurement.internal.zzab,com.google.android.gms.measurement.internal.zzp) -> zzn
    1:3:void zzp(com.google.android.gms.measurement.internal.zzp) -> zzp
    1:6:void zzq(long,java.lang.String,java.lang.String,java.lang.String) -> zzq
    1:4:void zzr(android.os.Bundle,com.google.android.gms.measurement.internal.zzp) -> zzr
    1:3:void zzs(com.google.android.gms.measurement.internal.zzp) -> zzs
    1:4:void zzt(com.google.android.gms.measurement.internal.zzkq,com.google.android.gms.measurement.internal.zzp) -> zzt
    1:6:byte[] zzu(com.google.android.gms.measurement.internal.zzat,java.lang.String) -> zzu
com.google.android.gms.measurement.internal.zzdy -> com.google.android.gms.measurement.internal.zzdy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>() -> <init>
    1:82:boolean zza(int,android.os.Parcel,android.os.Parcel,int) -> zza
com.google.android.gms.measurement.internal.zzdz -> com.google.android.gms.measurement.internal.zzdz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zze -> com.google.android.gms.measurement.internal.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:void zzg() -> zzg
com.google.android.gms.measurement.internal.zzea -> com.google.android.gms.measurement.internal.zzea:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs,long) -> <init>
    1:89:void zzd() -> zzd
    1:1:int zzh() -> zzh
    1:1:int zzi() -> zzi
    1:68:com.google.android.gms.measurement.internal.zzp zzj(java.lang.String) -> zzj
    1:1:java.lang.String zzk() -> zzk
    1:2:java.lang.String zzl() -> zzl
    1:2:java.lang.String zzm() -> zzm
    1:2:java.lang.String zzn() -> zzn
com.google.android.gms.measurement.internal.zzeb -> com.google.android.gms.measurement.internal.zzeb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzec,android.content.Context,java.lang.String) -> <init>
    1:13:android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    1:2:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    1:2:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
com.google.android.gms.measurement.internal.zzec -> com.google.android.gms.measurement.internal.zzec:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:android.database.sqlite.SQLiteDatabase zzh() -> zzh
    1:69:java.util.List zzi(int) -> zzi
    1:7:void zzj() -> zzj
    1:1:boolean zzk() -> zzk
    1:3:boolean zzl() -> zzl
    1:20:boolean zzm() -> zzm
    1:7:boolean zzn(com.google.android.gms.measurement.internal.zzab) -> zzn
    1:9:boolean zzo(com.google.android.gms.measurement.internal.zzat) -> zzo
    1:9:boolean zzp(com.google.android.gms.measurement.internal.zzkq) -> zzp
    1:35:boolean zzq(int,byte[]) -> zzq
com.google.android.gms.measurement.internal.zzed -> com.google.android.gms.measurement.internal.zzed:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:11:java.lang.String zza(java.lang.Object[]) -> zza
    1:19:java.lang.String zzb(android.os.Bundle) -> zzb
    1:2:java.lang.String zzc(java.lang.String) -> zzc
    1:2:java.lang.String zzd(java.lang.String) -> zzd
    1:8:java.lang.String zze(java.lang.String) -> zze
    1:3:boolean zzh() -> zzh
    1:17:java.lang.String zzi(java.lang.String,java.lang.String[],java.lang.String[],java.util.concurrent.atomic.AtomicReference) -> zzi
com.google.android.gms.measurement.internal.zzee -> com.google.android.gms.measurement.internal.zzee:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener) -> <init>
    0:4:android.os.IInterface createServiceInterface(android.os.IBinder) -> createServiceInterface
com.google.android.gms.measurement.internal.zzef -> com.google.android.gms.measurement.internal.zzef:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:17:void run() -> run
com.google.android.gms.measurement.internal.zzeg -> com.google.android.gms.measurement.internal.zzeg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void zza(java.lang.String) -> zza
    1:1:void zzb(java.lang.String,java.lang.Object) -> zzb
    1:1:void zzc(java.lang.String,java.lang.Object,java.lang.Object) -> zzc
    1:1:void zzd(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> zzd
com.google.android.gms.measurement.internal.zzeh -> com.google.android.gms.measurement.internal.zzeh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzei -> com.google.android.gms.measurement.internal.zzei:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:10:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:java.lang.Object zzn(java.lang.String) -> zzn
    1:16:java.lang.String zzo(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> zzo
    1:27:java.lang.String zzp(boolean,java.lang.Object) -> zzp
    1:7:java.lang.String zzq() -> zzq
    1:8:void zzt(int,boolean,boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> zzt
    1:3:java.lang.String zzy(java.lang.String) -> zzy
com.google.android.gms.measurement.internal.zzej -> com.google.android.gms.measurement.internal.zzej:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:java.lang.String toString() -> toString
    1:1:com.google.android.gms.measurement.internal.zzat zza() -> zza
    1:2:com.google.android.gms.measurement.internal.zzej zzb(com.google.android.gms.measurement.internal.zzat) -> zzb
com.google.android.gms.measurement.internal.zzek -> com.google.android.gms.measurement.internal.zzek:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzel -> com.google.android.gms.measurement.internal.zzel:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzem -> com.google.android.gms.measurement.internal.zzem:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(java.lang.String,com.google.android.gms.measurement.internal.zzek,int,java.lang.Throwable,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzel) -> <init>
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzen -> com.google.android.gms.measurement.internal.zzen:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:void <init>(com.google.android.gms.measurement.internal.zzeo,java.lang.String,java.net.URL,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzek) -> <init>
    1:33:void run() -> run
com.google.android.gms.measurement.internal.zzeo -> com.google.android.gms.measurement.internal.zzeo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:14:java.net.HttpURLConnection zza(java.net.URL) -> zza
    1:5:boolean zzc() -> zzc
com.google.android.gms.measurement.internal.zzep -> com.google.android.gms.measurement.internal.zzep:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzeq -> com.google.android.gms.measurement.internal.zzeq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:10:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    1:10:void zzb() -> zzb
    1:11:void zzc() -> zzc
com.google.android.gms.measurement.internal.zzer -> com.google.android.gms.measurement.internal.zzer:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,boolean) -> <init>
    1:3:void zza(boolean) -> zza
    1:1:boolean zzb() -> zzb
com.google.android.gms.measurement.internal.zzes -> com.google.android.gms.measurement.internal.zzes:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,android.os.Bundle) -> <init>
    0:21:android.os.Bundle zza() -> zza
    1:25:void zzb(android.os.Bundle) -> zzb
com.google.android.gms.measurement.internal.zzet -> com.google.android.gms.measurement.internal.zzet:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,long) -> <init>
    1:1:long zza() -> zza
    1:3:void zzb(long) -> zzb
com.google.android.gms.measurement.internal.zzeu -> com.google.android.gms.measurement.internal.zzeu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzev -> com.google.android.gms.measurement.internal.zzev:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,long,com.google.android.gms.measurement.internal.zzeu) -> <init>
    1:11:android.util.Pair zza() -> zza
    1:15:void zzb(java.lang.String,long) -> zzb
    1:1:long zzc() -> zzc
    1:8:void zzd() -> zzd
com.google.android.gms.measurement.internal.zzew -> com.google.android.gms.measurement.internal.zzew:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzex,java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String zza() -> zza
    1:3:void zzb(java.lang.String) -> zzb
com.google.android.gms.measurement.internal.zzex -> com.google.android.gms.measurement.internal.zzex:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:16:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:3:android.content.SharedPreferences zza() -> zza
    1:9:void zzaA() -> zzaA
    1:16:android.util.Pair zzb(java.lang.String) -> zzb
    1:3:com.google.android.gms.measurement.internal.zzag zzc() -> zzc
    1:3:java.lang.Boolean zzd() -> zzd
    1:5:void zzh(java.lang.Boolean) -> zzh
    1:7:void zzi(boolean) -> zzi
    1:1:boolean zzj() -> zzj
    1:2:boolean zzk(long) -> zzk
    1:1:boolean zzl(int) -> zzl
com.google.android.gms.measurement.internal.zzey -> com.google.android.gms.measurement.internal.zzey:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:43:void run() -> run
com.google.android.gms.measurement.internal.zzez -> com.google.android.gms.measurement.internal.zzez:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:7:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1:1:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.measurement.internal.zzf -> com.google.android.gms.measurement.internal.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    0:1:void zza() -> zza
    0:2:void zzb() -> zzb
    0:3:void zzc() -> zzc
com.google.android.gms.measurement.internal.zzfa -> com.google.android.gms.measurement.internal.zzfa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:boolean zza() -> zza
com.google.android.gms.measurement.internal.zzfb -> com.google.android.gms.measurement.internal.zzfb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfb$zza) -> <init>
    1:14:void zza(android.content.Context,android.content.Intent) -> zza
com.google.android.gms.measurement.internal.zzfb$zza -> com.google.android.gms.measurement.internal.zzfb$zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzfc -> com.google.android.gms.measurement.internal.zzfc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfd -> com.google.android.gms.measurement.internal.zzfd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfe -> com.google.android.gms.measurement.internal.zzfe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:11:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzff -> com.google.android.gms.measurement.internal.zzff:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfg -> com.google.android.gms.measurement.internal.zzfg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfj,int) -> <init>
    1:3:java.lang.Object create(java.lang.Object) -> create
com.google.android.gms.measurement.internal.zzfh -> com.google.android.gms.measurement.internal.zzfh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:23:void zza(int,java.lang.String,java.util.List,boolean,boolean) -> zza
com.google.android.gms.measurement.internal.zzfi -> com.google.android.gms.measurement.internal.zzfi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:java.lang.String zza(java.lang.String) -> zza
com.google.android.gms.measurement.internal.zzfj -> com.google.android.gms.measurement.internal.zzfj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:4:java.lang.String zza(java.lang.String,java.lang.String) -> zza
    1:5:int zzc(java.lang.String,java.lang.String) -> zzc
    1:9:com.google.android.gms.internal.measurement.zzc zzd(com.google.android.gms.measurement.internal.zzfj,java.lang.String) -> zzd
    1:5:com.google.android.gms.internal.measurement.zzfc zze(java.lang.String) -> zze
    1:2:java.lang.String zzf(java.lang.String) -> zzf
    1:2:void zzi(java.lang.String) -> zzi
    1:2:void zzj(java.lang.String) -> zzj
    1:2:boolean zzk(java.lang.String) -> zzk
    1:5:boolean zzl(java.lang.String) -> zzl
    1:1:boolean zzm(java.lang.String) -> zzm
    1:8:boolean zzn(java.lang.String,java.lang.String) -> zzn
    1:7:boolean zzo(java.lang.String,java.lang.String) -> zzo
    1:1:boolean zzp(java.lang.String) -> zzp
    1:25:boolean zzq(java.lang.String,byte[],java.lang.String) -> zzq
    1:15:com.google.android.gms.internal.measurement.zzfc zzr(java.lang.String,byte[]) -> zzr
    1:27:void zzs(java.lang.String,com.google.android.gms.internal.measurement.zzfb) -> zzs
    1:39:void zzt(java.lang.String) -> zzt
    1:20:void zzu(java.lang.String,com.google.android.gms.internal.measurement.zzfc) -> zzu
    1:3:java.util.Map zzv(com.google.android.gms.internal.measurement.zzfc) -> zzv
com.google.android.gms.measurement.internal.zzfk -> com.google.android.gms.measurement.internal.zzfk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:3:java.lang.String zza(android.content.Context) -> zza
    1:2:java.lang.String zzb(java.lang.String,android.content.res.Resources,java.lang.String) -> zzb
com.google.android.gms.measurement.internal.zzfm -> com.google.android.gms.measurement.internal.zzfm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfp,java.lang.String) -> <init>
    0:2:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.android.gms.measurement.internal.zzfn -> com.google.android.gms.measurement.internal.zzfn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void <init>(com.google.android.gms.measurement.internal.zzfp,java.lang.Runnable,boolean,java.lang.String) -> <init>
    6:10:void <init>(com.google.android.gms.measurement.internal.zzfp,java.util.concurrent.Callable,boolean,java.lang.String) -> <init>
    1:5:int compareTo(java.lang.Object) -> compareTo
    1:6:void setException(java.lang.Throwable) -> setException
com.google.android.gms.measurement.internal.zzfo -> com.google.android.gms.measurement.internal.zzfo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <init>(com.google.android.gms.measurement.internal.zzfp,java.lang.String,java.util.concurrent.BlockingQueue) -> <init>
    1:20:void run() -> run
    1:3:void zza() -> zza
    1:7:void zzb() -> zzb
    1:2:void zzc(java.lang.InterruptedException) -> zzc
com.google.android.gms.measurement.internal.zzfp -> com.google.android.gms.measurement.internal.zzfp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:2:void zzax() -> zzax
    1:10:java.lang.Object zzd(java.util.concurrent.atomic.AtomicReference,long,java.lang.String,java.lang.Runnable) -> zzd
    1:2:void zzg() -> zzg
    1:9:java.util.concurrent.Future zzh(java.util.concurrent.Callable) -> zzh
    1:6:java.util.concurrent.Future zzi(java.util.concurrent.Callable) -> zzi
    1:9:void zzo(java.lang.Runnable) -> zzo
    1:3:void zzp(java.lang.Runnable) -> zzp
    1:3:void zzq(java.lang.Runnable) -> zzq
    1:1:boolean zzs() -> zzs
    1:6:void zzt(com.google.android.gms.measurement.internal.zzfn) -> zzt
com.google.android.gms.measurement.internal.zzfq -> com.google.android.gms.measurement.internal.zzfq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzfr -> com.google.android.gms.measurement.internal.zzfr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzfs -> com.google.android.gms.measurement.internal.zzfs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:43:void <init>(com.google.android.gms.measurement.internal.zzgu) -> <init>
    1:29:void zzA(com.google.android.gms.measurement.internal.zzfs,com.google.android.gms.measurement.internal.zzgu) -> zzA
    1:1:void zzB() -> zzB
    0:38:void zzC(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map) -> zzC
    1:25:void zzE() -> zzE
    1:1:void zzF(boolean) -> zzF
    1:1:void zzG(boolean) -> zzG
    1:89:void zzH(com.google.android.gms.internal.measurement.zzcl) -> zzH
    1:1:boolean zzI() -> zzI
    1:1:boolean zzJ() -> zzJ
    1:1:boolean zzK() -> zzK
    1:1:boolean zzL() -> zzL
    1:19:boolean zzM() -> zzM
    1:1:void zzO() -> zzO
    0:1:void zzP(com.google.android.gms.measurement.internal.zzgl) -> zzP
    0:2:void zzQ(com.google.android.gms.measurement.internal.zzf) -> zzQ
    0:2:void zzR(com.google.android.gms.measurement.internal.zzgm) -> zzR
    1:11:int zza() -> zza
    1:1:com.google.android.gms.measurement.internal.zzei zzay() -> zzay
    1:1:com.google.android.gms.measurement.internal.zzfp zzaz() -> zzaz
    0:1:com.google.android.gms.measurement.internal.zzd zzd() -> zzd
    1:1:com.google.android.gms.measurement.internal.zzan zzg() -> zzg
    1:1:com.google.android.gms.measurement.internal.zzea zzh() -> zzh
    1:1:com.google.android.gms.measurement.internal.zzec zzi() -> zzi
    1:1:com.google.android.gms.measurement.internal.zzed zzj() -> zzj
    1:1:com.google.android.gms.measurement.internal.zzex zzm() -> zzm
    1:11:com.google.android.gms.measurement.internal.zzfs zzp(android.content.Context,com.google.android.gms.internal.measurement.zzcl,java.lang.Long) -> zzp
    1:1:com.google.android.gms.measurement.internal.zzhv zzq() -> zzq
    1:1:com.google.android.gms.measurement.internal.zzhz zzr() -> zzr
    1:1:com.google.android.gms.measurement.internal.zzij zzs() -> zzs
    1:1:com.google.android.gms.measurement.internal.zzjj zzt() -> zzt
    1:1:com.google.android.gms.measurement.internal.zzjy zzu() -> zzu
    1:1:com.google.android.gms.measurement.internal.zzku zzv() -> zzv
com.google.android.gms.measurement.internal.zzft -> com.google.android.gms.measurement.internal.zzft:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzfu -> com.google.android.gms.measurement.internal.zzfu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzfv -> com.google.android.gms.measurement.internal.zzfv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzfw -> com.google.android.gms.measurement.internal.zzfw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfx -> com.google.android.gms.measurement.internal.zzfx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfy -> com.google.android.gms.measurement.internal.zzfy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzfz -> com.google.android.gms.measurement.internal.zzfz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzg -> com.google.android.gms.measurement.internal.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void <init>(com.google.android.gms.measurement.internal.zzfs,java.lang.String) -> <init>
    1:2:java.lang.String zzA() -> zzA
    1:2:java.lang.String zzB() -> zzB
    1:2:java.util.List zzC() -> zzC
    1:2:void zzD() -> zzD
    1:3:void zzE() -> zzE
    1:4:void zzF(java.lang.String) -> zzF
    1:2:void zzG(boolean) -> zzG
    1:2:void zzH(long) -> zzH
    1:3:void zzI(java.lang.String) -> zzI
    1:3:void zzJ(java.lang.String) -> zzJ
    1:3:void zzK(java.lang.String) -> zzK
    1:2:void zzL(long) -> zzL
    1:2:void zzM(long) -> zzM
    1:2:void zzN(long) -> zzN
    1:2:void zzO(long) -> zzO
    1:2:void zzP(long) -> zzP
    1:2:void zzQ(long) -> zzQ
    1:2:void zzR(long) -> zzR
    1:2:void zzS(long) -> zzS
    1:2:void zzT(long) -> zzT
    1:2:void zzU(long) -> zzU
    1:2:void zzV(long) -> zzV
    1:3:void zzW(java.lang.String) -> zzW
    1:4:void zzX(java.lang.String) -> zzX
    1:4:void zzY(java.lang.String) -> zzY
    1:2:void zzZ(long) -> zzZ
    1:2:long zza() -> zza
    1:3:void zzaa(java.lang.String) -> zzaa
    1:2:void zzab(long) -> zzab
    1:3:void zzac(long) -> zzac
    1:2:void zzad(long) -> zzad
    1:2:void zzae(boolean) -> zzae
    1:4:void zzaf(java.lang.Boolean) -> zzaf
    1:3:void zzag(java.lang.String) -> zzag
    1:5:void zzah(java.util.List) -> zzah
    1:2:boolean zzai() -> zzai
    1:2:boolean zzaj() -> zzaj
    1:2:boolean zzak() -> zzak
    1:2:long zzb() -> zzb
    1:2:long zzc() -> zzc
    1:2:long zzd() -> zzd
    1:2:long zze() -> zze
    1:2:long zzf() -> zzf
    1:2:long zzg() -> zzg
    1:2:long zzh() -> zzh
    1:2:long zzi() -> zzi
    1:2:long zzj() -> zzj
    1:2:long zzk() -> zzk
    1:2:long zzl() -> zzl
    1:2:long zzm() -> zzm
    1:2:long zzn() -> zzn
    1:2:long zzo() -> zzo
    1:2:long zzp() -> zzp
    1:2:java.lang.Boolean zzq() -> zzq
    1:2:java.lang.String zzr() -> zzr
    1:3:java.lang.String zzs() -> zzs
    1:2:java.lang.String zzt() -> zzt
    1:2:java.lang.String zzu() -> zzu
    1:2:java.lang.String zzv() -> zzv
    1:2:java.lang.String zzw() -> zzw
    1:2:java.lang.String zzx() -> zzx
    1:2:java.lang.String zzy() -> zzy
    1:2:java.lang.String zzz() -> zzz
com.google.android.gms.measurement.internal.zzga -> com.google.android.gms.measurement.internal.zzga:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzgb -> com.google.android.gms.measurement.internal.zzgb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzgc -> com.google.android.gms.measurement.internal.zzgc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:10:void run() -> run
com.google.android.gms.measurement.internal.zzgd -> com.google.android.gms.measurement.internal.zzgd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:5:void run() -> run
com.google.android.gms.measurement.internal.zzge -> com.google.android.gms.measurement.internal.zzge:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzgf -> com.google.android.gms.measurement.internal.zzgf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:213:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzgg -> com.google.android.gms.measurement.internal.zzgg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzgh -> com.google.android.gms.measurement.internal.zzgh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzgi -> com.google.android.gms.measurement.internal.zzgi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzgj -> com.google.android.gms.measurement.internal.zzgj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzgk -> com.google.android.gms.measurement.internal.zzgk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzkn,java.lang.String) -> <init>
    1:17:void zzA(java.lang.String,boolean) -> zzA
    1:2:void zzB(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzB
    1:7:com.google.android.gms.measurement.internal.zzat zzb(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzb
    1:2:java.lang.String zzd(com.google.android.gms.measurement.internal.zzp) -> zzd
    1:13:java.util.List zze(com.google.android.gms.measurement.internal.zzp,boolean) -> zze
    1:8:java.util.List zzf(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzp) -> zzf
    1:8:java.util.List zzg(java.lang.String,java.lang.String,java.lang.String) -> zzg
    1:14:java.util.List zzh(java.lang.String,java.lang.String,boolean,com.google.android.gms.measurement.internal.zzp) -> zzh
    1:12:java.util.List zzi(java.lang.String,java.lang.String,java.lang.String,boolean) -> zzi
    1:2:void zzj(com.google.android.gms.measurement.internal.zzp) -> zzj
    1:3:void zzk(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzk
    1:4:void zzl(com.google.android.gms.measurement.internal.zzat,java.lang.String,java.lang.String) -> zzl
    1:3:void zzm(com.google.android.gms.measurement.internal.zzp) -> zzm
    1:6:void zzn(com.google.android.gms.measurement.internal.zzab,com.google.android.gms.measurement.internal.zzp) -> zzn
    1:6:void zzo(com.google.android.gms.measurement.internal.zzab) -> zzo
    1:7:void zzp(com.google.android.gms.measurement.internal.zzp) -> zzp
    1:1:void zzq(long,java.lang.String,java.lang.String,java.lang.String) -> zzq
    1:4:void zzr(android.os.Bundle,com.google.android.gms.measurement.internal.zzp) -> zzr
    1:2:void zzs(com.google.android.gms.measurement.internal.zzp) -> zzs
    1:3:void zzt(com.google.android.gms.measurement.internal.zzkq,com.google.android.gms.measurement.internal.zzp) -> zzt
    1:25:byte[] zzu(com.google.android.gms.measurement.internal.zzat,java.lang.String) -> zzu
    1:32:void zzw(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzw
    1:20:void zzx(java.lang.String,android.os.Bundle) -> zzx
    1:4:void zzy(java.lang.Runnable) -> zzy
    1:5:void zzz(com.google.android.gms.measurement.internal.zzp,boolean) -> zzz
com.google.android.gms.measurement.internal.zzgl -> com.google.android.gms.measurement.internal.zzgl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:void zzax() -> zzax
    1:1:void zzg() -> zzg
com.google.android.gms.measurement.internal.zzgm -> com.google.android.gms.measurement.internal.zzgm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    0:1:void zzu() -> zzu
    0:3:void zzv() -> zzv
    0:3:void zzw() -> zzw
com.google.android.gms.measurement.internal.zzgn -> com.google.android.gms.measurement.internal.zzgn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzgo -> com.google.android.gms.measurement.internal.zzgo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:4:java.lang.Object zza(android.os.Bundle,java.lang.String,java.lang.Class,java.lang.Object) -> zza
    1:5:void zzb(android.os.Bundle,java.lang.Object) -> zzb
com.google.android.gms.measurement.internal.zzgp -> com.google.android.gms.measurement.internal.zzgp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:1:java.lang.String zza(java.lang.String) -> zza
    1:1:java.lang.String zzb(java.lang.String) -> zzb
com.google.android.gms.measurement.internal.zzgq -> com.google.android.gms.measurement.internal.zzgq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.measurement.internal.zzgr -> com.google.android.gms.measurement.internal.zzgr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.measurement.internal.zzgs -> com.google.android.gms.measurement.internal.zzgs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.measurement.internal.zzgt -> com.google.android.gms.measurement.internal.zzgt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.measurement.internal.zzgu -> com.google.android.gms.measurement.internal.zzgu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <init>(android.content.Context,com.google.android.gms.internal.measurement.zzcl,java.lang.Long) -> <init>
com.google.android.gms.measurement.internal.zzgv -> com.google.android.gms.measurement.internal.zzgv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:16:void run() -> run
com.google.android.gms.measurement.internal.zzgw -> com.google.android.gms.measurement.internal.zzgw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzgx -> com.google.android.gms.measurement.internal.zzgx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:14:void run() -> run
com.google.android.gms.measurement.internal.zzgy -> com.google.android.gms.measurement.internal.zzgy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzgz -> com.google.android.gms.measurement.internal.zzgz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzh -> com.google.android.gms.measurement.internal.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzha -> com.google.android.gms.measurement.internal.zzha:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzhb -> com.google.android.gms.measurement.internal.zzhb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzhc -> com.google.android.gms.measurement.internal.zzhc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzhd -> com.google.android.gms.measurement.internal.zzhd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void run() -> run
com.google.android.gms.measurement.internal.zzhe -> com.google.android.gms.measurement.internal.zzhe:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:37:void run() -> run
com.google.android.gms.measurement.internal.zzhf -> com.google.android.gms.measurement.internal.zzhf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:35:void run() -> run
com.google.android.gms.measurement.internal.zzhg -> com.google.android.gms.measurement.internal.zzhg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzhh -> com.google.android.gms.measurement.internal.zzhh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzhi -> com.google.android.gms.measurement.internal.zzhi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzhj -> com.google.android.gms.measurement.internal.zzhj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void zza(java.lang.String,java.lang.String,android.os.Bundle) -> zza
com.google.android.gms.measurement.internal.zzhk -> com.google.android.gms.measurement.internal.zzhk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzhl -> com.google.android.gms.measurement.internal.zzhl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzhm -> com.google.android.gms.measurement.internal.zzhm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzhn -> com.google.android.gms.measurement.internal.zzhn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzho -> com.google.android.gms.measurement.internal.zzho:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzhp -> com.google.android.gms.measurement.internal.zzhp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void run() -> run
com.google.android.gms.measurement.internal.zzhq -> com.google.android.gms.measurement.internal.zzhq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzhr -> com.google.android.gms.measurement.internal.zzhr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzhs -> com.google.android.gms.measurement.internal.zzhs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:44:void run() -> run
com.google.android.gms.measurement.internal.zzht -> com.google.android.gms.measurement.internal.zzht:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzhu -> com.google.android.gms.measurement.internal.zzhu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:19:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    1:2:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    1:8:void onActivityPaused(android.app.Activity) -> onActivityPaused
    1:8:void onActivityResumed(android.app.Activity) -> onActivityResumed
    1:2:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
com.google.android.gms.measurement.internal.zzhv -> com.google.android.gms.measurement.internal.zzhv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:5:void zzA() -> zzA
    1:40:void zzB(android.os.Bundle) -> zzB
    1:2:void zzC(java.lang.String,java.lang.String,android.os.Bundle) -> zzC
    0:6:void zzD(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long) -> zzD
    1:4:void zzE(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String) -> zzE
    1:3:void zzF(java.lang.String,java.lang.String,android.os.Bundle) -> zzF
    1:3:void zzG(java.lang.String,java.lang.String,long,android.os.Bundle) -> zzG
    1:180:void zzH(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String) -> zzH
    1:5:void zzI(com.google.android.gms.measurement.internal.zzgt) -> zzI
    1:4:void zzJ(long) -> zzJ
    1:28:void zzK(long,boolean) -> zzK
    1:21:void zzL(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String) -> zzL
    1:3:void zzM(java.lang.String,java.lang.String,long,java.lang.Object) -> zzM
    1:1:void zzN(java.lang.String) -> zzN
    1:2:void zzO(android.os.Bundle) -> zzO
    1:71:void zzP(android.os.Bundle,long) -> zzP
    1:7:void zzQ(android.os.Bundle,int,long) -> zzQ
    1:22:void zzR(com.google.android.gms.measurement.internal.zzag,int,long) -> zzR
    1:3:void zzS(com.google.android.gms.measurement.internal.zzgs) -> zzS
    1:4:void zzT(java.lang.Boolean) -> zzT
    1:13:void zzU(com.google.android.gms.measurement.internal.zzag) -> zzU
    1:2:void zzV(java.lang.String,java.lang.String,java.lang.Object,boolean) -> zzV
    1:26:void zzW(java.lang.String,java.lang.String,java.lang.Object,boolean,long) -> zzW
    1:18:void zzX(java.lang.String,java.lang.String,java.lang.Object,long) -> zzX
    1:5:void zzY(com.google.android.gms.measurement.internal.zzgt) -> zzY
    1:14:void zzZ(java.lang.Boolean,boolean) -> zzZ
    1:28:void zzaa() -> zzaa
    1:2:int zzh(java.lang.String) -> zzh
    1:4:java.lang.Boolean zzi() -> zzi
    1:4:java.lang.Double zzj() -> zzj
    1:4:java.lang.Integer zzl() -> zzl
    1:4:java.lang.Long zzm() -> zzm
    1:1:java.lang.String zzo() -> zzo
    1:1:java.lang.String zzp() -> zzp
    1:1:java.lang.String zzq() -> zzq
    1:4:java.lang.String zzr() -> zzr
    1:20:java.util.ArrayList zzs(java.lang.String,java.lang.String) -> zzs
    1:21:java.util.List zzt(boolean) -> zzt
    1:23:java.util.Map zzu(java.lang.String,java.lang.String,boolean) -> zzu
    1:16:void zzv(com.google.android.gms.measurement.internal.zzhv,com.google.android.gms.measurement.internal.zzag,int,long,boolean,boolean) -> zzv
    1:28:void zzy() -> zzy
    1:11:void zzz(java.lang.String,java.lang.String,android.os.Bundle) -> zzz
com.google.android.gms.measurement.internal.zzhw -> com.google.android.gms.measurement.internal.zzhw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
com.google.android.gms.measurement.internal.zzhx -> com.google.android.gms.measurement.internal.zzhx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzhy -> com.google.android.gms.measurement.internal.zzhy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <init>(com.google.android.gms.measurement.internal.zzhz,java.lang.String,java.net.URL,byte[],java.util.Map,com.google.android.gms.measurement.internal.zzfq,byte[]) -> <init>
    1:14:void run() -> run
    1:1:void zza(int,java.lang.Exception,byte[],java.util.Map) -> zza
    1:3:void zzb(int,java.lang.Exception,byte[],java.util.Map) -> zzb
com.google.android.gms.measurement.internal.zzhz -> com.google.android.gms.measurement.internal.zzhz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:14:java.net.HttpURLConnection zza(java.net.URL) -> zza
com.google.android.gms.measurement.internal.zzi -> com.google.android.gms.measurement.internal.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzia -> com.google.android.gms.measurement.internal.zzia:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:1:java.lang.String zza(java.lang.String,java.lang.String) -> zza
com.google.android.gms.measurement.internal.zzib -> com.google.android.gms.measurement.internal.zzib:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-base@@19.0.1"}
    1:10:java.lang.Object zza(java.lang.Object) -> zza
    1:6:java.lang.String zzb(java.lang.String,java.lang.String[],java.lang.String[]) -> zzb
    1:5:java.lang.String zzc(android.content.Context,java.lang.String,java.lang.String) -> zzc
com.google.android.gms.measurement.internal.zzic -> com.google.android.gms.measurement.internal.zzic:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(java.lang.String,java.lang.String,long) -> <init>
com.google.android.gms.measurement.internal.zzid -> com.google.android.gms.measurement.internal.zzid:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzie -> com.google.android.gms.measurement.internal.zzie:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzif -> com.google.android.gms.measurement.internal.zzif:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzig -> com.google.android.gms.measurement.internal.zzig:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzih -> com.google.android.gms.measurement.internal.zzih:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void run() -> run
com.google.android.gms.measurement.internal.zzii -> com.google.android.gms.measurement.internal.zzii:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzij -> com.google.android.gms.measurement.internal.zzij:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:8:void zzA(android.app.Activity,com.google.android.gms.measurement.internal.zzic,boolean) -> zzA
    1:25:void zzB(com.google.android.gms.measurement.internal.zzic,com.google.android.gms.measurement.internal.zzic,long,boolean,android.os.Bundle) -> zzB
    1:5:void zzC(com.google.android.gms.measurement.internal.zzic,boolean,long) -> zzC
    1:2:com.google.android.gms.measurement.internal.zzic zzj(boolean) -> zzj
    1:8:java.lang.String zzl(java.lang.Class,java.lang.String) -> zzl
    1:5:void zzp(com.google.android.gms.measurement.internal.zzij,android.os.Bundle,com.google.android.gms.measurement.internal.zzic,com.google.android.gms.measurement.internal.zzic,long) -> zzp
    1:7:void zzr(android.app.Activity,android.os.Bundle) -> zzr
    1:4:void zzs(android.app.Activity) -> zzs
    1:12:void zzt(android.app.Activity) -> zzt
    1:20:void zzu(android.app.Activity) -> zzu
    1:8:void zzv(android.app.Activity,android.os.Bundle) -> zzv
    1:37:void zzw(android.app.Activity,java.lang.String,java.lang.String) -> zzw
    1:38:void zzx(android.os.Bundle,long) -> zzx
    1:3:void zzy(java.lang.String,com.google.android.gms.measurement.internal.zzic) -> zzy
    1:6:com.google.android.gms.measurement.internal.zzic zzz(android.app.Activity) -> zzz
com.google.android.gms.measurement.internal.zzik -> com.google.android.gms.measurement.internal.zzik:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:22:void run() -> run
com.google.android.gms.measurement.internal.zzil -> com.google.android.gms.measurement.internal.zzil:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void run() -> run
com.google.android.gms.measurement.internal.zzim -> com.google.android.gms.measurement.internal.zzim:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:12:void run() -> run
com.google.android.gms.measurement.internal.zzin -> com.google.android.gms.measurement.internal.zzin:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:9:void run() -> run
com.google.android.gms.measurement.internal.zzio -> com.google.android.gms.measurement.internal.zzio:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:25:void run() -> run
com.google.android.gms.measurement.internal.zzip -> com.google.android.gms.measurement.internal.zzip:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:23:void run() -> run
com.google.android.gms.measurement.internal.zziq -> com.google.android.gms.measurement.internal.zziq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:10:void run() -> run
com.google.android.gms.measurement.internal.zzir -> com.google.android.gms.measurement.internal.zzir:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:10:void run() -> run
com.google.android.gms.measurement.internal.zzis -> com.google.android.gms.measurement.internal.zzis:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void run() -> run
com.google.android.gms.measurement.internal.zzit -> com.google.android.gms.measurement.internal.zzit:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzjj,com.google.android.gms.measurement.internal.zzgn) -> <init>
    1:5:void zzc() -> zzc
com.google.android.gms.measurement.internal.zziu -> com.google.android.gms.measurement.internal.zziu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:10:void run() -> run
com.google.android.gms.measurement.internal.zziv -> com.google.android.gms.measurement.internal.zziv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzjj,com.google.android.gms.measurement.internal.zzgn) -> <init>
    1:2:void zzc() -> zzc
com.google.android.gms.measurement.internal.zziw -> com.google.android.gms.measurement.internal.zziw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zzix -> com.google.android.gms.measurement.internal.zzix:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void run() -> run
com.google.android.gms.measurement.internal.zziy -> com.google.android.gms.measurement.internal.zziy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:5:void run() -> run
com.google.android.gms.measurement.internal.zziz -> com.google.android.gms.measurement.internal.zziz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void run() -> run
com.google.android.gms.measurement.internal.zzj -> com.google.android.gms.measurement.internal.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzja -> com.google.android.gms.measurement.internal.zzja:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:18:void run() -> run
com.google.android.gms.measurement.internal.zzjb -> com.google.android.gms.measurement.internal.zzjb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:14:void run() -> run
com.google.android.gms.measurement.internal.zzjc -> com.google.android.gms.measurement.internal.zzjc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:18:void run() -> run
com.google.android.gms.measurement.internal.zzjd -> com.google.android.gms.measurement.internal.zzjd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void run() -> run
com.google.android.gms.measurement.internal.zzje -> com.google.android.gms.measurement.internal.zzje:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzjf -> com.google.android.gms.measurement.internal.zzjf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void run() -> run
com.google.android.gms.measurement.internal.zzjg -> com.google.android.gms.measurement.internal.zzjg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzjh -> com.google.android.gms.measurement.internal.zzjh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzji -> com.google.android.gms.measurement.internal.zzji:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:7:void onConnected(android.os.Bundle) -> onConnected
    1:7:void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    1:6:void onConnectionSuspended(int) -> onConnectionSuspended
    1:22:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1:6:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    1:10:void zzb(android.content.Intent) -> zzb
    1:15:void zzc() -> zzc
    1:2:void zzd() -> zzd
com.google.android.gms.measurement.internal.zzjj -> com.google.android.gms.measurement.internal.zzjj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:6:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:8:void zzA(com.google.android.gms.measurement.internal.zzat,java.lang.String) -> zzA
    1:9:void zzB(com.google.android.gms.internal.measurement.zzcf,com.google.android.gms.measurement.internal.zzat,java.lang.String) -> zzB
    1:7:void zzC() -> zzC
    1:26:void zzD(com.google.android.gms.measurement.internal.zzdz,com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable,com.google.android.gms.measurement.internal.zzp) -> zzD
    1:9:void zzE(com.google.android.gms.measurement.internal.zzab) -> zzE
    1:8:void zzF(boolean) -> zzF
    1:3:void zzG(com.google.android.gms.measurement.internal.zzic) -> zzG
    1:4:void zzH(android.os.Bundle) -> zzH
    1:4:void zzI() -> zzI
    1:4:void zzJ(com.google.android.gms.measurement.internal.zzdz) -> zzJ
    1:7:void zzK(com.google.android.gms.measurement.internal.zzkq) -> zzK
    1:2:boolean zzL() -> zzL
    1:5:boolean zzM() -> zzM
    1:43:boolean zzN() -> zzN
    1:9:com.google.android.gms.measurement.internal.zzp zzO(boolean) -> zzO
    1:10:void zzP() -> zzP
    1:5:void zzQ() -> zzQ
    1:10:void zzR(java.lang.Runnable) -> zzR
    1:1:boolean zzS() -> zzS
    1:5:void zzo(com.google.android.gms.measurement.internal.zzjj,android.content.ComponentName) -> zzo
    1:6:void zzq() -> zzq
    1:23:void zzr() -> zzr
    1:6:void zzs() -> zzs
    1:4:void zzt(com.google.android.gms.internal.measurement.zzcf) -> zzt
    1:4:void zzu(java.util.concurrent.atomic.AtomicReference) -> zzu
    1:4:void zzv(com.google.android.gms.internal.measurement.zzcf,java.lang.String,java.lang.String) -> zzv
    1:4:void zzw(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String) -> zzw
    1:4:void zzx(java.util.concurrent.atomic.AtomicReference,boolean) -> zzx
    1:4:void zzy(com.google.android.gms.internal.measurement.zzcf,java.lang.String,java.lang.String,boolean) -> zzy
    1:4:void zzz(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,java.lang.String,boolean) -> zzz
com.google.android.gms.measurement.internal.zzjk -> com.google.android.gms.measurement.internal.zzjk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:11:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:16:android.util.Pair zza(java.lang.String) -> zza
    1:3:android.util.Pair zzd(java.lang.String,com.google.android.gms.measurement.internal.zzag) -> zzd
    1:4:java.lang.String zzf(java.lang.String) -> zzf
com.google.android.gms.measurement.internal.zzjl -> com.google.android.gms.measurement.internal.zzjl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzjm -> com.google.android.gms.measurement.internal.zzjm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzjn -> com.google.android.gms.measurement.internal.zzjn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:void run() -> run
com.google.android.gms.measurement.internal.zzjo -> com.google.android.gms.measurement.internal.zzjo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzjp -> com.google.android.gms.measurement.internal.zzjp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(android.content.Context) -> <init>
    1:8:int zza(android.content.Intent,int,int) -> zza
    1:6:android.os.IBinder zzb(android.content.Intent) -> zzb
    1:6:void zzc(int,com.google.android.gms.measurement.internal.zzei,android.content.Intent) -> zzc
    1:2:void zzd(com.google.android.gms.measurement.internal.zzei,android.app.job.JobParameters) -> zzd
    1:4:void zze() -> zze
    1:4:void zzf() -> zzf
    1:3:void zzg(android.content.Intent) -> zzg
    1:3:void zzh(java.lang.Runnable) -> zzh
    1:7:boolean zzi(android.app.job.JobParameters) -> zzi
    1:3:boolean zzj(android.content.Intent) -> zzj
    1:2:com.google.android.gms.measurement.internal.zzei zzk() -> zzk
com.google.android.gms.measurement.internal.zzjq -> com.google.android.gms.measurement.internal.zzjq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzjr -> com.google.android.gms.measurement.internal.zzjr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzjs -> com.google.android.gms.measurement.internal.zzjs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:18:void run() -> run
com.google.android.gms.measurement.internal.zzjt -> com.google.android.gms.measurement.internal.zzjt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzju -> com.google.android.gms.measurement.internal.zzju:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void zza(long) -> zza
    1:4:void zzb() -> zzb
com.google.android.gms.measurement.internal.zzjv -> com.google.android.gms.measurement.internal.zzjv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzjw,com.google.android.gms.measurement.internal.zzgn) -> <init>
    1:6:void zzc() -> zzc
com.google.android.gms.measurement.internal.zzjw -> com.google.android.gms.measurement.internal.zzjw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <init>(com.google.android.gms.measurement.internal.zzjy) -> <init>
    1:1:void zza() -> zza
    1:1:void zzb(long) -> zzb
    1:2:void zzc(long) -> zzc
    1:33:boolean zzd(boolean,boolean,long) -> zzd
com.google.android.gms.measurement.internal.zzjx -> com.google.android.gms.measurement.internal.zzjx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:13:void zza() -> zza
    1:11:void zzb(long,boolean) -> zzb
    1:30:void zzc(long,boolean) -> zzc
com.google.android.gms.measurement.internal.zzjy -> com.google.android.gms.measurement.internal.zzjy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:4:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:8:void zzj(com.google.android.gms.measurement.internal.zzjy,long) -> zzj
    1:15:void zzl(com.google.android.gms.measurement.internal.zzjy,long) -> zzl
    1:2:void zzm() -> zzm
com.google.android.gms.measurement.internal.zzjz -> com.google.android.gms.measurement.internal.zzjz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.common.util.Clock) -> <init>
    1:1:void zzb() -> zzb
    1:1:boolean zzc(long) -> zzc
com.google.android.gms.measurement.internal.zzk -> com.google.android.gms.measurement.internal.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:1:void run() -> run
com.google.android.gms.measurement.internal.zzka -> com.google.android.gms.measurement.internal.zzka:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkb,com.google.android.gms.measurement.internal.zzgn) -> <init>
    1:4:void zzc() -> zzc
com.google.android.gms.measurement.internal.zzkb -> com.google.android.gms.measurement.internal.zzkb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:6:void zza() -> zza
    1:2:boolean zzb() -> zzb
    1:35:void zzd(long) -> zzd
    1:3:int zzf() -> zzf
    1:5:android.app.PendingIntent zzh() -> zzh
    1:1:com.google.android.gms.measurement.internal.zzam zzi() -> zzi
    1:3:void zzj() -> zzj
com.google.android.gms.measurement.internal.zzkc -> com.google.android.gms.measurement.internal.zzkc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
com.google.android.gms.measurement.internal.zzkd -> com.google.android.gms.measurement.internal.zzkd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    0:1:void zzY() -> zzY
    0:3:void zzZ() -> zzZ
com.google.android.gms.measurement.internal.zzke -> com.google.android.gms.measurement.internal.zzke:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
com.google.android.gms.measurement.internal.zzkf -> com.google.android.gms.measurement.internal.zzkf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzkg -> com.google.android.gms.measurement.internal.zzkg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map) -> zza
com.google.android.gms.measurement.internal.zzkh -> com.google.android.gms.measurement.internal.zzkh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map) -> zza
com.google.android.gms.measurement.internal.zzki -> com.google.android.gms.measurement.internal.zzki:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:java.lang.Object call() -> call
com.google.android.gms.measurement.internal.zzkj -> com.google.android.gms.measurement.internal.zzkj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void run() -> run
com.google.android.gms.measurement.internal.zzkk -> com.google.android.gms.measurement.internal.zzkk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void zza(java.lang.String,java.lang.String,android.os.Bundle) -> zza
com.google.android.gms.measurement.internal.zzkl -> com.google.android.gms.measurement.internal.zzkl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzkm -> com.google.android.gms.measurement.internal.zzkm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:11:boolean zza(long,com.google.android.gms.internal.measurement.zzfo) -> zza
    1:1:long zzb(com.google.android.gms.internal.measurement.zzfo) -> zzb
com.google.android.gms.measurement.internal.zzkn -> com.google.android.gms.measurement.internal.zzkn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:13:void <init>(com.google.android.gms.measurement.internal.zzko,com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:42:void zzA() -> zzA
    0:1:void zzB() -> zzB
    1:53:void zzC(com.google.android.gms.measurement.internal.zzg) -> zzC
    1:115:void zzD(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzD
    1:30:void zzE(com.google.android.gms.measurement.internal.zzat,java.lang.String) -> zzE
    1:18:void zzF(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzF
    1:51:void zzH(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map) -> zzH
    1:1:void zzI(boolean) -> zzI
    1:47:void zzJ(int,java.lang.Throwable,byte[],java.lang.String) -> zzJ
    1:206:void zzK(com.google.android.gms.measurement.internal.zzp) -> zzK
    1:2:void zzM(com.google.android.gms.measurement.internal.zzab) -> zzM
    1:39:void zzN(com.google.android.gms.measurement.internal.zzab,com.google.android.gms.measurement.internal.zzp) -> zzN
    1:32:void zzO(com.google.android.gms.measurement.internal.zzkq,com.google.android.gms.measurement.internal.zzp) -> zzO
    1:25:void zzP(com.google.android.gms.measurement.internal.zzp) -> zzP
    1:6:void zzQ() -> zzQ
    1:2:void zzR(com.google.android.gms.measurement.internal.zzab) -> zzR
    1:62:void zzS(com.google.android.gms.measurement.internal.zzab,com.google.android.gms.measurement.internal.zzp) -> zzS
    1:19:void zzT(java.lang.String,com.google.android.gms.measurement.internal.zzag) -> zzT
    1:71:void zzU(com.google.android.gms.measurement.internal.zzkq,com.google.android.gms.measurement.internal.zzp) -> zzU
    1:169:void zzV() -> zzV
    1:375:void zzW(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzW
    1:15:boolean zzX() -> zzX
    1:12:void zzY(com.google.android.gms.internal.measurement.zzfn,int,java.lang.String) -> zzY
    1:4:void zzZ(com.google.android.gms.internal.measurement.zzfn,java.lang.String) -> zzZ
    1:5:long zza() -> zza
    1:27:com.google.android.gms.measurement.internal.zzp zzaa(java.lang.String) -> zzaa
    1:11:java.lang.Boolean zzab(com.google.android.gms.measurement.internal.zzg) -> zzab
    1:11:void zzac() -> zzac
    0:21:void zzad(com.google.android.gms.internal.measurement.zzfx,long,boolean) -> zzad
    1:10:void zzae(com.google.android.gms.internal.measurement.zzfn,com.google.android.gms.internal.measurement.zzfn) -> zzae
    1:71:void zzaf() -> zzaf
    1:5:boolean zzag(com.google.android.gms.measurement.internal.zzp) -> zzag
    1:404:boolean zzah(java.lang.String,long) -> zzah
    1:6:boolean zzai() -> zzai
    1:8:boolean zzaj(com.google.android.gms.internal.measurement.zzfn,com.google.android.gms.internal.measurement.zzfn) -> zzaj
    0:2:com.google.android.gms.measurement.internal.zzkd zzak(com.google.android.gms.measurement.internal.zzkd) -> zzak
    1:1:android.content.Context zzau() -> zzau
    1:1:com.google.android.gms.common.util.Clock zzav() -> zzav
    1:1:com.google.android.gms.measurement.internal.zzei zzay() -> zzay
    1:1:com.google.android.gms.measurement.internal.zzfp zzaz() -> zzaz
    1:63:com.google.android.gms.measurement.internal.zzg zzd(com.google.android.gms.measurement.internal.zzp) -> zzd
    1:1:com.google.android.gms.measurement.internal.zzz zzf() -> zzf
    1:1:com.google.android.gms.measurement.internal.zzaf zzg() -> zzg
    1:18:com.google.android.gms.measurement.internal.zzag zzh(java.lang.String) -> zzh
    1:1:com.google.android.gms.measurement.internal.zzaj zzi() -> zzi
    1:1:com.google.android.gms.measurement.internal.zzed zzj() -> zzj
    1:1:com.google.android.gms.measurement.internal.zzeo zzl() -> zzl
    0:1:com.google.android.gms.measurement.internal.zzeq zzm() -> zzm
    1:1:com.google.android.gms.measurement.internal.zzfj zzo() -> zzo
    1:1:com.google.android.gms.measurement.internal.zzia zzr() -> zzr
    1:6:com.google.android.gms.measurement.internal.zzkn zzt(android.content.Context) -> zzt
    1:1:com.google.android.gms.measurement.internal.zzkp zzu() -> zzu
    1:1:com.google.android.gms.measurement.internal.zzku zzv() -> zzv
    1:3:java.lang.String zzw(com.google.android.gms.measurement.internal.zzag) -> zzw
    1:6:java.lang.String zzx(com.google.android.gms.measurement.internal.zzp) -> zzx
    1:19:void zzy(com.google.android.gms.measurement.internal.zzkn,com.google.android.gms.measurement.internal.zzko) -> zzy
    1:3:void zzz(java.lang.Runnable) -> zzz
com.google.android.gms.measurement.internal.zzko -> com.google.android.gms.measurement.internal.zzko:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:3:void <init>(android.content.Context) -> <init>
com.google.android.gms.measurement.internal.zzkp -> com.google.android.gms.measurement.internal.zzkp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:14:void zzA(com.google.android.gms.internal.measurement.zzfn,java.lang.String,java.lang.Object) -> zzA
    1:3:boolean zzB(com.google.android.gms.measurement.internal.zzat,com.google.android.gms.measurement.internal.zzp) -> zzB
    1:2:com.google.android.gms.internal.measurement.zzfs zzC(com.google.android.gms.internal.measurement.zzfo,java.lang.String) -> zzC
    1:17:java.lang.Object zzD(com.google.android.gms.internal.measurement.zzfo,java.lang.String) -> zzD
    1:14:void zzE(java.lang.StringBuilder,int,java.util.List) -> zzE
    1:25:void zzF(java.lang.StringBuilder,int,com.google.android.gms.internal.measurement.zzel) -> zzF
    1:1:void zzG(java.lang.StringBuilder,int) -> zzG
    1:5:java.lang.String zzH(boolean,boolean,boolean) -> zzH
    1:39:void zzI(java.lang.StringBuilder,int,java.lang.String,com.google.android.gms.internal.measurement.zzgd) -> zzI
    1:5:void zzJ(java.lang.StringBuilder,int,java.lang.String,java.lang.Object) -> zzJ
    1:10:void zzK(java.lang.StringBuilder,int,java.lang.String,com.google.android.gms.internal.measurement.zzeq) -> zzK
    1:2:int zza(com.google.android.gms.internal.measurement.zzfx,java.lang.String) -> zza
    1:8:long zzd(byte[]) -> zzd
    1:16:android.os.Bundle zzf(java.util.Map,boolean) -> zzf
    1:8:android.os.Parcelable zzh(byte[],android.os.Parcelable$Creator) -> zzh
    1:7:com.google.android.gms.measurement.internal.zzat zzi(com.google.android.gms.internal.measurement.zzaa) -> zzi
    1:10:com.google.android.gms.internal.measurement.zzfo zzj(com.google.android.gms.measurement.internal.zzao) -> zzj
    1:3:com.google.android.gms.internal.measurement.zzlf zzl(com.google.android.gms.internal.measurement.zzlf,byte[]) -> zzl
    1:81:java.lang.String zzm(com.google.android.gms.internal.measurement.zzfw) -> zzm
    1:17:java.lang.String zzo(com.google.android.gms.internal.measurement.zzej) -> zzo
    1:12:java.lang.String zzp(com.google.android.gms.internal.measurement.zzes) -> zzp
    1:15:java.util.List zzq(android.os.Bundle[]) -> zzq
    1:15:java.util.List zzr(java.util.List,java.util.List) -> zzr
    1:5:java.util.List zzs(java.util.BitSet) -> zzs
    1:18:java.util.Map zzt(android.os.Bundle,boolean) -> zzt
    1:12:void zzu(com.google.android.gms.internal.measurement.zzfr,java.lang.Object) -> zzu
    1:10:void zzv(com.google.android.gms.internal.measurement.zzgg,java.lang.Object) -> zzv
    1:2:boolean zzw(java.util.List,int) -> zzw
    1:2:boolean zzx(long,long) -> zzx
    1:2:boolean zzy(java.lang.String) -> zzy
    1:9:byte[] zzz(byte[]) -> zzz
com.google.android.gms.measurement.internal.zzkq -> com.google.android.gms.measurement.internal.zzkq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(int,java.lang.String,long,java.lang.Long,java.lang.Float,java.lang.String,java.lang.String,java.lang.Double) -> <init>
    3:3:void <init>(com.google.android.gms.measurement.internal.zzks) -> <init>
    4:12:void <init>(java.lang.String,long,java.lang.Object,java.lang.String) -> <init>
    1:1:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.measurement.internal.zzkr -> com.google.android.gms.measurement.internal.zzkr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:15:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    1:10:void zza(com.google.android.gms.measurement.internal.zzkq,android.os.Parcel,int) -> zza
com.google.android.gms.measurement.internal.zzks -> com.google.android.gms.measurement.internal.zzks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.Object) -> <init>
com.google.android.gms.measurement.internal.zzkt -> com.google.android.gms.measurement.internal.zzkt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.internal.zzku -> com.google.android.gms.measurement.internal.zzku:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:7:java.lang.Object zzA(java.lang.String,java.lang.Object) -> zzA
    1:3:java.lang.Object zzB(java.lang.String,java.lang.Object) -> zzB
    1:2:java.lang.String zzC(java.lang.String,int,boolean) -> zzC
    1:12:java.net.URL zzD(long,java.lang.String,java.lang.String,long) -> zzD
    1:1:java.security.MessageDigest zzE(java.lang.String) -> zzE
    1:2:java.security.SecureRandom zzF() -> zzF
    1:31:java.util.ArrayList zzG(java.util.List) -> zzG
    1:4:void zzH(android.os.Bundle,long) -> zzH
    1:8:void zzI(android.os.Bundle,int,java.lang.String,java.lang.String,java.lang.Object) -> zzI
    1:9:void zzJ(com.google.android.gms.measurement.internal.zzic,android.os.Bundle,boolean) -> zzJ
    1:4:void zzK(android.os.Bundle,android.os.Bundle) -> zzK
    1:13:void zzL(com.google.android.gms.measurement.internal.zzej,int) -> zzL
    1:6:void zzM(com.google.android.gms.measurement.internal.zzkt,java.lang.String,int,java.lang.String,java.lang.String,int) -> zzM
    1:15:void zzN(android.os.Bundle,java.lang.String,java.lang.Object) -> zzN
    1:4:void zzO(com.google.android.gms.internal.measurement.zzcf,boolean) -> zzO
    1:4:void zzP(com.google.android.gms.internal.measurement.zzcf,java.util.ArrayList) -> zzP
    1:2:void zzQ(com.google.android.gms.internal.measurement.zzcf,android.os.Bundle) -> zzQ
    1:4:void zzR(com.google.android.gms.internal.measurement.zzcf,byte[]) -> zzR
    1:4:void zzS(com.google.android.gms.internal.measurement.zzcf,int) -> zzS
    1:4:void zzT(com.google.android.gms.internal.measurement.zzcf,long) -> zzT
    1:4:void zzU(com.google.android.gms.internal.measurement.zzcf,java.lang.String) -> zzU
    1:27:void zzV(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean) -> zzV
    1:19:boolean zzW(java.lang.String,java.lang.String,java.lang.String) -> zzW
    1:6:boolean zzX(java.lang.String,int,java.lang.String) -> zzX
    1:11:boolean zzY(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String) -> zzY
    1:8:boolean zzZ(java.lang.String,java.lang.String,int,java.lang.Object) -> zzZ
    1:49:int zza(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,android.os.Bundle,java.util.List,boolean,boolean) -> zza
    1:7:void zzaA() -> zzaA
    1:18:boolean zzaa(java.lang.String,java.lang.String) -> zzaa
    1:17:boolean zzab(java.lang.String,java.lang.String) -> zzab
    1:5:boolean zzac(java.lang.String) -> zzac
    1:5:boolean zzad(java.lang.String) -> zzad
    1:1:boolean zzae(java.lang.Object) -> zzae
    1:12:boolean zzaf(android.content.Context,java.lang.String) -> zzaf
    1:1:boolean zzag(java.lang.String) -> zzag
    1:2:boolean zzah(java.lang.String) -> zzah
    1:5:boolean zzai(android.content.Context) -> zzai
    1:3:boolean zzaj(android.content.Context,boolean) -> zzaj
    0:1:boolean zzak(java.lang.String,java.lang.String) -> zzak
    1:1:boolean zzal(java.lang.String) -> zzal
    1:10:boolean zzam(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> zzam
    1:5:byte[] zzan(android.os.Parcelable) -> zzan
    1:2:boolean zzao(android.os.Bundle,int) -> zzao
    1:2:boolean zzap(java.lang.String) -> zzap
    1:9:int zzaq(java.lang.String) -> zzaq
    1:22:java.lang.Object zzar(int,java.lang.Object,boolean,boolean) -> zzar
    1:3:boolean zzas(java.lang.String,java.lang.String[]) -> zzas
    1:3:boolean zzat(android.content.Context,java.lang.String) -> zzat
    1:5:int zzd(java.lang.String,java.lang.Object) -> zzd
    1:4:int zzh(java.lang.String) -> zzh
    1:4:int zzi(java.lang.String) -> zzi
    1:4:int zzj(java.lang.String) -> zzj
    1:5:int zzl(java.lang.String) -> zzl
    1:3:int zzm() -> zzm
    1:3:int zzo(int) -> zzo
    1:4:long zzp(byte[]) -> zzp
    1:8:long zzq() -> zzq
    1:35:android.os.Bundle zzs(android.net.Uri) -> zzs
    1:8:android.os.Bundle zzt(android.os.Bundle) -> zzt
    1:30:android.os.Bundle zzy(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean) -> zzy
    1:15:com.google.android.gms.measurement.internal.zzat zzz(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,long,boolean,boolean) -> zzz
com.google.android.gms.measurement.internal.zzkv -> com.google.android.gms.measurement.internal.zzkv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkw,javax.net.ssl.SSLSocket) -> <init>
    1:1:void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> addHandshakeCompletedListener
    1:1:void bind(java.net.SocketAddress) -> bind
    1:1:void close() -> close
    1:1:void connect(java.net.SocketAddress) -> connect
    2:2:void connect(java.net.SocketAddress,int) -> connect
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:java.nio.channels.SocketChannel getChannel() -> getChannel
    1:1:boolean getEnableSessionCreation() -> getEnableSessionCreation
    1:1:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    1:1:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1:1:java.net.InetAddress getInetAddress() -> getInetAddress
    1:1:java.io.InputStream getInputStream() -> getInputStream
    1:1:boolean getKeepAlive() -> getKeepAlive
    1:1:java.net.InetAddress getLocalAddress() -> getLocalAddress
    1:1:int getLocalPort() -> getLocalPort
    1:1:java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    1:1:boolean getNeedClientAuth() -> getNeedClientAuth
    1:1:boolean getOOBInline() -> getOOBInline
    1:1:java.io.OutputStream getOutputStream() -> getOutputStream
    1:1:int getPort() -> getPort
    1:1:int getReceiveBufferSize() -> getReceiveBufferSize
    1:1:java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    1:1:boolean getReuseAddress() -> getReuseAddress
    1:1:int getSendBufferSize() -> getSendBufferSize
    1:1:javax.net.ssl.SSLSession getSession() -> getSession
    1:1:int getSoLinger() -> getSoLinger
    1:1:int getSoTimeout() -> getSoTimeout
    1:1:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    1:1:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1:1:boolean getTcpNoDelay() -> getTcpNoDelay
    1:1:int getTrafficClass() -> getTrafficClass
    1:1:boolean getUseClientMode() -> getUseClientMode
    1:1:boolean getWantClientAuth() -> getWantClientAuth
    1:1:boolean isBound() -> isBound
    1:1:boolean isClosed() -> isClosed
    1:1:boolean isConnected() -> isConnected
    1:1:boolean isInputShutdown() -> isInputShutdown
    1:1:boolean isOutputShutdown() -> isOutputShutdown
    1:1:void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> removeHandshakeCompletedListener
    1:1:void sendUrgentData(int) -> sendUrgentData
    1:1:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    1:1:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    1:6:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    1:1:void setKeepAlive(boolean) -> setKeepAlive
    1:1:void setNeedClientAuth(boolean) -> setNeedClientAuth
    1:1:void setOOBInline(boolean) -> setOOBInline
    1:1:void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    1:1:void setReceiveBufferSize(int) -> setReceiveBufferSize
    1:1:void setReuseAddress(boolean) -> setReuseAddress
    1:1:void setSendBufferSize(int) -> setSendBufferSize
    1:1:void setSoLinger(boolean,int) -> setSoLinger
    1:1:void setSoTimeout(int) -> setSoTimeout
    1:1:void setTcpNoDelay(boolean) -> setTcpNoDelay
    1:1:void setTrafficClass(int) -> setTrafficClass
    1:1:void setUseClientMode(boolean) -> setUseClientMode
    1:1:void setWantClientAuth(boolean) -> setWantClientAuth
    1:1:void shutdownInput() -> shutdownInput
    1:1:void shutdownOutput() -> shutdownOutput
    1:1:void startHandshake() -> startHandshake
    1:1:java.lang.String toString() -> toString
com.google.android.gms.measurement.internal.zzkw -> com.google.android.gms.measurement.internal.zzkw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    3:3:void <init>(javax.net.ssl.SSLSocketFactory) -> <init>
    1:2:java.net.Socket createSocket() -> createSocket
    3:4:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    5:6:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    7:8:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    9:10:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    11:12:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    1:1:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    1:1:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
com.google.android.gms.measurement.internal.zzl -> com.google.android.gms.measurement.internal.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzm -> com.google.android.gms.measurement.internal.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void run() -> run
com.google.android.gms.measurement.internal.zzn -> com.google.android.gms.measurement.internal.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void interceptEvent(java.lang.String,java.lang.String,android.os.Bundle,long) -> interceptEvent
com.google.android.gms.measurement.internal.zzo -> com.google.android.gms.measurement.internal.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-sdk@@19.0.1"}
    1:2:void onEvent(java.lang.String,java.lang.String,android.os.Bundle,long) -> onEvent
com.google.android.gms.measurement.internal.zzp -> com.google.android.gms.measurement.internal.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:3:void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,long,long,java.lang.String,boolean,boolean,java.lang.String,long,long,int,boolean,boolean,java.lang.String,java.lang.Boolean,long,java.util.List,java.lang.String,java.lang.String) -> <init>
    4:4:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,java.lang.String,boolean,boolean,long,java.lang.String,long,long,int,boolean,boolean,java.lang.String,java.lang.Boolean,long,java.util.List,java.lang.String,java.lang.String) -> <init>
    1:24:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.measurement.internal.zzq -> com.google.android.gms.measurement.internal.zzq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:29:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
com.google.android.gms.measurement.internal.zzr -> com.google.android.gms.measurement.internal.zzr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:13:void zza(java.lang.String,android.os.Bundle) -> zza
    1:27:void zzb() -> zzb
    1:2:void zzc() -> zzc
    1:1:boolean zzd() -> zzd
    1:5:boolean zze() -> zze
com.google.android.gms.measurement.internal.zzs -> com.google.android.gms.measurement.internal.zzs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzt -> com.google.android.gms.measurement.internal.zzt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:4:void <init>(com.google.android.gms.measurement.internal.zzz,java.lang.String,com.google.android.gms.measurement.internal.zzs) -> <init>
    5:9:void <init>(com.google.android.gms.measurement.internal.zzz,java.lang.String,com.google.android.gms.internal.measurement.zzgd,java.util.BitSet,java.util.BitSet,java.util.Map,java.util.Map,com.google.android.gms.measurement.internal.zzs) -> <init>
    1:27:com.google.android.gms.internal.measurement.zzfk zza(int) -> zza
    1:24:void zzc(com.google.android.gms.measurement.internal.zzx) -> zzc
com.google.android.gms.measurement.internal.zzu -> com.google.android.gms.measurement.internal.zzu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
com.google.android.gms.measurement.internal.zzv -> com.google.android.gms.measurement.internal.zzv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:66:com.google.android.gms.internal.measurement.zzfo zza(java.lang.String,com.google.android.gms.internal.measurement.zzfo) -> zza
com.google.android.gms.measurement.internal.zzw -> com.google.android.gms.measurement.internal.zzw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzz,java.lang.String,int,com.google.android.gms.internal.measurement.zzej) -> <init>
    1:1:int zza() -> zza
    1:1:boolean zzb() -> zzb
    1:142:boolean zzd(java.lang.Long,java.lang.Long,com.google.android.gms.internal.measurement.zzfo,long,com.google.android.gms.measurement.internal.zzap,boolean) -> zzd
com.google.android.gms.measurement.internal.zzx -> com.google.android.gms.measurement.internal.zzx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:9:java.lang.Boolean zzd(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String,com.google.android.gms.measurement.internal.zzei) -> zzd
    1:22:java.lang.Boolean zze(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzeq,double) -> zze
    1:16:java.lang.Boolean zzf(java.lang.String,com.google.android.gms.internal.measurement.zzex,com.google.android.gms.measurement.internal.zzei) -> zzf
    1:1:java.lang.Boolean zzg(double,com.google.android.gms.internal.measurement.zzeq) -> zzg
    1:1:java.lang.Boolean zzh(long,com.google.android.gms.internal.measurement.zzeq) -> zzh
    1:2:java.lang.Boolean zzi(java.lang.String,com.google.android.gms.internal.measurement.zzeq) -> zzi
    1:1:java.lang.Boolean zzj(java.lang.Boolean,boolean) -> zzj
com.google.android.gms.measurement.internal.zzy -> com.google.android.gms.measurement.internal.zzy:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzz,java.lang.String,int,com.google.android.gms.internal.measurement.zzes) -> <init>
    1:1:int zza() -> zza
    1:71:boolean zzd(java.lang.Long,java.lang.Long,com.google.android.gms.internal.measurement.zzgh,boolean) -> zzd
com.google.android.gms.measurement.internal.zzz -> com.google.android.gms.measurement.internal.zzz:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzkn) -> <init>
    1:302:java.util.List zza(java.lang.String,java.util.List,java.util.List,java.lang.Long,java.lang.Long) -> zza
    1:4:com.google.android.gms.measurement.internal.zzt zzd(java.lang.Integer) -> zzd
    1:2:boolean zzf(int,int) -> zzf
com.google.android.gms.measurement.zza -> com.google.android.gms.measurement.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.internal.zzfs) -> <init>
    1:1:int zza(java.lang.String) -> zza
    1:1:long zzb() -> zzb
    1:1:java.lang.Boolean zzc() -> zzc
    1:1:java.lang.Double zzd() -> zzd
    1:1:java.lang.Integer zze() -> zze
    1:1:java.lang.Long zzf() -> zzf
    1:5:java.lang.Object zzg(int) -> zzg
    1:1:java.lang.String zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
    1:1:java.lang.String zzj() -> zzj
    1:1:java.lang.String zzk() -> zzk
    1:1:java.lang.String zzl() -> zzl
    1:1:java.util.List zzm(java.lang.String,java.lang.String) -> zzm
    1:5:java.util.Map zzn(boolean) -> zzn
    1:1:java.util.Map zzo(java.lang.String,java.lang.String,boolean) -> zzo
    1:2:void zzp(java.lang.String) -> zzp
    1:2:void zzq(java.lang.String,java.lang.String,android.os.Bundle) -> zzq
    1:2:void zzr(java.lang.String) -> zzr
    1:1:void zzs(java.lang.String,java.lang.String,android.os.Bundle) -> zzs
    1:1:void zzt(java.lang.String,java.lang.String,android.os.Bundle,long) -> zzt
    1:1:void zzv(android.os.Bundle) -> zzv
com.google.android.gms.measurement.zzb -> com.google.android.gms.measurement.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
    1:1:void <init>(com.google.android.gms.measurement.internal.zzhw) -> <init>
    1:1:int zza(java.lang.String) -> zza
    1:1:long zzb() -> zzb
    1:1:java.lang.Boolean zzc() -> zzc
    1:1:java.lang.Double zzd() -> zzd
    1:1:java.lang.Integer zze() -> zze
    1:1:java.lang.Long zzf() -> zzf
    1:1:java.lang.Object zzg(int) -> zzg
    1:1:java.lang.String zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
    1:1:java.lang.String zzj() -> zzj
    1:1:java.lang.String zzk() -> zzk
    1:1:java.lang.String zzl() -> zzl
    1:1:java.util.List zzm(java.lang.String,java.lang.String) -> zzm
    1:1:java.util.Map zzn(boolean) -> zzn
    1:1:java.util.Map zzo(java.lang.String,java.lang.String,boolean) -> zzo
    1:1:void zzp(java.lang.String) -> zzp
    1:1:void zzq(java.lang.String,java.lang.String,android.os.Bundle) -> zzq
    1:1:void zzr(java.lang.String) -> zzr
    1:1:void zzs(java.lang.String,java.lang.String,android.os.Bundle) -> zzs
    1:1:void zzt(java.lang.String,java.lang.String,android.os.Bundle,long) -> zzt
    1:1:void zzv(android.os.Bundle) -> zzv
com.google.android.gms.measurement.zzc -> com.google.android.gms.measurement.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.measurement.zzd -> com.google.android.gms.measurement.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-impl@@19.0.1"}
com.google.android.gms.signin.SignInOptions -> com.google.android.gms.signin.SignInOptions:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <clinit>() -> <clinit>
    1:8:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
com.google.android.gms.signin.internal.SignInClientImpl -> com.google.android.gms.signin.internal.SignInClientImpl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:2:void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.ClientSettings,android.os.Bundle,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> <init>
    1:13:android.os.Bundle createBundleFromClientSettings(com.google.android.gms.common.internal.ClientSettings) -> createBundleFromClientSettings
    1:4:android.os.Bundle getGetServiceRequestExtraArgs() -> getGetServiceRequestExtraArgs
    1:12:void zaa(com.google.android.gms.signin.internal.zae) -> zaa
    1:1:void zad() -> zad
com.google.android.gms.signin.internal.zaa -> com.google.android.gms.signin.internal.zaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    2:2:void <init>(int,int,android.content.Intent) -> <init>
    1:2:com.google.android.gms.common.api.Status getStatus() -> getStatus
    1:5:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.signin.internal.zab -> com.google.android.gms.signin.internal.zab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.internal.zac -> com.google.android.gms.signin.internal.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>() -> <init>
com.google.android.gms.signin.internal.zad -> com.google.android.gms.signin.internal.zad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>() -> <init>
    1:10:boolean zaa(int,android.os.Parcel,android.os.Parcel,int) -> zaa
com.google.android.gms.signin.internal.zae -> com.google.android.gms.signin.internal.zae:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.internal.zaf -> com.google.android.gms.signin.internal.zaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(android.os.IBinder) -> <init>
    1:4:void zag(com.google.android.gms.signin.internal.zai,com.google.android.gms.signin.internal.zae) -> zag
com.google.android.gms.signin.internal.zag -> com.google.android.gms.signin.internal.zag:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(java.util.List,java.lang.String) -> <init>
    1:2:com.google.android.gms.common.api.Status getStatus() -> getStatus
    1:4:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.signin.internal.zah -> com.google.android.gms.signin.internal.zah:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.internal.zai -> com.google.android.gms.signin.internal.zai:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,com.google.android.gms.common.internal.zat) -> <init>
    1:4:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.signin.internal.zaj -> com.google.android.gms.signin.internal.zaj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.internal.zak -> com.google.android.gms.signin.internal.zak:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:1:void <init>(int,com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.internal.zav) -> <init>
    1:5:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.signin.internal.zal -> com.google.android.gms.signin.internal.zal:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.zaa -> com.google.android.gms.signin.zaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.zab -> com.google.android.gms.signin.zab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.zac -> com.google.android.gms.signin.zac:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.zad -> com.google.android.gms.signin.zad:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
    1:4:void <clinit>() -> <clinit>
com.google.android.gms.signin.zae -> com.google.android.gms.signin.zae:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.signin.zaf -> com.google.android.gms.signin.zaf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-base@@17.6.0"}
com.google.android.gms.stats.CodePackage -> com.google.android.gms.stats.CodePackage:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.stats.GCoreWakefulBroadcastReceiver -> com.google.android.gms.stats.GCoreWakefulBroadcastReceiver:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
    1:1:void <init>() -> <init>
    1:1:boolean completeWakefulIntent(android.content.Context,android.content.Intent) -> completeWakefulIntent
com.google.android.gms.stats.WakeLock -> com.google.android.gms.stats.WakeLock:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
    1:1:void <clinit>() -> <clinit>
    1:32:void <init>(android.content.Context,int,java.lang.String) -> <init>
    1:15:void acquire(long) -> acquire
    1:2:boolean isHeld() -> isHeld
    1:9:void release() -> release
    1:1:void setReferenceCounted(boolean) -> setReferenceCounted
    1:8:void zza(com.google.android.gms.stats.WakeLock) -> zza
    1:1:java.lang.String zzb(java.lang.String) -> zzb
    1:4:void zzc() -> zzc
    1:15:void zzd(int) -> zzd
    1:2:void zze(android.os.PowerManager$WakeLock,android.os.WorkSource) -> zze
com.google.android.gms.stats.zza -> com.google.android.gms.stats.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.stats.zzb -> com.google.android.gms.stats.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.stats.zzc -> com.google.android.gms.stats.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.stats.zzd -> com.google.android.gms.stats.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.stats.zze -> com.google.android.gms.stats.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-stats@@17.0.1"}
com.google.android.gms.tasks.CancellationToken -> com.google.android.gms.tasks.CancellationToken:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.Continuation -> com.google.android.gms.tasks.Continuation:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.DuplicateTaskCompletionException -> com.google.android.gms.tasks.DuplicateTaskCompletionException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    1:7:java.lang.IllegalStateException of(com.google.android.gms.tasks.Task) -> of
com.google.android.gms.tasks.OnCanceledListener -> com.google.android.gms.tasks.OnCanceledListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.OnCompleteListener -> com.google.android.gms.tasks.OnCompleteListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.OnFailureListener -> com.google.android.gms.tasks.OnFailureListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.OnSuccessListener -> com.google.android.gms.tasks.OnSuccessListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.OnTokenCanceledListener -> com.google.android.gms.tasks.OnTokenCanceledListener:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.RuntimeExecutionException -> com.google.android.gms.tasks.RuntimeExecutionException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <init>(java.lang.Throwable) -> <init>
com.google.android.gms.tasks.SuccessContinuation -> com.google.android.gms.tasks.SuccessContinuation:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.Task -> com.google.android.gms.tasks.Task:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:com.google.android.gms.tasks.Task addOnCanceledListener(android.app.Activity,com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    2:2:com.google.android.gms.tasks.Task addOnCanceledListener(com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    3:3:com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    1:1:com.google.android.gms.tasks.Task addOnCompleteListener(android.app.Activity,com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    2:2:com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    3:3:com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    1:1:com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation) -> continueWith
    2:2:com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation) -> continueWith
    1:1:com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation) -> continueWithTask
    2:2:com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation) -> continueWithTask
    1:1:com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation) -> onSuccessTask
    2:2:com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation) -> onSuccessTask
com.google.android.gms.tasks.TaskCompletionSource -> com.google.android.gms.tasks.TaskCompletionSource:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <init>() -> <init>
    2:3:void <init>(com.google.android.gms.tasks.CancellationToken) -> <init>
    1:1:void setException(java.lang.Exception) -> setException
    1:1:void setResult(java.lang.Object) -> setResult
    1:1:boolean trySetException(java.lang.Exception) -> trySetException
    1:1:boolean trySetResult(java.lang.Object) -> trySetResult
com.google.android.gms.tasks.TaskExecutors -> com.google.android.gms.tasks.TaskExecutors:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <clinit>() -> <clinit>
com.google.android.gms.tasks.Tasks -> com.google.android.gms.tasks.Tasks:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    9:18:java.lang.Object await(com.google.android.gms.tasks.Task,long,java.util.concurrent.TimeUnit) -> await
    2:5:com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable) -> call
    1:2:com.google.android.gms.tasks.Task forException(java.lang.Exception) -> forException
    1:2:com.google.android.gms.tasks.Task forResult(java.lang.Object) -> forResult
    1:5:java.lang.Object zza(com.google.android.gms.tasks.Task) -> zza
    1:3:void zzb(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.zzab) -> zzb
com.google.android.gms.tasks.zzaa -> com.google.android.gms.tasks.zzaa:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void onCanceled() -> onCanceled
    1:1:void onFailure(java.lang.Exception) -> onFailure
    1:1:void onSuccess(java.lang.Object) -> onSuccess
    1:1:boolean zzb(long,java.util.concurrent.TimeUnit) -> zzb
com.google.android.gms.tasks.zzab -> com.google.android.gms.tasks.zzab:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.zzc -> com.google.android.gms.tasks.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:8:void run() -> run
com.google.android.gms.tasks.zzd -> com.google.android.gms.tasks.zzd:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zze -> com.google.android.gms.tasks.zze:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:9:void run() -> run
com.google.android.gms.tasks.zzf -> com.google.android.gms.tasks.zzf:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void onCanceled() -> onCanceled
    1:1:void onFailure(java.lang.Exception) -> onFailure
    1:1:void onSuccess(java.lang.Object) -> onSuccess
    1:1:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzg -> com.google.android.gms.tasks.zzg:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:2:void run() -> run
com.google.android.gms.tasks.zzh -> com.google.android.gms.tasks.zzh:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:4:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzi -> com.google.android.gms.tasks.zzi:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:2:void run() -> run
com.google.android.gms.tasks.zzj -> com.google.android.gms.tasks.zzj:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:3:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzk -> com.google.android.gms.tasks.zzk:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:2:void run() -> run
com.google.android.gms.tasks.zzl -> com.google.android.gms.tasks.zzl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:4:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzm -> com.google.android.gms.tasks.zzm:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:2:void run() -> run
com.google.android.gms.tasks.zzn -> com.google.android.gms.tasks.zzn:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:4:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzo -> com.google.android.gms.tasks.zzo:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:10:void run() -> run
com.google.android.gms.tasks.zzp -> com.google.android.gms.tasks.zzp:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void onCanceled() -> onCanceled
    1:1:void onFailure(java.lang.Exception) -> onFailure
    1:1:void onSuccess(java.lang.Object) -> onSuccess
    1:1:void zza(com.google.android.gms.tasks.Task) -> zza
    1:1:void zzb() -> zzb
com.google.android.gms.tasks.zzq -> com.google.android.gms.tasks.zzq:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
com.google.android.gms.tasks.zzr -> com.google.android.gms.tasks.zzr:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:3:void zza(com.google.android.gms.tasks.zzq) -> zza
    1:6:void zzb(com.google.android.gms.tasks.Task) -> zzb
com.google.android.gms.tasks.zzs -> com.google.android.gms.tasks.zzs:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void onCanceled() -> onCanceled
com.google.android.gms.tasks.zzt -> com.google.android.gms.tasks.zzt:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void execute(java.lang.Runnable) -> execute
com.google.android.gms.tasks.zzu -> com.google.android.gms.tasks.zzu:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <init>() -> <init>
    1:1:void execute(java.lang.Runnable) -> execute
com.google.android.gms.tasks.zzv -> com.google.android.gms.tasks.zzv:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:3:void <init>(com.google.android.gms.common.api.internal.LifecycleFragment) -> <init>
    1:6:void onStop() -> onStop
    1:3:com.google.android.gms.tasks.zzv zza(android.app.Activity) -> zza
    1:3:void zzb(com.google.android.gms.tasks.zzq) -> zzb
com.google.android.gms.tasks.zzw -> com.google.android.gms.tasks.zzw:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:1:void <init>() -> <init>
    1:5:com.google.android.gms.tasks.Task addOnCanceledListener(android.app.Activity,com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    6:6:com.google.android.gms.tasks.Task addOnCanceledListener(com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    7:9:com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener) -> addOnCanceledListener
    1:5:com.google.android.gms.tasks.Task addOnCompleteListener(android.app.Activity,com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    6:9:com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    10:12:com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener) -> addOnCompleteListener
    1:5:com.google.android.gms.tasks.Task addOnFailureListener(android.app.Activity,com.google.android.gms.tasks.OnFailureListener) -> addOnFailureListener
    6:6:com.google.android.gms.tasks.Task addOnFailureListener(com.google.android.gms.tasks.OnFailureListener) -> addOnFailureListener
    7:9:com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener) -> addOnFailureListener
    1:5:com.google.android.gms.tasks.Task addOnSuccessListener(android.app.Activity,com.google.android.gms.tasks.OnSuccessListener) -> addOnSuccessListener
    6:6:com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener) -> addOnSuccessListener
    7:9:com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener) -> addOnSuccessListener
    1:1:com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation) -> continueWith
    2:5:com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation) -> continueWith
    1:1:com.google.android.gms.tasks.Task continueWithTask(com.google.android.gms.tasks.Continuation) -> continueWithTask
    2:5:com.google.android.gms.tasks.Task continueWithTask(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation) -> continueWithTask
    1:2:java.lang.Exception getException() -> getException
    1:5:java.lang.Object getResult() -> getResult
    6:12:java.lang.Object getResult(java.lang.Class) -> getResult
    1:2:boolean isComplete() -> isComplete
    1:2:boolean isSuccessful() -> isSuccessful
    1:5:com.google.android.gms.tasks.Task onSuccessTask(com.google.android.gms.tasks.SuccessContinuation) -> onSuccessTask
    6:9:com.google.android.gms.tasks.Task onSuccessTask(java.util.concurrent.Executor,com.google.android.gms.tasks.SuccessContinuation) -> onSuccessTask
    1:3:void zza(java.lang.Object) -> zza
    1:3:boolean zzb(java.lang.Object) -> zzb
    1:4:void zzc(java.lang.Exception) -> zzc
    1:4:boolean zzd(java.lang.Exception) -> zzd
    1:3:boolean zze() -> zze
    1:1:void zzf() -> zzf
    1:1:void zzg() -> zzg
    1:1:void zzh() -> zzh
    1:3:void zzi() -> zzi
com.google.android.gms.tasks.zzx -> com.google.android.gms.tasks.zzx:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-tasks@@17.2.1"}
    1:3:void run() -> run
com.google.android.material.R -> com.google.android.material.R:
    9:9:void <init>() -> <init>
com.google.android.material.R$anim -> com.google.android.material.R$anim:
    10:10:void <init>() -> <init>
com.google.android.material.R$animator -> com.google.android.material.R$animator:
    43:43:void <init>() -> <init>
com.google.android.material.R$attr -> com.google.android.material.R$attr:
    65:65:void <init>() -> <init>
com.google.android.material.R$bool -> com.google.android.material.R$bool:
    969:969:void <init>() -> <init>
com.google.android.material.R$color -> com.google.android.material.R$color:
    974:974:void <init>() -> <init>
com.google.android.material.R$dimen -> com.google.android.material.R$dimen:
    1182:1182:void <init>() -> <init>
com.google.android.material.R$drawable -> com.google.android.material.R$drawable:
    1603:1603:void <init>() -> <init>
com.google.android.material.R$id -> com.google.android.material.R$id:
    1736:1736:void <init>() -> <init>
com.google.android.material.R$integer -> com.google.android.material.R$integer:
    2100:2100:void <init>() -> <init>
com.google.android.material.R$interpolator -> com.google.android.material.R$interpolator:
    2130:2130:void <init>() -> <init>
com.google.android.material.R$layout -> com.google.android.material.R$layout:
    2143:2143:void <init>() -> <init>
com.google.android.material.R$plurals -> com.google.android.material.R$plurals:
    2257:2257:void <init>() -> <init>
com.google.android.material.R$string -> com.google.android.material.R$string:
    2260:2260:void <init>() -> <init>
com.google.android.material.R$style -> com.google.android.material.R$style:
    2366:2366:void <init>() -> <init>
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    3090:4685:void <clinit>() -> <clinit>
    3089:3089:void <init>() -> <init>
com.google.android.material.R$xml -> com.google.android.material.R$xml:
    4690:4690:void <init>() -> <init>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    37:44:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    48:48:float lerp(float,float,float) -> lerp
    53:53:int lerp(int,int,float) -> lerp
    66:73:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    32:32:void <init>() -> <init>
    38:48:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:66:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    39:43:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    48:54:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    59:64:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    28:32:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:37:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    26:26:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:222:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    128:132:android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[]) -> clonePropertyValuesHolder
    175:181:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:201:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:211:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    226:235:boolean equals(java.lang.Object) -> equals
    148:152:android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property) -> getAnimator
    110:113:android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String) -> getPropertyValues
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    160:165:long getTotalDuration() -> getTotalDuration
    99:99:boolean hasPropertyValues(java.lang.String) -> hasPropertyValues
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:124:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:93:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    30:42:void <init>(long,long) -> <init>
    30:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    83:88:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    116:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:110:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:147:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    165:165:void <clinit>() -> <clinit>
    195:196:void <init>(android.content.Context) -> <init>
    199:200:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:277:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    287:293:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> addOnOffsetChangedListener
    297:298:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    585:585:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    948:952:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    387:396:void draw(android.graphics.Canvas) -> draw
    400:408:void drawableStateChanged() -> drawableStateChanged
    930:944:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    130:130:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    590:590:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    130:130:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    130:130:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    595:595:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    600:605:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    534:534:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    672:710:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    715:746:int getDownNestedScrollRange() -> getDownNestedScrollRange
    916:916:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    769:786:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    978:978:int getPendingAction() -> getPendingAction
    382:382:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    974:974:float getTargetElevation() -> getTargetElevation
    987:987:int getTopInset() -> getTopInset
    625:658:int getTotalScrollRange() -> getTotalScrollRange
    667:667:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    616:616:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    500:505:boolean hasCollapsibleChild() -> hasCollapsibleChild
    662:662:boolean hasScrollableChildren() -> hasScrollableChildren
    510:513:void invalidateScrollRanges() -> invalidateScrollRanges
    897:897:boolean isLiftOnScroll() -> isLiftOnScroll
    843:843:boolean isLifted() -> isLifted
    526:529:void onAttachedToWindow() -> onAttachedToWindow
    791:807:int[] onCreateDrawableState(int) -> onCreateDrawableState
    610:613:void onDetachedFromWindow() -> onDetachedFromWindow
    457:489:void onLayout(boolean,int,int,int,int) -> onLayout
    427:453:void onMeasure(int,int) -> onMeasure
    750:766:void onOffsetChanged(int) -> onOffsetChanged
    1003:1017:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    309:312:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> removeOnOffsetChangedListener
    316:317:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    982:983:void resetPendingAction() -> resetPendingAction
    540:543:void setElevation(float) -> setElevation
    557:558:void setExpanded(boolean) -> setExpanded
    572:573:void setExpanded(boolean,boolean) -> setExpanded
    576:581:void setExpanded(boolean,boolean,boolean) -> setExpanded
    892:893:void setLiftOnScroll(boolean) -> setLiftOnScroll
    905:908:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    816:817:boolean setLiftable(boolean) -> setLiftable
    822:827:boolean setLiftableState(boolean) -> setLiftableState
    836:836:boolean setLifted(boolean) -> setLifted
    848:856:boolean setLiftedState(boolean) -> setLiftedState
    517:522:void setOrientation(int) -> setOrientation
    330:346:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    358:359:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    371:372:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    963:966:void setTargetElevation(float) -> setTargetElevation
    417:423:void setVisibility(int) -> setVisibility
    496:496:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    920:925:boolean shouldLift(android.view.View) -> shouldLift
    995:999:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    861:881:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> startLiftOnScrollElevationOverlayAnimation
    492:493:void updateWillNotDraw() -> updateWillNotDraw
    412:412:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$1:
    271:271:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    274:274:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$2:
    874:874:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    877:878:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    1246:1253:void <init>() -> <init>
    1246:1257:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1222:1222:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1611:1651:void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    1658:1669:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1382:1394:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1401:1427:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1222:1222:boolean canDragView(android.view.View) -> canDragView
    1673:1687:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1290:1291:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1496:1496:boolean checkFlag(int,int) -> checkFlag
    1896:1904:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1884:1891:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1430:1446:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1222:1222:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1702:1702:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1222:1222:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1707:1707:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1909:1909:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1771:1815:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1767:1767:boolean isOffsetAnimatorRunning() -> isOffsetAnimatorRunning
    1222:1222:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1694:1698:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1222:1222:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1531:1584:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1222:1222:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1507:1524:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1222:1222:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1303:1322:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1222:1222:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1335:1347:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1222:1222:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1939:1949:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1222:1222:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1914:1933:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1222:1222:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1269:1284:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1222:1222:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1356:1366:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1374:1375:void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback) -> setDragCallback
    1222:1222:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1717:1762:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1867:1878:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1450:1493:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1589:1605:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    1824:1862:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1413:1413:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1416:1418:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1630:1630:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1633:1641:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1662:1662:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    1665:1666:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1228:1228:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1976:1976:void <clinit>() -> <clinit>
    1958:1962:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1965:1966:void <init>(android.os.Parcelable) -> <init>
    1970:1974:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1977:1977:void <init>() -> <init>
    1977:1977:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1977:1977:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1981:1981:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1987:1987:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1977:1977:java.lang.Object[] newArray(int) -> newArray
    1993:1993:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1209:1210:void <init>() -> <init>
    1213:1214:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1203:1203:int getLeftAndRightOffset() -> getLeftAndRightOffset
    1203:1203:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1203:1203:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    1203:1203:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    1203:1203:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1203:1203:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1203:1203:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1203:1203:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1203:1203:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1203:1203:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1203:1203:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1203:1203:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1203:1203:void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback) -> setDragCallback
    1203:1203:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    1203:1203:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    1203:1203:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    1203:1203:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback -> com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
    1206:1206:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1099:1111:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1099:1115:void <init>(int,int) -> <init>
    1099:1119:void <init>(int,int,float) -> <init>
    1099:1123:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1099:1127:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1099:1133:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1099:1141:void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams) -> <init>
    1166:1166:int getScrollFlags() -> getScrollFlags
    1188:1188:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1193:1193:boolean isCollapsible() -> isCollapsible
    1155:1156:void setScrollFlags(int) -> setScrollFlags
    1177:1178:void setScrollInterpolator(android.view.animation.Interpolator) -> setScrollInterpolator
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags -> com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags:
# {"id":"sourceFile","fileName":"AppBarLayout.java"}
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    2005:2005:void <init>() -> <init>
    2008:2015:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2003:2003:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2114:2120:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2103:2108:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    2003:2003:int getLeftAndRightOffset() -> getLeftAndRightOffset
    2082:2099:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2125:2128:int getScrollRange(android.view.View) -> getScrollRange
    2003:2003:int getTopAndBottomOffset() -> getTopAndBottomOffset
    2003:2003:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    2003:2003:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    2020:2020:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2065:2078:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2026:2028:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2034:2038:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2003:2003:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2003:2003:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2046:2061:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2003:2003:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    2003:2003:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    2003:2003:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    2003:2003:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
    2133:2139:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.CollapsingToolbarLayout -> com.google.android.material.appbar.CollapsingToolbarLayout:
    119:119:void <clinit>() -> <clinit>
    183:184:void <init>(android.content.Context) -> <init>
    187:188:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    144:300:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    824:845:void animateScrim(int) -> animateScrim
    1448:1448:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    427:430:void disableLiftOnScrollIfNeeded(com.google.android.material.appbar.AppBarLayout) -> disableLiftOnScrollIfNeeded
    358:395:void draw(android.graphics.Canvas) -> draw
    402:409:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    949:969:void drawableStateChanged() -> drawableStateChanged
    448:480:void ensureToolbar() -> ensureToolbar
    496:502:android.view.View findDirectChild(android.view.View) -> findDirectChild
    117:117:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    117:117:android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1453:1453:com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    117:117:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    117:117:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1458:1458:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1463:1463:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1069:1069:int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    1131:1131:android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    915:915:android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    1116:1116:int getExpandedTitleGravity() -> getExpandedTitleGravity
    1239:1239:int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    1218:1218:int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    1176:1176:int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    1197:1197:int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    1146:1146:android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    684:689:int getHeightWithMargins(android.view.View) -> getHeightWithMargins
    1329:1329:int getHyphenationFrequency() -> getHyphenationFrequency
    1278:1278:int getLineCount() -> getLineCount
    1295:1295:float getLineSpacingAdd() -> getLineSpacingAdd
    1312:1312:float getLineSpacingMultiplier() -> getLineSpacingMultiplier
    1269:1269:int getMaxLines() -> getMaxLines
    1582:1584:int getMaxOffsetForPinChild(android.view.View) -> getMaxOffsetForPinChild
    859:859:int getScrimAlpha() -> getScrimAlpha
    1443:1443:long getScrimAnimationDuration() -> getScrimAnimationDuration
    1412:1428:int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    1021:1021:android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    722:722:java.lang.CharSequence getTitle() -> getTitle
    759:759:int getTitleCollapseMode() -> getTitleCollapseMode
    673:679:java.lang.CharSequence getToolbarTitle(android.view.View) -> getToolbarTitle
    694:699:com.google.android.material.appbar.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> getViewOffsetHelper
    1383:1383:boolean isExtraMultilineHeightEnabled() -> isExtraMultilineHeightEnabled
    1365:1365:boolean isForceApplySystemWindowInsetTop() -> isForceApplySystemWindowInsetTop
    1347:1347:boolean isRtlTextDirectionHeuristicsEnabled() -> isRtlTextDirectionHeuristicsEnabled
    421:421:boolean isTitleCollapseFadeMode() -> isTitleCollapseFadeMode
    787:787:boolean isTitleEnabled() -> isTitleEnabled
    483:483:boolean isToolbar(android.view.View) -> isToolbar
    488:488:boolean isToolbarChild(android.view.View) -> isToolbarChild
    304:324:void onAttachedToWindow() -> onAttachedToWindow
    329:335:void onDetachedFromWindow() -> onDetachedFromWindow
    567:599:void onLayout(boolean,int,int,int,int) -> onLayout
    525:563:void onMeasure(int,int) -> onMeasure
    414:418:void onSizeChanged(int,int,int,int) -> onSizeChanged
    338:353:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    1060:1061:void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    1032:1033:void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    1041:1042:void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    1050:1051:void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    1125:1126:void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    871:883:void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    893:894:void setContentScrimColor(int) -> setContentScrimColor
    904:905:void setContentScrimResource(int) -> setContentScrimResource
    1088:1089:void setExpandedTitleColor(int) -> setExpandedTitleColor
    1107:1108:void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    1163:1168:void setExpandedTitleMargin(int,int,int,int) -> setExpandedTitleMargin
    1250:1252:void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    1229:1231:void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    1187:1189:void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    1208:1210:void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    1079:1080:void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    1097:1098:void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    1140:1141:void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    1374:1375:void setExtraMultilineHeightEnabled(boolean) -> setExtraMultilineHeightEnabled
    1356:1357:void setForceApplySystemWindowInsetTop(boolean) -> setForceApplySystemWindowInsetTop
    1322:1323:void setHyphenationFrequency(int) -> setHyphenationFrequency
    1288:1289:void setLineSpacingAdd(float) -> setLineSpacingAdd
    1305:1306:void setLineSpacingMultiplier(float) -> setLineSpacingMultiplier
    1260:1261:void setMaxLines(int) -> setMaxLines
    1338:1339:void setRtlTextDirectionHeuristicsEnabled(boolean) -> setRtlTextDirectionHeuristicsEnabled
    848:856:void setScrimAlpha(int) -> setScrimAlpha
    1438:1439:void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    1398:1403:void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    800:801:void setScrimsShown(boolean) -> setScrimsShown
    813:821:void setScrimsShown(boolean,boolean) -> setScrimsShown
    929:945:void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    999:1000:void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    1010:1011:void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    710:712:void setTitle(java.lang.CharSequence) -> setTitle
    732:750:void setTitleCollapseMode(int) -> setTitleCollapseMode
    772:778:void setTitleEnabled(boolean) -> setTitleEnabled
    978:987:void setVisibility(int) -> setVisibility
    640:670:void updateCollapsedBounds(boolean) -> updateCollapsedBounds
    1589:1590:void updateContentDescriptionFromTitle() -> updateContentDescriptionFromTitle
    433:434:void updateContentScrimBounds(android.graphics.drawable.Drawable,int,int) -> updateContentScrimBounds
    440:445:void updateContentScrimBounds(android.graphics.drawable.Drawable,android.view.View,int,int) -> updateContentScrimBounds
    506:521:void updateDummyView() -> updateDummyView
    1576:1579:void updateScrimVisibility() -> updateScrimVisibility
    604:628:void updateTextBounds(int,int,int,int,boolean) -> updateTextBounds
    631:637:void updateTitleFromToolbarIfNeeded() -> updateTitleFromToolbarIfNeeded
    973:973:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.CollapsingToolbarLayout$1 -> com.google.android.material.appbar.CollapsingToolbarLayout$1:
    293:293:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    297:297:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.CollapsingToolbarLayout$2 -> com.google.android.material.appbar.CollapsingToolbarLayout$2:
    833:833:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    836:837:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams -> com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams:
    1491:1506:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1491:1510:void <init>(int,int) -> <init>
    1491:1514:void <init>(int,int,int) -> <init>
    1491:1518:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1491:1522:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1491:1528:void <init>(android.widget.FrameLayout$LayoutParams) -> <init>
    1548:1548:int getCollapseMode() -> getCollapseMode
    1570:1570:float getParallaxMultiplier() -> getParallaxMultiplier
    1537:1538:void setCollapseMode(int) -> setCollapseMode
    1560:1561:void setParallaxMultiplier(float) -> setParallaxMultiplier
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener -> com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener:
    1593:1593:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    1597:1635:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    45:50:void <init>() -> <init>
    45:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    241:241:boolean canDragView(android.view.View) -> canDragView
    254:257:void ensureVelocityTracker() -> ensureVelocityTracker
    202:227:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    246:246:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    250:250:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    183:183:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    237:237:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    59:105:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    111:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    164:179:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    263:266:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:279:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    41:47:void <init>() -> <init>
    41:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:168:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    162:162:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    204:204:int getOverlayTop() -> getOverlayTop
    179:179:int getScrollRange(android.view.View) -> getScrollRange
    186:186:int getVerticalLayoutGap() -> getVerticalLayoutGap
    113:155:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:105:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    172:172:int resolveGravity(int) -> resolveGravity
    196:197:void setOverlayTop(int) -> setOverlayTop
    158:158:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    70:70:void <clinit>() -> <clinit>
    77:78:void <init>(android.content.Context) -> <init>
    81:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    85:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:154:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    264:275:void initBackground(android.content.Context) -> initBackground
    260:260:boolean isSubtitleCentered() -> isSubtitleCentered
    236:236:boolean isTitleCentered() -> isTitleCentered
    159:179:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    113:133:void maybeCenterTitleViews() -> maybeCenterTitleViews
    279:284:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    183:186:void onAttachedToWindow() -> onAttachedToWindow
    107:110:void onLayout(boolean,int,int,int,int) -> onLayout
    191:194:void setElevation(float) -> setElevation
    198:199:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    207:213:void setNavigationIconTint(int) -> setNavigationIconTint
    247:251:void setSubtitleCentered(boolean) -> setSubtitleCentered
    223:227:void setTitleCentered(boolean) -> setTitleCentered
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    30:33:void <init>() -> <init>
    30:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    92:92:int getLeftAndRightOffset() -> getLeftAndRightOffset
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    112:112:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    102:102:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    66:67:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:60:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    106:109:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    79:84:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    70:75:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    96:99:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    37:42:void <init>(android.view.View) -> <init>
    51:53:void applyOffsets() -> applyOffsets
    98:98:int getLayoutLeft() -> getLayoutLeft
    94:94:int getLayoutTop() -> getLayoutTop
    90:90:int getLeftAndRightOffset() -> getLeftAndRightOffset
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    114:114:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    106:106:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    46:48:void onViewLayout() -> onViewLayout
    110:111:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    77:82:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:67:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    102:103:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    39:40:void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    62:80:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    44:57:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
com.google.android.material.badge.BadgeDrawable -> com.google.android.material.badge.BadgeDrawable:
    165:166:void <clinit>() -> <clinit>
    425:440:void <init>(android.content.Context) -> <init>
    929:981:void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View) -> calculateCenterAndBounds
    654:656:void clearNumber() -> clearNumber
    310:310:com.google.android.material.badge.BadgeDrawable create(android.content.Context) -> create
    342:344:com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    327:332:com.google.android.material.badge.BadgeDrawable createFromResource(android.content.Context,int) -> createFromResource
    302:304:com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState) -> createFromSavedState
    745:753:void draw(android.graphics.Canvas) -> draw
    984:992:void drawText(android.graphics.Canvas) -> drawText
    841:841:int getAdditionalHorizontalOffset() -> getAdditionalHorizontalOffset
    873:873:int getAdditionalVerticalOffset() -> getAdditionalVerticalOffset
    716:716:int getAlpha() -> getAlpha
    570:570:int getBackgroundColor() -> getBackgroundColor
    686:686:int getBadgeGravity() -> getBadgeGravity
    997:1007:java.lang.String getBadgeText() -> getBadgeText
    596:596:int getBadgeTextColor() -> getBadgeTextColor
    786:808:java.lang.CharSequence getContentDescription() -> getContentDescription
    511:511:android.widget.FrameLayout getCustomBadgeParent() -> getCustomBadgeParent
    827:827:int getHorizontalOffset() -> getHorizontalOffset
    734:734:int getIntrinsicHeight() -> getIntrinsicHeight
    740:740:int getIntrinsicWidth() -> getIntrinsicWidth
    665:665:int getMaxCharacterCount() -> getMaxCharacterCount
    628:631:int getNumber() -> getNumber
    728:728:int getOpacity() -> getOpacity
    295:295:com.google.android.material.badge.BadgeDrawable$SavedState getSavedState() -> getSavedState
    859:859:int getVerticalOffset() -> getVerticalOffset
    615:615:boolean hasNumber() -> hasNumber
    706:706:boolean isStateful() -> isStateful
    390:418:void loadDefaultStateFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> loadDefaultStateFromAttributes
    768:768:boolean onStateChange(int[]) -> onStateChange
    763:764:void onTextSizeChange() -> onTextSizeChange
    422:422:int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int) -> readColorFromAttributes
    362:386:void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState) -> restoreFromSavedState
    836:838:void setAdditionalHorizontalOffset(int) -> setAdditionalHorizontalOffset
    868:870:void setAdditionalVerticalOffset(int) -> setAdditionalVerticalOffset
    721:724:void setAlpha(int) -> setAlpha
    580:586:void setBackgroundColor(int) -> setBackgroundColor
    695:702:void setBadgeGravity(int) -> setBadgeGravity
    606:611:void setBadgeTextColor(int) -> setBadgeTextColor
    712:712:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    781:782:void setContentDescriptionExceedsMaxBadgeNumberStringResource(int) -> setContentDescriptionExceedsMaxBadgeNumberStringResource
    772:773:void setContentDescriptionNumberless(java.lang.CharSequence) -> setContentDescriptionNumberless
    776:777:void setContentDescriptionQuantityStringsResource(int) -> setContentDescriptionQuantityStringsResource
    818:820:void setHorizontalOffset(int) -> setHorizontalOffset
    675:682:void setMaxCharacterCount(int) -> setMaxCharacterCount
    643:650:void setNumber(int) -> setNumber
    885:894:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    877:882:void setTextAppearanceResource(int) -> setTextAppearanceResource
    850:852:void setVerticalOffset(int) -> setVerticalOffset
    352:359:void setVisible(boolean) -> setVisible
    519:554:void tryWrapAnchorInCompatParent(android.view.View) -> tryWrapAnchorInCompatParent
    557:560:void updateAnchorParentToNotClip(android.view.View) -> updateAnchorParentToNotClip
    456:460:void updateBadgeCoordinates(android.view.View,android.view.ViewGroup) -> updateBadgeCoordinates
    475:476:void updateBadgeCoordinates(android.view.View) -> updateBadgeCoordinates
    494:506:void updateBadgeCoordinates(android.view.View,android.widget.FrameLayout) -> updateBadgeCoordinates
    897:925:void updateCenterAndBounds() -> updateCenterAndBounds
    1013:1014:void updateMaxBadgeNumber() -> updateMaxBadgeNumber
com.google.android.material.badge.BadgeDrawable$1 -> com.google.android.material.badge.BadgeDrawable$1:
    548:548:void <init>(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> <init>
    551:552:void run() -> run
com.google.android.material.badge.BadgeDrawable$SavedState -> com.google.android.material.badge.BadgeDrawable$SavedState:
    255:255:void <clinit>() -> <clinit>
    204:237:void <init>(android.content.Context) -> <init>
    204:253:void <init>(android.os.Parcel) -> <init>
    200:200:boolean access$000(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$000
    200:200:boolean access$002(com.google.android.material.badge.BadgeDrawable$SavedState,boolean) -> access$002
    200:200:int access$100(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$100
    200:200:int access$1000(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$1000
    200:200:int access$1002(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$1002
    200:200:int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$102
    200:200:java.lang.CharSequence access$1100(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$1100
    200:200:java.lang.CharSequence access$1102(com.google.android.material.badge.BadgeDrawable$SavedState,java.lang.CharSequence) -> access$1102
    200:200:int access$1200(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$1200
    200:200:int access$1202(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$1202
    200:200:int access$1300(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$1300
    200:200:int access$1302(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$1302
    200:200:int access$200(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$200
    200:200:int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$202
    200:200:int access$300(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$300
    200:200:int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$302
    200:200:int access$400(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$400
    200:200:int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$402
    200:200:int access$500(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$500
    200:200:int access$502(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$502
    200:200:int access$600(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$600
    200:200:int access$602(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$602
    200:200:int access$700(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$700
    200:200:int access$702(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$702
    200:200:int access$800(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$800
    200:200:int access$802(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$802
    200:200:int access$900(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$900
    200:200:int access$902(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$902
    272:272:int describeContents() -> describeContents
    277:290:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeDrawable$SavedState$1 -> com.google.android.material.badge.BadgeDrawable$SavedState$1:
# {"id":"sourceFile","fileName":"BadgeDrawable.java"}
    256:256:void <init>() -> <init>
    256:256:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    260:260:com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    256:256:java.lang.Object[] newArray(int) -> newArray
    266:266:com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int) -> newArray
com.google.android.material.badge.BadgeUtils -> com.google.android.material.badge.BadgeUtils:
    48:48:void <clinit>() -> <clinit>
    52:54:void <init>() -> <init>
    76:77:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View) -> attachBadgeDrawable
    89:101:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> attachBadgeDrawable
    110:111:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,androidx.appcompat.widget.Toolbar,int) -> attachBadgeDrawable
    126:138:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,androidx.appcompat.widget.Toolbar,int,android.widget.FrameLayout) -> attachBadgeDrawable
    243:253:android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray) -> createBadgeDrawablesFromSavedStates
    218:227:com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray) -> createParcelableBadgeStates
    147:155:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View) -> detachBadgeDrawable
    164:174:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,androidx.appcompat.widget.Toolbar,int) -> detachBadgeDrawable
    188:190:void removeToolbarOffset(com.google.android.material.badge.BadgeDrawable) -> removeToolbarOffset
    200:204:void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> setBadgeDrawableBounds
    178:184:void setToolbarOffset(com.google.android.material.badge.BadgeDrawable,android.content.res.Resources) -> setToolbarOffset
    67:72:void updateBadgeBounds(android.graphics.Rect,float,float,float,float) -> updateBadgeBounds
com.google.android.material.badge.BadgeUtils$1 -> com.google.android.material.badge.BadgeUtils$1:
    127:127:void <init>(androidx.appcompat.widget.Toolbar,int,com.google.android.material.badge.BadgeDrawable,android.widget.FrameLayout) -> <init>
    130:136:void run() -> run
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    47:52:void <init>() -> <init>
    47:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    151:164:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    61:64:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    103:108:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    89:89:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    74:79:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    133:147:void slideDown(android.view.View) -> slideDown
    115:126:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    158:158:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    161:162:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    43:231:void <init>() -> <init>
    228:228:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    439:439:float clamp(float,float,float) -> clamp
    443:443:int clamp(int,int,int) -> clamp
    379:385:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    458:458:float fraction(float,float,float) -> fraction
    453:453:int getDragState() -> getDragState
    123:123:com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener getListener() -> getListener
    190:209:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    178:184:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    214:218:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    142:143:void setDragDismissDistance(float) -> setDragDismissDistance
    160:161:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    117:118:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    171:173:void setSensitivity(float) -> setSensitivity
    151:152:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    133:134:void setSwipeDirection(int) -> setSwipeDirection
    409:436:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    232:236:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    325:351:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    356:356:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    320:320:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    247:256:void onViewCaptured(android.view.View,int) -> onViewCaptured
    260:263:void onViewDragStateChanged(int) -> onViewDragStateChanged
    361:375:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    268:290:void onViewReleased(android.view.View,float,float) -> onViewReleased
    293:315:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    241:242:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
    415:415:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    418:432:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    391:394:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    398:405:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    111:111:void <clinit>() -> <clinit>
    236:237:void <init>(android.content.Context) -> <init>
    240:241:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    140:331:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:109:boolean access$000(com.google.android.material.bottomappbar.BottomAppBar) -> access$000
    109:109:boolean access$002(com.google.android.material.bottomappbar.BottomAppBar,boolean) -> access$002
    109:109:int access$100(com.google.android.material.bottomappbar.BottomAppBar) -> access$100
    109:109:boolean access$1000(com.google.android.material.bottomappbar.BottomAppBar) -> access$1000
    109:109:int access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    109:109:int access$1102(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1102
    109:109:void access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    109:109:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    109:109:void access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    109:109:void access$1500(com.google.android.material.bottomappbar.BottomAppBar) -> access$1500
    109:109:void access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    109:109:android.animation.Animator access$1702(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1702
    109:109:float access$1800(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$1800
    109:109:android.animation.Animator access$1902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$1902
    109:109:boolean access$200(com.google.android.material.bottomappbar.BottomAppBar) -> access$200
    109:109:int access$2000(com.google.android.material.bottomappbar.BottomAppBar) -> access$2000
    109:109:void access$2100(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> access$2100
    109:109:com.google.android.material.floatingactionbutton.FloatingActionButton access$2200(com.google.android.material.bottomappbar.BottomAppBar) -> access$2200
    109:109:float access$2300(com.google.android.material.bottomappbar.BottomAppBar) -> access$2300
    109:109:int access$2700(com.google.android.material.bottomappbar.BottomAppBar) -> access$2700
    109:109:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    109:109:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    109:109:void access$300(com.google.android.material.bottomappbar.BottomAppBar,int,boolean) -> access$300
    109:109:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    109:109:android.view.View access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    109:109:void access$3200(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3200
    109:109:com.google.android.material.shape.MaterialShapeDrawable access$400(com.google.android.material.bottomappbar.BottomAppBar) -> access$400
    109:109:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$500(com.google.android.material.bottomappbar.BottomAppBar) -> access$500
    109:109:boolean access$600(com.google.android.material.bottomappbar.BottomAppBar) -> access$600
    109:109:int access$702(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$702
    109:109:boolean access$800(com.google.android.material.bottomappbar.BottomAppBar) -> access$800
    109:109:int access$900(com.google.android.material.bottomappbar.BottomAppBar) -> access$900
    109:109:int access$902(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$902
    509:513:void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) -> addAnimationListener
    936:951:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    872:878:void cancelAnimations() -> cancelAnimations
    634:656:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    660:664:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    714:760:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    532:538:void dispatchAnimationEnd() -> dispatchAnimationEnd
    523:529:void dispatchAnimationStart() -> dispatchAnimationStart
    599:600:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    605:617:android.view.View findDependentView() -> findDependentView
    783:790:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    841:868:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    400:400:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    109:109:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    978:981:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    954:954:int getBottomInset() -> getBottomInset
    440:440:float getCradleVerticalOffset() -> getCradleVerticalOffset
    339:339:int getFabAlignmentMode() -> getFabAlignmentMode
    380:380:int getFabAnimationMode() -> getFabAnimationMode
    407:407:float getFabCradleMargin() -> getFabCradleMargin
    423:423:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    767:773:float getFabTranslationX(int) -> getFabTranslationX
    778:778:float getFabTranslationX() -> getFabTranslationX
    763:763:float getFabTranslationY() -> getFabTranslationY
    462:462:boolean getHideOnScroll() -> getHideOnScroll
    962:962:int getLeftInset() -> getLeftInset
    958:958:int getRightInset() -> getRightInset
    900:901:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    621:622:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    667:707:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    562:595:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    986:995:void onAttachedToWindow() -> onAttachedToWindow
    882:896:void onLayout(boolean,int,int,int,int) -> onLayout
    1144:1152:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1135:1139:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    476:477:void performHide() -> performHide
    481:482:void performShow() -> performShow
    516:520:void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) -> removeAnimationListener
    499:505:void replaceMenu(int) -> replaceMenu
    916:927:void setActionMenuViewPosition() -> setActionMenuViewPosition
    395:396:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    449:454:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    906:913:void setCutoutState() -> setCutoutState
    486:491:void setElevation(float) -> setElevation
    350:351:void setFabAlignmentMode(int) -> setFabAlignmentMode
    367:372:void setFabAlignmentModeAndReplaceMenu(int,int) -> setFabAlignmentModeAndReplaceMenu
    391:392:void setFabAnimationMode(int) -> setFabAnimationMode
    555:559:void setFabCornerSize(float) -> setFabCornerSize
    414:418:void setFabCradleMargin(float) -> setFabCradleMargin
    428:432:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    545:551:boolean setFabDiameter(int) -> setFabDiameter
    471:472:void setHideOnScroll(boolean) -> setHideOnScroll
    973:973:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    968:968:void setTitle(java.lang.CharSequence) -> setTitle
    797:798:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
    815:829:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$1:
    193:193:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    200:203:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$2 -> com.google.android.material.bottomappbar.BottomAppBar$2:
    209:209:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    209:209:void onScaleChanged(android.view.View) -> onScaleChanged
    212:214:void onScaleChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onScaleChanged
    209:209:void onTranslationChanged(android.view.View) -> onTranslationChanged
    218:232:void onTranslationChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onTranslationChanged
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$3:
    296:296:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    305:328:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    582:582:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    590:592:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    585:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    643:643:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    646:654:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    648:648:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    651:652:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    693:693:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    701:704:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    696:697:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    733:733:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    738:739:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    743:748:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    815:815:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    818:820:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar$9 -> com.google.android.material.bottomappbar.BottomAppBar$9:
    938:938:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    941:948:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    1009:1074:void <init>() -> <init>
    1009:1079:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1001:1001:java.lang.ref.WeakReference access$2400(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2400
    1001:1001:android.graphics.Rect access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1001:1001:int access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1001:1001:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1084:1114:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1001:1001:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1126:1127:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1010:1010:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1022:1069:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1175:1175:void <clinit>() -> <clinit>
    1159:1160:void <init>(android.os.Parcelable) -> <init>
    1163:1166:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1170:1173:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
# {"id":"sourceFile","fileName":"BottomAppBar.java"}
    1176:1176:void <init>() -> <init>
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1180:1180:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1186:1186:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1176:1176:java.lang.Object[] newArray(int) -> newArray
    1192:1192:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    53:69:void <init>(float,float,float) -> <init>
    223:223:float getCradleVerticalOffset() -> getCradleVerticalOffset
    74:180:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    255:255:float getFabCornerRadius() -> getFabCornerRadius
    239:239:float getFabCradleMargin() -> getFabCradleMargin
    247:247:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    189:189:float getFabDiameter() -> getFabDiameter
    214:214:float getHorizontalOffset() -> getHorizontalOffset
    232:236:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    259:260:void setFabCornerSize(float) -> setFabCornerSize
    243:244:void setFabCradleMargin(float) -> setFabCradleMargin
    251:252:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    199:200:void setFabDiameter(float) -> setFabDiameter
    204:205:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
    34:35:void <init>(android.content.Context) -> <init>
    46:46:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    40:40:int getItemLayoutResId() -> getItemLayoutResId
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
    49:69:void <init>(android.content.Context) -> <init>
    197:197:com.google.android.material.navigation.NavigationBarItemView createNavigationBarItemView(android.content.Context) -> createNavigationBarItemView
    191:191:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    153:169:void onLayout(boolean,int,int,int,int) -> onLayout
    73:149:void onMeasure(int,int) -> onMeasure
    180:181:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
    89:90:void <init>(android.content.Context) -> <init>
    93:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    103:122:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    177:186:void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    160:160:com.google.android.material.navigation.NavigationBarMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    152:152:int getMaxItemCount() -> getMaxItemCount
    147:147:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    132:137:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    212:213:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    199:200:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    168:168:boolean shouldDrawCompatibilityTopDivider() -> shouldDrawCompatibilityTopDivider
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    244:244:void <clinit>() -> <clinit>
    188:1470:void <init>() -> <init>
    188:1470:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    83:83:com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    83:83:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    83:83:int access$102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$102
    83:83:int access$1100(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1100
    83:83:boolean access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1200
    83:83:boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    83:83:int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$300
    83:83:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    83:83:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    83:83:boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    83:83:int access$602(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$602
    83:83:void access$700(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$700
    83:83:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    1900:1903:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1081:1084:void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> addBottomSheetCallback
    1235:1242:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1245:1246:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1222:1231:int calculatePeekHeight() -> calculatePeekHeight
    1907:1907:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1309:1310:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean) -> createMaterialShapeDrawable
    1317:1334:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList) -> createMaterialShapeDrawable
    1341:1353:void createShapeValueAnimator() -> createShapeValueAnimator
    1648:1649:void disableShapeAnimations() -> disableShapeAnimations
    1620:1630:void dispatchOnSlide(int) -> dispatchOnSlide
    1292:1304:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    1761:1770:com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View) -> from
    960:962:int getExpandedOffset() -> getExpandedOffset
    932:932:float getHalfExpandedRatio() -> getHalfExpandedRatio
    1337:1337:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    829:829:int getMaxWidth() -> getMaxWidth
    898:898:int getPeekHeight() -> getPeekHeight
    1634:1634:int getPeekHeightMin() -> getPeekHeightMin
    1050:1050:int getSaveFlags() -> getSaveFlags
    1013:1013:boolean getSkipCollapsed() -> getSkipCollapsed
    1168:1168:int getState() -> getState
    1414:1418:float getYVelocity() -> getYVelocity
    1028:1028:boolean isDraggable() -> isDraggable
    781:781:boolean isFitToContents() -> isFitToContents
    1136:1136:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    989:989:boolean isHideable() -> isHideable
    396:401:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    405:409:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    501:558:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    414:495:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    766:771:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    614:660:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    757:757:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    382:392:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    376:376:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    600:602:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    668:743:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    564:589:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1092:1093:void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> removeBottomSheetCallback
    1895:1897:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1249:1254:void reset() -> reset
    1257:1274:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1062:1073:void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> setBottomSheetCallback
    1024:1025:void setDraggable(boolean) -> setDraggable
    946:950:void setExpandedOffset(int) -> setExpandedOffset
    792:806:void setFitToContents(boolean) -> setFitToContents
    1129:1130:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    913:922:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    972:980:void setHideable(boolean) -> setHideable
    818:819:void setMaxWidth(int) -> setMaxWidth
    841:842:void setPeekHeight(int) -> setPeekHeight
    855:871:void setPeekHeight(int,boolean) -> setPeekHeight
    1040:1041:void setSaveFlags(int) -> setSaveFlags
    1001:1002:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1103:1117:void setState(int) -> setState
    1172:1197:void setStateInternal(int) -> setStateInternal
    1782:1783:void setUpdateImportantForAccessibilityOnSiblings(boolean) -> setUpdateImportantForAccessibilityOnSiblings
    1358:1411:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    1423:1440:void settleToState(android.view.View,int) -> settleToState
    1140:1158:void settleToStatePendingLayout(int) -> settleToStatePendingLayout
    1277:1286:boolean shouldHide(android.view.View,float) -> shouldHide
    1443:1468:void startSettlingAnimation(android.view.View,int,int,boolean) -> startSettlingAnimation
    1841:1891:void updateAccessibilityActions() -> updateAccessibilityActions
    1200:1219:void updateDrawableForTargetState(int) -> updateDrawableForTargetState
    1786:1838:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    874:887:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    449:449:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,android.view.ViewGroup$LayoutParams) -> <init>
    452:453:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1149:1149:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1152:1153:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1344:1344:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1347:1351:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1370:1370:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1374:1408:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
    1471:1471:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1606:1606:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1600:1601:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1611:1614:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1499:1502:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1494:1495:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1513:1596:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1506:1506:boolean releasedLow(android.view.View) -> releasedLow
    1475:1488:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$6 -> com.google.android.material.bottomsheet.BottomSheetBehavior$6:
    1907:1907:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    1910:1911:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    87:87:void <init>() -> <init>
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    1730:1730:void <clinit>() -> <clinit>
    1684:1685:void <init>(android.os.Parcel) -> <init>
    1688:1695:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1698:1704:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1716:1718:void <init>(android.os.Parcelable,int) -> <init>
    1722:1728:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
# {"id":"sourceFile","fileName":"BottomSheetBehavior.java"}
    1731:1731:void <init>() -> <init>
    1731:1731:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1731:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1735:1735:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1741:1741:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1731:java.lang.Object[] newArray(int) -> newArray
    1747:1747:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    1659:1662:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1651:1651:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable) -> access$800
    1651:1651:boolean access$802(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean) -> access$802
    1666:1672:void run() -> run
com.google.android.material.bottomsheet.BottomSheetDialog -> com.google.android.material.bottomsheet.BottomSheetDialog:
    85:92:void <init>(android.content.Context) -> <init>
    78:396:void <init>(android.content.Context,int) -> <init>
    78:396:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    68:68:com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback access$000(com.google.android.material.bottomsheet.BottomSheetDialog) -> access$000
    68:68:com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback access$002(com.google.android.material.bottomsheet.BottomSheetDialog,com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> access$002
    68:68:com.google.android.material.bottomsheet.BottomSheetBehavior access$100(com.google.android.material.bottomsheet.BottomSheetDialog) -> access$100
    68:68:android.widget.FrameLayout access$200(com.google.android.material.bottomsheet.BottomSheetDialog) -> access$200
    218:225:void cancel() -> cancel
    271:282:android.widget.FrameLayout ensureContainerAndBehavior() -> ensureContainerAndBehavior
    239:243:com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior() -> getBehavior
    261:261:boolean getDismissWithAnimation() -> getDismissWithAnimation
    266:266:boolean getEdgeToEdgeEnabled() -> getEdgeToEdgeEnabled
    379:389:int getThemeResId(android.content.Context,int) -> getThemeResId
    177:198:void onAttachedToWindow() -> onAttachedToWindow
    127:144:void onCreate(android.os.Bundle) -> onCreate
    169:173:void onStart() -> onStart
    393:394:void removeDefaultCallback() -> removeDefaultCallback
    158:165:void setCancelable(boolean) -> setCancelable
    229:235:void setCanceledOnTouchOutside(boolean) -> setCanceledOnTouchOutside
    122:123:void setContentView(int) -> setContentView
    148:149:void setContentView(android.view.View) -> setContentView
    153:154:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    253:254:void setDismissWithAnimation(boolean) -> setDismissWithAnimation
    481:490:void setLightStatusBar(android.view.View,boolean) -> setLightStatusBar
    368:375:boolean shouldWindowCloseOnTouchOutside() -> shouldWindowCloseOnTouchOutside
    287:364:android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams) -> wrapInBottomSheet
com.google.android.material.bottomsheet.BottomSheetDialog$1 -> com.google.android.material.bottomsheet.BottomSheetDialog$1:
    296:296:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    299:308:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetDialog$2 -> com.google.android.material.bottomsheet.BottomSheetDialog$2:
    323:323:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    326:329:void onClick(android.view.View) -> onClick
com.google.android.material.bottomsheet.BottomSheetDialog$3 -> com.google.android.material.bottomsheet.BottomSheetDialog$3:
    334:334:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    338:345:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    349:353:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.bottomsheet.BottomSheetDialog$4 -> com.google.android.material.bottomsheet.BottomSheetDialog$4:
    357:357:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    361:361:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.bottomsheet.BottomSheetDialog$5 -> com.google.android.material.bottomsheet.BottomSheetDialog$5:
    398:398:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    408:408:void onSlide(android.view.View,float) -> onSlide
    402:405:void onStateChanged(android.view.View,int) -> onStateChanged
com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback -> com.google.android.material.bottomsheet.BottomSheetDialog$EdgeToEdgeCallback:
    411:411:void <init>(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.bottomsheet.BottomSheetDialog$1) -> <init>
    418:444:void <init>(android.view.View,androidx.core.view.WindowInsetsCompat) -> <init>
    453:454:void onSlide(android.view.View,float) -> onSlide
    448:449:void onStateChanged(android.view.View,int) -> onStateChanged
    457:477:void setPaddingForPosition(android.view.View) -> setPaddingForPosition
com.google.android.material.bottomsheet.BottomSheetDialogFragment -> com.google.android.material.bottomsheet.BottomSheetDialogFragment:
    30:30:void <init>() -> <init>
    30:30:void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment) -> access$100
    46:49:void dismiss() -> dismiss
    92:97:void dismissAfterAnimation() -> dismissAfterAnimation
    53:56:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    78:89:void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> dismissWithAnimation
    41:41:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    63:73:boolean tryDismissWithAnimation(boolean) -> tryDismissWithAnimation
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback -> com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback:
    99:99:void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment) -> <init>
    99:99:void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment,com.google.android.material.bottomsheet.BottomSheetDialogFragment$1) -> <init>
    109:109:void onSlide(android.view.View,float) -> onSlide
    103:106:void onStateChanged(android.view.View,int) -> onStateChanged
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    130:195:void <clinit>() -> <clinit>
    216:217:void <init>(android.content.Context) -> <init>
    220:221:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:255:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1068:1069:void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> addOnCheckedChangeListener
    1083:1084:void clearOnCheckedChangeListeners() -> clearOnCheckedChangeListeners
    260:260:java.lang.String getA11yClassName() -> getA11yClassName
    382:382:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    393:393:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    973:973:int getCornerRadius() -> getCornerRadius
    682:682:android.graphics.drawable.Drawable getIcon() -> getIcon
    985:985:int getIconGravity() -> getIconGravity
    607:607:int getIconPadding() -> getIconPadding
    637:637:int getIconSize() -> getIconSize
    721:721:android.content.res.ColorStateList getIconTint() -> getIconTint
    746:746:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    1020:1020:int getInsetBottom() -> getInsetBottom
    1040:1040:int getInsetTop() -> getInsetTop
    847:847:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1170:1173:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    889:889:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    932:932:int getStrokeWidth() -> getStrokeWidth
    327:333:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    365:370:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    555:566:int getTextHeight() -> getTextHeight
    543:551:int getTextWidth() -> getTextWidth
    1129:1129:boolean isCheckable() -> isCheckable
    1107:1107:boolean isChecked() -> isChecked
    802:802:boolean isIconEnd() -> isIconEnd
    798:798:boolean isIconStart() -> isIconStart
    806:806:boolean isIconTop() -> isIconTop
    570:570:boolean isLayoutRTL() -> isLayoutRTL
    1196:1196:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    468:474:void onAttachedToWindow() -> onAttachedToWindow
    1045:1055:int[] onCreateDrawableState(int) -> onCreateDrawableState
    274:277:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    265:270:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    447:452:void onLayout(boolean,int,int,int,int) -> onLayout
    290:297:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    282:285:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    456:458:void onSizeChanged(int,int,int,int) -> onSizeChanged
    462:464:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1117:1119:boolean performClick() -> performClick
    1078:1079:void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> removeOnCheckedChangeListener
    788:795:void resetIconDrawable() -> resetIconDrawable
    409:410:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    398:405:void setBackgroundColor(int) -> setBackgroundColor
    423:443:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    414:419:void setBackgroundResource(int) -> setBackgroundResource
    376:377:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    387:388:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1139:1142:void setCheckable(boolean) -> setCheckable
    1088:1103:void setChecked(boolean) -> setChecked
    944:947:void setCornerRadius(int) -> setCornerRadius
    958:961:void setCornerRadiusResource(int) -> setCornerRadiusResource
    479:483:void setElevation(float) -> setElevation
    650:655:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    996:1000:void setIconGravity(int) -> setIconGravity
    592:596:void setIconPadding(int) -> setIconPadding
    666:671:void setIconResource(int) -> setIconResource
    618:626:void setIconSize(int) -> setIconSize
    694:698:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    732:736:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    709:710:void setIconTintResource(int) -> setIconTintResource
    1009:1010:void setInsetBottom(int) -> setInsetBottom
    1029:1030:void setInsetTop(int) -> setInsetTop
    581:582:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1184:1185:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1189:1193:void setPressed(boolean) -> setPressed
    818:821:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    832:835:void setRippleColorResource(int) -> setRippleColorResource
    1151:1158:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1200:1203:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    860:863:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    875:878:void setStrokeColorResource(int) -> setStrokeColorResource
    902:905:void setStrokeWidth(int) -> setStrokeWidth
    917:920:void setStrokeWidthResource(int) -> setStrokeWidthResource
    308:315:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    346:353:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    1112:1113:void toggle() -> toggle
    754:785:void updateIcon(boolean) -> updateIcon
    486:540:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
    1231:1231:void <clinit>() -> <clinit>
    1210:1211:void <init>(android.os.Parcelable) -> <init>
    1214:1219:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1228:1229:void readFromParcel(android.os.Parcel) -> readFromParcel
    1223:1225:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
# {"id":"sourceFile","fileName":"MaterialButton.java"}
    1232:1232:void <init>() -> <init>
    1232:1232:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1232:1232:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1236:1236:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1242:1242:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1232:1232:java.lang.Object[] newArray(int) -> newArray
    1248:1248:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    53:53:void <clinit>() -> <clinit>
    70:80:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    203:239:android.graphics.drawable.Drawable createBackground() -> createBackground
    323:323:int getCornerRadius() -> getCornerRadius
    402:402:int getInsetBottom() -> getInsetBottom
    432:432:int getInsetTop() -> getInsetTop
    375:384:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    328:340:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    345:345:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    270:270:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    394:394:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    282:282:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    293:293:int getStrokeWidth() -> getStrokeWidth
    176:176:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    189:189:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    358:358:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    158:158:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    353:353:boolean isCheckable() -> isCheckable
    83:134:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    250:253:void setBackgroundColor(int) -> setBackgroundColor
    150:155:void setBackgroundOverwritten() -> setBackgroundOverwritten
    349:350:void setCheckable(boolean) -> setCheckable
    314:320:void setCornerRadius(int) -> setCornerRadius
    398:399:void setInsetBottom(int) -> setInsetBottom
    406:407:void setInsetTop(int) -> setInsetTop
    256:266:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    388:390:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    193:195:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    274:278:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    286:290:void setStrokeWidth(int) -> setStrokeWidth
    167:173:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:186:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    411:429:void setVerticalInsets(int,int) -> setVerticalInsets
    137:142:void updateBackground() -> updateBackground
    362:371:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    244:247:void updateMaskBounds(int,int) -> updateMaskBounds
    297:309:void updateStroke() -> updateStroke
    163:163:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    139:140:void <clinit>() -> <clinit>
    176:177:void <init>(android.content.Context) -> <init>
    180:181:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    143:202:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    122:122:int access$200(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$200
    122:122:boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup) -> access$300
    122:122:boolean access$400(com.google.android.material.button.MaterialButtonToggleGroup) -> access$400
    122:122:int access$502(com.google.android.material.button.MaterialButtonToggleGroup,int) -> access$502
    122:122:boolean access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$600
    122:122:void access$700(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$700
    426:427:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    226:269:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    526:555:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    763:768:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    330:335:void check(int) -> check
    729:733:void checkForced(int,boolean) -> checkForced
    360:370:void clearChecked() -> clearChecked
    441:442:void clearOnButtonCheckedListeners() -> clearOnButtonCheckedListeners
    216:218:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    723:726:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    300:300:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    388:388:int getCheckedButtonId() -> getCheckedButtonId
    405:413:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    558:558:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    777:782:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    601:608:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    638:650:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    612:619:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    656:672:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    628:634:int getVisibleButtonCount() -> getVisibleButtonCount
    623:624:boolean isChildVisible(int) -> isChildVisible
    484:484:boolean isSelectionRequired() -> isSelectionRequired
    451:451:boolean isSingleSelection() -> isSingleSelection
    206:212:void onFinishInflate() -> onFinishInflate
    305:315:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    291:295:void onMeasure(int,int) -> onMeasure
    273:287:void onViewRemoved(android.view.View) -> onViewRemoved
    436:437:void removeOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> removeOnButtonCheckedListener
    562:578:void resetChildMargins(int) -> resetChildMargins
    509:512:void setCheckedId(int) -> setCheckedId
    500:506:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    737:740:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    475:476:void setSelectionRequired(boolean) -> setSelectionRequired
    463:467:void setSingleSelection(boolean) -> setSingleSelection
    496:497:void setSingleSelection(int) -> setSingleSelection
    750:759:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    347:348:void uncheck(int) -> uncheck
    677:687:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    703:719:boolean updateCheckedStates(int,boolean) -> updateCheckedStates
    786:793:void updateChildOrder() -> updateChildOrder
    583:598:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
    150:150:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    150:150:int compare(java.lang.Object,java.lang.Object) -> compare
    153:164:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
    254:254:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    258:267:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker:
    795:795:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    795:795:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    799:814:void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> onCheckedChanged
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
    827:827:void <clinit>() -> <clinit>
    835:840:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    869:869:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    849:849:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    854:854:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    859:859:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    844:844:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    864:864:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
    817:817:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    817:817:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    821:822:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    38:38:void <init>() -> <init>
    45:48:int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int) -> saveLayerAlpha
    58:61:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    89:93:void <clinit>() -> <clinit>
    110:111:void <init>(android.content.Context) -> <init>
    114:115:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    105:140:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:76:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    631:634:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    606:608:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    288:288:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    310:310:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    222:222:float getCardViewRadius() -> getCardViewRadius
    510:510:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    584:584:int getCheckedIconMargin() -> getCheckedIconMargin
    557:557:int getCheckedIconSize() -> getCheckedIconSize
    541:541:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    272:272:int getContentPaddingBottom() -> getContentPaddingBottom
    257:257:int getContentPaddingLeft() -> getContentPaddingLeft
    267:267:int getContentPaddingRight() -> getContentPaddingRight
    262:262:int getContentPaddingTop() -> getContentPaddingTop
    243:243:float getProgress() -> getProgress
    218:218:float getRadius() -> getRadius
    499:499:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    627:627:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    186:186:int getStrokeColor() -> getStrokeColor
    192:192:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    207:207:int getStrokeWidth() -> getStrokeWidth
    413:413:boolean isCheckable() -> isCheckable
    378:378:boolean isChecked() -> isChecked
    403:403:boolean isDragged() -> isDragged
    323:326:void onAttachedToWindow() -> onAttachedToWindow
    440:453:int[] onCreateDrawableState(int) -> onCreateDrawableState
    153:156:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    144:149:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    160:162:void onMeasure(int,int) -> onMeasure
    252:253:void setAncestorContentPadding(int,int,int,int) -> setAncestorContentPadding
    356:357:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    361:369:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    373:374:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    277:278:void setCardBackgroundColor(int) -> setCardBackgroundColor
    282:283:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    330:332:void setCardElevation(float) -> setCardElevation
    299:300:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    423:424:void setCheckable(boolean) -> setCheckable
    383:386:void setChecked(boolean) -> setChecked
    530:531:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    588:589:void setCheckedIconMargin(int) -> setCheckedIconMargin
    598:602:void setCheckedIconMarginResource(int) -> setCheckedIconMarginResource
    520:521:void setCheckedIconResource(int) -> setCheckedIconResource
    567:568:void setCheckedIconSize(int) -> setCheckedIconSize
    577:580:void setCheckedIconSizeResource(int) -> setCheckedIconSizeResource
    552:553:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    315:319:void setClickable(boolean) -> setClickable
    248:249:void setContentPadding(int,int,int,int) -> setContentPadding
    394:400:void setDragged(boolean) -> setDragged
    336:338:void setMaxCardElevation(float) -> setMaxCardElevation
    462:463:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    349:352:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    232:233:void setProgress(float) -> setProgress
    212:214:void setRadius(float) -> setRadius
    474:475:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    486:488:void setRippleColorResource(int) -> setRippleColorResource
    613:617:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    170:171:void setStrokeColor(int) -> setStrokeColor
    179:180:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    201:202:void setStrokeWidth(int) -> setStrokeWidth
    342:345:void setUseCompatPadding(boolean) -> setUseCompatPadding
    428:436:void toggle() -> toggle
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
    61:66:void <clinit>() -> <clinit>
    91:143:void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int) -> <init>
    581:594:float calculateActualCornerPadding() -> calculateActualCornerPadding
    598:603:float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float) -> calculateCornerPaddingForCornerTreatment
    546:547:float calculateHorizontalBackgroundPadding() -> calculateHorizontalBackgroundPadding
    536:537:float calculateVerticalBackgroundPadding() -> calculateVerticalBackgroundPadding
    551:551:boolean canClipToOutline() -> canClipToOutline
    654:658:android.graphics.drawable.Drawable createCheckedIconLayer() -> createCheckedIconLayer
    636:640:android.graphics.drawable.Drawable createCompatRippleDrawable() -> createCompatRippleDrawable
    625:631:android.graphics.drawable.Drawable createForegroundRippleDrawable() -> createForegroundRippleDrawable
    663:663:com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable() -> createForegroundShapeDrawable
    441:450:void forceRippleRedraw() -> forceRippleRedraw
    236:236:com.google.android.material.shape.MaterialShapeDrawable getBackground() -> getBackground
    244:244:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    253:253:android.content.res.ColorStateList getCardForegroundColor() -> getCardForegroundColor
    381:381:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    409:409:int getCheckedIconMargin() -> getCheckedIconMargin
    400:400:int getCheckedIconSize() -> getCheckedIconSize
    371:371:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    608:620:android.graphics.drawable.Drawable getClickableForeground() -> getClickableForeground
    289:289:float getCornerRadius() -> getCornerRadius
    555:559:float getParentCardViewCalculatedCornerPadding() -> getParentCardViewCalculatedCornerPadding
    305:305:float getProgress() -> getProgress
    376:376:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    470:470:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    213:213:int getStrokeColor() -> getStrokeColor
    218:218:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    231:231:int getStrokeWidth() -> getStrokeWidth
    263:263:android.graphics.Rect getUserContentPadding() -> getUserContentPadding
    499:507:android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable) -> insetDrawable
    195:195:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    354:354:boolean isCheckable() -> isCheckable
    146:192:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    417:437:void onMeasure(int,int) -> onMeasure
    199:200:void setBackgroundOverwritten(boolean) -> setBackgroundOverwritten
    240:241:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    248:250:void setCardForegroundColor(android.content.res.ColorStateList) -> setCardForegroundColor
    350:351:void setCheckable(boolean) -> setCheckable
    385:396:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    413:414:void setCheckedIconMargin(int) -> setCheckedIconMargin
    404:405:void setCheckedIconSize(int) -> setCheckedIconSize
    363:367:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    276:286:void setCornerRadius(float) -> setCornerRadius
    293:301:void setProgress(float) -> setProgress
    358:360:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    453:467:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    203:209:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    222:227:void setStrokeWidth(int) -> setStrokeWidth
    257:259:void setUserContentPadding(int,int,int,int) -> setUserContentPadding
    563:563:boolean shouldAddCornerPaddingInsideCardBackground() -> shouldAddCornerPaddingInsideCardBackground
    567:569:boolean shouldAddCornerPaddingOutsideCardBackground() -> shouldAddCornerPaddingOutsideCardBackground
    267:273:void updateClickable() -> updateClickable
    332:347:void updateContentPadding() -> updateContentPadding
    309:310:void updateElevation() -> updateElevation
    479:485:void updateInsetForeground(android.graphics.drawable.Drawable) -> updateInsetForeground
    314:318:void updateInsets() -> updateInsets
    645:650:void updateRippleColor() -> updateRippleColor
    321:322:void updateStroke() -> updateStroke
com.google.android.material.card.MaterialCardViewHelper$1 -> com.google.android.material.card.MaterialCardViewHelper$1:
    508:508:void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int) -> <init>
    525:525:int getMinimumHeight() -> getMinimumHeight
    519:519:int getMinimumWidth() -> getMinimumWidth
    513:513:boolean getPadding(android.graphics.Rect) -> getPadding
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    44:46:void <clinit>() -> <clinit>
    57:58:void <init>(android.content.Context) -> <init>
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    117:134:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    113:113:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    90:95:void onAttachedToWindow() -> onAttachedToWindow
    103:109:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    133:140:void <clinit>() -> <clinit>
    187:188:void <init>(android.content.Context) -> <init>
    191:192:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:248:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    129:129:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    129:129:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    129:129:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    129:129:android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip) -> access$300
    129:129:boolean access$402(com.google.android.material.chip.Chip,boolean) -> access$402
    129:129:android.graphics.Rect access$500(com.google.android.material.chip.Chip) -> access$500
    129:129:android.graphics.Rect access$600() -> access$600
    485:486:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    919:959:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    851:853:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    858:869:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    904:915:void drawableStateChanged() -> drawableStateChanged
    2288:2337:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    450:455:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    459:462:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1852:1852:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1887:1887:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1096:1096:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1164:1164:float getChipCornerRadius() -> getChipCornerRadius
    422:422:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2230:2230:float getChipEndPadding() -> getChipEndPadding
    1477:1477:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1549:1549:float getChipIconSize() -> getChipIconSize
    1512:1512:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1130:1130:float getChipMinHeight() -> getChipMinHeight
    1992:1992:float getChipStartPadding() -> getChipStartPadding
    1212:1212:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1246:1246:float getChipStrokeWidth() -> getChipStrokeWidth
    1321:1321:java.lang.CharSequence getChipText() -> getChipText
    1639:1639:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1755:1755:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2196:2196:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1710:1710:float getCloseIconSize() -> getCloseIconSize
    2162:2162:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1676:1676:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    968:975:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    980:982:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    637:637:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    880:886:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1958:1958:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2060:2060:float getIconEndPadding() -> getIconEndPadding
    2026:2026:float getIconStartPadding() -> getIconStartPadding
    1281:1281:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1188:1188:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1923:1923:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1414:1414:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2128:2128:float getTextEndPadding() -> getTextEndPadding
    2094:2094:float getTextStartPadding() -> getTextStartPadding
    819:846:boolean handleAccessibilityExit(android.view.MotionEvent) -> handleAccessibilityExit
    963:963:boolean hasCloseIcon() -> hasCloseIcon
    309:326:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    404:418:void initOutlineProvider() -> initOutlineProvider
    2351:2353:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1765:1765:boolean isCheckable() -> isCheckable
    1805:1805:boolean isCheckedIconEnabled() -> isCheckedIconEnabled
    1799:1799:boolean isCheckedIconVisible() -> isCheckedIconVisible
    1430:1430:boolean isChipIconEnabled() -> isChipIconEnabled
    1424:1424:boolean isChipIconVisible() -> isChipIconVisible
    1593:1593:boolean isCloseIconEnabled() -> isCloseIconEnabled
    1587:1587:boolean isCloseIconVisible() -> isCloseIconVisible
    252:255:void onAttachedToWindow() -> onAttachedToWindow
    696:701:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    490:497:int[] onCreateDrawableState(int) -> onCreateDrawableState
    874:876:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    799:810:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    268:294:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    989:992:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    360:368:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    763:794:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    744:756:boolean performCloseIconClick() -> performCloseIconClick
    2341:2347:void removeBackgroundInset() -> removeBackgroundInset
    530:535:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    520:521:void setBackgroundColor(int) -> setBackgroundColor
    539:544:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    525:526:void setBackgroundResource(int) -> setBackgroundResource
    510:511:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    515:516:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1787:1790:void setCheckable(boolean) -> setCheckable
    1775:1778:void setCheckableResource(int) -> setCheckableResource
    705:718:void setChecked(boolean) -> setChecked
    1874:1877:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1841:1842:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1835:1836:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1862:1865:void setCheckedIconResource(int) -> setCheckedIconResource
    1910:1913:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1897:1900:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1815:1818:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1827:1830:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1118:1121:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1106:1109:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1199:1202:void setChipCornerRadius(float) -> setChipCornerRadius
    1175:1178:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    427:436:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2252:2255:void setChipEndPadding(float) -> setChipEndPadding
    2240:2243:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1499:1502:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1466:1467:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1460:1461:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1487:1490:void setChipIconResource(int) -> setChipIconResource
    1575:1578:void setChipIconSize(float) -> setChipIconSize
    1561:1564:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1535:1538:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1522:1525:void setChipIconTintResource(int) -> setChipIconTintResource
    1440:1443:void setChipIconVisible(int) -> setChipIconVisible
    1452:1455:void setChipIconVisible(boolean) -> setChipIconVisible
    1152:1155:void setChipMinHeight(float) -> setChipMinHeight
    1140:1143:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2014:2017:void setChipStartPadding(float) -> setChipStartPadding
    2002:2005:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1234:1237:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1222:1225:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1268:1271:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1256:1259:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1357:1358:void setChipText(java.lang.CharSequence) -> setChipText
    1351:1352:void setChipTextResource(int) -> setChipTextResource
    1662:1666:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1743:1746:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1628:1629:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1622:1623:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2218:2221:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2206:2209:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    896:900:void setCloseIconHovered(boolean) -> setCloseIconHovered
    889:893:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1649:1653:void setCloseIconResource(int) -> setCloseIconResource
    1732:1735:void setCloseIconSize(float) -> setCloseIconSize
    1720:1723:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2184:2187:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2172:2175:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1698:1701:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1686:1689:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1603:1604:void setCloseIconVisible(int) -> setCloseIconVisible
    1613:1617:void setCloseIconVisible(boolean) -> setCloseIconVisible
    552:560:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    596:604:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    609:617:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    625:632:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    564:572:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    580:588:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    260:264:void setElevation(float) -> setElevation
    642:652:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2276:2278:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    502:507:void setGravity(int) -> setGravity
    1980:1983:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1968:1971:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2082:2085:void setIconEndPadding(float) -> setIconEndPadding
    2070:2073:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2048:2051:void setIconStartPadding(float) -> setIconStartPadding
    2036:2039:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    1326:1332:void setLayoutDirection(int) -> setLayoutDirection
    664:668:void setLines(int) -> setLines
    680:684:void setMaxLines(int) -> setMaxLines
    688:692:void setMaxWidth(int) -> setMaxWidth
    672:676:void setMinLines(int) -> setMinLines
    725:726:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    730:732:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1306:1312:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1291:1297:void setRippleColorResource(int) -> setRippleColorResource
    1182:1183:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1945:1948:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1933:1936:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    656:660:void setSingleLine(boolean) -> setSingleLine
    1336:1346:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1377:1381:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1385:1390:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1394:1399:void setTextAppearance(int) -> setTextAppearance
    1367:1368:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2150:2153:void setTextEndPadding(float) -> setTextEndPadding
    2138:2141:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2116:2119:void setTextStartPadding(float) -> setTextStartPadding
    2104:2107:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2265:2265:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    479:482:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    299:305:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    439:447:void updateBackgroundDrawable() -> updateBackgroundDrawable
    467:476:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    333:355:void updatePaddingInternal() -> updatePaddingInternal
    1402:1410:void updateTextPaintDrawState() -> updateTextPaintDrawState
    371:401:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    173:173:void <init>(com.google.android.material.chip.Chip) -> <init>
    183:183:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    177:180:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    406:406:void <init>(com.google.android.material.chip.Chip) -> <init>
    410:415:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    998:1000:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    1004:1004:int getVirtualViewAt(float,float) -> getVirtualViewAt
    1011:1015:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1075:1082:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1052:1070:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1028:1048:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1019:1023:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    165:169:void <clinit>() -> <clinit>
    175:333:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1316:1337:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    813:831:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    528:531:float calculateChipIconWidth() -> calculateChipIconWidth
    923:939:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    904:920:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    942:963:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    568:571:float calculateCloseIconWidth() -> calculateCloseIconWidth
    878:897:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    869:870:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    836:853:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    523:523:boolean canShowCheckedIcon() -> canShowCheckedIcon
    279:281:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    298:303:com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int) -> createFromResource
    580:627:void draw(android.graphics.Canvas) -> draw
    699:711:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    639:646:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    684:696:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    653:669:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    630:636:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    750:769:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    672:681:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    772:806:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    715:747:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1228:1228:int getAlpha() -> getAlpha
    2018:2018:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    2057:2057:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    1400:1400:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1467:1467:float getChipCornerRadius() -> getChipCornerRadius
    2410:2410:float getChipEndPadding() -> getChipEndPadding
    1696:1696:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1764:1764:float getChipIconSize() -> getChipIconSize
    1725:1725:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1433:1433:float getChipMinHeight() -> getChipMinHeight
    2158:2158:float getChipStartPadding() -> getChipStartPadding
    1504:1504:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1540:1540:float getChipStrokeWidth() -> getChipStrokeWidth
    474:475:void getChipTouchBounds(android.graphics.RectF) -> getChipTouchBounds
    1846:1846:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1936:1936:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2374:2374:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1908:1908:float getCloseIconSize() -> getCloseIconSize
    2338:2338:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1003:1003:int[] getCloseIconState() -> getCloseIconState
    1888:1888:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    482:483:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1242:1242:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    551:560:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    539:543:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1641:1641:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2128:2128:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2231:2231:float getIconEndPadding() -> getIconEndPadding
    2192:2192:float getIconStartPadding() -> getIconStartPadding
    503:503:int getIntrinsicHeight() -> getIntrinsicHeight
    488:497:int getIntrinsicWidth() -> getIntrinsicWidth
    2444:2444:int getMaxWidth() -> getMaxWidth
    1264:1264:int getOpacity() -> getOpacity
    1270:1282:void getOutline(android.graphics.Outline) -> getOutline
    1579:1579:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    2097:2097:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1608:1608:java.lang.CharSequence getText() -> getText
    1629:1629:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2304:2304:float getTextEndPadding() -> getTextEndPadding
    2270:2270:float getTextStartPadding() -> getTextStartPadding
    1345:1345:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    453:453:boolean getUseCompatRipple() -> getUseCompatRipple
    1362:1371:boolean hasState(int[],int) -> hasState
    1286:1290:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1940:1940:boolean isCheckable() -> isCheckable
    1971:1971:boolean isCheckedIconEnabled() -> isCheckedIconEnabled
    1965:1965:boolean isCheckedIconVisible() -> isCheckedIconVisible
    1655:1655:boolean isChipIconEnabled() -> isChipIconEnabled
    1649:1649:boolean isChipIconVisible() -> isChipIconVisible
    1805:1805:boolean isCloseIconEnabled() -> isCloseIconEnabled
    983:983:boolean isCloseIconStateful() -> isCloseIconStateful
    1799:1799:boolean isCloseIconVisible() -> isCloseIconVisible
    575:575:boolean isShapeThemingEnabled() -> isShapeThemingEnabled
    969:977:boolean isStateful() -> isStateful
    1141:1141:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1145:1145:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1149:1151:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    337:440:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1156:1171:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1176:1191:boolean onLevelChange(int) -> onLevelChange
    463:467:void onSizeChange() -> onSizeChange
    1014:1017:boolean onStateChange(int[]) -> onStateChange
    1023:1137:boolean onStateChange(int[],int[]) -> onStateChange
    1008:1010:void onTextSizeChange() -> onTextSizeChange
    1294:1298:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1220:1224:void setAlpha(int) -> setAlpha
    1948:1962:void setCheckable(boolean) -> setCheckable
    1944:1945:void setCheckableResource(int) -> setCheckableResource
    2038:2052:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2007:2008:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    2001:2002:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    2028:2029:void setCheckedIconResource(int) -> setCheckedIconResource
    2078:2087:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    2067:2068:void setCheckedIconTintResource(int) -> setCheckedIconTintResource
    1975:1976:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1979:1996:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1420:1424:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1410:1411:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1489:1494:void setChipCornerRadius(float) -> setChipCornerRadius
    1478:1479:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2430:2435:void setChipEndPadding(float) -> setChipEndPadding
    2420:2421:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1704:1720:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1691:1692:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1685:1686:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1700:1701:void setChipIconResource(int) -> setChipIconResource
    1786:1796:void setChipIconSize(float) -> setChipIconSize
    1775:1776:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1745:1754:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1735:1736:void setChipIconTintResource(int) -> setChipIconTintResource
    1659:1660:void setChipIconVisible(int) -> setChipIconVisible
    1663:1680:void setChipIconVisible(boolean) -> setChipIconVisible
    1453:1458:void setChipMinHeight(float) -> setChipMinHeight
    1443:1444:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2178:2183:void setChipStartPadding(float) -> setChipStartPadding
    2168:2169:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1524:1531:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1514:1515:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1560:1569:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1550:1551:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1354:1358:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1854:1873:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1926:1932:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1841:1842:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1835:1836:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2394:2401:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2384:2385:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1850:1851:void setCloseIconResource(int) -> setCloseIconResource
    1916:1923:void setCloseIconSize(float) -> setCloseIconSize
    1912:1913:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2358:2365:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2348:2349:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    991:997:boolean setCloseIconState(int[]) -> setCloseIconState
    1896:1905:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1892:1893:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1809:1810:void setCloseIconVisible(int) -> setCloseIconVisible
    1813:1830:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1233:1237:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    458:459:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1645:1646:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2148:2149:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2138:2139:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2251:2261:void setIconEndPadding(float) -> setIconEndPadding
    2241:2242:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2212:2222:void setIconStartPadding(float) -> setIconStartPadding
    2202:2203:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2453:2454:void setMaxWidth(int) -> setMaxWidth
    1599:1604:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1589:1590:void setRippleColorResource(int) -> setRippleColorResource
    2467:2468:void setShouldDrawText(boolean) -> setShouldDrawText
    2117:2118:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    2107:2108:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1616:1625:void setText(java.lang.CharSequence) -> setText
    1637:1638:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1633:1634:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2324:2329:void setTextEndPadding(float) -> setTextEndPadding
    2314:2315:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1612:1613:void setTextResource(int) -> setTextResource
    1375:1381:void setTextSize(float) -> setTextSize
    2290:2295:void setTextStartPadding(float) -> setTextStartPadding
    2280:2281:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1247:1251:void setTintList(android.content.res.ColorStateList) -> setTintList
    1255:1260:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    444:449:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1196:1211:boolean setVisible(boolean,boolean) -> setVisible
    2457:2457:boolean shouldDrawText() -> shouldDrawText
    513:513:boolean showsCheckedIcon() -> showsCheckedIcon
    508:508:boolean showsChipIcon() -> showsChipIcon
    518:518:boolean showsCloseIcon() -> showsCloseIcon
    1309:1312:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1302:1306:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1349:1351:void updateCompatRippleColor() -> updateCompatRippleColor
    1877:1884:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    91:91:void <clinit>() -> <clinit>
    110:111:void <init>(android.content.Context) -> <init>
    114:115:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:143:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$1000(com.google.android.material.chip.ChipGroup) -> access$1000
    56:56:boolean access$300(com.google.android.material.chip.ChipGroup) -> access$300
    56:56:boolean access$400(com.google.android.material.chip.ChipGroup) -> access$400
    56:56:void access$500(com.google.android.material.chip.ChipGroup,int,boolean) -> access$500
    56:56:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> access$600
    56:56:int access$700(com.google.android.material.chip.ChipGroup) -> access$700
    56:56:boolean access$800(com.google.android.material.chip.ChipGroup) -> access$800
    56:56:void access$900(com.google.android.material.chip.ChipGroup,int) -> access$900
    203:214:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    264:277:void check(int) -> check
    181:181:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:342:void clearCheck() -> clearCheck
    176:176:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    164:164:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    170:170:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    291:291:int getCheckedChipId() -> getCheckedChipId
    307:320:java.util.List getCheckedChipIds() -> getCheckedChipIds
    376:382:int getChipCount() -> getChipCount
    421:421:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    441:441:int getChipSpacingVertical() -> getChipSpacingVertical
    391:404:int getIndexOfChip(android.view.View) -> getIndexOfChip
    522:522:boolean isSelectionRequired() -> isSelectionRequired
    462:462:boolean isSingleLine() -> isSingleLine
    479:479:boolean isSingleSelection() -> isSingleSelection
    192:199:void onFinishInflate() -> onFinishInflate
    147:159:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    355:356:void setCheckedId(int) -> setCheckedId
    359:364:void setCheckedId(int,boolean) -> setCheckedId
    367:373:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    409:411:void setChipSpacing(int) -> setChipSpacing
    426:431:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    435:436:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    415:416:void setChipSpacingResource(int) -> setChipSpacingResource
    446:451:void setChipSpacingVertical(int) -> setChipSpacingVertical
    455:456:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    219:219:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    227:227:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    249:249:void setFlexWrap(int) -> setFlexWrap
    351:352:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    187:188:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    511:512:void setSelectionRequired(boolean) -> setSelectionRequired
    235:235:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    242:242:void setShowDividerVertical(int) -> setShowDividerVertical
    469:470:void setSingleLine(boolean) -> setSingleLine
    474:475:void setSingleLine(int) -> setSingleLine
    488:493:void setSingleSelection(boolean) -> setSingleSelection
    501:502:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    525:525:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    525:525:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    529:550:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    75:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:80:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    83:84:void <init>(int,int) -> <init>
    87:88:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    558:558:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    558:558:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    558:558:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$202
    563:580:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    584:591:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    39:39:void <init>() -> <init>
    57:79:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    97:112:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:132:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:127:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    34:35:void <init>(android.content.Context) -> <init>
    38:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:97:void actualDraw(android.graphics.Canvas) -> actualDraw
    110:110:boolean actualIsOpaque() -> actualIsOpaque
    44:45:void buildCircularRevealCache() -> buildCircularRevealCache
    49:50:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:92:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    81:82:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:71:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:61:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealGridLayout -> com.google.android.material.circularreveal.CircularRevealGridLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    127:134:void <clinit>() -> <clinit>
    136:150:void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate) -> <init>
    153:173:void buildCircularRevealCache() -> buildCircularRevealCache
    176:182:void destroyCircularRevealCache() -> destroyCircularRevealCache
    264:301:void draw(android.graphics.Canvas) -> draw
    352:356:void drawDebugCircle(android.graphics.Canvas,int,float) -> drawDebugCircle
    337:349:void drawDebugMode(android.graphics.Canvas) -> drawDebugMode
    304:313:void drawOverlayDrawable(android.graphics.Canvas) -> drawOverlayDrawable
    233:233:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    228:228:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    254:255:float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> getDistanceToFurthestCorner
    210:218:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    242:251:void invalidateRevealInfo() -> invalidateRevealInfo
    316:316:boolean isOpaque() -> isOpaque
    237:239:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    222:224:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    189:206:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
    320:324:boolean shouldDrawCircularReveal() -> shouldDrawCircularReveal
    333:333:boolean shouldDrawOverlayDrawable() -> shouldDrawOverlayDrawable
    329:329:boolean shouldDrawScrim() -> shouldDrawScrim
com.google.android.material.circularreveal.CircularRevealLinearLayout -> com.google.android.material.circularreveal.CircularRevealLinearLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealRelativeLayout -> com.google.android.material.circularreveal.CircularRevealRelativeLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:197:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:235:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:246:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    153:154:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> <init>
    171:171:boolean isInvalid() -> isInvalid
    157:160:void set(float,float,float) -> set
    163:164:void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    37:38:void <init>(android.content.Context) -> <init>
    41:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:99:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:48:void buildCircularRevealCache() -> buildCircularRevealCache
    52:53:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:94:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:85:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout -> com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:99:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:48:void buildCircularRevealCache() -> buildCircularRevealCache
    52:53:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:94:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:85:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    43:45:void <init>() -> <init>
    155:156:int compositeARGBWithAlpha(int,int) -> compositeARGBWithAlpha
    55:55:int getColor(android.view.View,int) -> getColor
    66:66:int getColor(android.content.Context,int,java.lang.String) -> getColor
    76:76:int getColor(android.view.View,int,int) -> getColor
    86:90:int getColor(android.content.Context,int,int) -> getColor
    161:161:boolean isColorLight(int) -> isColorLight
    103:103:int layer(android.view.View,int,int) -> layer
    116:118:int layer(android.view.View,int,int,float) -> layer
    130:132:int layer(int,int,float) -> layer
    141:141:int layer(int,int) -> layer
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    149:149:void <clinit>() -> <clinit>
    33:33:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    60:73:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month) -> <init>
    33:33:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    33:33:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    33:33:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    33:33:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    185:193:com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month) -> clamp
    170:170:int describeContents() -> describeContents
    127:137:boolean equals(java.lang.Object) -> equals
    83:83:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    95:95:com.google.android.material.datepicker.Month getEnd() -> getEnd
    114:114:int getMonthSpan() -> getMonthSpan
    101:101:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    89:89:com.google.android.material.datepicker.Month getStart() -> getStart
    122:122:int getYearSpan() -> getYearSpan
    142:143:int hashCode() -> hashCode
    76:76:boolean isWithinBounds(long) -> isWithinBounds
    106:107:void setOpenAt(com.google.android.material.datepicker.Month) -> setOpenAt
    175:179:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    150:150:void <init>() -> <init>
    150:150:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    154:158:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    150:150:java.lang.Object[] newArray(int) -> newArray
    164:164:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
    203:210:void <clinit>() -> <clinit>
    214:219:void <init>() -> <init>
    214:226:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    322:328:com.google.android.material.datepicker.CalendarConstraints build() -> build
    278:279:com.google.android.material.datepicker.CalendarConstraints$Builder setEnd(long) -> setEnd
    305:306:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
    251:252:com.google.android.material.datepicker.CalendarConstraints$Builder setStart(long) -> setStart
    315:316:com.google.android.material.datepicker.CalendarConstraints$Builder setValidator(com.google.android.material.datepicker.CalendarConstraints$DateValidator) -> setValidator
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    66:78:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    87:130:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    166:166:int getBottomInset() -> getBottomInset
    154:154:int getLeftInset() -> getLeftInset
    158:158:int getRightInset() -> getRightInset
    162:162:int getTopInset() -> getTopInset
    136:151:void styleItem(android.widget.TextView) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:116:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.CompositeDateValidator -> com.google.android.material.datepicker.CompositeDateValidator:
    42:108:void <clinit>() -> <clinit>
    27:27:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator,com.google.android.material.datepicker.CompositeDateValidator$1) -> <init>
    88:91:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator) -> <init>
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$000() -> access$000
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$100() -> access$100
    98:98:com.google.android.material.datepicker.CalendarConstraints$DateValidator allOf(java.util.List) -> allOf
    104:104:com.google.android.material.datepicker.CalendarConstraints$DateValidator anyOf(java.util.List) -> anyOf
    151:151:int describeContents() -> describeContents
    162:172:boolean equals(java.lang.Object) -> equals
    177:177:int hashCode() -> hashCode
    146:146:boolean isValid(long) -> isValid
    156:158:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CompositeDateValidator$1 -> com.google.android.material.datepicker.CompositeDateValidator$1:
    43:43:void <init>() -> <init>
    61:61:int getId() -> getId
    47:56:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$2 -> com.google.android.material.datepicker.CompositeDateValidator$2:
    66:66:void <init>() -> <init>
    84:84:int getId() -> getId
    70:79:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$3 -> com.google.android.material.datepicker.CompositeDateValidator$3:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:126:com.google.android.material.datepicker.CompositeDateValidator createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    132:132:com.google.android.material.datepicker.CompositeDateValidator[] newArray(int) -> newArray
com.google.android.material.datepicker.DateFormatTextWatcher -> com.google.android.material.datepicker.DateFormatTextWatcher:
    48:73:void <init>(java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    31:31:com.google.android.material.textfield.TextInputLayout access$000(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$000
    31:31:java.text.DateFormat access$100(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$100
    31:31:java.lang.String access$200(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$200
    107:107:java.lang.Runnable createRangeErrorCallback(long) -> createRangeErrorCallback
    77:77:void onInvalidDate() -> onInvalidDate
    81:104:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    118:119:void runValidation(android.view.View,java.lang.Runnable) -> runValidation
com.google.android.material.datepicker.DateFormatTextWatcher$1 -> com.google.android.material.datepicker.DateFormatTextWatcher$1:
    55:55:void <init>(com.google.android.material.datepicker.DateFormatTextWatcher,java.lang.String) -> <init>
    58:71:void run() -> run
com.google.android.material.datepicker.DateFormatTextWatcher$2 -> com.google.android.material.datepicker.DateFormatTextWatcher$2:
    107:107:void <init>(com.google.android.material.datepicker.DateFormatTextWatcher,long) -> <init>
    110:113:void run() -> run
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    34:34:void <init>() -> <init>
    136:136:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long) -> getDateRangeString
    157:186:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat) -> getDateRangeString
    107:107:java.lang.String getDateString(long) -> getDateString
    122:132:java.lang.String getDateString(long,java.text.SimpleDateFormat) -> getDateString
    64:64:java.lang.String getMonthDay(long) -> getMonthDay
    78:81:java.lang.String getMonthDay(long,java.util.Locale) -> getMonthDay
    85:85:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    89:92:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    37:39:java.lang.String getYearMonth(android.content.Context,long) -> getYearMonth
    43:43:java.lang.String getYearMonthDay(long) -> getYearMonthDay
    57:60:java.lang.String getYearMonthDay(long,java.util.Locale) -> getYearMonthDay
    96:96:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    100:103:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
com.google.android.material.datepicker.DateValidatorPointBackward -> com.google.android.material.datepicker.DateValidatorPointBackward:
    58:58:void <clinit>() -> <clinit>
    31:31:void <init>(long,com.google.android.material.datepicker.DateValidatorPointBackward$1) -> <init>
    35:37:void <init>(long) -> <init>
    45:45:com.google.android.material.datepicker.DateValidatorPointBackward before(long) -> before
    80:80:int describeContents() -> describeContents
    90:98:boolean equals(java.lang.Object) -> equals
    103:104:int hashCode() -> hashCode
    75:75:boolean isValid(long) -> isValid
    54:54:com.google.android.material.datepicker.DateValidatorPointBackward now() -> now
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointBackward$1 -> com.google.android.material.datepicker.DateValidatorPointBackward$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:com.google.android.material.datepicker.DateValidatorPointBackward createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    69:69:com.google.android.material.datepicker.DateValidatorPointBackward[] newArray(int) -> newArray
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:36:void <init>(long) -> <init>
    79:79:int describeContents() -> describeContents
    89:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    53:53:com.google.android.material.datepicker.DateValidatorPointForward now() -> now
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    49:49:void <clinit>() -> <clinit>
    52:56:void <init>() -> <init>
    75:75:int getCount() -> getCount
    41:41:java.lang.Object getItem(int) -> getItem
    61:64:java.lang.Integer getItem(int) -> getItem
    70:70:long getItemId(int) -> getItemId
    82:96:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    101:105:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    74:80:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    60:60:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    60:60:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    60:60:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    60:60:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    60:60:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    60:60:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    60:60:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    366:447:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    466:466:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    232:232:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    290:290:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    324:324:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    284:284:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    320:320:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    335:335:int getDayHeight(android.content.Context) -> getDayHeight
    461:461:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    98:105:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    119:125:void onCreate(android.os.Bundle) -> onCreate
    133:227:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    110:115:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    450:457:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    300:315:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    339:354:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    357:362:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    153:153:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    157:160:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    451:451:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    454:455:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    169:169:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    172:179:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    189:189:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    193:204:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    232:235:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    240:278:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    370:370:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    375:380:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    393:393:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    408:416:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    397:404:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    420:420:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    423:424:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    428:428:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    431:435:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    438:438:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    441:445:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    63:65:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    63:63:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    46:47:void <init>(android.content.Context) -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    221:228:void gainFocus(int,android.graphics.Rect) -> gainFocus
    40:40:android.widget.Adapter getAdapter() -> getAdapter
    40:40:android.widget.ListAdapter getAdapter() -> getAdapter
    108:108:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    242:242:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    75:77:void onAttachedToWindow() -> onAttachedToWindow
    125:195:void onDraw(android.graphics.Canvas) -> onDraw
    213:218:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    90:102:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    199:209:void onMeasure(int,int) -> onMeasure
    40:40:void setAdapter(android.widget.Adapter) -> setAdapter
    113:121:void setAdapter(android.widget.ListAdapter) -> setAdapter
    81:86:void setSelection(int) -> setSelection
    235:238:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    62:62:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    66:69:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    71:73:void <clinit>() -> <clinit>
    62:114:void <init>() -> <init>
    62:62:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    62:62:java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    62:62:void access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    62:62:com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    62:62:android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    62:62:com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker) -> access$500
    62:62:void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$600
    62:62:void access$700(com.google.android.material.datepicker.MaterialDatePicker) -> access$700
    502:502:boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener) -> addOnCancelListener
    520:520:boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener) -> addOnDismissListener
    476:476:boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener) -> addOnNegativeButtonClickListener
    454:454:boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener) -> addOnPositiveButtonClickListener
    512:513:void clearOnCancelListeners() -> clearOnCancelListeners
    530:531:void clearOnDismissListeners() -> clearOnDismissListeners
    492:493:void clearOnNegativeButtonClickListeners() -> clearOnNegativeButtonClickListeners
    470:471:void clearOnPositiveButtonClickListeners() -> clearOnPositiveButtonClickListeners
    395:402:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    425:438:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    105:105:java.lang.String getHeaderText() -> getHeaderText
    442:448:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    323:323:java.lang.Object getSelection() -> getSelection
    175:178:int getThemeResId(android.content.Context) -> getThemeResId
    362:382:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    406:406:boolean isFullscreen(android.content.Context) -> isFullscreen
    410:410:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    134:143:com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder) -> newInstance
    299:303:void onCancel(android.content.DialogInterface) -> onCancel
    164:172:void onCreate(android.os.Bundle) -> onCreate
    184:199:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    208:267:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    307:315:void onDismiss(android.content.DialogInterface) -> onDismiss
    148:160:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    272:289:void onStart() -> onStart
    293:295:void onStop() -> onStop
    414:421:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    507:507:boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener) -> removeOnCancelListener
    525:525:boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener) -> removeOnDismissListener
    485:485:boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener) -> removeOnNegativeButtonClickListener
    463:463:boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener) -> removeOnPositiveButtonClickListener
    334:359:void startPickerFragment() -> startPickerFragment
    96:96:long thisMonthInUtcMilliseconds() -> thisMonthInUtcMilliseconds
    89:89:long todayInUtcMilliseconds() -> todayInUtcMilliseconds
    327:331:void updateHeader() -> updateHeader
    385:390:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
    244:244:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    248:252:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
    258:258:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    261:265:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
    347:347:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    356:357:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    350:352:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
    371:371:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    375:380:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$Builder -> com.google.android.material.datepicker.MaterialDatePicker$Builder:
    537:547:void <init>(com.google.android.material.datepicker.DateSelector) -> <init>
    630:645:com.google.android.material.datepicker.MaterialDatePicker build() -> build
    649:664:com.google.android.material.datepicker.Month createDefaultOpenAt() -> createDefaultOpenAt
    557:557:com.google.android.material.datepicker.MaterialDatePicker$Builder customDatePicker(com.google.android.material.datepicker.DateSelector) -> customDatePicker
    566:566:com.google.android.material.datepicker.MaterialDatePicker$Builder datePicker() -> datePicker
    575:575:com.google.android.material.datepicker.MaterialDatePicker$Builder dateRangePicker() -> dateRangePicker
    594:595:com.google.android.material.datepicker.MaterialDatePicker$Builder setCalendarConstraints(com.google.android.material.datepicker.CalendarConstraints) -> setCalendarConstraints
    623:624:com.google.android.material.datepicker.MaterialDatePicker$Builder setInputMode(int) -> setInputMode
    580:581:com.google.android.material.datepicker.MaterialDatePicker$Builder setSelection(java.lang.Object) -> setSelection
    587:588:com.google.android.material.datepicker.MaterialDatePicker$Builder setTheme(int) -> setTheme
    604:606:com.google.android.material.datepicker.MaterialDatePicker$Builder setTitleText(int) -> setTitleText
    615:617:com.google.android.material.datepicker.MaterialDatePicker$Builder setTitleText(java.lang.CharSequence) -> setTitleText
com.google.android.material.datepicker.MaterialStyledDatePickerDialog -> com.google.android.material.datepicker.MaterialStyledDatePickerDialog:
    52:52:void <clinit>() -> <clinit>
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    72:73:void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    83:102:void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    106:111:void onCreate(android.os.Bundle) -> onCreate
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
    35:35:void <init>() -> <init>
    109:115:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    50:56:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:74:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:65:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    99:102:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    92:95:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    202:202:void <clinit>() -> <clinit>
    60:68:void <init>(java.util.Calendar) -> <init>
    31:31:int compareTo(java.lang.Object) -> compareTo
    134:134:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    76:78:com.google.android.material.datepicker.Month create(long) -> create
    91:94:com.google.android.material.datepicker.Month create(int,int) -> create
    103:103:com.google.android.material.datepicker.Month current() -> current
    107:111:int daysFromStartOfWeekToFirstOfMonth() -> daysFromStartOfWeekToFirstOfMonth
    221:221:int describeContents() -> describeContents
    116:123:boolean equals(java.lang.Object) -> equals
    168:170:long getDay(int) -> getDay
    174:176:int getDayOfMonth(long) -> getDayOfMonth
    193:196:java.lang.String getLongName(android.content.Context) -> getLongName
    155:155:long getStableId() -> getStableId
    128:129:int hashCode() -> hashCode
    185:187:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    147:150:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    226:228:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    203:203:void <init>() -> <init>
    203:203:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    207:209:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    203:203:java.lang.Object[] newArray(int) -> newArray
    215:215:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    43:43:void <clinit>() -> <clinit>
    56:61:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    239:240:int dayToPosition(int) -> dayToPosition
    212:212:int firstPositionInMonth() -> firstPositionInMonth
    100:100:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    79:82:java.lang.Long getItem(int) -> getItem
    87:87:long getItemId(int) -> getItemId
    38:38:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    106:137:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    65:65:boolean hasStableIds() -> hasStableIds
    199:202:void initializeStyles(android.content.Context) -> initializeStyles
    253:253:boolean isFirstInRow(int) -> isFirstInRow
    261:261:boolean isLastInRow(int) -> isLastInRow
    190:195:boolean isSelected(long) -> isSelected
    223:223:int lastPositionInMonth() -> lastPositionInMonth
    234:234:int positionToDay(int) -> positionToDay
    169:187:void updateSelectedState(android.widget.TextView,long) -> updateSelectedState
    157:166:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    142:154:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    245:245:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    50:72:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    38:38:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    139:139:int getItemCount() -> getItemCount
    134:134:long getItemId(int) -> getItemId
    149:149:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    144:144:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    153:153:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    38:38:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    108:130:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    93:102:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    122:122:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    125:128:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    80:87:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
    24:24:void <init>() -> <init>
    29:29:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:41:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
    35:35:boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> removeOnSelectionChangedListener
com.google.android.material.datepicker.RangeDateSelector -> com.google.android.material.datepicker.RangeDateSelector:
    280:280:void <clinit>() -> <clinit>
    52:60:void <init>() -> <init>
    52:52:java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$002
    52:52:void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> access$100
    52:52:java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$202
    52:52:java.lang.Long access$302(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$302
    52:52:java.lang.Long access$402(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$402
    264:270:void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> clearInvalidRange
    301:301:int describeContents() -> describeContents
    125:135:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    165:165:int getDefaultTitleResId() -> getDefaultTitleResId
    113:120:java.util.Collection getSelectedDays() -> getSelectedDays
    101:107:java.util.Collection getSelectedRanges() -> getSelectedRanges
    51:51:java.lang.Object getSelection() -> getSelection
    95:95:androidx.core.util.Pair getSelection() -> getSelection
    141:157:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    76:78:boolean isSelectionComplete() -> isSelectionComplete
    241:241:boolean isValidRange(long,long) -> isValidRange
    175:237:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    64:72:void select(long) -> select
    273:275:void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> setInvalidRange
    51:51:void setSelection(java.lang.Object) -> setSelection
    83:90:void setSelection(androidx.core.util.Pair) -> setSelection
    248:261:void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> updateIfValidTextProposal
    306:308:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.RangeDateSelector$1 -> com.google.android.material.datepicker.RangeDateSelector$1:
    207:207:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    217:219:void onInvalidDate() -> onInvalidDate
    211:213:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$2 -> com.google.android.material.datepicker.RangeDateSelector$2:
    223:223:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    230:232:void onInvalidDate() -> onInvalidDate
    225:227:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$3 -> com.google.android.material.datepicker.RangeDateSelector$3:
    281:281:void <init>() -> <init>
    281:281:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    285:289:com.google.android.material.datepicker.RangeDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    281:281:java.lang.Object[] newArray(int) -> newArray
    295:295:com.google.android.material.datepicker.RangeDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SingleDateSelector -> com.google.android.material.datepicker.SingleDateSelector:
    166:166:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    49:49:void access$000(com.google.android.material.datepicker.SingleDateSelector) -> access$000
    49:49:java.lang.Long access$102(com.google.android.material.datepicker.SingleDateSelector,java.lang.Long) -> access$102
    59:60:void clearSelection() -> clearSelection
    185:185:int describeContents() -> describeContents
    143:144:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    160:160:int getDefaultTitleResId() -> getDefaultTitleResId
    81:85:java.util.Collection getSelectedDays() -> getSelectedDays
    75:75:java.util.Collection getSelectedRanges() -> getSelectedRanges
    48:48:java.lang.Object getSelection() -> getSelection
    91:91:java.lang.Long getSelection() -> getSelection
    150:155:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    69:69:boolean isSelectionComplete() -> isSelectionComplete
    101:138:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    55:56:void select(long) -> select
    48:48:void setSelection(java.lang.Object) -> setSelection
    64:65:void setSelection(java.lang.Long) -> setSelection
    190:191:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.SingleDateSelector$1 -> com.google.android.material.datepicker.SingleDateSelector$1:
    118:118:void <init>(com.google.android.material.datepicker.SingleDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    132:133:void onInvalidDate() -> onInvalidDate
    122:128:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.SingleDateSelector$2 -> com.google.android.material.datepicker.SingleDateSelector$2:
    167:167:void <init>() -> <init>
    167:167:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    171:173:com.google.android.material.datepicker.SingleDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    167:167:java.lang.Object[] newArray(int) -> newArray
    179:179:com.google.android.material.datepicker.SingleDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:35:void <init>(android.content.Context,int,boolean) -> <init>
    40:50:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
    25:25:void <clinit>() -> <clinit>
    31:34:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    60:60:com.google.android.material.datepicker.TimeSource fixed(long,java.util.TimeZone) -> fixed
    75:75:com.google.android.material.datepicker.TimeSource fixed(long) -> fixed
    80:80:java.util.Calendar now() -> now
    90:95:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    40:40:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    130:133:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    258:275:int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int) -> findCharactersInDateFormatPattern
    187:187:android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale) -> getAbbrMonthDayFormat
    192:192:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    138:141:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    113:119:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    145:147:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    219:219:java.text.DateFormat getFullFormat() -> getFullFormat
    223:223:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    201:201:java.text.DateFormat getMediumFormat() -> getMediumFormat
    205:205:java.text.DateFormat getMediumFormat(java.util.Locale) -> getMediumFormat
    209:209:java.text.DateFormat getMediumNoYear() -> getMediumNoYear
    213:215:java.text.DateFormat getMediumNoYear(java.util.Locale) -> getMediumNoYear
    171:171:java.text.SimpleDateFormat getSimpleFormat(java.lang.String) -> getSimpleFormat
    175:177:java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale) -> getSimpleFormat
    151:158:java.text.SimpleDateFormat getTextInputFormat() -> getTextInputFormat
    162:167:java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat) -> getTextInputHint
    47:48:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    54:54:java.util.TimeZone getTimeZone() -> getTimeZone
    66:72:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    59:59:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    83:83:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    95:101:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    182:182:android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale) -> getYearAbbrMonthDayFormat
    197:197:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    228:250:java.lang.String removeYearFromDateFormatPattern(java.lang.String) -> removeYearFromDateFormatPattern
    43:44:void setTimeSource(com.google.android.material.datepicker.TimeSource) -> setTimeSource
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:47:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    84:84:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    98:98:int getItemCount() -> getItemCount
    102:102:int getPositionForYear(int) -> getPositionForYear
    106:106:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:80:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    52:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    84:84:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    87:92:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:42:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
    45:50:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.dialog.MaterialAlertDialogBuilder -> com.google.android.material.dialog.MaterialAlertDialogBuilder:
    69:73:void <clinit>() -> <clinit>
    103:104:void <init>(android.content.Context) -> <init>
    109:137:void <init>(android.content.Context,int) -> <init>
    142:154:androidx.appcompat.app.AlertDialog create() -> create
    88:93:android.content.Context createMaterialAlertDialogThemedContext(android.content.Context) -> createMaterialAlertDialogThemedContext
    159:159:android.graphics.drawable.Drawable getBackground() -> getBackground
    79:84:int getMaterialAlertDialogThemeOverlay(android.content.Context) -> getMaterialAlertDialogThemeOverlay
    97:98:int getOverridingThemeResId(android.content.Context,int) -> getOverridingThemeResId
    67:67:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    359:359:com.google.android.material.dialog.MaterialAlertDialogBuilder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    164:165:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackground(android.graphics.drawable.Drawable) -> setBackground
    200:201:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetBottom(int) -> setBackgroundInsetBottom
    188:195:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetEnd(int) -> setBackgroundInsetEnd
    170:177:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetStart(int) -> setBackgroundInsetStart
    182:183:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetTop(int) -> setBackgroundInsetTop
    67:67:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    318:318:com.google.android.material.dialog.MaterialAlertDialogBuilder setCancelable(boolean) -> setCancelable
    67:67:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    368:368:com.google.android.material.dialog.MaterialAlertDialogBuilder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    67:67:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    222:222:com.google.android.material.dialog.MaterialAlertDialogBuilder setCustomTitle(android.view.View) -> setCustomTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    240:240:com.google.android.material.dialog.MaterialAlertDialogBuilder setIcon(int) -> setIcon
    246:246:com.google.android.material.dialog.MaterialAlertDialogBuilder setIcon(android.graphics.drawable.Drawable) -> setIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    252:252:com.google.android.material.dialog.MaterialAlertDialogBuilder setIconAttribute(int) -> setIconAttribute
    67:67:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    345:345:com.google.android.material.dialog.MaterialAlertDialogBuilder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    352:352:com.google.android.material.dialog.MaterialAlertDialogBuilder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    67:67:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    228:228:com.google.android.material.dialog.MaterialAlertDialogBuilder setMessage(int) -> setMessage
    234:234:com.google.android.material.dialog.MaterialAlertDialogBuilder setMessage(java.lang.CharSequence) -> setMessage
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    377:377:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    386:386:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    396:397:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    279:279:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    286:286:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    292:292:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    299:299:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    306:306:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    312:312:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    325:325:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    332:332:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    436:436:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    338:338:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    259:259:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    266:266:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    272:272:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    404:404:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    414:415:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    422:422:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    429:429:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    210:210:com.google.android.material.dialog.MaterialAlertDialogBuilder setTitle(int) -> setTitle
    216:216:com.google.android.material.dialog.MaterialAlertDialogBuilder setTitle(java.lang.CharSequence) -> setTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    67:67:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    442:442:com.google.android.material.dialog.MaterialAlertDialogBuilder setView(int) -> setView
    448:448:com.google.android.material.dialog.MaterialAlertDialogBuilder setView(android.view.View) -> setView
com.google.android.material.dialog.MaterialDialogs -> com.google.android.material.dialog.MaterialDialogs:
    43:43:void <init>() -> <init>
    59:105:android.graphics.Rect getDialogBackgroundInsets(android.content.Context,int,int) -> getDialogBackgroundInsets
    48:48:android.graphics.drawable.InsetDrawable insetDrawable(android.graphics.drawable.Drawable,android.graphics.Rect) -> insetDrawable
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    53:53:void <init>() -> <init>
    73:94:android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence) -> parseDrawableXml
    100:112:void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int) -> setRippleDrawableRadius
    61:66:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    42:49:void <init>(android.content.Context) -> <init>
    130:130:int calculateOverlayAlpha(float) -> calculateOverlayAlpha
    138:144:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    105:106:int compositeOverlay(int,float,android.view.View) -> compositeOverlay
    117:122:int compositeOverlay(int,float) -> compositeOverlay
    82:83:int compositeOverlayIfNeeded(int,float,android.view.View) -> compositeOverlayIfNeeded
    94:97:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    60:61:int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    70:70:int compositeOverlayWithThemeSurfaceColorIfNeeded(float) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    169:169:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    155:155:int getThemeElevationOverlayColor() -> getThemeElevationOverlayColor
    161:161:int getThemeSurfaceColor() -> getThemeSurfaceColor
    149:149:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    173:173:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
    36:42:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    91:95:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    87:87:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    56:56:boolean isExpanded() -> isExpanded
    71:77:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    62:66:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    46:51:boolean setExpanded(boolean) -> setExpanded
    81:82:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.AnimatorTracker -> com.google.android.material.floatingactionbutton.AnimatorTracker:
    23:23:void <init>() -> <init>
    33:36:void cancelCurrent() -> cancelCurrent
    39:40:void clear() -> clear
    28:30:void onNextAnimationStart(android.animation.Animator) -> onNextAnimationStart
com.google.android.material.floatingactionbutton.BaseMotionStrategy -> com.google.android.material.floatingactionbutton.BaseMotionStrategy:
    44:54:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    40:40:com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton access$000(com.google.android.material.floatingactionbutton.BaseMotionStrategy) -> access$000
    76:77:void addAnimationListener(android.animation.Animator$AnimatorListener) -> addAnimationListener
    116:116:android.animation.AnimatorSet createAnimator() -> createAnimator
    121:207:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec) -> createAnimator
    63:71:com.google.android.material.animation.MotionSpec getCurrentMotionSpec() -> getCurrentMotionSpec
    87:87:java.util.List getListeners() -> getListeners
    93:93:com.google.android.material.animation.MotionSpec getMotionSpec() -> getMotionSpec
    111:112:void onAnimationCancel() -> onAnimationCancel
    105:106:void onAnimationEnd() -> onAnimationEnd
    99:100:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    81:82:void removeAnimationListener(android.animation.Animator$AnimatorListener) -> removeAnimationListener
    58:59:void setMotionSpec(com.google.android.material.animation.MotionSpec) -> setMotionSpec
com.google.android.material.floatingactionbutton.BaseMotionStrategy$1 -> com.google.android.material.floatingactionbutton.BaseMotionStrategy$1:
    156:156:void <init>(com.google.android.material.floatingactionbutton.BaseMotionStrategy,java.lang.Class,java.lang.String) -> <init>
    156:156:java.lang.Object get(java.lang.Object) -> get
    161:166:java.lang.Float get(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> get
    156:156:void set(java.lang.Object,java.lang.Object) -> set
    173:200:void set(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.BorderDrawable:
    60:86:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    224:249:android.graphics.Shader createGradientShader() -> createGradientShader
    125:143:void draw(android.graphics.Canvas) -> draw
    173:174:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    256:256:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    194:194:int getOpacity() -> getOpacity
    148:160:void getOutline(android.graphics.Outline) -> getOutline
    164:168:boolean getPadding(android.graphics.Rect) -> getPadding
    178:178:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    204:204:boolean isStateful() -> isStateful
    199:200:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    209:219:boolean onStateChange(int[]) -> onStateChange
    188:190:void setAlpha(int) -> setAlpha
    98:104:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    89:95:void setBorderWidth(float) -> setBorderWidth
    108:110:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    117:121:void setGradientColors(int,int,int,int) -> setGradientColors
    182:184:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
    263:263:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    263:263:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    273:273:int getChangingConfigurations() -> getChangingConfigurations
    268:268:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    76:769:void <clinit>() -> <clinit>
    145:146:void <init>(android.content.Context) -> <init>
    149:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    83:259:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:74:int access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$000
    74:74:int access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$100
    74:74:boolean access$1000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$1000
    74:74:boolean access$1100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$1100
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$200
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    74:74:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$600
    74:74:boolean access$700(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$700
    74:74:boolean access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean) -> access$702
    74:74:boolean access$802(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean) -> access$802
    74:74:int access$902(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> access$902
    430:431:void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener) -> addOnExtendAnimationListener
    384:385:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    361:362:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    407:408:void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShrinkAnimationListener
    494:495:void extend() -> extend
    506:507:void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> extend
    298:298:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    800:800:int getCollapsedPadding() -> getCollapsedPadding
    794:795:int getCollapsedSize() -> getCollapsedSize
    585:585:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    561:561:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    537:537:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    611:611:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    449:450:void hide() -> hide
    460:461:void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> hide
    319:319:boolean isExtended() -> isExtended
    690:695:boolean isOrWillBeHidden() -> isOrWillBeHidden
    680:685:boolean isOrWillBeShown() -> isOrWillBeShown
    287:293:void onAttachedToWindow() -> onAttachedToWindow
    634:677:void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    440:441:void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnExtendAnimationListener
    394:395:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    371:372:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    417:418:void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShrinkAnimationListener
    274:275:void saveOriginalTextCsl() -> saveOriginalTextCsl
    330:331:void setAnimateShowBeforeLayout(boolean) -> setAnimateShowBeforeLayout
    594:595:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    603:604:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    306:316:void setExtended(boolean) -> setExtended
    570:571:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    579:580:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    344:349:void setPadding(int,int,int,int) -> setPadding
    335:340:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    546:547:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    555:556:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    620:621:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    629:630:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    263:265:void setTextColor(int) -> setTextColor
    269:271:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    700:701:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    470:471:void show() -> show
    482:483:void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> show
    519:520:void shrink() -> shrink
    531:532:void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> shrink
    282:283:void silentlyUpdateTextColor(android.content.res.ColorStateList) -> silentlyUpdateTextColor
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1:
    185:185:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    196:196:int getHeight() -> getHeight
    211:211:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    206:206:int getPaddingEnd() -> getPaddingEnd
    201:201:int getPaddingStart() -> getPaddingStart
    188:191:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2:
    219:219:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    227:227:int getHeight() -> getHeight
    242:242:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    237:237:int getPaddingEnd() -> getPaddingEnd
    232:232:int getPaddingStart() -> getPaddingStart
    222:222:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    648:648:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    659:661:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    665:669:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    653:655:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    709:709:void <init>(java.lang.Class,java.lang.String) -> <init>
    709:709:java.lang.Object get(java.lang.Object) -> get
    719:719:java.lang.Float get(android.view.View) -> get
    709:709:void set(java.lang.Object,java.lang.Object) -> set
    712:714:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    728:728:void <init>(java.lang.Class,java.lang.String) -> <init>
    728:728:java.lang.Object get(java.lang.Object) -> get
    738:738:java.lang.Float get(android.view.View) -> get
    728:728:void set(java.lang.Object,java.lang.Object) -> set
    731:733:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
    747:747:void <init>(java.lang.Class,java.lang.String) -> <init>
    747:747:java.lang.Object get(java.lang.Object) -> get
    761:761:java.lang.Float get(android.view.View) -> get
    747:747:void set(java.lang.Object,java.lang.Object) -> set
    750:756:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
    770:770:void <init>(java.lang.Class,java.lang.String) -> <init>
    770:770:java.lang.Object get(java.lang.Object) -> get
    784:784:java.lang.Float get(android.view.View) -> get
    770:770:void set(java.lang.Object,java.lang.Object) -> set
    773:779:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy:
    1092:1096:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size,boolean) -> <init>
    1140:1175:android.animation.AnimatorSet createAnimator() -> createAnimator
    1132:1132:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1188:1198:void onAnimationEnd() -> onAnimationEnd
    1180:1184:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1119:1128:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1100:1115:void performNow() -> performNow
    1202:1202:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    821:824:void <init>() -> <init>
    830:843:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1041:1049:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    808:808:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    905:905:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    869:869:boolean isAutoHideEnabled() -> isAutoHideEnabled
    894:894:boolean isAutoShrinkEnabled() -> isAutoShrinkEnabled
    931:935:boolean isBottomSheet(android.view.View) -> isBottomSheet
    910:915:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    808:808:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    920:927:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    808:808:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1057:1072:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    857:858:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    882:883:void setAutoShrinkEnabled(boolean) -> setAutoShrinkEnabled
    940:941:void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> setInternalAutoHideCallback
    945:946:void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> setInternalAutoShrinkCallback
    950:962:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1018:1026:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    969:988:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    993:1002:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy:
    1255:1257:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1278:1278:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1291:1293:void onAnimationCancel() -> onAnimationCancel
    1297:1302:void onAnimationEnd() -> onAnimationEnd
    1283:1287:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1266:1269:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1261:1262:void performNow() -> performNow
    1273:1273:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
    108:108:void <init>() -> <init>
    133:133:void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onExtended
    124:124:void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onHidden
    116:116:void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onShown
    141:141:void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onShrunken
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy:
    1208:1210:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1229:1229:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1241:1243:void onAnimationEnd() -> onAnimationEnd
    1234:1237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1222:1225:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1214:1218:void performNow() -> performNow
    1247:1247:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    110:110:void <clinit>() -> <clinit>
    197:198:void <init>(android.content.Context) -> <init>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    188:272:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    627:628:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    595:596:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1359:1360:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    780:781:void clearCustomSize() -> clearCustomSize
    1452:1455:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    823:825:void drawableStateChanged() -> drawableStateChanged
    363:363:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    389:389:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    351:351:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    1208:1208:float getCompatElevation() -> getCompatElevation
    1244:1244:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1281:1281:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    901:901:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    873:878:boolean getContentRect(android.graphics.Rect) -> getContentRect
    770:770:int getCustomSize() -> getCustomSize
    651:651:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1335:1335:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1444:1447:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    887:889:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    303:303:int getRippleColor() -> getRippleColor
    314:314:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    538:538:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1311:1311:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    711:711:int getSize() -> getSize
    784:784:int getSizeDimension() -> getSizeDimension
    788:805:int getSizeDimension(int) -> getSizeDimension
    423:423:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    442:442:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    456:456:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    470:470:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    679:679:boolean getUseCompatPadding() -> getUseCompatPadding
    608:609:void hide() -> hide
    619:620:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    623:624:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    641:641:boolean isExpanded() -> isExpanded
    735:735:boolean isOrWillBeHidden() -> isOrWillBeHidden
    739:739:boolean isOrWillBeShown() -> isOrWillBeShown
    829:831:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    892:896:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    474:493:void onApplySupportImageTint() -> onApplySupportImageTint
    811:813:void onAttachedToWindow() -> onAttachedToWindow
    817:819:void onDetachedFromWindow() -> onDetachedFromWindow
    276:291:void onMeasure(int,int) -> onMeasure
    851:861:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    835:844:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    932:938:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    631:632:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    599:600:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    1368:1369:void removeTransformationCallback(com.google.android.material.animation.TransformationCallback) -> removeTransformationCallback
    905:927:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    507:508:void setBackgroundColor(int) -> setBackgroundColor
    497:498:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    502:503:void setBackgroundResource(int) -> setBackgroundResource
    374:378:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    401:405:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1220:1221:void setCompatElevation(float) -> setCompatElevation
    1232:1233:void setCompatElevationResource(int) -> setCompatElevationResource
    1257:1258:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1270:1271:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1293:1294:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1305:1306:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    753:761:void setCustomSize(int) -> setCustomSize
    1196:1198:void setElevation(float) -> setElevation
    559:563:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    636:636:boolean setExpanded(boolean) -> setExpanded
    646:647:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1344:1345:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1353:1354:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    519:526:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    513:515:void setImageResource(int) -> setImageResource
    328:329:void setRippleColor(int) -> setRippleColor
    342:346:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1422:1424:void setScaleX(float) -> setScaleX
    1428:1430:void setScaleY(float) -> setScaleY
    1440:1441:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    531:532:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1320:1321:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1329:1330:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    696:701:void setSize(int) -> setSize
    413:414:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    432:433:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    447:451:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    461:465:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1404:1406:void setTranslationX(float) -> setTranslationX
    1410:1412:void setTranslationY(float) -> setTranslationY
    1416:1418:void setTranslationZ(float) -> setTranslationZ
    664:668:void setUseCompatPadding(boolean) -> setUseCompatPadding
    567:568:void setVisibility(int) -> setVisibility
    549:549:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    576:577:void show() -> show
    587:588:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    591:592:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    717:721:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    721:721:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    729:730:void onHidden() -> onHidden
    724:725:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    973:975:void <init>() -> <init>
    978:986:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    964:964:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1143:1149:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1009:1009:boolean isAutoHideEnabled() -> isAutoHideEnabled
    1035:1039:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1159:1190:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1014:1019:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    964:964:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1024:1031:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    964:964:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1116:1133:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    997:998:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    1044:1045:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
    1049:1067:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1074:1093:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1098:1107:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    950:951:void <init>() -> <init>
    954:955:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    947:947:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    947:947:boolean isAutoHideEnabled() -> isAutoHideEnabled
    947:947:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    947:947:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    947:947:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    947:947:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    947:947:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
    113:113:void <init>() -> <init>
    127:127:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
    119:119:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1460:1460:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1464:1464:float getRadius() -> getRadius
    1483:1483:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1476:1479:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1469:1472:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1376:1378:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1392:1393:boolean equals(java.lang.Object) -> equals
    1398:1398:int hashCode() -> hashCode
    1387:1388:void onScaleChanged() -> onScaleChanged
    1382:1383:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    68:141:void <clinit>() -> <clinit>
    92:182:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    66:66:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    66:66:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    66:66:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    401:405:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    385:389:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    623:627:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    293:307:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    563:600:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    769:775:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    743:744:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    656:656:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    552:557:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    543:548:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    246:246:float getElevation() -> getElevation
    352:352:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    340:340:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    250:250:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    728:739:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    671:679:void getPadding(android.graphics.Rect) -> getPadding
    254:254:float getPressedTranslationZ() -> getPressedTranslationZ
    326:326:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    331:331:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    417:477:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    191:210:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    758:763:boolean isOrWillBeHidden() -> isOrWillBeHidden
    748:753:boolean isOrWillBeShown() -> isOrWillBeShown
    381:382:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    697:704:void onAttachedToWindow() -> onAttachedToWindow
    661:661:void onCompatShadowChanged() -> onCompatShadowChanged
    707:712:void onDetachedFromWindow() -> onDetachedFromWindow
    377:378:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    366:368:void onElevationsChanged(float,float,float) -> onElevationsChanged
    682:690:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    719:724:void onPreDraw() -> onPreDraw
    647:652:void onScaleChanged() -> onScaleChanged
    639:644:void onTranslationChanged() -> onTranslationChanged
    408:414:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    392:398:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    630:636:void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> removeTransformationCallback
    715:715:boolean requirePreDrawListener() -> requirePreDrawListener
    213:219:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    222:225:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    239:243:void setElevation(float) -> setElevation
    356:357:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    344:345:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    258:262:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    285:290:void setImageMatrixScale(float) -> setImageMatrixScale
    272:276:void setMaxImageSize(int) -> setMaxImageSize
    228:229:void setMinTouchTargetSize(int) -> setMinTouchTargetSize
    265:269:void setPressedTranslationZ(float) -> setPressedTranslationZ
    232:236:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    360:362:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    310:322:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    335:336:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    693:693:boolean shouldAddPadding() -> shouldAddPadding
    846:846:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    348:348:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    480:540:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    850:868:void updateFromViewRotation() -> updateFromViewRotation
    281:282:void updateImageMatrixScale() -> updateImageMatrixScale
    664:668:void updatePadding() -> updatePadding
    371:374:void updateShapeElevation(float) -> updateShapeElevation
    608:620:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    434:434:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    448:449:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    453:462:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    439:444:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    505:505:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    516:522:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    508:512:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    584:584:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    584:584:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    590:591:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    612:613:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:612:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    616:617:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    730:730:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    733:734:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    837:837:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    841:841:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    819:819:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    823:823:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    828:828:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    832:832:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    810:810:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    814:814:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    801:803:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    787:797:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:54:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    216:225:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    156:162:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    231:232:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    167:167:float getElevation() -> getElevation
    237:245:void getPadding(android.graphics.Rect) -> getPadding
    63:85:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    202:202:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    172:173:void onCompatShadowChanged() -> onCompatShadowChanged
    182:197:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    103:152:void onElevationsChanged(float,float,float) -> onElevationsChanged
    211:211:boolean requirePreDrawListener() -> requirePreDrawListener
    89:95:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    177:177:boolean shouldAddPadding() -> shouldAddPadding
    207:207:void updateFromViewRotation() -> updateFromViewRotation
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable:
    256:257:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    261:261:boolean isStateful() -> isStateful
com.google.android.material.imageview.ShapeableImageView -> com.google.android.material.imageview.ShapeableImageView:
    60:60:void <clinit>() -> <clinit>
    88:89:void <init>(android.content.Context) -> <init>
    92:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:151:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:com.google.android.material.shape.ShapeAppearanceModel access$000(com.google.android.material.imageview.ShapeableImageView) -> access$000
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$100(com.google.android.material.imageview.ShapeableImageView) -> access$100
    58:58:com.google.android.material.shape.MaterialShapeDrawable access$102(com.google.android.material.imageview.ShapeableImageView,com.google.android.material.shape.MaterialShapeDrawable) -> access$102
    58:58:android.graphics.RectF access$200(com.google.android.material.imageview.ShapeableImageView) -> access$200
    491:503:void drawStroke(android.graphics.Canvas) -> drawStroke
    272:272:int getContentPaddingBottom() -> getContentPaddingBottom
    283:286:int getContentPaddingEnd() -> getContentPaddingEnd
    297:305:int getContentPaddingLeft() -> getContentPaddingLeft
    315:323:int getContentPaddingRight() -> getContentPaddingRight
    334:337:int getContentPaddingStart() -> getContentPaddingStart
    348:348:int getContentPaddingTop() -> getContentPaddingTop
    401:401:int getPaddingBottom() -> getPaddingBottom
    412:412:int getPaddingEnd() -> getPaddingEnd
    423:423:int getPaddingLeft() -> getPaddingLeft
    434:434:int getPaddingRight() -> getPaddingRight
    445:445:int getPaddingStart() -> getPaddingStart
    456:456:int getPaddingTop() -> getPaddingTop
    475:475:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    527:527:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    569:569:float getStrokeWidth() -> getStrokeWidth
    262:262:boolean isContentPaddingRelative() -> isContentPaddingRelative
    352:352:boolean isRtl() -> isRtl
    161:163:void onAttachedToWindow() -> onAttachedToWindow
    155:157:void onDetachedFromWindow() -> onDetachedFromWindow
    198:201:void onDraw(android.graphics.Canvas) -> onDraw
    167:194:void onMeasure(int,int) -> onMeasure
    205:207:void onSizeChanged(int,int,int,int) -> onSizeChanged
    219:234:void setContentPadding(int,int,int,int) -> setContentPadding
    249:259:void setContentPaddingRelative(int,int,int,int) -> setContentPaddingRelative
    367:372:void setPadding(int,int,int,int) -> setPadding
    386:391:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    461:470:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    573:575:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    515:516:void setStrokeColorResource(int) -> setStrokeColorResource
    540:544:void setStrokeWidth(float) -> setStrokeWidth
    556:557:void setStrokeWidthResource(int) -> setStrokeWidthResource
    479:488:void updateShapeMask(int,int) -> updateShapeMask
com.google.android.material.imageview.ShapeableImageView$OutlineProvider -> com.google.android.material.imageview.ShapeableImageView$OutlineProvider:
    578:580:void <init>(com.google.android.material.imageview.ShapeableImageView) -> <init>
    584:595:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    31:35:void <init>(android.content.Context) -> <init>
    31:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    48:49:void <init>(android.content.Context) -> <init>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    154:154:boolean isPressable() -> isPressable
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:132:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:140:void setCheckable(boolean) -> setCheckable
    79:84:void setChecked(boolean) -> setChecked
    149:150:void setPressable(boolean) -> setPressable
    98:101:void setPressed(boolean) -> setPressed
    93:94:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:73:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:163:void <init>(android.os.Parcelable) -> <init>
    166:168:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:178:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:174:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
# {"id":"sourceFile","fileName":"CheckableImageButton.java"}
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    70:85:void <clinit>() -> <clinit>
    99:174:void <init>(android.view.View) -> <init>
    1118:1123:int blendColors(int,int,float) -> blendColors
    654:746:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    271:275:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    542:543:void calculateCurrentOffsets() -> calculateCurrentOffsets
    615:623:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    306:306:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    858:860:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    546:611:void calculateOffsets(float) -> calculateOffsets
    890:891:void calculateUsingTextSize(float) -> calculateUsingTextSize
    895:965:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1043:1047:void clearTexture() -> clearTexture
    968:984:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    773:815:void draw(android.graphics.Canvas) -> draw
    822:855:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    988:1008:void ensureExpandedTexture() -> ensureExpandedTexture
    239:244:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1108:1108:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    357:357:int getCollapsedTextGravity() -> getCollapsedTextGravity
    291:293:float getCollapsedTextHeight() -> getCollapsedTextHeight
    247:254:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    259:266:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    526:526:float getCollapsedTextSize() -> getCollapsedTextSize
    478:478:android.graphics.Typeface getCollapsedTypeface() -> getCollapsedTypeface
    639:639:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    644:650:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    634:634:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    1104:1104:android.content.res.ColorStateList getExpandedTextColor() -> getExpandedTextColor
    285:287:float getExpandedTextFullHeight() -> getExpandedTextFullHeight
    346:346:int getExpandedTextGravity() -> getExpandedTextGravity
    279:281:float getExpandedTextHeight() -> getExpandedTextHeight
    530:530:float getExpandedTextSize() -> getExpandedTextSize
    482:482:android.graphics.Typeface getExpandedTypeface() -> getExpandedTypeface
    522:522:float getExpansionFraction() -> getExpansionFraction
    518:518:float getFadeModeThresholdFraction() -> getFadeModeThresholdFraction
    1092:1092:int getHyphenationFrequency() -> getHyphenationFrequency
    1062:1062:int getLineCount() -> getLineCount
    1072:1072:float getLineSpacingAdd() -> getLineSpacingAdd
    1082:1082:float getLineSpacingMultiplier() -> getLineSpacingMultiplier
    1058:1058:int getMaxLines() -> getMaxLines
    1039:1039:java.lang.CharSequence getText() -> getText
    323:328:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    315:320:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    749:760:void interpolateBounds(float) -> interpolateBounds
    1100:1100:boolean isClose(float,float) -> isClose
    865:865:boolean isDefaultIsRtl() -> isDefaultIsRtl
    538:538:boolean isRtlTextDirectionHeuristicsEnabled() -> isRtlTextDirectionHeuristicsEnabled
    513:514:boolean isStateful() -> isStateful
    869:872:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1128:1131:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    331:336:void onBoundsChanged() -> onBoundsChanged
    1011:1012:void recalculate() -> recalculate
    1015:1021:void recalculate(boolean) -> recalculate
    1135:1135:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    227:232:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    235:236:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    361:393:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    763:765:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    201:205:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    350:354:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    194:198:void setCollapsedTextSize(float) -> setCollapsedTextSize
    430:433:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    453:460:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    297:298:void setCurrentOffsetY(int) -> setCurrentOffsetY
    215:220:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    223:224:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    396:427:void setExpandedTextAppearance(int) -> setExpandedTextAppearance
    768:770:void setExpandedTextBlend(float) -> setExpandedTextBlend
    208:212:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    339:343:void setExpandedTextGravity(int) -> setExpandedTextGravity
    187:191:void setExpandedTextSize(float) -> setExpandedTextSize
    436:439:void setExpandedTypeface(android.graphics.Typeface) -> setExpandedTypeface
    467:474:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    493:499:void setExpansionFraction(float) -> setExpansionFraction
    311:312:void setFadeModeEnabled(boolean) -> setFadeModeEnabled
    301:303:void setFadeModeStartFraction(float) -> setFadeModeStartFraction
    1087:1088:void setHyphenationFrequency(int) -> setHyphenationFrequency
    876:887:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    1067:1068:void setLineSpacingAdd(float) -> setLineSpacingAdd
    1077:1078:void setLineSpacingMultiplier(float) -> setLineSpacingMultiplier
    1050:1055:void setMaxLines(int) -> setMaxLines
    182:184:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    534:535:void setRtlTextDirectionHeuristicsEnabled(boolean) -> setRtlTextDirectionHeuristicsEnabled
    502:509:boolean setState(int[]) -> setState
    1029:1035:void setText(java.lang.CharSequence) -> setText
    177:179:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    442:447:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    818:818:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    383:383:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    386:387:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.CollapsingTextHelper$2 -> com.google.android.material.internal.CollapsingTextHelper$2:
    417:417:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    420:421:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.ContextUtils -> com.google.android.material.internal.ContextUtils:
    33:33:void <init>() -> <init>
    41:47:android.app.Activity getActivity(android.content.Context) -> getActivity
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    83:85:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:101:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:72:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    50:51:void <init>(android.content.Context) -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:69:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    88:88:int getItemSpacing() -> getItemSpacing
    80:80:int getLineSpacing() -> getLineSpacing
    178:184:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    248:248:int getRowCount() -> getRowCount
    253:257:int getRowIndex(android.view.View) -> getRowIndex
    97:97:boolean isSingleLine() -> isSingleLine
    72:77:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    190:245:void onLayout(boolean,int,int,int,int) -> onLayout
    107:175:void onMeasure(int,int) -> onMeasure
    92:93:void setItemSpacing(int) -> setItemSpacing
    84:85:void setLineSpacing(int) -> setLineSpacing
    102:103:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    54:55:void <init>(android.content.Context) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:236:void draw(android.graphics.Canvas) -> draw
    242:246:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    138:142:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    130:134:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:195:void onLayout(boolean,int,int,int,int) -> onLayout
    199:201:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:177:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:120:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
    32:32:void <init>() -> <init>
    53:53:boolean isDateInputKeyboardMissingSeparatorCharacters() -> isDateInputKeyboardMissingSeparatorCharacters
    41:41:boolean isLGEDevice() -> isLGEDevice
    36:36:boolean isMeizuDevice() -> isMeizuDevice
    46:46:boolean isSamsungDevice() -> isSamsungDevice
com.google.android.material.internal.NavigationMenu -> com.google.android.material.internal.NavigationMenu:
    39:40:void <init>(android.content.Context) -> <init>
    45:48:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    55:55:void <clinit>() -> <clinit>
    87:88:void <init>(android.content.Context) -> <init>
    91:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    136:152:void adjustAppearance() -> adjustAppearance
    175:184:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    189:189:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    107:127:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    255:259:int[] onCreateDrawableState(int) -> onCreateDrawableState
    245:245:boolean prefersCondensedTitle() -> prefersCondensedTitle
    155:159:void recycle() -> recycle
    162:171:void setActionView(android.view.View) -> setActionView
    199:205:void setCheckable(boolean) -> setCheckable
    209:211:void setChecked(boolean) -> setChecked
    284:285:void setHorizontalPadding(int) -> setHorizontalPadding
    218:237:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    288:289:void setIconPadding(int) -> setIconPadding
    240:241:void setIconSize(int) -> setIconSize
    263:269:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    292:293:void setMaxLines(int) -> setMaxLines
    280:281:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    214:214:void setShortcut(boolean,char) -> setShortcut
    272:273:void setTextAppearance(int) -> setTextAppearance
    276:277:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    194:195:void setTitle(java.lang.CharSequence) -> setTitle
    130:132:boolean shouldExpandActionArea() -> shouldExpandActionArea
    250:250:boolean showsIcon() -> showsIcon
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    76:76:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    81:83:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter -> com.google.android.material.internal.NavigationMenuPresenter:
    57:408:void <init>() -> <init>
    57:57:int access$000(com.google.android.material.internal.NavigationMenuPresenter) -> access$000
    228:231:void addHeaderView(android.view.View) -> addHeaderView
    161:161:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    349:359:void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    156:156:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    151:151:boolean flagActionItems() -> flagActionItems
    218:218:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    241:241:int getHeaderCount() -> getHeaderCount
    245:245:android.view.View getHeaderView(int) -> getHeaderView
    166:166:int getId() -> getId
    276:276:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    285:285:int getItemHorizontalPadding() -> getItemHorizontalPadding
    294:294:int getItemIconPadding() -> getItemIconPadding
    308:308:int getItemMaxLines() -> getItemMaxLines
    260:260:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    250:250:android.content.res.ColorStateList getItemTintList() -> getItemTintList
    106:122:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    222:224:android.view.View inflateHeaderView(int) -> inflateHeaderView
    97:102:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    335:335:boolean isBehindStatusBar() -> isBehindStatusBar
    144:147:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    195:210:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    176:190:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    139:139:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    234:238:void removeHeaderView(android.view.View) -> removeHeaderView
    327:331:void setBehindStatusBar(boolean) -> setBehindStatusBar
    134:135:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    213:214:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    170:171:void setId(int) -> setId
    280:282:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    289:291:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    298:300:void setItemIconPadding(int) -> setItemIconPadding
    312:317:void setItemIconSize(int) -> setItemIconSize
    254:256:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    303:305:void setItemMaxLines(int) -> setItemMaxLines
    269:272:void setItemTextAppearance(int) -> setItemTextAppearance
    264:266:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    362:366:void setOverScrollMode(int) -> setOverScrollMode
    320:323:void setUpdateSuspended(boolean) -> setUpdateSuspended
    127:130:void updateMenuView(boolean) -> updateMenuView
    339:346:void updateTopPadding() -> updateTopPadding
com.google.android.material.internal.NavigationMenuPresenter$1 -> com.google.android.material.internal.NavigationMenuPresenter$1:
    409:409:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    413:426:void onClick(android.view.View) -> onClick
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder:
    401:402:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter:
    439:445:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    624:628:void appendTransparentIconIfMissing(int,int) -> appendTransparentIconIfMissing
    647:666:android.os.Bundle createInstanceState() -> createInstanceState
    642:642:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    454:454:int getItemCount() -> getItemCount
    449:449:long getItemId(int) -> getItemId
    459:472:int getItemViewType(int) -> getItemViewType
    718:724:int getRowCount() -> getRowCount
    429:429:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    493:536:void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int) -> onBindViewHolder
    429:429:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    478:488:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    429:429:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    540:543:void onViewRecycled(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder) -> onViewRecycled
    555:621:void prepareMenuItems() -> prepareMenuItems
    670:710:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    631:639:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    713:714:void setUpdateSuspended(boolean) -> setUpdateSuspended
    546:548:void update() -> update
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem:
    770:770:void <init>() -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem:
    754:757:void <init>(int,int) -> <init>
    764:764:int getPaddingBottom() -> getPaddingBottom
    760:760:int getPaddingTop() -> getPaddingTop
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem:
    738:740:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    743:743:androidx.appcompat.view.menu.MenuItemImpl getMenuItem() -> getMenuItem
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate:
    776:778:void <init>(com.google.android.material.internal.NavigationMenuPresenter,androidx.recyclerview.widget.RecyclerView) -> <init>
    783:785:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder:
    379:381:void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder:
    394:395:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder:
    387:388:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$ViewHolder:
    371:372:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.NavigationSubMenu -> com.google.android.material.internal.NavigationSubMenu:
    37:38:void <init>(android.content.Context,com.google.android.material.internal.NavigationMenu,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    42:44:void onItemsChanged(boolean) -> onItemsChanged
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    66:66:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    37:45:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    49:49:int describeContents() -> describeContents
    54:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    71:71:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    77:77:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object[] newArray(int) -> newArray
    83:83:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseBooleanArray -> com.google.android.material.internal.ParcelableSparseBooleanArray:
    70:70:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    40:41:void <init>(int) -> <init>
    44:48:void <init>(android.util.SparseBooleanArray) -> <init>
    52:52:int describeContents() -> describeContents
    57:68:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseBooleanArray$1 -> com.google.android.material.internal.ParcelableSparseBooleanArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:88:com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseIntArray -> com.google.android.material.internal.ParcelableSparseIntArray:
    70:70:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    40:41:void <init>(int) -> <init>
    44:48:void <init>(android.util.SparseIntArray) -> <init>
    52:52:int describeContents() -> describeContents
    57:68:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseIntArray$1 -> com.google.android.material.internal.ParcelableSparseIntArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:88:com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int) -> newArray
com.google.android.material.internal.ScrimInsetsFrameLayout -> com.google.android.material.internal.ScrimInsetsFrameLayout:
    50:51:void <init>(android.content.Context) -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:143:void draw(android.graphics.Canvas) -> draw
    147:151:void onAttachedToWindow() -> onAttachedToWindow
    155:159:void onDetachedFromWindow() -> onDetachedFromWindow
    161:161:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    104:105:void setDrawBottomInsetForeground(boolean) -> setDrawBottomInsetForeground
    100:101:void setDrawTopInsetForeground(boolean) -> setDrawTopInsetForeground
    96:97:void setScrimInsetForeground(android.graphics.drawable.Drawable) -> setScrimInsetForeground
com.google.android.material.internal.ScrimInsetsFrameLayout$1 -> com.google.android.material.internal.ScrimInsetsFrameLayout$1:
    74:74:void <init>(com.google.android.material.internal.ScrimInsetsFrameLayout) -> <init>
    78:89:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:65:void addState(int[],android.animation.ValueAnimator) -> addState
    98:102:void cancel() -> cancel
    110:114:void jumpToCurrentState() -> jumpToCurrentState
    69:90:void setState(int[]) -> setState
    93:95:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> start
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:51:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:123:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
    56:56:void <clinit>() -> <clinit>
    88:101:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    224:284:android.text.StaticLayout build() -> build
    309:350:void createConstructorWithReflection() -> createConstructorWithReflection
    114:114:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    125:126:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    218:219:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    162:163:com.google.android.material.internal.StaticLayoutBuilderCompat setEnd(int) -> setEnd
    204:205:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    139:140:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    353:354:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    190:192:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    176:177:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
    150:151:com.google.android.material.internal.StaticLayoutBuilderCompat setStart(int) -> setStart
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException -> com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException:
    360:361:void <init>(java.lang.Throwable) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    41:78:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    110:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:106:float getTextWidth(java.lang.String) -> getTextWidth
    95:95:boolean isTextWidthDirty() -> isTextWidthDirty
    82:83:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:153:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:92:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:157:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:65:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    47:55:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextScale -> com.google.android.material.internal.TextScale:
    34:34:void <init>() -> <init>
    44:45:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    39:40:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    48:52:void captureValues(androidx.transition.TransitionValues) -> captureValues
    59:87:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.TextScale$1:
    79:79:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    82:85:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
    33:33:void <init>() -> <init>
    42:42:void afterTextChanged(android.text.Editable) -> afterTextChanged
    36:36:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    39:39:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    43:46:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    213:214:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    129:149:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    217:218:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    158:191:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    242:248:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    221:221:boolean isAppCompatTheme(android.content.Context) -> isAppCompatTheme
    200:209:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    225:225:boolean isMaterialTheme(android.content.Context) -> isMaterialTheme
    229:237:boolean isTheme(android.content.Context,int[]) -> isTheme
    76:82:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    115:121:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
    41:43:void <init>() -> <init>
    114:126:androidx.appcompat.view.menu.ActionMenuItemView getActionMenuItemView(androidx.appcompat.widget.Toolbar,int) -> getActionMenuItemView
    83:89:androidx.appcompat.widget.ActionMenuView getActionMenuView(androidx.appcompat.widget.Toolbar) -> getActionMenuView
    94:107:android.widget.ImageButton getNavigationIconButton(androidx.appcompat.widget.Toolbar) -> getNavigationIconButton
    71:78:android.view.View getSecondaryActionMenuItemView(androidx.appcompat.widget.Toolbar) -> getSecondaryActionMenuItemView
    52:52:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    57:66:android.widget.TextView getTextView(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextView
    47:47:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ViewGroupOverlayApi14 -> com.google.android.material.internal.ViewGroupOverlayApi14:
    27:28:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    36:37:void add(android.view.View) -> add
    31:31:com.google.android.material.internal.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    41:42:void remove(android.view.View) -> remove
com.google.android.material.internal.ViewGroupOverlayApi18 -> com.google.android.material.internal.ViewGroupOverlayApi18:
    31:33:void <init>(android.view.ViewGroup) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    47:48:void add(android.view.View) -> add
    42:43:void remove(android.graphics.drawable.Drawable) -> remove
    52:53:void remove(android.view.View) -> remove
com.google.android.material.internal.ViewOverlayApi14 -> com.google.android.material.internal.ViewOverlayApi14:
    45:47:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    66:67:void add(android.graphics.drawable.Drawable) -> add
    50:61:com.google.android.material.internal.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    71:72:void remove(android.graphics.drawable.Drawable) -> remove
com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup -> com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup:
    99:105:void <clinit>() -> <clinit>
    115:130:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.internal.ViewOverlayApi14) -> <init>
    140:151:void add(android.graphics.drawable.Drawable) -> add
    169:195:void add(android.view.View) -> add
    203:208:void assertNotDisposed() -> assertNotDisposed
    225:238:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    135:135:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    211:215:void disposeIfEmpty() -> disposeIfEmpty
    255:261:void getOffset(int[]) -> getOffset
    283:297:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    266:277:android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect) -> invalidateChildInParentFast
    220:221:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    243:243:void onLayout(boolean,int,int,int,int) -> onLayout
    155:161:void remove(android.graphics.drawable.Drawable) -> remove
    198:200:void remove(android.view.View) -> remove
    165:165:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ViewOverlayApi18 -> com.google.android.material.internal.ViewOverlayApi18:
    30:32:void <init>(android.view.View) -> <init>
    36:37:void add(android.graphics.drawable.Drawable) -> add
    41:42:void remove(android.graphics.drawable.Drawable) -> remove
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    55:55:void <init>() -> <init>
    322:325:void addOnGlobalLayoutListener(android.view.View,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> addOnGlobalLayoutListener
    150:151:void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int) -> doOnApplyWindowInsets
    163:209:void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    218:236:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    81:82:float dpToPx(android.content.Context,int) -> dpToPx
    291:309:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    317:317:com.google.android.material.internal.ViewOverlayImpl getContentViewOverlay(android.view.View) -> getContentViewOverlay
    279:285:com.google.android.material.internal.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    264:270:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    77:77:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    58:72:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    329:332:void removeOnGlobalLayoutListener(android.view.View,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    336:341:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    240:257:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    86:97:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
    88:88:void <init>(android.view.View) -> <init>
    91:95:void run() -> run
com.google.android.material.internal.ViewUtils$2 -> com.google.android.material.internal.ViewUtils$2:
    178:178:void <init>(boolean,boolean,boolean,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> <init>
    185:205:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    228:228:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    231:231:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
    246:246:void <init>() -> <init>
    249:251:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    254:254:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    124:129:void <init>(int,int,int,int) -> <init>
    131:136:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    140:141:void applyToView(android.view.View) -> applyToView
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:61:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:54:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    24:24:void <init>() -> <init>
    28:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    82:87:float floorMod(float,int) -> floorMod
    95:100:int floorMod(int,int) -> floorMod
    49:49:boolean geq(float,float,float) -> geq
    37:37:float lerp(float,float,float) -> lerp
    74:74:float max(float,float,float,float) -> max
com.google.android.material.navigation.NavigationBarItemView -> com.google.android.material.navigation.NavigationBarItemView:
    68:68:void <clinit>() -> <clinit>
    82:137:void <init>(android.content.Context) -> <init>
    66:66:android.widget.ImageView access$000(com.google.android.material.navigation.NavigationBarItemView) -> access$000
    66:66:void access$100(com.google.android.material.navigation.NavigationBarItemView,android.view.View) -> access$100
    480:483:void calculateTextScaleFactors(float,float) -> calculateTextScaleFactors
    507:507:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    556:560:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    597:597:int getItemBackgroundResId() -> getItemBackgroundResId
    215:215:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    607:607:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    187:187:int getItemPosition() -> getItemPosition
    358:367:int getItemVisiblePosition() -> getItemVisiblePosition
    578:587:int getSuggestedIconHeight() -> getSuggestedIconHeight
    564:574:int getSuggestedIconWidth() -> getSuggestedIconWidth
    150:153:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    141:145:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    515:515:boolean hasBadge() -> hasBadge
    159:180:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    407:411:int[] onCreateDrawableState(int) -> onCreateDrawableState
    326:349:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    439:439:boolean prefersCondensedTitle() -> prefersCondensedTitle
    511:512:void removeBadge() -> removeBadge
    499:503:void setBadge(com.google.android.material.badge.BadgeDrawable) -> setBadge
    238:239:void setCheckable(boolean) -> setCheckable
    243:322:void setChecked(boolean) -> setChecked
    391:402:void setEnabled(boolean) -> setEnabled
    419:435:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    456:460:void setIconSize(int) -> setIconSize
    448:453:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    486:489:void setItemBackground(int) -> setItemBackground
    492:496:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    183:184:void setItemPosition(int) -> setItemPosition
    202:210:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    191:199:void setShifting(boolean) -> setShifting
    415:415:void setShortcut(boolean,char) -> setShortcut
    468:470:void setTextAppearanceActive(int) -> setTextAppearanceActive
    463:465:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    473:477:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    220:234:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setViewLayoutParams(android.view.View,int,int) -> setViewLayoutParams
    379:382:void setViewScaleValues(android.view.View,float,float,int) -> setViewScaleValues
    444:444:boolean showsIcon() -> showsIcon
    527:538:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    541:552:void tryRemoveBadgeFromAnchor(android.view.View) -> tryRemoveBadgeFromAnchor
    519:524:void tryUpdateBadgeBounds(android.view.View) -> tryUpdateBadgeBounds
    385:387:void updateViewPaddingBottom(android.view.View,int) -> updateViewPaddingBottom
com.google.android.material.navigation.NavigationBarItemView$1 -> com.google.android.material.navigation.NavigationBarItemView$1:
    119:119:void <init>(com.google.android.material.navigation.NavigationBarItemView) -> <init>
    131:134:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.navigation.NavigationBarMenu -> com.google.android.material.navigation.NavigationBarMenu:
    44:47:void <init>(android.content.Context,java.lang.Class,int) -> <init>
    65:82:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    57:58:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    51:51:int getMaxItemCount() -> getMaxItemCount
com.google.android.material.navigation.NavigationBarMenuView -> com.google.android.material.navigation.NavigationBarMenuView:
    63:64:void <clinit>() -> <clinit>
    68:117:void <init>(android.content.Context) -> <init>
    59:59:com.google.android.material.navigation.NavigationBarPresenter access$000(com.google.android.material.navigation.NavigationBarMenuView) -> access$000
    59:59:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.navigation.NavigationBarMenuView) -> access$100
    397:451:void buildMenuView() -> buildMenuView
    372:387:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    603:611:com.google.android.material.navigation.NavigationBarItemView findItemView(int) -> findItemView
    536:536:com.google.android.material.badge.BadgeDrawable getBadge(int) -> getBadge
    522:522:android.util.SparseArray getBadgeDrawables() -> getBadgeDrawables
    162:162:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    315:320:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    291:291:int getItemBackgroundRes() -> getItemBackgroundRes
    184:184:int getItemIconSize() -> getItemIconSize
    266:266:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    237:237:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    208:208:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    347:347:int getLabelVisibilityMode() -> getLabelVisibilityMode
    624:624:androidx.appcompat.view.menu.MenuBuilder getMenu() -> getMenu
    490:494:com.google.android.material.navigation.NavigationBarItemView getNewItem() -> getNewItem
    547:558:com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int) -> getOrCreateBadge
    498:498:int getSelectedItemId() -> getSelectedItemId
    619:619:int getSelectedItemPosition() -> getSelectedItemPosition
    126:126:int getWindowAnimations() -> getWindowAnimations
    121:122:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    503:503:boolean isShifting(int,int) -> isShifting
    628:628:boolean isValidId(int) -> isValidId
    131:139:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    562:571:void removeBadge(int) -> removeBadge
    587:599:void removeUnusedBadges() -> removeUnusedBadges
    526:532:void setBadgeDrawables(android.util.SparseArray) -> setBadgeDrawables
    574:584:void setBadgeIfNeeded(com.google.android.material.navigation.NavigationBarItemView) -> setBadgeIfNeeded
    147:153:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    300:306:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    275:281:void setItemBackgroundRes(int) -> setItemBackgroundRes
    173:179:void setItemIconSize(int) -> setItemIconSize
    356:368:void setItemOnTouchListener(int,android.view.View$OnTouchListener) -> setItemOnTouchListener
    246:257:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    217:228:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    193:199:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    338:339:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    392:393:void setPresenter(com.google.android.material.navigation.NavigationBarPresenter) -> setPresenter
    509:519:void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    454:487:void updateMenuView() -> updateMenuView
    632:635:void validateMenuItemId(int) -> validateMenuItemId
com.google.android.material.navigation.NavigationBarMenuView$1 -> com.google.android.material.navigation.NavigationBarMenuView$1:
    105:105:void <init>(com.google.android.material.navigation.NavigationBarMenuView) -> <init>
    108:113:void onClick(android.view.View) -> onClick
com.google.android.material.navigation.NavigationBarPresenter -> com.google.android.material.navigation.NavigationBarPresenter:
    44:47:void <init>() -> <init>
    101:101:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    96:96:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    91:91:boolean flagActionItems() -> flagActionItems
    110:110:int getId() -> getId
    63:63:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    56:58:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    87:87:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    125:132:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    116:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    83:83:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    79:79:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    105:106:void setId(int) -> setId
    51:52:void setMenuView(com.google.android.material.navigation.NavigationBarMenuView) -> setMenuView
    135:136:void setUpdateSuspended(boolean) -> setUpdateSuspended
    68:76:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.navigation.NavigationBarPresenter$SavedState -> com.google.android.material.navigation.NavigationBarPresenter$SavedState:
    160:160:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
    144:147:void <init>(android.os.Parcel) -> <init>
    151:151:int describeContents() -> describeContents
    156:158:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarPresenter$SavedState$1 -> com.google.android.material.navigation.NavigationBarPresenter$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationBarPresenter.java"}
    161:161:void <init>() -> <init>
    161:161:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    165:165:com.google.android.material.navigation.NavigationBarPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    161:161:java.lang.Object[] newArray(int) -> newArray
    171:171:com.google.android.material.navigation.NavigationBarPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationBarView -> com.google.android.material.navigation.NavigationBarView:
    129:249:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    82:82:com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener access$000(com.google.android.material.navigation.NavigationBarView) -> access$000
    82:82:com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener access$100(com.google.android.material.navigation.NavigationBarView) -> access$100
    252:273:void applyWindowInsets() -> applyWindowInsets
    277:284:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context) -> createMaterialShapeDrawableBackground
    656:656:com.google.android.material.badge.BadgeDrawable getBadge(int) -> getBadge
    476:476:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    451:451:int getItemBackgroundResource() -> getItemBackgroundResource
    414:414:int getItemIconSize() -> getItemIconSize
    369:369:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    502:502:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    635:635:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    616:616:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    427:427:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    597:597:int getLabelVisibilityMode() -> getLabelVisibilityMode
    333:333:android.view.Menu getMenu() -> getMenu
    721:724:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    344:344:androidx.appcompat.view.menu.MenuView getMenuView() -> getMenuView
    669:669:com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int) -> getOrCreateBadge
    729:729:com.google.android.material.navigation.NavigationBarPresenter getPresenter() -> getPresenter
    550:550:int getSelectedItemId() -> getSelectedItemId
    355:359:void inflateMenu(int) -> inflateMenu
    289:292:void onAttachedToWindow() -> onAttachedToWindow
    744:751:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    735:739:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    680:681:void removeBadge(int) -> removeBadge
    301:305:void setElevation(float) -> setElevation
    489:491:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    464:466:void setItemBackgroundResource(int) -> setItemBackgroundResource
    391:392:void setItemIconSize(int) -> setItemIconSize
    403:404:void setItemIconSizeRes(int) -> setItemIconSizeRes
    379:380:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    643:644:void setItemOnTouchListener(int,android.view.View$OnTouchListener) -> setItemOnTouchListener
    514:541:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    625:626:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    606:607:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    438:439:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    583:587:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    327:328:void setOnItemReselectedListener(com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener) -> setOnItemReselectedListener
    316:317:void setOnItemSelectedListener(com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener) -> setOnItemSelectedListener
    560:566:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.navigation.NavigationBarView$1 -> com.google.android.material.navigation.NavigationBarView$1:
    234:234:void <init>(com.google.android.material.navigation.NavigationBarView) -> <init>
    237:241:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    245:245:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.navigation.NavigationBarView$2 -> com.google.android.material.navigation.NavigationBarView$2:
    254:254:void <init>(com.google.android.material.navigation.NavigationBarView) -> <init>
    262:270:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.navigation.NavigationBarView$SavedState -> com.google.android.material.navigation.NavigationBarView$SavedState:
    778:778:void <clinit>() -> <clinit>
    757:758:void <init>(android.os.Parcelable) -> <init>
    761:766:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    775:776:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    770:772:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarView$SavedState$1 -> com.google.android.material.navigation.NavigationBarView$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationBarView.java"}
    779:779:void <init>() -> <init>
    779:779:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    779:779:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    783:783:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    789:789:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    779:779:java.lang.Object[] newArray(int) -> newArray
    795:795:com.google.android.material.navigation.NavigationBarView$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationView -> com.google.android.material.navigation.NavigationView:
    100:103:void <clinit>() -> <clinit>
    118:119:void <init>(android.content.Context) -> <init>
    122:123:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    107:247:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    98:98:int[] access$000(com.google.android.material.navigation.NavigationView) -> access$000
    98:98:com.google.android.material.internal.NavigationMenuPresenter access$100(com.google.android.material.navigation.NavigationView) -> access$100
    396:397:void addHeaderView(android.view.View) -> addHeaderView
    643:658:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    285:301:android.graphics.drawable.Drawable createDefaultItemBackground(androidx.appcompat.widget.TintTypedArray) -> createDefaultItemBackground
    594:594:android.view.MenuItem getCheckedItem() -> getCheckedItem
    414:414:int getHeaderCount() -> getHeaderCount
    425:425:android.view.View getHeaderView(int) -> getHeaderView
    478:478:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    510:510:int getItemHorizontalPadding() -> getItemHorizontalPadding
    541:541:int getItemIconPadding() -> getItemIconPadding
    436:436:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    631:631:int getItemMaxLines() -> getItemMaxLines
    457:457:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    377:377:android.view.Menu getMenu() -> getMenu
    635:638:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    258:259:boolean hasShapeAppearance(androidx.appcompat.widget.TintTypedArray) -> hasShapeAppearance
    387:387:android.view.View inflateHeaderView(int) -> inflateHeaderView
    368:372:void inflateMenu(int) -> inflateMenu
    264:267:void onAttachedToWindow() -> onAttachedToWindow
    664:670:void onDetachedFromWindow() -> onDetachedFromWindow
    357:358:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    336:351:void onMeasure(int,int) -> onMeasure
    315:322:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:310:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    405:406:void removeHeaderView(android.view.View) -> removeHeaderView
    570:574:void setCheckedItem(int) -> setCheckedItem
    582:589:void setCheckedItem(android.view.MenuItem) -> setCheckedItem
    271:275:void setElevation(float) -> setElevation
    499:500:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    489:490:void setItemBackgroundResource(int) -> setItemBackgroundResource
    520:521:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    530:531:void setItemHorizontalPaddingResource(int) -> setItemHorizontalPaddingResource
    551:552:void setItemIconPadding(int) -> setItemIconPadding
    561:562:void setItemIconPaddingResource(int) -> setItemIconPaddingResource
    613:614:void setItemIconSize(int) -> setItemIconSize
    446:447:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    622:623:void setItemMaxLines(int) -> setItemMaxLines
    603:604:void setItemTextAppearance(int) -> setItemTextAppearance
    467:468:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    331:332:void setNavigationItemSelectedListener(com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
    251:255:void setOverScrollMode(int) -> setOverScrollMode
    678:701:void setupInsetScrimsListener() -> setupInsetScrimsListener
com.google.android.material.navigation.NavigationView$1 -> com.google.android.material.navigation.NavigationView$1:
    214:214:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    217:217:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    221:221:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.navigation.NavigationView$2 -> com.google.android.material.navigation.NavigationView$2:
    678:678:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    681:695:void onGlobalLayout() -> onGlobalLayout
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
    736:736:void <clinit>() -> <clinit>
    722:724:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    727:728:void <init>(android.os.Parcelable) -> <init>
    732:734:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$1:
# {"id":"sourceFile","fileName":"NavigationView.java"}
    737:737:void <init>() -> <init>
    737:737:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    737:737:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    741:741:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    747:747:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    737:737:java.lang.Object[] newArray(int) -> newArray
    753:753:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.navigationrail.NavigationRailItemView -> com.google.android.material.navigationrail.NavigationRailItemView:
    36:37:void <init>(android.content.Context) -> <init>
    64:64:int getItemDefaultMarginResId() -> getItemDefaultMarginResId
    58:58:int getItemLayoutResId() -> getItemLayoutResId
    41:53:void onMeasure(int,int) -> onMeasure
com.google.android.material.navigationrail.NavigationRailMenuView -> com.google.android.material.navigationrail.NavigationRailMenuView:
    39:47:void <init>(android.content.Context) -> <init>
    86:86:com.google.android.material.navigation.NavigationBarItemView createNavigationBarItemView(android.content.Context) -> createNavigationBarItemView
    152:152:int getMenuGravity() -> getMenuGravity
    156:156:boolean isTopGravity() -> isTopGravity
    90:92:int makeSharedHeightSpec(int,int,int) -> makeSharedHeightSpec
    136:141:int measureChildHeight(android.view.View,int,int) -> measureChildHeight
    112:132:int measureSharedChildHeights(int,int,int,android.view.View) -> measureSharedChildHeights
    96:107:int measureShiftingChildHeights(int,int,int) -> measureShiftingChildHeights
    70:81:void onLayout(boolean,int,int,int,int) -> onLayout
    51:66:void onMeasure(int,int) -> onMeasure
    145:149:void setMenuGravity(int) -> setMenuGravity
com.google.android.material.navigationrail.NavigationRailView -> com.google.android.material.navigationrail.NavigationRailView:
    102:103:void <init>(android.content.Context) -> <init>
    106:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:112:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    116:137:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    187:188:void addHeaderView(int) -> addHeaderView
    200:207:void addHeaderView(android.view.View) -> addHeaderView
    92:92:com.google.android.material.navigation.NavigationBarMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    260:260:com.google.android.material.navigationrail.NavigationRailMenuView createNavigationBarMenuView(android.content.Context) -> createNavigationBarMenuView
    219:219:android.view.View getHeaderView() -> getHeaderView
    248:248:int getMaxItemCount() -> getMaxItemCount
    243:243:int getMenuGravity() -> getMenuGravity
    252:252:com.google.android.material.navigationrail.NavigationRailMenuView getNavigationRailMenuView() -> getNavigationRailMenuView
    276:276:boolean isHeaderViewVisible() -> isHeaderViewVisible
    264:272:int makeMinWidthSpec(int) -> makeMinWidthSpec
    153:174:void onLayout(boolean,int,int,int,int) -> onLayout
    141:149:void onMeasure(int,int) -> onMeasure
    230:234:void removeHeaderView() -> removeHeaderView
    238:239:void setMenuGravity(int) -> setMenuGravity
com.google.android.material.progressindicator.AnimatorDurationScaleProvider -> com.google.android.material.progressindicator.AnimatorDurationScaleProvider:
    38:38:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    42:48:float getSystemAnimatorDurationScale(android.content.ContentResolver) -> getSystemAnimatorDurationScale
    60:61:void setDefaultSystemAnimatorDurationScale(float) -> setDefaultSystemAnimatorDurationScale
com.google.android.material.progressindicator.BaseProgressIndicator -> com.google.android.material.progressindicator.BaseProgressIndicator:
    80:80:void <clinit>() -> <clinit>
    120:825:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    70:70:void access$000(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$000
    70:70:void access$100(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$100
    70:70:long access$202(com.google.android.material.progressindicator.BaseProgressIndicator,long) -> access$202
    70:70:int access$300(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$300
    70:70:boolean access$400(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$400
    70:70:boolean access$500(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$500
    70:70:int access$600(com.google.android.material.progressindicator.BaseProgressIndicator) -> access$600
    276:282:void applyNewVisibility(boolean) -> applyNewVisibility
    356:356:android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    362:367:com.google.android.material.progressindicator.DrawingDelegate getCurrentDrawingDelegate() -> getCurrentDrawingDelegate
    672:672:int getHideAnimationBehavior() -> getHideAnimationBehavior
    70:70:android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    426:426:com.google.android.material.progressindicator.IndeterminateDrawable getIndeterminateDrawable() -> getIndeterminateDrawable
    562:562:int[] getIndicatorColor() -> getIndicatorColor
    70:70:android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    420:420:com.google.android.material.progressindicator.DeterminateDrawable getProgressDrawable() -> getProgressDrawable
    647:647:int getShowAnimationBehavior() -> getShowAnimationBehavior
    594:594:int getTrackColor() -> getTrackColor
    621:621:int getTrackCornerRadius() -> getTrackCornerRadius
    535:535:int getTrackThickness() -> getTrackThickness
    225:239:void hide() -> hide
    249:255:void internalHide() -> internalHide
    213:218:void internalShow() -> internalShow
    344:348:void invalidate() -> invalidate
    463:476:boolean isEffectivelyVisible() -> isEffectivelyVisible
    484:485:boolean isNoLongerNeedToBeVisible() -> isNoLongerNeedToBeVisible
    286:292:void onAttachedToWindow() -> onAttachedToWindow
    297:302:void onDetachedFromWindow() -> onDetachedFromWindow
    307:322:void onDraw(android.graphics.Canvas) -> onDraw
    325:340:void onMeasure(int,int) -> onMeasure
    259:261:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    265:267:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    163:179:void registerAnimationCallbacks() -> registerAnimationCallbacks
    763:770:void setAnimatorDurationScaleProvider(com.google.android.material.progressindicator.AnimatorDurationScaleProvider) -> setAnimatorDurationScaleProvider
    684:686:void setHideAnimationBehavior(int) -> setHideAnimationBehavior
    497:524:void setIndeterminate(boolean) -> setIndeterminate
    404:415:void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    574:583:void setIndicatorColor(int[]) -> setIndicatorColor
    698:703:void setProgress(int) -> setProgress
    716:742:void setProgressCompat(int,boolean) -> setProgressCompat
    379:394:void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    659:661:void setShowAnimationBehavior(int) -> setShowAnimationBehavior
    606:610:void setTrackColor(int) -> setTrackColor
    633:636:void setTrackCornerRadius(int) -> setTrackCornerRadius
    547:551:void setTrackThickness(int) -> setTrackThickness
    750:756:void setVisibilityAfterHide(int) -> setVisibilityAfterHide
    198:204:void show() -> show
    182:189:void unregisterAnimationCallbacks() -> unregisterAnimationCallbacks
    434:436:boolean visibleToUser() -> visibleToUser
com.google.android.material.progressindicator.BaseProgressIndicator$1 -> com.google.android.material.progressindicator.BaseProgressIndicator$1:
    780:780:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    783:784:void run() -> run
com.google.android.material.progressindicator.BaseProgressIndicator$2 -> com.google.android.material.progressindicator.BaseProgressIndicator$2:
    793:793:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    796:798:void run() -> run
com.google.android.material.progressindicator.BaseProgressIndicator$3 -> com.google.android.material.progressindicator.BaseProgressIndicator$3:
    808:808:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    812:817:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
com.google.android.material.progressindicator.BaseProgressIndicator$4 -> com.google.android.material.progressindicator.BaseProgressIndicator$4:
    826:826:void <init>(com.google.android.material.progressindicator.BaseProgressIndicator) -> <init>
    829:835:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
com.google.android.material.progressindicator.BaseProgressIndicatorSpec -> com.google.android.material.progressindicator.BaseProgressIndicatorSpec:
    57:111:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    178:178:boolean isHideAnimationEnabled() -> isHideAnimationEnabled
    174:174:boolean isShowAnimationEnabled() -> isShowAnimationEnabled
    122:146:void loadIndicatorColors(android.content.Context,android.content.res.TypedArray) -> loadIndicatorColors
    157:171:void loadTrackColor(android.content.Context,android.content.res.TypedArray) -> loadTrackColor
com.google.android.material.progressindicator.CircularDrawingDelegate -> com.google.android.material.progressindicator.CircularDrawingDelegate:
    33:41:void <init>(com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> <init>
    66:99:void adjustCanvas(android.graphics.Canvas,float) -> adjustCanvas
    203:219:void drawRoundedEnd(android.graphics.Canvas,android.graphics.Paint,float,float,float,boolean,android.graphics.RectF) -> drawRoundedEnd
    120:168:void fillIndicator(android.graphics.Canvas,android.graphics.Paint,float,float,int) -> fillIndicator
    178:189:void fillTrack(android.graphics.Canvas,android.graphics.Paint) -> fillTrack
    50:50:int getPreferredHeight() -> getPreferredHeight
    45:45:int getPreferredWidth() -> getPreferredWidth
    192:192:int getSize() -> getSize
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate:
    44:250:void <clinit>() -> <clinit>
    61:72:void <init>(com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> <init>
    34:34:int access$000(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$000
    34:34:int access$002(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,int) -> access$002
    34:34:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$100
    34:34:float access$200(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$200
    34:34:float access$300(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> access$300
    34:34:void access$400(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,float) -> access$400
    120:123:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    214:214:float getAnimationFraction() -> getAnimationFraction
    227:227:float getCompleteEndFraction() -> getCompleteEndFraction
    141:142:void invalidateSpecValues() -> invalidateSpecValues
    85:116:void maybeInitializeAnimators() -> maybeInitializeAnimators
    182:201:void maybeUpdateSegmentColors(int) -> maybeUpdateSegmentColors
    146:147:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    128:137:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    205:209:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    219:224:void setAnimationFraction(float) -> setAnimationFraction
    231:232:void setCompleteEndFraction(float) -> setCompleteEndFraction
    78:82:void startAnimator() -> startAnimator
    151:152:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    159:178:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$1 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$1:
    92:92:void <init>(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> <init>
    95:98:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$2 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$2:
    107:107:void <init>(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> <init>
    110:113:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$3 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$3:
    237:237:void <init>(java.lang.Class,java.lang.String) -> <init>
    237:237:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Float get(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> get
    237:237:void set(java.lang.Object,java.lang.Object) -> set
    245:246:void set(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$4 -> com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate$4:
    252:252:void <init>(java.lang.Class,java.lang.String) -> <init>
    252:252:java.lang.Object get(java.lang.Object) -> get
    255:255:java.lang.Float get(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate) -> get
    252:252:void set(java.lang.Object,java.lang.Object) -> set
    260:261:void set(com.google.android.material.progressindicator.CircularIndeterminateAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.CircularProgressIndicator -> com.google.android.material.progressindicator.CircularProgressIndicator:
    55:55:void <clinit>() -> <clinit>
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:com.google.android.material.progressindicator.BaseProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    82:82:com.google.android.material.progressindicator.CircularProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    174:174:int getIndicatorDirection() -> getIndicatorDirection
    118:118:int getIndicatorInset() -> getIndicatorInset
    145:145:int getIndicatorSize() -> getIndicatorSize
    88:90:void initializeDrawables() -> initializeDrawables
    186:188:void setIndicatorDirection(int) -> setIndicatorDirection
    130:134:void setIndicatorInset(int) -> setIndicatorInset
    157:163:void setIndicatorSize(int) -> setIndicatorSize
    105:107:void setTrackThickness(int) -> setTrackThickness
com.google.android.material.progressindicator.CircularProgressIndicatorSpec -> com.google.android.material.progressindicator.CircularProgressIndicatorSpec:
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:106:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    109:109:void validateSpec() -> validateSpec
com.google.android.material.progressindicator.DeterminateDrawable -> com.google.android.material.progressindicator.DeterminateDrawable:
    221:221:void <clinit>() -> <clinit>
    45:64:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec,com.google.android.material.progressindicator.DrawingDelegate) -> <init>
    29:29:float access$000(com.google.android.material.progressindicator.DeterminateDrawable) -> access$000
    29:29:void access$100(com.google.android.material.progressindicator.DeterminateDrawable,float) -> access$100
    29:29:void clearAnimationCallbacks() -> clearAnimationCallbacks
    89:89:com.google.android.material.progressindicator.DeterminateDrawable createCircularDrawable(android.content.Context,com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> createCircularDrawable
    76:76:com.google.android.material.progressindicator.DeterminateDrawable createLinearDrawable(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> createLinearDrawable
    179:196:void draw(android.graphics.Canvas) -> draw
    29:29:int getAlpha() -> getAlpha
    211:211:com.google.android.material.progressindicator.DrawingDelegate getDrawingDelegate() -> getDrawingDelegate
    201:201:float getIndicatorFraction() -> getIndicatorFraction
    161:161:int getIntrinsicHeight() -> getIntrinsicHeight
    156:156:int getIntrinsicWidth() -> getIntrinsicWidth
    29:29:int getOpacity() -> getOpacity
    29:29:boolean hideNow() -> hideNow
    29:29:boolean isHiding() -> isHiding
    29:29:boolean isRunning() -> isRunning
    29:29:boolean isShowing() -> isShowing
    132:134:void jumpToCurrentState() -> jumpToCurrentState
    144:151:boolean onLevelChange(int) -> onLevelChange
    29:29:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    29:29:void setAlpha(int) -> setAlpha
    29:29:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    215:217:void setDrawingDelegate(com.google.android.material.progressindicator.DrawingDelegate) -> setDrawingDelegate
    205:207:void setIndicatorFraction(float) -> setIndicatorFraction
    172:173:void setLevelByFraction(float) -> setLevelByFraction
    29:29:boolean setVisible(boolean,boolean) -> setVisible
    29:29:boolean setVisible(boolean,boolean,boolean) -> setVisible
    113:124:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    29:29:void start() -> start
    29:29:void stop() -> stop
    29:29:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.DeterminateDrawable$1 -> com.google.android.material.progressindicator.DeterminateDrawable$1:
    222:222:void <init>(java.lang.String) -> <init>
    222:222:float getValue(java.lang.Object) -> getValue
    225:225:float getValue(com.google.android.material.progressindicator.DeterminateDrawable) -> getValue
    222:222:void setValue(java.lang.Object,float) -> setValue
    230:231:void setValue(com.google.android.material.progressindicator.DeterminateDrawable,float) -> setValue
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange:
    423:423:void <clinit>() -> <clinit>
    77:89:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec) -> <init>
    42:42:void access$000(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> access$000
    42:42:boolean access$101(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange,boolean,boolean) -> access$101
    42:42:void access$200(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> access$200
    151:153:void clearAnimationCallbacks() -> clearAnimationCallbacks
    178:186:void dispatchAnimationEnd() -> dispatchAnimationEnd
    166:174:void dispatchAnimationStart() -> dispatchAnimationStart
    298:304:void endAnimatorWithoutCallbacks(android.animation.ValueAnimator[]) -> endAnimatorWithoutCallbacks
    316:316:int getAlpha() -> getAlpha
    390:397:float getGrowFraction() -> getGrowFraction
    357:357:android.animation.ValueAnimator getHideAnimator() -> getHideAnimator
    327:327:int getOpacity() -> getOpacity
    217:217:boolean hideNow() -> hideNow
    212:212:boolean isHiding() -> isHiding
    204:204:boolean isRunning() -> isRunning
    208:208:boolean isShowing() -> isShowing
    94:106:void maybeInitializeAnimators() -> maybeInitializeAnimators
    122:128:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    310:312:void setAlpha(int) -> setAlpha
    321:323:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    401:405:void setGrowFraction(float) -> setGrowFraction
    367:386:void setHideAnimator(android.animation.ValueAnimator) -> setHideAnimator
    161:162:void setInternalAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> setInternalAnimationCallback
    417:419:void setMockHideAnimationRunning(boolean,float) -> setMockHideAnimationRunning
    410:412:void setMockShowAnimationRunning(boolean,float) -> setMockShowAnimationRunning
    337:353:void setShowAnimator(android.animation.ValueAnimator) -> setShowAnimator
    222:222:boolean setVisible(boolean,boolean) -> setVisible
    236:240:boolean setVisible(boolean,boolean,boolean) -> setVisible
    253:294:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    193:194:void start() -> start
    199:200:void stop() -> stop
    138:145:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$1 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$1:
    345:345:void <init>(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> <init>
    348:351:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$2 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$2:
    376:376:void <init>(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> <init>
    379:384:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$3 -> com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange$3:
    424:424:void <init>(java.lang.Class,java.lang.String) -> <init>
    424:424:java.lang.Object get(java.lang.Object) -> get
    427:427:java.lang.Float get(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> get
    424:424:void set(java.lang.Object,java.lang.Object) -> set
    432:433:void set(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange,java.lang.Float) -> set
com.google.android.material.progressindicator.DrawingDelegate -> com.google.android.material.progressindicator.DrawingDelegate:
    30:32:void <init>(com.google.android.material.progressindicator.BaseProgressIndicatorSpec) -> <init>
    85:86:void registerDrawable(com.google.android.material.progressindicator.DrawableWithAnimatedVisibilityChange) -> registerDrawable
    90:92:void validateSpecAndAdjustCanvas(android.graphics.Canvas,float) -> validateSpecAndAdjustCanvas
com.google.android.material.progressindicator.IndeterminateAnimatorDelegate -> com.google.android.material.progressindicator.IndeterminateAnimatorDelegate:
    40:43:void <init>(int) -> <init>
    51:51:float getFractionInRange(int,int,int) -> getFractionInRange
    47:48:void registerDrawable(com.google.android.material.progressindicator.IndeterminateDrawable) -> registerDrawable
com.google.android.material.progressindicator.IndeterminateDrawable -> com.google.android.material.progressindicator.IndeterminateDrawable:
    40:44:void <init>(android.content.Context,com.google.android.material.progressindicator.BaseProgressIndicatorSpec,com.google.android.material.progressindicator.DrawingDelegate,com.google.android.material.progressindicator.IndeterminateAnimatorDelegate) -> <init>
    27:27:void clearAnimationCallbacks() -> clearAnimationCallbacks
    76:76:com.google.android.material.progressindicator.IndeterminateDrawable createCircularDrawable(android.content.Context,com.google.android.material.progressindicator.CircularProgressIndicatorSpec) -> createCircularDrawable
    56:56:com.google.android.material.progressindicator.IndeterminateDrawable createLinearDrawable(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> createLinearDrawable
    132:156:void draw(android.graphics.Canvas) -> draw
    27:27:int getAlpha() -> getAlpha
    162:162:com.google.android.material.progressindicator.IndeterminateAnimatorDelegate getAnimatorDelegate() -> getAnimatorDelegate
    173:173:com.google.android.material.progressindicator.DrawingDelegate getDrawingDelegate() -> getDrawingDelegate
    124:124:int getIntrinsicHeight() -> getIntrinsicHeight
    119:119:int getIntrinsicWidth() -> getIntrinsicWidth
    27:27:int getOpacity() -> getOpacity
    27:27:boolean hideNow() -> hideNow
    27:27:boolean isHiding() -> isHiding
    27:27:boolean isRunning() -> isRunning
    27:27:boolean isShowing() -> isShowing
    27:27:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    27:27:void setAlpha(int) -> setAlpha
    167:169:void setAnimatorDelegate(com.google.android.material.progressindicator.IndeterminateAnimatorDelegate) -> setAnimatorDelegate
    27:27:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    177:179:void setDrawingDelegate(com.google.android.material.progressindicator.DrawingDelegate) -> setDrawingDelegate
    27:27:boolean setVisible(boolean,boolean) -> setVisible
    27:27:boolean setVisible(boolean,boolean,boolean) -> setVisible
    99:114:boolean setVisibleInternal(boolean,boolean,boolean) -> setVisibleInternal
    27:27:void start() -> start
    27:27:void stop() -> stop
    27:27:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.google.android.material.progressindicator.LinearDrawingDelegate -> com.google.android.material.progressindicator.LinearDrawingDelegate:
    34:41:void <init>(com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    65:98:void adjustCanvas(android.graphics.Canvas,float) -> adjustCanvas
    226:243:void drawRoundedEnd(android.graphics.Canvas,android.graphics.Paint,float,float,float,boolean,android.graphics.RectF) -> drawRoundedEnd
    119:168:void fillIndicator(android.graphics.Canvas,android.graphics.Paint,float,float,int) -> fillIndicator
    178:215:void fillTrack(android.graphics.Canvas,android.graphics.Paint) -> fillTrack
    50:50:int getPreferredHeight() -> getPreferredHeight
    45:45:int getPreferredWidth() -> getPreferredWidth
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate:
    171:171:void <clinit>() -> <clinit>
    50:60:void <init>(com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    36:36:int access$000(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$000
    36:36:int access$002(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,int) -> access$002
    36:36:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$100
    36:36:boolean access$202(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,boolean) -> access$202
    36:36:float access$300(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> access$300
    94:97:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    156:156:float getAnimationFraction() -> getAnimationFraction
    107:108:void invalidateSpecValues() -> invalidateSpecValues
    73:90:void maybeInitializeAnimators() -> maybeInitializeAnimators
    134:142:void maybeUpdateSegmentColors() -> maybeUpdateSegmentColors
    113:113:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    103:103:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    146:151:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    161:166:void setAnimationFraction(float) -> setAnimationFraction
    66:70:void startAnimator() -> startAnimator
    118:118:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    124:130:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$1 -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$1:
    80:80:void <init>(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> <init>
    83:87:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$2 -> com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate$2:
    173:173:void <init>(java.lang.Class,java.lang.String) -> <init>
    173:173:java.lang.Object get(java.lang.Object) -> get
    176:176:java.lang.Float get(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate) -> get
    173:173:void set(java.lang.Object,java.lang.Object) -> set
    181:182:void set(com.google.android.material.progressindicator.LinearIndeterminateContiguousAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate:
    47:205:void <clinit>() -> <clinit>
    58:81:void <init>(android.content.Context,com.google.android.material.progressindicator.LinearProgressIndicatorSpec) -> <init>
    42:42:int access$000(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$000
    42:42:int access$002(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,int) -> access$002
    42:42:com.google.android.material.progressindicator.BaseProgressIndicatorSpec access$100(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$100
    42:42:boolean access$202(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,boolean) -> access$202
    42:42:boolean access$300(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$300
    42:42:boolean access$302(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,boolean) -> access$302
    42:42:android.animation.ObjectAnimator access$400(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$400
    42:42:float access$500(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> access$500
    124:127:void cancelAnimatorImmediately() -> cancelAnimatorImmediately
    190:190:float getAnimationFraction() -> getAnimationFraction
    141:142:void invalidateSpecValues() -> invalidateSpecValues
    94:120:void maybeInitializeAnimators() -> maybeInitializeAnimators
    169:176:void maybeUpdateSegmentColors() -> maybeUpdateSegmentColors
    146:147:void registerAnimatorsCompleteCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimatorsCompleteCallback
    131:137:void requestCancelAnimatorAfterCurrentCycle() -> requestCancelAnimatorAfterCurrentCycle
    180:185:void resetPropertiesForNewStart() -> resetPropertiesForNewStart
    195:200:void setAnimationFraction(float) -> setAnimationFraction
    87:91:void startAnimator() -> startAnimator
    151:152:void unregisterAnimatorsCompleteCallback() -> unregisterAnimatorsCompleteCallback
    158:165:void updateSegmentPositions(int) -> updateSegmentPositions
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$1 -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$1:
    101:101:void <init>(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> <init>
    111:117:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    104:107:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$2 -> com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate$2:
    207:207:void <init>(java.lang.Class,java.lang.String) -> <init>
    207:207:java.lang.Object get(java.lang.Object) -> get
    210:210:java.lang.Float get(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate) -> get
    207:207:void set(java.lang.Object,java.lang.Object) -> set
    215:216:void set(com.google.android.material.progressindicator.LinearIndeterminateDisjointAnimatorDelegate,java.lang.Float) -> set
com.google.android.material.progressindicator.LinearProgressIndicator -> com.google.android.material.progressindicator.LinearProgressIndicator:
    54:54:void <clinit>() -> <clinit>
    67:68:void <init>(android.content.Context) -> <init>
    71:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    52:52:com.google.android.material.progressindicator.BaseProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    85:85:com.google.android.material.progressindicator.LinearProgressIndicatorSpec createSpec(android.content.Context,android.util.AttributeSet) -> createSpec
    159:159:int getIndeterminateAnimationType() -> getIndeterminateAnimationType
    201:201:int getIndicatorDirection() -> getIndicatorDirection
    118:120:void initializeDrawables() -> initializeDrawables
    90:99:void onLayout(boolean,int,int,int,int) -> onLayout
    103:113:void onSizeChanged(int,int,int,int) -> onSizeChanged
    172:190:void setIndeterminateAnimationType(int) -> setIndeterminateAnimationType
    133:135:void setIndicatorColor(int[]) -> setIndicatorColor
    213:221:void setIndicatorDirection(int) -> setIndicatorDirection
    236:242:void setProgressCompat(int,boolean) -> setProgressCompat
    146:149:void setTrackCornerRadius(int) -> setTrackCornerRadius
com.google.android.material.progressindicator.LinearProgressIndicatorSpec -> com.google.android.material.progressindicator.LinearProgressIndicatorSpec:
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:95:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    99:114:void validateSpec() -> validateSpec
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    45:47:void <clinit>() -> <clinit>
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    115:115:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    92:97:void onAttachedToWindow() -> onAttachedToWindow
    105:111:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:45:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:65:void cancel() -> cancel
    54:55:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:50:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:71:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    38:38:void <init>() -> <init>
    46:50:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    106:107:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    97:97:boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String) -> resolveBooleanOrThrow
    138:142:int resolveDimension(android.content.Context,int,int) -> resolveDimension
    118:119:int resolveInteger(android.content.Context,int,int) -> resolveInteger
    127:127:int resolveMinimumAccessibleTouchTarget(android.content.Context) -> resolveMinimumAccessibleTouchTarget
    62:74:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    84:85:int resolveOrThrow(android.view.View,int) -> resolveOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    48:48:void <init>() -> <init>
    57:76:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    86:105:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    168:176:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    117:126:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    200:203:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    137:143:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    183:183:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    190:190:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    76:121:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    268:290:void createFallbackFont() -> createFallbackFont
    262:263:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    131:153:android.graphics.Typeface getFont(android.content.Context) -> getFont
    171:217:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    234:251:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    357:364:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    302:315:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    327:332:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    341:354:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    193:193:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    203:205:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    196:199:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    238:238:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    248:249:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    242:244:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    28:28:void <init>() -> <init>
    38:39:void setShouldLoadFontSynchronously(boolean) -> setShouldLoadFontSynchronously
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:59:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:64:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:129:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    95:95:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    104:104:boolean isStateful() -> isStateful
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:148:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:135:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:120:boolean onStateChange(int[]) -> onStateChange
    153:154:void setAlpha(int) -> setAlpha
    158:159:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:84:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:69:void setTint(int) -> setTint
    78:79:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:74:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:178:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:183:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    193:193:int getChangingConfigurations() -> getChangingConfigurations
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    42:77:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    112:184:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    256:257:int doubleAlpha(int) -> doubleAlpha
    241:246:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
    203:213:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    221:235:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.shadow.ShadowDrawableWrapper -> com.google.android.material.shadow.ShadowDrawableWrapper:
    45:45:void <clinit>() -> <clinit>
    72:100:void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float) -> <init>
    361:376:void buildComponents(android.graphics.Rect) -> buildComponents
    310:355:void buildShadowCorners() -> buildShadowCorners
    181:184:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    172:175:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    205:212:void draw(android.graphics.Canvas) -> draw
    222:307:void drawShadow(android.graphics.Canvas) -> drawShadow
    379:379:float getCornerRadius() -> getCornerRadius
    387:387:float getMaxShadowSize() -> getMaxShadowSize
    396:398:float getMinHeight() -> getMinHeight
    391:392:float getMinWidth() -> getMinWidth
    190:190:int getOpacity() -> getOpacity
    158:167:boolean getPadding(android.graphics.Rect) -> getPadding
    153:153:float getShadowSize() -> getShadowSize
    122:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:111:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    115:118:void setAlpha(int) -> setAlpha
    194:201:void setCornerRadius(float) -> setCornerRadius
    383:384:void setMaxShadowSize(float) -> setMaxShadowSize
    215:219:void setRotation(float) -> setRotation
    126:146:void setShadowSize(float,float) -> setShadowSize
    149:150:void setShadowSize(float) -> setShadowSize
    104:105:int toEven(float) -> toEven
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    60:66:void <clinit>() -> <clinit>
    72:73:void <init>() -> <init>
    68:84:void <init>(int) -> <init>
    130:183:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:117:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    187:187:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:91:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:30:void <init>(float) -> <init>
    46:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    41:41:float getCornerSize() -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:46:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    55:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    50:50:void getCornerPath(float,float,com.google.android.material.shape.ShapePath) -> getCornerPath
    70:71:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
    98:99:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    24:26:void <init>() -> <init>
    24:42:void <init>(float) -> <init>
    47:53:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    73:73:boolean forceIntersection() -> forceIntersection
    38:40:void getEdgePath(float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    64:65:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper -> com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper:
    31:56:void <init>(android.view.View,com.google.android.material.shape.MaterialShapeDrawable,android.widget.ScrollView) -> <init>
    73:74:void setContainingScrollView(android.widget.ScrollView) -> setContainingScrollView
    64:65:void setMaterialShapeDrawable(com.google.android.material.shape.MaterialShapeDrawable) -> setMaterialShapeDrawable
    83:84:void startListeningForScrollChanges(android.view.ViewTreeObserver) -> startListeningForScrollChanges
    93:94:void stopListeningForScrollChanges(android.view.ViewTreeObserver) -> stopListeningForScrollChanges
    101:131:void updateInterpolationForScreenPosition() -> updateInterpolationForScreenPosition
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1 -> com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1:
    34:34:void <init>(com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper) -> <init>
    37:38:void onScrollChanged() -> onScrollChanged
com.google.android.material.shape.MarkerEdgeTreatment -> com.google.android.material.shape.MarkerEdgeTreatment:
    32:34:void <init>(float) -> <init>
    48:48:boolean forceIntersection() -> forceIntersection
    39:44:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    77:109:void <clinit>() -> <clinit>
    75:75:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    181:182:void <init>() -> <init>
    189:190:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    194:195:void <init>(com.google.android.material.shape.ShapePathModel) -> <init>
    202:203:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    114:229:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    75:75:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    75:75:boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$402
    1251:1258:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1201:1212:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1140:1146:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1152:1173:void calculateStrokePath() -> calculateStrokePath
    1266:1270:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1243:1245:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    606:608:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    158:158:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context) -> createWithElevationOverlay
    170:177:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    942:968:void draw(android.graphics.Canvas) -> draw
    1087:1111:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1049:1050:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1028:1029:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1038:1046:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1053:1055:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    1351:1354:float getBottomLeftCornerResolvedSize() -> getBottomLeftCornerResolvedSize
    1359:1362:float getBottomRightCornerResolvedSize() -> getBottomRightCornerResolvedSize
    473:474:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1327:1330:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    234:234:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    657:657:float getElevation() -> getElevation
    317:317:android.content.res.ColorStateList getFillColor() -> getFillColor
    620:620:float getInterpolation() -> getInterpolation
    444:444:int getOpacity() -> getOpacity
    1178:1198:void getOutline(android.graphics.Outline) -> getOutline
    507:511:boolean getPadding(android.graphics.Rect) -> getPadding
    901:901:android.graphics.Paint$Style getPaintStyle() -> getPaintStyle
    640:640:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    1130:1131:void getPathForSize(int,int,android.graphics.Path) -> getPathForSize
    837:837:float getScale() -> getScale
    784:784:int getShadowCompatRotation() -> getShadowCompatRotation
    502:502:int getShadowCompatibilityMode() -> getShadowCompatibilityMode
    727:727:int getShadowElevation() -> getShadowElevation
    1115:1117:int getShadowOffsetX() -> getShadowOffsetX
    1122:1124:int getShadowOffsetY() -> getShadowOffsetY
    808:808:int getShadowRadius() -> getShadowRadius
    749:749:int getShadowVerticalOffset() -> getShadowVerticalOffset
    271:271:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    294:295:com.google.android.material.shape.ShapePathModel getShapedViewModel() -> getShapedViewModel
    339:339:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1319:1322:float getStrokeInsetLength() -> getStrokeInsetLength
    371:371:android.content.res.ColorStateList getStrokeTintList() -> getStrokeTintList
    427:427:float getStrokeWidth() -> getStrokeWidth
    361:361:android.content.res.ColorStateList getTintList() -> getTintList
    1335:1338:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    1343:1346:float getTopRightCornerResolvedSize() -> getTopRightCornerResolvedSize
    678:678:float getTranslationZ() -> getTranslationZ
    463:468:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    699:699:float getZ() -> getZ
    916:918:boolean hasCompatShadow() -> hasCompatShadow
    923:923:boolean hasFill() -> hasFill
    929:931:boolean hasStroke() -> hasStroke
    599:601:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    854:856:void invalidateSelf() -> invalidateSelf
    863:864:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    583:584:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    589:589:boolean isElevationOverlayInitialized() -> isElevationOverlayInitialized
    497:497:boolean isPointInTransparentRegion(int,int) -> isPointInTransparentRegion
    1373:1373:boolean isRoundRect() -> isRoundRect
    557:557:boolean isShadowEnabled() -> isShadowEnabled
    1275:1279:boolean isStateful() -> isStateful
    971:1015:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    246:247:int modulateAlpha(int,int) -> modulateAlpha
    240:242:android.graphics.drawable.Drawable mutate() -> mutate
    936:938:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1284:1290:boolean onStateChange(int[]) -> onStateChange
    1059:1077:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    827:828:boolean requiresCompatShadow() -> requiresCompatShadow
    449:453:void setAlpha(int) -> setAlpha
    457:459:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    479:480:void setCornerSize(float) -> setCornerSize
    484:485:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    759:760:void setEdgeIntersectionCheckEnable(boolean) -> setEdgeIntersectionCheckEnable
    666:670:void setElevation(float) -> setElevation
    304:308:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    631:636:void setInterpolation(float) -> setInterpolation
    524:530:void setPadding(int,int,int,int) -> setPadding
    910:912:void setPaintStyle(android.graphics.Paint$Style) -> setPaintStyle
    645:649:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    846:850:void setScale(float) -> setScale
    754:755:void setShadowBitmapDrawingEnable(boolean) -> setShadowBitmapDrawingEnable
    890:893:void setShadowColor(int) -> setShadowColor
    796:800:void setShadowCompatRotation(int) -> setShadowCompatRotation
    543:547:void setShadowCompatibilityMode(int) -> setShadowCompatibilityMode
    738:739:void setShadowElevation(int) -> setShadowElevation
    574:576:void setShadowEnabled(boolean) -> setShadowEnabled
    819:820:void setShadowRadius(int) -> setShadowRadius
    773:777:void setShadowVerticalOffset(int) -> setShadowVerticalOffset
    258:260:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    282:283:void setShapedViewModel(com.google.android.material.shape.ShapePathModel) -> setShapedViewModel
    406:408:void setStroke(float,int) -> setStroke
    417:419:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    326:330:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    385:388:void setStrokeTint(android.content.res.ColorStateList) -> setStrokeTint
    396:397:void setStrokeTint(int) -> setStrokeTint
    436:438:void setStrokeWidth(float) -> setStrokeWidth
    376:377:void setTint(int) -> setTint
    353:356:void setTintList(android.content.res.ColorStateList) -> setTintList
    344:349:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    687:691:void setTranslationZ(float) -> setTranslationZ
    874:878:void setUseTintColorForShadow(boolean) -> setUseTintColorForShadow
    708:709:void setZ(float) -> setZ
    1294:1315:boolean updateColorsForState(int[]) -> updateColorsForState
    1215:1234:boolean updateTintFilter() -> updateTintFilter
    712:718:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    215:215:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    219:221:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    225:227:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1156:1156:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1162:1162:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1382:1411:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1382:1438:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1451:1451:int getChangingConfigurations() -> getChangingConfigurations
    1443:1446:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    27:27:void <init>() -> <init>
    31:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:61:void setElevation(android.view.View,float) -> setElevation
    70:74:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:86:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.OffsetEdgeTreatment -> com.google.android.material.shape.OffsetEdgeTreatment:
    27:30:void <init>(com.google.android.material.shape.EdgeTreatment,float) -> <init>
    40:40:boolean forceIntersection() -> forceIntersection
    35:36:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    36:38:void <init>(float) -> <init>
    53:60:boolean equals(java.lang.Object) -> equals
    48:48:float getCornerSize(android.graphics.RectF) -> getCornerSize
    43:43:float getRelativePercent() -> getRelativePercent
    65:66:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    24:26:void <init>() -> <init>
    24:38:void <init>(float) -> <init>
    43:45:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    565:565:void <clinit>() -> <clinit>
    41:41:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    580:595:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    598:613:void <init>() -> <init>
    435:435:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    444:444:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    454:454:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    465:472:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    480:480:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    489:489:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    503:541:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    732:732:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    652:652:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    692:692:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    642:642:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    682:682:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    547:560:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    702:702:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    722:722:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    712:712:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    622:622:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    662:662:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    632:632:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    672:672:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    791:810:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    738:738:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    747:747:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    752:752:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    775:780:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    46:68:void <init>() -> <init>
    46:85:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:44:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    44:44:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    44:44:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    44:44:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    44:44:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    44:44:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    44:44:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    44:44:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    44:44:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    44:44:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    44:44:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    44:44:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    429:429:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    418:423:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    122:125:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    131:134:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    98:99:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float) -> setAllCorners
    109:112:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment) -> setAllCorners
    366:369:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment) -> setAllEdges
    412:413:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment) -> setBottomEdge
    326:327:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float) -> setBottomLeftCorner
    339:340:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    350:356:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    182:183:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    189:190:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    284:285:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float) -> setBottomRightCorner
    297:298:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    308:314:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    168:169:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    175:176:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    379:380:com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment) -> setLeftEdge
    401:402:com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment) -> setRightEdge
    390:391:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
    201:202:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float) -> setTopLeftCorner
    214:215:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    225:231:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    140:141:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    147:148:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    242:243:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float) -> setTopRightCorner
    255:256:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    266:272:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    154:155:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    161:162:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    55:77:void <init>() -> <init>
    325:325:float angleOfEdge(int) -> angleOfEdge
    170:182:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:230:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:100:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:145:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    307:322:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    278:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    263:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    293:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:157:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    329:330:void setEdgeIntersectionCheckEnable(boolean) -> setEdgeIntersectionCheckEnable
    160:167:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
    39:39:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    348:354:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    90:96:void <init>() -> <init>
    90:100:void <init>(float,float) -> <init>
    211:233:void addArc(float,float,float,float,float,float) -> addArc
    293:308:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    275:278:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    242:246:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    285:285:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    255:258:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    189:197:void cubicToPoint(float,float,float,float,float,float) -> cubicToPoint
    327:327:float getCurrentShadowAngle() -> getCurrentShadowAngle
    331:331:float getEndShadowAngle() -> getEndShadowAngle
    319:319:float getEndX() -> getEndX
    323:323:float getEndY() -> getEndY
    311:311:float getStartX() -> getStartX
    315:315:float getStartY() -> getStartY
    130:145:void lineTo(float,float) -> lineTo
    160:171:void quadToPoint(float,float,float,float) -> quadToPoint
    107:108:void reset(float,float) -> reset
    112:121:void reset(float,float,float,float) -> reset
    351:352:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    355:356:void setEndShadowAngle(float) -> setEndShadowAngle
    343:344:void setEndX(float) -> setEndX
    347:348:void setEndY(float) -> setEndY
    335:336:void setStartX(float) -> setStartX
    339:340:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    258:258:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    262:265:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    415:417:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    425:432:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    383:387:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    395:403:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    406:406:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    527:527:void <clinit>() -> <clinit>
    560:565:void <init>(float,float,float,float) -> <init>
    526:526:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    526:526:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    526:526:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    526:526:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    526:526:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    526:526:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    526:526:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    526:526:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    569:575:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    590:590:float getBottom() -> getBottom
    578:578:float getLeft() -> getLeft
    586:586:float getRight() -> getRight
    610:610:float getStartAngle() -> getStartAngle
    614:614:float getSweepAngle() -> getSweepAngle
    582:582:float getTop() -> getTop
    606:607:void setBottom(float) -> setBottom
    594:595:void setLeft(float) -> setLeft
    602:603:void setRight(float) -> setRight
    618:619:void setStartAngle(float) -> setStartAngle
    622:623:void setSweepAngle(float) -> setSweepAngle
    598:599:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathCubicOperation -> com.google.android.material.shape.ShapePath$PathCubicOperation:
    647:654:void <init>(float,float,float,float,float,float) -> <init>
    658:663:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    666:666:float getControlX1() -> getControlX1
    682:682:float getControlX2() -> getControlX2
    674:674:float getControlY1() -> getControlY1
    690:690:float getControlY2() -> getControlY2
    698:698:float getEndX() -> getEndX
    706:706:float getEndY() -> getEndY
    670:671:void setControlX1(float) -> setControlX1
    686:687:void setControlX2(float) -> setControlX2
    678:679:void setControlY1(float) -> setControlY1
    694:695:void setControlY2(float) -> setControlY2
    702:703:void setEndX(float) -> setEndX
    710:711:void setEndY(float) -> setEndY
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    446:446:void <init>() -> <init>
    446:446:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    446:446:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    446:446:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    446:446:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    452:457:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    436:439:void <init>() -> <init>
com.google.android.material.shape.ShapePath$PathQuadOperation -> com.google.android.material.shape.ShapePath$PathQuadOperation:
    461:461:void <init>() -> <init>
    461:461:void access$200(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$200
    461:461:void access$300(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$300
    461:461:void access$400(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$400
    461:461:void access$500(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$500
    485:490:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    517:517:float getControlX() -> getControlX
    501:501:float getControlY() -> getControlY
    493:493:float getEndX() -> getEndX
    509:509:float getEndY() -> getEndY
    521:522:void setControlX(float) -> setControlX
    505:506:void setControlY(float) -> setControlY
    497:498:void setEndX(float) -> setEndX
    513:514:void setEndY(float) -> setEndY
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    364:364:void <clinit>() -> <clinit>
    362:362:void <init>() -> <init>
    368:369:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePathModel -> com.google.android.material.shape.ShapePathModel:
    26:26:void <init>() -> <init>
    36:40:void setAllCorners(com.google.android.material.shape.CornerTreatment) -> setAllCorners
    50:54:void setAllEdges(com.google.android.material.shape.EdgeTreatment) -> setAllEdges
    172:173:void setBottomEdge(com.google.android.material.shape.EdgeTreatment) -> setBottomEdge
    139:140:void setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    128:129:void setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    71:75:void setCornerTreatments(com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment) -> setCornerTreatments
    92:96:void setEdgeTreatments(com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment) -> setEdgeTreatments
    183:184:void setLeftEdge(com.google.android.material.shape.EdgeTreatment) -> setLeftEdge
    161:162:void setRightEdge(com.google.android.material.shape.EdgeTreatment) -> setRightEdge
    150:151:void setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
    106:107:void setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    117:118:void setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
com.google.android.material.shape.TriangleEdgeTreatment -> com.google.android.material.shape.TriangleEdgeTreatment:
    42:45:void <init>(float,boolean) -> <init>
    50:54:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.slider.BaseSlider -> com.google.android.material.slider.BaseSlider:
    196:218:void <clinit>() -> <clinit>
    316:317:void <init>(android.content.Context) -> <init>
    320:321:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    240:384:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    190:190:com.google.android.material.tooltip.TooltipDrawable access$000(android.content.Context,android.content.res.TypedArray) -> access$000
    190:190:java.util.List access$100(com.google.android.material.slider.BaseSlider) -> access$100
    190:190:com.google.android.material.slider.BaseSlider$AccessibilityHelper access$300(com.google.android.material.slider.BaseSlider) -> access$300
    190:190:java.lang.String access$500(com.google.android.material.slider.BaseSlider,float) -> access$500
    190:190:boolean access$600(com.google.android.material.slider.BaseSlider,int,float) -> access$600
    190:190:void access$700(com.google.android.material.slider.BaseSlider) -> access$700
    190:190:float access$800(com.google.android.material.slider.BaseSlider,int) -> access$800
    823:824:void addOnChangeListener(com.google.android.material.slider.BaseOnChangeListener) -> addOnChangeListener
    846:847:void addOnSliderTouchListener(com.google.android.material.slider.BaseOnSliderTouchListener) -> addOnSliderTouchListener
    1430:1431:void attachLabelToContentView(com.google.android.material.tooltip.TooltipDrawable) -> attachLabelToContentView
    2265:2278:java.lang.Float calculateIncrementForKey(int) -> calculateIncrementForKey
    2284:2284:float calculateStepIncrement() -> calculateStepIncrement
    2292:2298:float calculateStepIncrement(int) -> calculateStepIncrement
    1514:1515:int calculateTop() -> calculateTop
    837:838:void clearOnChangeListeners() -> clearOnChangeListeners
    860:861:void clearOnSliderTouchListeners() -> clearOnSliderTouchListeners
    1924:1948:android.animation.ValueAnimator createLabelAnimator(boolean) -> createLabelAnimator
    719:743:void createLabelPool() -> createLabelPool
    1448:1453:void detachLabelFromContentView(com.google.android.material.tooltip.TooltipDrawable) -> detachLabelFromContentView
    1870:1873:float dimenToValue(float) -> dimenToValue
    2349:2349:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    2356:2356:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2074:2080:void dispatchOnChangedFromUser(int) -> dispatchOnChangedFromUser
    2065:2070:void dispatchOnChangedProgramatically() -> dispatchOnChangedProgramatically
    1591:1595:void drawActiveTrack(android.graphics.Canvas,int,int) -> drawActiveTrack
    1565:1576:void drawInactiveTrack(android.graphics.Canvas,int,int) -> drawInactiveTrack
    1627:1642:void drawThumbs(android.graphics.Canvas,int,int) -> drawThumbs
    2098:2114:void drawableStateChanged() -> drawableStateChanged
    1973:2007:void ensureLabelsAdded() -> ensureLabelsAdded
    1954:1970:void ensureLabelsRemoved() -> ensureLabelsRemoved
    2316:2334:void focusThumbOnFocusGained(int) -> focusThumbOnFocusGained
    2123:2124:void forceDrawCompatHalo(boolean) -> forceDrawCompatHalo
    2010:2014:java.lang.String formatValue(float) -> formatValue
    2344:2344:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    2338:2338:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    1555:1561:float[] getActiveRange() -> getActiveRange
    813:813:int getActiveThumbIndex() -> getActiveThumbIndex
    1906:1912:float getAnimatorCurrentValueOrDefault(android.animation.ValueAnimator,float) -> getAnimatorCurrentValueOrDefault
    1858:1866:float getClampedValue(int,float) -> getClampedValue
    2118:2118:int getColorForState(android.content.res.ColorStateList) -> getColorForState
    794:794:int getFocusedThumbIndex() -> getFocusedThumbIndex
    1047:1047:int getHaloRadius() -> getHaloRadius
    1151:1151:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    1089:1089:int getLabelBehavior() -> getLabelBehavior
    1881:1881:float getMinSeparation() -> getMinSeparation
    755:755:float getStepSize() -> getStepSize
    889:889:float getThumbElevation() -> getThumbElevation
    921:921:int getThumbRadius() -> getThumbRadius
    994:994:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    1035:1035:float getThumbStrokeWidth() -> getThumbStrokeWidth
    1185:1185:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    1248:1248:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    1277:1277:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    1217:1222:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    1364:1364:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    1126:1126:int getTrackHeight() -> getTrackHeight
    1393:1393:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    1109:1109:int getTrackSidePadding() -> getTrackSidePadding
    1333:1338:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    1115:1115:int getTrackWidth() -> getTrackWidth
    600:600:float getValueFrom() -> getValueFrom
    1885:1891:float getValueOfTouchPosition() -> getValueOfTouchPosition
    1820:1824:float getValueOfTouchPositionAbsolute() -> getValueOfTouchPositionAbsolute
    626:626:float getValueTo() -> getValueTo
    647:647:java.util.List getValues() -> getValues
    868:868:boolean hasLabelFormatter() -> hasLabelFormatter
    2037:2041:void invalidateTrack() -> invalidateTrack
    2051:2060:boolean isInVerticalScrollingContainer() -> isInVerticalScrollingContainer
    2219:2219:boolean isRtl() -> isRtl
    1303:1303:boolean isTickVisible() -> isTickVisible
    387:397:void loadResources(android.content.res.Resources) -> loadResources
    1472:1490:void maybeCalculateTicksCoordinates() -> maybeCalculateTicksCoordinates
    1646:1659:void maybeDrawHalo(android.graphics.Canvas,int,int) -> maybeDrawHalo
    1598:1622:void maybeDrawTicks(android.graphics.Canvas) -> maybeDrawTicks
    494:499:void maybeIncreaseTrackSidePadding() -> maybeIncreaseTrackSidePadding
    2231:2244:boolean moveFocus(int) -> moveFocus
    2255:2259:boolean moveFocusInAbsoluteDirection(int) -> moveFocusInAbsoluteDirection
    1583:1587:float normalizeValue(float) -> normalizeValue
    1422:1427:void onAttachedToWindow() -> onAttachedToWindow
    1435:1445:void onDetachedFromWindow() -> onDetachedFromWindow
    1520:1548:void onDraw(android.graphics.Canvas) -> onDraw
    2304:2313:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    2128:2172:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2176:2209:java.lang.Boolean onKeyDownNoActiveThumb(int,android.view.KeyEvent) -> onKeyDownNoActiveThumb
    2214:2215:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1457:1463:void onMeasure(int,int) -> onMeasure
    2403:2414:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2391:2398:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1467:1469:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2084:2087:void onStartTrackingTouch() -> onStartTrackingTouch
    2091:2094:void onStopTrackingTouch() -> onStopTrackingTouch
    1669:1749:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    486:490:com.google.android.material.tooltip.TooltipDrawable parseLabelDrawable(android.content.Context,android.content.res.TypedArray) -> parseLabelDrawable
    1778:1816:boolean pickActiveThumb() -> pickActiveThumb
    1760:1760:int pivotIndex(float[],float) -> pivotIndex
    400:481:void processAttributes(android.content.Context,android.util.AttributeSet,int) -> processAttributes
    832:833:void removeOnChangeListener(com.google.android.material.slider.BaseOnChangeListener) -> removeOnChangeListener
    855:856:void removeOnSliderTouchListener(com.google.android.material.slider.BaseOnSliderTouchListener) -> removeOnSliderTouchListener
    2365:2372:void scheduleAccessibilityEventSender(int) -> scheduleAccessibilityEventSender
    808:809:void setActiveThumbIndex(int) -> setActiveThumbIndex
    1414:1418:void setEnabled(boolean) -> setEnabled
    799:805:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    1057:1069:void setHaloRadius(int) -> setHaloRadius
    1078:1079:void setHaloRadiusResource(int) -> setHaloRadiusResource
    1161:1175:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    1100:1104:void setLabelBehavior(int) -> setLabelBehavior
    878:879:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    1877:1878:void setSeparationUnit(int) -> setSeparationUnit
    777:790:void setStepSize(float) -> setStepSize
    899:900:void setThumbElevation(float) -> setThumbElevation
    909:910:void setThumbElevationResource(int) -> setThumbElevationResource
    931:943:void setThumbRadius(int) -> setThumbRadius
    952:953:void setThumbRadiusResource(int) -> setThumbRadiusResource
    965:967:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    979:983:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    1007:1009:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    1021:1024:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    1195:1201:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    1259:1265:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    1288:1294:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    1234:1236:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    1313:1317:void setTickVisible(boolean) -> setTickVisible
    1375:1381:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    1136:1141:void setTrackHeight(int) -> setTrackHeight
    1404:1410:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    1350:1352:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    2018:2034:void setValueForLabel(com.google.android.material.tooltip.TooltipDrawable,float) -> setValueForLabel
    614:617:void setValueFrom(float) -> setValueFrom
    640:643:void setValueTo(float) -> setValueTo
    666:669:void setValues(java.lang.Float[]) -> setValues
    687:688:void setValues(java.util.List) -> setValues
    695:715:void setValuesInternal(java.util.ArrayList) -> setValuesInternal
    1662:1664:boolean shouldDrawCompatHalo() -> shouldDrawCompatHalo
    1838:1838:boolean snapActiveThumbToValue(float) -> snapActiveThumbToValue
    1764:1769:double snapPosition(float) -> snapPosition
    1843:1853:boolean snapThumbToValue(int,float) -> snapThumbToValue
    1834:1834:boolean snapTouchPosition() -> snapTouchPosition
    2468:2472:void updateBoundsForVirturalViewId(int,android.graphics.Rect) -> updateBoundsForVirturalViewId
    1502:1511:void updateHaloHotspot() -> updateHaloHotspot
    1494:1498:void updateTrackWidth(int) -> updateTrackWidth
    583:591:void validateConfigurationIfDirty() -> validateConfigurationIfDirty
    531:539:void validateStepSize() -> validateStepSize
    502:507:void validateValueFrom() -> validateValueFrom
    510:515:void validateValueTo() -> validateValueTo
    542:561:void validateValues() -> validateValues
    520:527:boolean valueLandsOnTick(float) -> valueLandsOnTick
    1895:1895:float valueToX(float) -> valueToX
    564:580:void warnAboutFloatingPointError() -> warnAboutFloatingPointError
com.google.android.material.slider.BaseSlider$1 -> com.google.android.material.slider.BaseSlider$1:
    357:357:void <init>(com.google.android.material.slider.BaseSlider,android.util.AttributeSet,int) -> <init>
    360:365:com.google.android.material.tooltip.TooltipDrawable createTooltipDrawable() -> createTooltipDrawable
com.google.android.material.slider.BaseSlider$2 -> com.google.android.material.slider.BaseSlider$2:
    1937:1937:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    1940:1946:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.slider.BaseSlider$3 -> com.google.android.material.slider.BaseSlider$3:
    1959:1959:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    1962:1966:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.slider.BaseSlider$AccessibilityEventSender -> com.google.android.material.slider.BaseSlider$AccessibilityEventSender:
    2375:2376:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2375:2375:void <init>(com.google.android.material.slider.BaseSlider,com.google.android.material.slider.BaseSlider$1) -> <init>
    2384:2386:void run() -> run
    2379:2380:void setVirtualViewId(int) -> setVirtualViewId
com.google.android.material.slider.BaseSlider$AccessibilityHelper -> com.google.android.material.slider.BaseSlider$AccessibilityHelper:
    2477:2482:void <init>(com.google.android.material.slider.BaseSlider) -> <init>
    2486:2493:int getVirtualViewAt(float,float) -> getVirtualViewAt
    2498:2501:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    2558:2608:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    2507:2539:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    2543:2552:java.lang.String startOrEndDescription(int) -> startOrEndDescription
com.google.android.material.slider.BaseSlider$SliderState -> com.google.android.material.slider.BaseSlider$SliderState:
    2424:2424:void <clinit>() -> <clinit>
    2416:2416:void <init>(android.os.Parcel,com.google.android.material.slider.BaseSlider$1) -> <init>
    2441:2442:void <init>(android.os.Parcelable) -> <init>
    2445:2452:void <init>(android.os.Parcel) -> <init>
    2456:2464:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.BaseSlider$SliderState$1 -> com.google.android.material.slider.BaseSlider$SliderState$1:
# {"id":"sourceFile","fileName":"BaseSlider.java"}
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:com.google.android.material.slider.BaseSlider$SliderState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2436:2436:com.google.android.material.slider.BaseSlider$SliderState[] newArray(int) -> newArray
com.google.android.material.slider.BasicLabelFormatter -> com.google.android.material.slider.BasicLabelFormatter:
    27:27:void <init>() -> <init>
    37:47:java.lang.String getFormattedValue(float) -> getFormattedValue
com.google.android.material.slider.RangeSlider -> com.google.android.material.slider.RangeSlider:
    57:58:void <init>(android.content.Context) -> <init>
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:void clearOnChangeListeners() -> clearOnChangeListeners
    51:51:void clearOnSliderTouchListeners() -> clearOnSliderTouchListeners
    118:122:java.util.List convertToFloat(android.content.res.TypedArray) -> convertToFloat
    51:51:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    51:51:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    51:51:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    51:51:int getActiveThumbIndex() -> getActiveThumbIndex
    51:51:int getFocusedThumbIndex() -> getFocusedThumbIndex
    51:51:int getHaloRadius() -> getHaloRadius
    51:51:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    51:51:int getLabelBehavior() -> getLabelBehavior
    133:133:float getMinSeparation() -> getMinSeparation
    51:51:float getStepSize() -> getStepSize
    51:51:float getThumbElevation() -> getThumbElevation
    51:51:int getThumbRadius() -> getThumbRadius
    51:51:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    51:51:float getThumbStrokeWidth() -> getThumbStrokeWidth
    51:51:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    51:51:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    51:51:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    51:51:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    51:51:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    51:51:int getTrackHeight() -> getTrackHeight
    51:51:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    51:51:int getTrackSidePadding() -> getTrackSidePadding
    51:51:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    51:51:int getTrackWidth() -> getTrackWidth
    51:51:float getValueFrom() -> getValueFrom
    51:51:float getValueTo() -> getValueTo
    114:114:java.util.List getValues() -> getValues
    51:51:boolean hasLabelFormatter() -> hasLabelFormatter
    51:51:boolean isTickVisible() -> isTickVisible
    51:51:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    51:51:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    176:182:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    165:171:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    51:51:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    51:51:void setEnabled(boolean) -> setEnabled
    51:51:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    51:51:void setHaloRadius(int) -> setHaloRadius
    51:51:void setHaloRadiusResource(int) -> setHaloRadiusResource
    51:51:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    51:51:void setLabelBehavior(int) -> setLabelBehavior
    51:51:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    143:146:void setMinSeparation(float) -> setMinSeparation
    157:160:void setMinSeparationValue(float) -> setMinSeparationValue
    51:51:void setStepSize(float) -> setStepSize
    51:51:void setThumbElevation(float) -> setThumbElevation
    51:51:void setThumbElevationResource(int) -> setThumbElevationResource
    51:51:void setThumbRadius(int) -> setThumbRadius
    51:51:void setThumbRadiusResource(int) -> setThumbRadiusResource
    51:51:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    51:51:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    51:51:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    51:51:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    51:51:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    51:51:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    51:51:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    51:51:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    51:51:void setTickVisible(boolean) -> setTickVisible
    51:51:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    51:51:void setTrackHeight(int) -> setTrackHeight
    51:51:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    51:51:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    51:51:void setValueFrom(float) -> setValueFrom
    51:51:void setValueTo(float) -> setValueTo
    97:98:void setValues(java.lang.Float[]) -> setValues
    107:108:void setValues(java.util.List) -> setValues
com.google.android.material.slider.RangeSlider$RangeSliderState -> com.google.android.material.slider.RangeSlider$RangeSliderState:
    206:206:void <clinit>() -> <clinit>
    184:184:void <init>(android.os.Parcel,com.google.android.material.slider.RangeSlider$1) -> <init>
    190:191:void <init>(android.os.Parcelable) -> <init>
    194:197:void <init>(android.os.Parcel) -> <init>
    184:184:float access$000(com.google.android.material.slider.RangeSlider$RangeSliderState) -> access$000
    184:184:float access$002(com.google.android.material.slider.RangeSlider$RangeSliderState,float) -> access$002
    184:184:int access$100(com.google.android.material.slider.RangeSlider$RangeSliderState) -> access$100
    184:184:int access$102(com.google.android.material.slider.RangeSlider$RangeSliderState,int) -> access$102
    201:204:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.RangeSlider$RangeSliderState$1 -> com.google.android.material.slider.RangeSlider$RangeSliderState$1:
# {"id":"sourceFile","fileName":"RangeSlider.java"}
    207:207:void <init>() -> <init>
    207:207:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    210:210:com.google.android.material.slider.RangeSlider$RangeSliderState createFromParcel(android.os.Parcel) -> createFromParcel
    207:207:java.lang.Object[] newArray(int) -> newArray
    215:215:com.google.android.material.slider.RangeSlider$RangeSliderState[] newArray(int) -> newArray
com.google.android.material.slider.Slider -> com.google.android.material.slider.Slider:
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:40:void clearOnChangeListeners() -> clearOnChangeListeners
    40:40:void clearOnSliderTouchListeners() -> clearOnSliderTouchListeners
    40:40:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    40:40:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    40:40:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    40:40:int getActiveThumbIndex() -> getActiveThumbIndex
    40:40:int getFocusedThumbIndex() -> getFocusedThumbIndex
    40:40:int getHaloRadius() -> getHaloRadius
    40:40:android.content.res.ColorStateList getHaloTintList() -> getHaloTintList
    40:40:int getLabelBehavior() -> getLabelBehavior
    40:40:float getStepSize() -> getStepSize
    40:40:float getThumbElevation() -> getThumbElevation
    40:40:int getThumbRadius() -> getThumbRadius
    40:40:android.content.res.ColorStateList getThumbStrokeColor() -> getThumbStrokeColor
    40:40:float getThumbStrokeWidth() -> getThumbStrokeWidth
    40:40:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    40:40:android.content.res.ColorStateList getTickActiveTintList() -> getTickActiveTintList
    40:40:android.content.res.ColorStateList getTickInactiveTintList() -> getTickInactiveTintList
    40:40:android.content.res.ColorStateList getTickTintList() -> getTickTintList
    40:40:android.content.res.ColorStateList getTrackActiveTintList() -> getTrackActiveTintList
    40:40:int getTrackHeight() -> getTrackHeight
    40:40:android.content.res.ColorStateList getTrackInactiveTintList() -> getTrackInactiveTintList
    40:40:int getTrackSidePadding() -> getTrackSidePadding
    40:40:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    40:40:int getTrackWidth() -> getTrackWidth
    75:75:float getValue() -> getValue
    40:40:float getValueFrom() -> getValueFrom
    40:40:float getValueTo() -> getValueTo
    40:40:boolean hasLabelFormatter() -> hasLabelFormatter
    40:40:boolean isTickVisible() -> isTickVisible
    40:40:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    40:40:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    100:105:boolean pickActiveThumb() -> pickActiveThumb
    40:40:void setEnabled(boolean) -> setEnabled
    40:40:void setFocusedThumbIndex(int) -> setFocusedThumbIndex
    40:40:void setHaloRadius(int) -> setHaloRadius
    40:40:void setHaloRadiusResource(int) -> setHaloRadiusResource
    40:40:void setHaloTintList(android.content.res.ColorStateList) -> setHaloTintList
    40:40:void setLabelBehavior(int) -> setLabelBehavior
    40:40:void setLabelFormatter(com.google.android.material.slider.LabelFormatter) -> setLabelFormatter
    40:40:void setStepSize(float) -> setStepSize
    40:40:void setThumbElevation(float) -> setThumbElevation
    40:40:void setThumbElevationResource(int) -> setThumbElevationResource
    40:40:void setThumbRadius(int) -> setThumbRadius
    40:40:void setThumbRadiusResource(int) -> setThumbRadiusResource
    40:40:void setThumbStrokeColor(android.content.res.ColorStateList) -> setThumbStrokeColor
    40:40:void setThumbStrokeColorResource(int) -> setThumbStrokeColorResource
    40:40:void setThumbStrokeWidth(float) -> setThumbStrokeWidth
    40:40:void setThumbStrokeWidthResource(int) -> setThumbStrokeWidthResource
    40:40:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    40:40:void setTickActiveTintList(android.content.res.ColorStateList) -> setTickActiveTintList
    40:40:void setTickInactiveTintList(android.content.res.ColorStateList) -> setTickInactiveTintList
    40:40:void setTickTintList(android.content.res.ColorStateList) -> setTickTintList
    40:40:void setTickVisible(boolean) -> setTickVisible
    40:40:void setTrackActiveTintList(android.content.res.ColorStateList) -> setTrackActiveTintList
    40:40:void setTrackHeight(int) -> setTrackHeight
    40:40:void setTrackInactiveTintList(android.content.res.ColorStateList) -> setTrackInactiveTintList
    40:40:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    95:96:void setValue(float) -> setValue
    40:40:void setValueFrom(float) -> setValueFrom
    40:40:void setValueTo(float) -> setValueTo
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    227:254:void <clinit>() -> <clinit>
    353:354:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    266:712:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    95:95:boolean access$000(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    95:95:int access$1002(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$1002
    95:95:int access$102(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$102
    95:95:int access$1102(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$1102
    95:95:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    95:95:void access$1400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1400
    95:95:void access$1500(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1500
    95:95:com.google.android.material.snackbar.ContentViewCallback access$1600(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1600
    95:95:boolean access$1700() -> access$1700
    95:95:int access$200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$200
    95:95:void access$300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$300
    95:95:android.content.Context access$400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$400
    95:95:int access$500(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$500
    95:95:int access$600(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$600
    95:95:int access$700(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$700
    95:95:int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$702
    95:95:java.lang.String access$800() -> access$800
    95:95:int access$902(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$902
    669:676:com.google.android.material.snackbar.BaseTransientBottomBar addCallback(com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback) -> addCallback
    887:905:void animateViewIn() -> animateViewIn
    908:913:void animateViewOut(int) -> animateViewOut
    870:882:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    653:654:void dismiss() -> dismiss
    657:658:void dispatchDismiss(int) -> dispatchDismiss
    946:955:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    569:569:android.view.View getAnchorView() -> getAnchorView
    547:547:int getAnimationMode() -> getAnimationMode
    631:631:com.google.android.material.snackbar.BaseTransientBottomBar$Behavior getBehavior() -> getBehavior
    637:637:android.content.Context getContext() -> getContext
    515:515:int getDuration() -> getDuration
    729:729:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    959:970:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    817:820:int getScreenHeight() -> getScreenHeight
    481:481:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    1058:1063:int getTranslationYBottom() -> getTranslationYBottom
    643:643:android.view.View getView() -> getView
    810:812:int getViewAbsoluteBottom() -> getViewAbsoluteBottom
    490:493:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    1067:1073:void hideView(int) -> hideView
    601:601:boolean isAnchorViewLayoutListenerEnabled() -> isAnchorViewLayoutListenerEnabled
    537:537:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    701:701:boolean isShown() -> isShown
    709:709:boolean isShownOrQueued() -> isShownOrQueued
    473:475:boolean isSwipeDismissable() -> isSwipeDismissable
    1089:1103:void onViewHidden(int) -> onViewHidden
    1076:1085:void onViewShown() -> onViewShown
    688:696:com.google.android.material.snackbar.BaseTransientBottomBar removeCallback(com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback) -> removeCallback
    575:578:com.google.android.material.snackbar.BaseTransientBottomBar setAnchorView(android.view.View) -> setAnchorView
    588:592:com.google.android.material.snackbar.BaseTransientBottomBar setAnchorView(int) -> setAnchorView
    610:611:void setAnchorViewLayoutListenerEnabled(boolean) -> setAnchorViewLayoutListenerEnabled
    558:559:com.google.android.material.snackbar.BaseTransientBottomBar setAnimationMode(int) -> setAnimationMode
    621:622:com.google.android.material.snackbar.BaseTransientBottomBar setBehavior(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior) -> setBehavior
    504:505:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    528:529:com.google.android.material.snackbar.BaseTransientBottomBar setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    825:867:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1107:1113:boolean shouldAnimate() -> shouldAnimate
    469:469:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    648:649:void show() -> show
    733:794:void showView() -> showView
    797:807:void showViewImpl() -> showViewImpl
    916:930:void startFadeInAnimation() -> startFadeInAnimation
    933:943:void startFadeOutAnimation(int) -> startFadeOutAnimation
    974:1017:void startSlideInAnimation() -> startSlideInAnimation
    1020:1055:void startSlideOutAnimation(int) -> startSlideOutAnimation
    447:466:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    239:239:void <init>() -> <init>
    242:250:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    888:888:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    891:903:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    923:923:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    926:927:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    936:936:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    939:940:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    949:949:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    952:953:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    962:962:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    965:968:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    986:986:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    995:996:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    989:991:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    999:1000:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1004:1014:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$17 -> com.google.android.material.snackbar.BaseTransientBottomBar$17:
    1025:1025:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1033:1034:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1028:1029:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$18 -> com.google.android.material.snackbar.BaseTransientBottomBar$18:
    1037:1038:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1042:1052:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    268:268:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    271:276:void onGlobalLayout() -> onGlobalLayout
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    281:281:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    284:308:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    406:406:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    412:416:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    423:423:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    427:430:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    434:438:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    714:714:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    722:724:void dismiss(int) -> dismiss
    717:718:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    734:734:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    737:744:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    748:761:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.snackbar.BaseTransientBottomBar$7$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$7$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    754:754:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$7) -> <init>
    757:758:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    787:787:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    790:792:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    835:835:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    838:842:void onDismiss(android.view.View) -> onDismiss
    846:859:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    119:119:void <init>() -> <init>
    159:159:void onDismissed(java.lang.Object,int) -> onDismissed
    169:169:void onShown(java.lang.Object) -> onShown
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1299:1301:void <init>() -> <init>
    1296:1296:void access$1300(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    1310:1310:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1316:1317:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1305:1306:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1327:1331:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1339:1339:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1344:1359:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1335:1336:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1120:1120:void <clinit>() -> <clinit>
    1139:1140:void <init>(android.content.Context) -> <init>
    1143:1170:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1274:1290:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1269:1269:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1257:1257:int getAnimationMode() -> getAnimationMode
    1265:1265:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1229:1235:void onAttachedToWindow() -> onAttachedToWindow
    1239:1243:void onDetachedFromWindow() -> onDetachedFromWindow
    1221:1225:void onLayout(boolean,int,int,int,int) -> onLayout
    1261:1262:void setAnimationMode(int) -> setAnimationMode
    1174:1175:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1179:1185:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1189:1198:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1202:1210:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1252:1253:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    1215:1217:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1247:1248:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
# {"id":"sourceFile","fileName":"BaseTransientBottomBar.java"}
    1121:1121:void <init>() -> <init>
    1126:1126:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    69:70:void <clinit>() -> <clinit>
    111:114:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    127:128:void dismiss() -> dismiss
    267:291:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    363:375:int getDuration() -> getDuration
    230:233:boolean hasSnackbarButtonStyleAttr(android.content.Context) -> hasSnackbarButtonStyleAttr
    237:241:boolean hasSnackbarContentStyleAttrs(android.content.Context) -> hasSnackbarContentStyleAttrs
    134:134:boolean isShown() -> isShown
    157:157:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    184:184:com.google.android.material.snackbar.Snackbar make(android.content.Context,android.view.View,java.lang.CharSequence,int) -> make
    262:262:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    196:218:com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int) -> makeInternal
    325:325:com.google.android.material.snackbar.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    337:357:com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    410:413:com.google.android.material.snackbar.Snackbar setActionTextColor(android.content.res.ColorStateList) -> setActionTextColor
    433:436:com.google.android.material.snackbar.Snackbar setActionTextColor(int) -> setActionTextColor
    442:442:com.google.android.material.snackbar.Snackbar setBackgroundTint(int) -> setBackgroundTint
    448:449:com.google.android.material.snackbar.Snackbar setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    454:455:com.google.android.material.snackbar.Snackbar setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    474:483:com.google.android.material.snackbar.Snackbar setCallback(com.google.android.material.snackbar.Snackbar$Callback) -> setCallback
    422:424:com.google.android.material.snackbar.Snackbar setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    301:304:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    314:314:com.google.android.material.snackbar.Snackbar setText(int) -> setText
    386:389:com.google.android.material.snackbar.Snackbar setTextColor(android.content.res.ColorStateList) -> setTextColor
    398:401:com.google.android.material.snackbar.Snackbar setTextColor(int) -> setTextColor
    120:121:void show() -> show
com.google.android.material.snackbar.Snackbar$1 -> com.google.android.material.snackbar.Snackbar$1:
    348:348:void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener) -> <init>
    351:354:void onClick(android.view.View) -> onClick
com.google.android.material.snackbar.Snackbar$Callback -> com.google.android.material.snackbar.Snackbar$Callback:
    81:81:void <init>() -> <init>
    81:81:void onDismissed(java.lang.Object,int) -> onDismissed
    101:101:void onDismissed(com.google.android.material.snackbar.Snackbar,int) -> onDismissed
    81:81:void onShown(java.lang.Object) -> onShown
    96:96:void onShown(com.google.android.material.snackbar.Snackbar) -> onShown
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    493:494:void <init>(android.content.Context) -> <init>
    497:498:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    502:517:void onMeasure(int,int) -> onMeasure
    490:490:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    490:490:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    490:490:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    490:490:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    490:490:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    45:46:void <init>(android.content.Context) -> <init>
    49:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:155:void animateContentIn(int,int) -> animateContentIn
    159:166:void animateContentOut(int,int) -> animateContentOut
    69:69:android.widget.Button getActionView() -> getActionView
    65:65:android.widget.TextView getMessageView() -> getMessageView
    59:62:void onFinishInflate() -> onFinishInflate
    84:115:void onMeasure(int,int) -> onMeasure
    169:170:void setMaxInlineActionWidth(int) -> setMaxInlineActionWidth
    73:80:void updateActionTextColorAlphaIfNeeded(float) -> updateActionTextColorAlphaIfNeeded
    134:144:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    119:129:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:66:void <init>() -> <init>
    205:212:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:114:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:245:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    163:165:boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrent
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:130:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:142:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:151:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:160:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:237:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    75:104:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    190:202:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:62:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    179:182:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:43:void <init>(android.os.Parcelable) -> <init>
    46:60:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:79:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.switchmaterial.SwitchMaterial -> com.google.android.material.switchmaterial.SwitchMaterial:
    46:47:void <clinit>() -> <clinit>
    62:63:void <init>(android.content.Context) -> <init>
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    121:141:android.content.res.ColorStateList getMaterialThemeColorsThumbTintList() -> getMaterialThemeColorsThumbTintList
    145:162:android.content.res.ColorStateList getMaterialThemeColorsTrackTintList() -> getMaterialThemeColorsTrackTintList
    117:117:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    88:96:void onAttachedToWindow() -> onAttachedToWindow
    105:113:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.tabs.ElasticTabIndicatorInterpolator -> com.google.android.material.tabs.ElasticTabIndicatorInterpolator:
    32:32:void <init>() -> <init>
    43:43:float accInterp(float) -> accInterp
    37:37:float decInterp(float) -> decInterp
    55:78:void setIndicatorBoundsForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable) -> setIndicatorBoundsForOffset
com.google.android.material.tabs.TabIndicatorInterpolator -> com.google.android.material.tabs.TabIndicatorInterpolator:
    48:48:void <init>() -> <init>
    104:114:android.graphics.RectF calculateIndicatorWidthForTab(com.google.android.material.tabs.TabLayout,android.view.View) -> calculateIndicatorWidthForTab
    72:87:android.graphics.RectF calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,int) -> calculateTabViewContentBounds
    161:170:void setIndicatorBoundsForOffset(com.google.android.material.tabs.TabLayout,android.view.View,android.view.View,float,android.graphics.drawable.Drawable) -> setIndicatorBoundsForOffset
    129:135:void setIndicatorBoundsForTab(com.google.android.material.tabs.TabLayout,android.view.View,android.graphics.drawable.Drawable) -> setIndicatorBoundsForTab
com.google.android.material.tabs.TabItem -> com.google.android.material.tabs.TabItem:
    48:49:void <init>(android.content.Context) -> <init>
    52:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.tabs.TabLayout -> com.google.android.material.tabs.TabLayout:
    179:200:void <clinit>() -> <clinit>
    484:485:void <init>(android.content.Context) -> <init>
    488:489:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    425:613:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    177:177:com.google.android.material.tabs.TabIndicatorInterpolator access$1200(com.google.android.material.tabs.TabLayout) -> access$1200
    177:177:int access$1400(com.google.android.material.tabs.TabLayout) -> access$1400
    801:802:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> addOnTabSelectedListener
    816:819:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    704:705:void addTab(com.google.android.material.tabs.TabLayout$Tab) -> addTab
    715:716:void addTab(com.google.android.material.tabs.TabLayout$Tab,int) -> addTab
    725:726:void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> addTab
    736:745:void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean) -> addTab
    748:762:void addTabFromItemView(com.google.android.material.tabs.TabItem) -> addTabFromItemView
    1576:1580:void addTabView(com.google.android.material.tabs.TabLayout$Tab) -> addTabView
    1584:1585:void addView(android.view.View) -> addView
    1589:1590:void addView(android.view.View,int) -> addView
    1594:1595:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1599:1600:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1603:1608:void addViewInternal(android.view.View) -> addViewInternal
    1739:1764:void animateToTab(int) -> animateToTab
    1922:1938:void applyGravityForModeScrollable(int) -> applyGravityForModeScrollable
    1895:1919:void applyModeAndGravity() -> applyModeAndGravity
    1873:1891:int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    845:846:void clearOnTabSelectedListeners() -> clearOnTabSelectedListeners
    1566:1573:void configureTab(com.google.android.material.tabs.TabLayout$Tab,int) -> configureTab
    3274:3287:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1612:1615:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    869:873:com.google.android.material.tabs.TabLayout$Tab createTabFromPool() -> createTabFromPool
    1550:1562:com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab) -> createTabView
    1867:1870:void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabReselected
    1855:1858:void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabSelected
    1861:1864:void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabUnselected
    1767:1779:void ensureScrollAnimator() -> ensureScrollAnimator
    176:176:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3318:3318:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3292:3300:int getDefaultHeight() -> getDefaultHeight
    902:902:int getSelectedTabPosition() -> getSelectedTabPosition
    893:893:com.google.android.material.tabs.TabLayout$Tab getTabAt(int) -> getTabAt
    887:887:int getTabCount() -> getTabCount
    1014:1014:int getTabGravity() -> getTabGravity
    1263:1263:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    1088:1088:int getTabIndicatorAnimationMode() -> getTabIndicatorAnimationMode
    1047:1047:int getTabIndicatorGravity() -> getTabIndicatorGravity
    3322:3322:int getTabMaxWidth() -> getTabMaxWidth
    3304:3309:int getTabMinWidth() -> getTabMinWidth
    991:991:int getTabMode() -> getTabMode
    1274:1274:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1499:1500:int getTabScrollRange() -> getTabScrollRange
    1321:1321:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1225:1225:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    1207:1207:boolean hasUnboundedRipple() -> hasUnboundedRipple
    1163:1163:boolean isInlineLabel() -> isInlineLabel
    1120:1120:boolean isTabIndicatorFullWidth() -> isTabIndicatorFullWidth
    857:864:com.google.android.material.tabs.TabLayout$Tab newTab() -> newTab
    1471:1485:void onAttachedToWindow() -> onAttachedToWindow
    1489:1496:void onDetachedFromWindow() -> onDetachedFromWindow
    1651:1659:void onDraw(android.graphics.Canvas) -> onDraw
    1638:1646:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1665:1726:void onMeasure(int,int) -> onMeasure
    1524:1540:void populateFromPagerAdapter() -> populateFromPagerAdapter
    878:878:boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab) -> releaseFromTabPool
    948:960:void removeAllTabs() -> removeAllTabs
    828:829:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> removeOnTabSelectedListener
    840:841:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    912:917:void removeTab(com.google.android.material.tabs.TabLayout$Tab) -> removeTab
    926:943:void removeTabAt(int) -> removeTabAt
    1729:1736:void removeTabViewAt(int) -> removeTabViewAt
    1809:1810:void selectTab(com.google.android.material.tabs.TabLayout$Tab) -> selectTab
    1821:1852:void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> selectTab
    1631:1634:void setElevation(float) -> setElevation
    1131:1141:void setInlineLabel(boolean) -> setInlineLabel
    1152:1153:void setInlineLabelResource(int) -> setInlineLabelResource
    770:771:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    781:790:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1504:1521:void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean) -> setPagerAdapter
    1782:1784:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    655:656:void setScrollPosition(int,float,boolean) -> setScrollPosition
    675:695:void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    1338:1342:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1355:1361:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    627:628:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    1032:1036:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    640:641:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1792:1800:void setSelectedTabView(int) -> setSelectedTabView
    1001:1005:void setTabGravity(int) -> setTabGravity
    1244:1248:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1257:1258:void setTabIconTintResource(int) -> setTabIconTintResource
    1063:1075:void setTabIndicatorAnimationMode(int) -> setTabIndicatorAnimationMode
    1107:1109:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    978:982:void setTabMode(int) -> setTabMode
    1288:1297:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1309:1310:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1216:1220:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1235:1236:void setTabTextColors(int,int) -> setTabTextColors
    1460:1461:void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter) -> setTabsFromPagerAdapter
    1176:1185:void setUnboundedRipple(boolean) -> setUnboundedRipple
    1196:1197:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1372:1373:void setupWithViewPager(androidx.viewpager.widget.ViewPager) -> setupWithViewPager
    1392:1393:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean) -> setupWithViewPager
    1397:1451:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean) -> setupWithViewPager
    1466:1466:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1543:1546:void updateAllTabs() -> updateAllTabs
    1619:1626:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    1941:1949:void updateTabViews(boolean) -> updateTabViews
com.google.android.material.tabs.TabLayout$1 -> com.google.android.material.tabs.TabLayout$1:
    1772:1772:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    1775:1776:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$AdapterChangeListener -> com.google.android.material.tabs.TabLayout$AdapterChangeListener:
    3432:3432:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3439:3442:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    3445:3446:void setAutoRefresh(boolean) -> setAutoRefresh
com.google.android.material.tabs.TabLayout$PagerAdapterObserver -> com.google.android.material.tabs.TabLayout$PagerAdapterObserver:
    3416:3416:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3420:3421:void onChanged() -> onChanged
    3425:3426:void onInvalidated() -> onInvalidated
com.google.android.material.tabs.TabLayout$SlidingTabIndicator -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator:
    2961:2971:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2959:2959:void access$1300(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View,float) -> access$1300
    3151:3156:void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    2980:2986:boolean childrenNeedLayout() -> childrenNeedLayout
    3215:3269:void draw(android.graphics.Canvas) -> draw
    3011:3011:float getIndicatorPosition() -> getIndicatorPosition
    3107:3110:void jumpIndicatorToSelectedPosition() -> jumpIndicatorToSelectedPosition
    3090:3103:void onLayout(boolean,int,int,int,int) -> onLayout
    3030:3086:void onMeasure(int,int) -> onMeasure
    3016:3026:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2997:3008:void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    2974:2977:void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    3128:3139:void tweenIndicatorPosition(android.view.View,android.view.View,float) -> tweenIndicatorPosition
    3168:3211:void updateOrRecreateIndicatorAnimation(boolean,int,int) -> updateOrRecreateIndicatorAnimation
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3179:3179:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,android.view.View,android.view.View) -> <init>
    3182:3183:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    3194:3194:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int) -> <init>
    3202:3203:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    3197:3198:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.tabs.TabLayout$Tab -> com.google.android.material.tabs.TabLayout$Tab:
    1969:1982:void <init>() -> <init>
    1953:1953:int access$000(com.google.android.material.tabs.TabLayout$Tab) -> access$000
    1953:1953:int access$1100(com.google.android.material.tabs.TabLayout$Tab) -> access$1100
    1953:1953:java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab) -> access$200
    1953:1953:java.lang.CharSequence access$300(com.google.android.material.tabs.TabLayout$Tab) -> access$300
    2200:2200:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    2304:2304:java.lang.CharSequence getContentDescription() -> getContentDescription
    2031:2031:android.view.View getCustomView() -> getCustomView
    2077:2077:android.graphics.drawable.Drawable getIcon() -> getIcon
    2020:2020:int getId() -> getId
    2183:2183:com.google.android.material.badge.BadgeDrawable getOrCreateBadge() -> getOrCreateBadge
    2087:2087:int getPosition() -> getPosition
    2241:2241:int getTabLabelVisibility() -> getTabLabelVisibility
    1987:1987:java.lang.Object getTag() -> getTag
    2101:2101:java.lang.CharSequence getText() -> getText
    2254:2257:boolean isSelected() -> isSelected
    2191:2192:void removeBadge() -> removeBadge
    2314:2323:void reset() -> reset
    2246:2250:void select() -> select
    2271:2274:com.google.android.material.tabs.TabLayout$Tab setContentDescription(int) -> setContentDescription
    2288:2290:com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    2047:2049:com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    2066:2067:com.google.android.material.tabs.TabLayout$Tab setCustomView(int) -> setCustomView
    2112:2123:com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    2134:2137:com.google.android.material.tabs.TabLayout$Tab setIcon(int) -> setIcon
    2011:2015:com.google.android.material.tabs.TabLayout$Tab setId(int) -> setId
    2091:2092:void setPosition(int) -> setPosition
    2218:2229:com.google.android.material.tabs.TabLayout$Tab setTabLabelVisibility(int) -> setTabLabelVisibility
    1998:1999:com.google.android.material.tabs.TabLayout$Tab setTag(java.lang.Object) -> setTag
    2149:2157:com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    2169:2172:com.google.android.material.tabs.TabLayout$Tab setText(int) -> setText
    2308:2311:void updateView() -> updateView
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener -> com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener:
    3339:3341:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3345:3347:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    3352:3365:void onPageScrolled(int,float,int) -> onPageScrolled
    3369:3381:void onPageSelected(int) -> onPageSelected
    3384:3385:void reset() -> reset
com.google.android.material.tabs.TabLayout$TabView -> com.google.android.material.tabs.TabLayout$TabView:
    2339:2351:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2327:2327:void access$100(com.google.android.material.tabs.TabLayout$TabView,android.content.Context) -> access$100
    2327:2327:void access$1000(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> access$1000
    2327:2327:void access$400(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas) -> access$400
    2327:2327:boolean access$500(com.google.android.material.tabs.TabLayout$TabView) -> access$500
    2327:2327:com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView) -> access$600
    2327:2327:com.google.android.material.badge.BadgeDrawable access$700(com.google.android.material.tabs.TabLayout$TabView) -> access$700
    2327:2327:void access$800(com.google.android.material.tabs.TabLayout$TabView) -> access$800
    2327:2327:com.google.android.material.badge.BadgeDrawable access$900(com.google.android.material.tabs.TabLayout$TabView) -> access$900
    2718:2739:void addOnLayoutChangeListener(android.view.View) -> addOnLayoutChangeListener
    2955:2955:float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
    2799:2806:void clipViewToPaddingForBadge(boolean) -> clipViewToPaddingForBadge
    2678:2683:android.widget.FrameLayout createPreApi18BadgeAnchorRoot() -> createPreApi18BadgeAnchorRoot
    2409:2413:void drawBackground(android.graphics.Canvas) -> drawBackground
    2417:2428:void drawableStateChanged() -> drawableStateChanged
    2707:2707:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    2933:2945:int getContentHeight() -> getContentHeight
    2911:2923:int getContentWidth() -> getContentWidth
    2898:2901:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    2695:2702:com.google.android.material.badge.BadgeDrawable getOrCreateBadge() -> getOrCreateBadge
    2950:2950:com.google.android.material.tabs.TabLayout$Tab getTab() -> getTab
    2893:2893:boolean hasBadgeDrawable() -> hasBadgeDrawable
    2651:2661:void inflateAndAddDefaultIconView() -> inflateAndAddDefaultIconView
    2664:2674:void inflateAndAddDefaultTextView() -> inflateAndAddDefaultTextView
    2471:2491:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2495:2556:void onMeasure(int,int) -> onMeasure
    2432:2441:boolean performClick() -> performClick
    2711:2715:void removeBadge() -> removeBadge
    2566:2568:void reset() -> reset
    2447:2467:void setSelected(boolean) -> setSelected
    2559:2563:void setTab(com.google.android.material.tabs.TabLayout$Tab) -> setTab
    2774:2783:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    2786:2794:void tryRemoveBadgeFromAnchor() -> tryRemoveBadgeFromAnchor
    2742:2771:void tryUpdateBadgeAnchor() -> tryUpdateBadgeAnchor
    2887:2890:void tryUpdateBadgeDrawableBounds(android.view.View) -> tryUpdateBadgeDrawableBounds
    2571:2648:void update() -> update
    2354:2396:void updateBackgroundDrawable(android.content.Context) -> updateBackgroundDrawable
    2809:2815:void updateOrientation() -> updateOrientation
    2819:2883:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> updateTextAndIcon
com.google.android.material.tabs.TabLayout$TabView$1 -> com.google.android.material.tabs.TabLayout$TabView$1:
# {"id":"sourceFile","fileName":"TabLayout.java"}
    2722:2722:void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> <init>
    2734:2737:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener:
    3395:3397:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3412:3412:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    3401:3402:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    3407:3407:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
com.google.android.material.tabs.TabLayoutMediator -> com.google.android.material.tabs.TabLayoutMediator:
    79:80:void <init>(com.google.android.material.tabs.TabLayout,androidx.viewpager2.widget.ViewPager2,com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy) -> <init>
    87:88:void <init>(com.google.android.material.tabs.TabLayout,androidx.viewpager2.widget.ViewPager2,boolean,com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy) -> <init>
    95:101:void <init>(com.google.android.material.tabs.TabLayout,androidx.viewpager2.widget.ViewPager2,boolean,boolean,com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy) -> <init>
    112:142:void attach() -> attach
    150:160:void detach() -> detach
    166:166:boolean isAttached() -> isAttached
    171:189:void populateTabsFromPagerAdapter() -> populateTabsFromPagerAdapter
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver -> com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver:
    283:283:void <init>(com.google.android.material.tabs.TabLayoutMediator) -> <init>
    287:288:void onChanged() -> onChanged
    292:293:void onItemRangeChanged(int,int) -> onItemRangeChanged
    297:298:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    302:303:void onItemRangeInserted(int,int) -> onItemRangeInserted
    312:313:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    307:308:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback -> com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback:
    204:207:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    211:213:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    217:230:void onPageScrolled(int,float,int) -> onPageScrolled
    234:246:void onPageSelected(int) -> onPageSelected
    249:250:void reset() -> reset
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener:
    261:264:void <init>(androidx.viewpager2.widget.ViewPager2,boolean) -> <init>
    279:279:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    268:269:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    274:274:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    46:109:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    40:40:boolean access$000(android.text.Editable) -> access$000
    40:40:void access$100(com.google.android.material.textfield.ClearTextEndIconDelegate,boolean) -> access$100
    40:40:android.view.View$OnFocusChangeListener access$200(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$200
    40:40:android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$300
    143:157:void animateIcon(boolean) -> animateIcon
    182:194:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    198:210:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    214:214:boolean hasText(android.text.Editable) -> hasText
    160:179:void initAnimators() -> initAnimators
    113:132:void initialize() -> initialize
    136:140:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    47:47:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    56:60:void afterTextChanged(android.text.Editable) -> afterTextChanged
    49:49:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    52:52:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    63:63:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    66:68:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$3:
    71:71:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    74:81:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.ClearTextEndIconDelegate$4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4:
    84:84:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    87:101:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$4$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4$1:
# {"id":"sourceFile","fileName":"ClearTextEndIconDelegate.java"}
    91:91:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate$4,android.widget.EditText) -> <init>
    94:95:void run() -> run
com.google.android.material.textfield.ClearTextEndIconDelegate$5 -> com.google.android.material.textfield.ClearTextEndIconDelegate$5:
    118:118:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    121:127:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.ClearTextEndIconDelegate$6 -> com.google.android.material.textfield.ClearTextEndIconDelegate$6:
    165:165:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    168:169:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$7 -> com.google.android.material.textfield.ClearTextEndIconDelegate$7:
    173:173:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    176:177:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.ClearTextEndIconDelegate$8 -> com.google.android.material.textfield.ClearTextEndIconDelegate$8:
    186:186:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    189:191:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.ClearTextEndIconDelegate$9 -> com.google.android.material.textfield.ClearTextEndIconDelegate$9:
    202:202:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    205:208:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    27:28:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    32:34:void initialize() -> initialize
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    44:45:void <init>() -> <init>
    48:52:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:94:void draw(android.graphics.Canvas) -> draw
    61:61:boolean hasCutout() -> hasCutout
    121:124:void postDraw(android.graphics.Canvas) -> postDraw
    97:109:void preDraw(android.graphics.Canvas) -> preDraw
    82:83:void removeCutout() -> removeCutout
    112:118:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    67:74:void setCutout(float,float,float,float) -> setCutout
    77:78:void setCutout(android.graphics.RectF) -> setCutout
    55:58:void setPaintStyles() -> setPaintStyles
    127:127:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    69:69:void <clinit>() -> <clinit>
    73:203:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    67:67:android.widget.AutoCompleteTextView access$000(android.widget.EditText) -> access$000
    67:67:android.view.accessibility.AccessibilityManager access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$100
    67:67:com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1000
    67:67:android.view.View$OnFocusChangeListener access$1100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1100
    67:67:boolean access$1200() -> access$1200
    67:67:boolean access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1300
    67:67:long access$1402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long) -> access$1402
    67:67:boolean access$1500(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1500
    67:67:android.animation.ValueAnimator access$1600(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1600
    67:67:boolean access$200(android.widget.EditText) -> access$200
    67:67:void access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$300
    67:67:boolean access$402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$402
    67:67:void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$500
    67:67:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$600
    67:67:void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$700
    67:67:void access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$800
    67:67:android.text.TextWatcher access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$900
    311:328:void addRippleEffect(android.widget.AutoCompleteTextView) -> addRippleEffect
    366:388:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnFilledLayout
    336:359:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnOutlinedLayout
    444:450:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    479:491:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    424:434:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> getPopUpMaterialShapeDrawable
    466:476:void initAnimators() -> initAnimators
    207:261:void initialize() -> initialize
    270:270:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    438:439:boolean isDropdownPopupActive() -> isDropdownPopupActive
    454:454:boolean isEditable(android.widget.EditText) -> isEditable
    458:463:void setEndIconChecked(boolean) -> setEndIconChecked
    299:307:void setPopupBackground(android.widget.AutoCompleteTextView) -> setPopupBackground
    394:419:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> setUpDropdownShowHideBehavior
    265:265:boolean shouldTintIconOnError() -> shouldTintIconOnError
    274:296:void showHideDropdown(android.widget.AutoCompleteTextView) -> showHideDropdown
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    74:74:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    78:95:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    87:87:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    90:93:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$10 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$10:
    483:483:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    486:488:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$2:
    98:98:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    101:106:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$3:
    109:109:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout) -> <init>
    113:123:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    127:138:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$4:
    141:141:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    144:161:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5:
    167:167:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    170:189:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1:
# {"id":"sourceFile","fileName":"DropdownMenuEndIconDelegate.java"}
    175:175:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$5,android.widget.AutoCompleteTextView) -> <init>
    178:179:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$6:
    249:249:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    252:254:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$7:
    395:395:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    398:404:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$8:
    410:410:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    413:416:void onDismiss() -> onDismiss
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$9:
    469:469:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    472:474:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    36:40:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    61:61:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    70:70:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
    52:52:boolean shouldTintIconOnError() -> shouldTintIconOnError
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    121:126:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    62:62:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    62:62:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    62:62:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    391:416:void addIndicator(android.widget.TextView,int) -> addIndicator
    356:377:void adjustIndicatorPadding() -> adjustIndicatorPadding
    380:380:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    333:336:void cancelCaptionAnimator() -> cancelCaptionAnimator
    303:314:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    317:321:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    325:329:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    515:515:boolean errorIsDisplayed() -> errorIsDisplayed
    519:519:boolean errorShouldBeShown() -> errorShouldBeShown
    344:352:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    599:599:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    544:544:java.lang.CharSequence getErrorText() -> getErrorText
    568:568:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    573:573:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    548:548:java.lang.CharSequence getHelperText() -> getHelperText
    609:609:android.content.res.ColorStateList getHelperTextViewColors() -> getHelperTextViewColors
    604:604:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    385:386:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    529:529:boolean helperTextIsDisplayed() -> helperTextIsDisplayed
    533:533:boolean helperTextShouldBeShown() -> helperTextShouldBeShown
    166:180:void hideError() -> hideError
    142:150:void hideHelperText() -> hideHelperText
    523:525:boolean isCaptionStateError(int) -> isCaptionStateError
    537:539:boolean isCaptionStateHelperText(int) -> isCaptionStateHelperText
    339:339:boolean isCaptionView(int) -> isCaptionView
    473:473:boolean isErrorEnabled() -> isErrorEnabled
    477:477:boolean isHelperTextEnabled() -> isHelperTextEnabled
    419:430:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    270:293:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    591:595:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    440:470:void setErrorEnabled(boolean) -> setErrorEnabled
    584:588:void setErrorTextAppearance(int) -> setErrorTextAppearance
    577:581:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    620:624:void setHelperTextAppearance(int) -> setHelperTextAppearance
    482:512:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    613:617:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    561:564:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    553:558:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    433:436:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    192:196:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    153:163:void showError(java.lang.CharSequence) -> showError
    129:139:void showHelper(java.lang.CharSequence) -> showHelper
    204:266:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    234:234:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    237:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    254:257:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
    65:66:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:131:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    56:56:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    241:248:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    169:173:java.lang.CharSequence getHint() -> getHint
    193:236:int measureContentWidth() -> measureContentWidth
    150:162:void onAttachedToWindow() -> onAttachedToWindow
    178:190:void onMeasure(int,int) -> onMeasure
    144:146:void setAdapter(android.widget.ListAdapter) -> setAdapter
    135:140:void showDropDown() -> showDropDown
    253:261:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
    107:107:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    110:127:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:27:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    31:34:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    36:82:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    34:34:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$000
    34:34:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$100
    123:125:boolean hasPasswordTransformation() -> hasPasswordTransformation
    86:120:void initialize() -> initialize
    129:133:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$1:
    37:37:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    42:43:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$2:
    47:47:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    50:57:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    60:60:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    63:77:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1:
# {"id":"sourceFile","fileName":"PasswordToggleEndIconDelegate.java"}
    70:70:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate$3,android.widget.EditText) -> <init>
    73:74:void run() -> run
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$4:
    91:91:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    94:111:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    206:222:java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout) -> getAccessibilityNodeInfoText
    153:161:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    165:173:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    100:104:java.lang.CharSequence getHint() -> getHint
    133:134:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    121:128:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    148:148:boolean isTextInputLayoutFocusedRectEnabled() -> isTextInputLayoutFocusedRectEnabled
    81:93:void onAttachedToWindow() -> onAttachedToWindow
    110:116:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    194:202:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    178:189:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    141:142:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    181:181:void <clinit>() -> <clinit>
    424:425:void <init>(android.content.Context) -> <init>
    428:429:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:852:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    179:179:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    179:179:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    179:179:void access$200(com.google.android.material.textfield.TextInputLayout,int) -> access$200
    179:179:com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    3569:3573:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    3541:3542:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    2315:2319:void addPlaceholderTextView() -> addPlaceholderTextView
    857:874:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    986:1010:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4300:4317:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2751:2769:void applyBoxAttributes() -> applyBoxAttributes
    2773:2781:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4105:4107:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    3832:3834:void applyEndIconTint() -> applyEndIconTint
    3946:3961:void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode) -> applyIconTint
    3800:3806:void applyStartIconTint() -> applyStartIconTint
    932:953:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2742:2747:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2649:2672:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2721:2727:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2713:2716:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2696:2709:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2632:2643:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2784:2784:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2788:2788:boolean canDrawStroke() -> canDrawStroke
    3587:3588:void clearOnEditTextAttachedListeners() -> clearOnEditTextAttachedListeners
    3556:3557:void clearOnEndIconChangedListeners() -> clearOnEndIconChangedListeners
    4099:4102:void closeCutout() -> closeCutout
    4051:4067:void collapseHint(boolean) -> collapseHint
    4070:4070:boolean cutoutEnabled() -> cutoutEnabled
    4111:4111:boolean cutoutIsOpen() -> cutoutIsOpen
    3794:3797:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    3813:3816:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    1351:1387:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    2937:2940:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4030:4033:void draw(android.graphics.Canvas) -> draw
    4042:4048:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4036:4039:void drawHint(android.graphics.Canvas) -> drawHint
    4116:4146:void drawableStateChanged() -> drawableStateChanged
    4280:4296:void expandHint(boolean) -> expandHint
    1496:1499:int getBaseline() -> getBaseline
    878:881:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1224:1224:int getBoxBackgroundColor() -> getBoxBackgroundColor
    917:917:int getBoxBackgroundMode() -> getBoxBackgroundMode
    1308:1308:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    1318:1318:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    1298:1298:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    1288:1288:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    1107:1107:int getBoxStrokeColor() -> getBoxStrokeColor
    1157:1157:android.content.res.ColorStateList getBoxStrokeErrorColor() -> getBoxStrokeErrorColor
    1045:1045:int getBoxStrokeWidth() -> getBoxStrokeWidth
    1082:1082:int getBoxStrokeWidthFocused() -> getBoxStrokeWidthFocused
    2577:2577:int getCounterMaxLength() -> getCounterMaxLength
    2586:2589:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    2150:2150:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    2107:2107:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1808:1808:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    1552:1552:android.widget.EditText getEditText() -> getEditText
    3493:3493:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3789:3790:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    3453:3453:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3297:3297:int getEndIconMode() -> getEndIconMode
    3931:3936:com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable() -> getEndIconToUpdateDummyDrawable
    3785:3785:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    2950:2950:java.lang.CharSequence getError() -> getError
    1940:1940:java.lang.CharSequence getErrorContentDescription() -> getErrorContentDescription
    1839:1839:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2000:2000:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    4341:4341:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    2962:2963:java.lang.CharSequence getHelperText() -> getHelperText
    1916:1916:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1680:1680:java.lang.CharSequence getHint() -> getHint
    4336:4336:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4331:4331:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1789:1789:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2677:2682:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2686:2691:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    1634:1634:int getMaxWidth() -> getMaxWidth
    1593:1593:int getMinWidth() -> getMinWidth
    3678:3678:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    3664:3664:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2260:2260:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    2371:2371:int getPlaceholderTextAppearance() -> getPlaceholderTextAppearance
    2348:2348:android.content.res.ColorStateList getPlaceholderTextColor() -> getPlaceholderTextColor
    2396:2396:java.lang.CharSequence getPrefixText() -> getPrefixText
    2433:2433:android.content.res.ColorStateList getPrefixTextColor() -> getPrefixTextColor
    2409:2409:android.widget.TextView getPrefixTextView() -> getPrefixTextView
    3224:3224:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3107:3107:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    2482:2482:java.lang.CharSequence getSuffixText() -> getSuffixText
    2524:2524:android.content.res.ColorStateList getSuffixTextColor() -> getSuffixTextColor
    2495:2495:android.widget.TextView getSuffixTextView() -> getSuffixTextView
    1345:1345:android.graphics.Typeface getTypeface() -> getTypeface
    3809:3809:boolean hasEndIcon() -> hasEndIcon
    2308:2312:void hidePlaceholderText() -> hidePlaceholderText
    2160:2160:boolean isCounterEnabled() -> isCounterEnabled
    3415:3415:boolean isEndIconCheckable() -> isEndIconCheckable
    3375:3375:boolean isEndIconVisible() -> isEndIconVisible
    1863:1863:boolean isErrorEnabled() -> isErrorEnabled
    4249:4249:boolean isErrorIconVisible() -> isErrorIconVisible
    2995:2995:boolean isExpandedHintEnabled() -> isExpandedHintEnabled
    4326:4326:boolean isHelperTextDisplayed() -> isHelperTextDisplayed
    1910:1910:boolean isHelperTextEnabled() -> isHelperTextEnabled
    2974:2974:boolean isHintAnimationEnabled() -> isHintAnimationEnabled
    1733:1733:boolean isHintEnabled() -> isHintEnabled
    4321:4321:boolean isHintExpanded() -> isHintExpanded
    3689:3689:boolean isPasswordVisibilityToggleEnabled() -> isPasswordVisibilityToggleEnabled
    1745:1745:boolean isProvidingHint() -> isProvidingHint
    2731:2732:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    3184:3184:boolean isStartIconCheckable() -> isStartIconCheckable
    3153:3153:boolean isStartIconVisible() -> isStartIconVisible
    4268:4276:int[] mergeIconState(com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    921:929:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    3995:4019:void onLayout(boolean,int,int,int,int) -> onLayout
    3014:3030:void onMeasure(int,int) -> onMeasure
    2910:2933:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2896:2905:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4074:4088:void openCutout() -> openCutout
    3761:3767:void passwordVisibilityToggleRequested(boolean) -> passwordVisibilityToggleRequested
    2562:2569:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3392:3393:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    3353:3354:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    4254:4265:void refreshIconDrawableState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    3161:3162:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    3582:3583:void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> removeOnEditTextAttachedListener
    3551:3552:void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> removeOnEndIconChangedListener
    2322:2325:void removePlaceholderTextView() -> removePlaceholderTextView
    1185:1192:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    1170:1171:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    1204:1215:void setBoxBackgroundColorStateList(android.content.res.ColorStateList) -> setBoxBackgroundColorStateList
    900:907:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    1265:1279:void setBoxCornerRadii(float,float,float,float) -> setBoxCornerRadii
    1241:1246:void setBoxCornerRadiiResources(int,int,int,int) -> setBoxCornerRadiiResources
    1094:1098:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1116:1132:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1143:1147:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    1034:1036:void setBoxStrokeWidth(int) -> setBoxStrokeWidth
    1071:1073:void setBoxStrokeWidthFocused(int) -> setBoxStrokeWidthFocused
    1059:1060:void setBoxStrokeWidthFocusedResource(int) -> setBoxStrokeWidthFocusedResource
    1022:1023:void setBoxStrokeWidthResource(int) -> setBoxStrokeWidthResource
    2047:2067:void setCounterEnabled(boolean) -> setCounterEnabled
    2170:2180:void setCounterMaxLength(int) -> setCounterMaxLength
    2118:2122:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2134:2138:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2077:2081:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2092:2096:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1794:1800:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    1391:1478:void setEditText(android.widget.EditText) -> setEditText
    957:960:void setEditTextBoxBackground() -> setEditTextBoxBackground
    2557:2559:void setEnabled(boolean) -> setEnabled
    3384:3385:void setEndIconActivated(boolean) -> setEndIconActivated
    3406:3407:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3466:3467:void setEndIconContentDescription(int) -> setEndIconContentDescription
    3480:3483:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3428:3429:void setEndIconDrawable(int) -> setEndIconDrawable
    3441:3443:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3272:3286:void setEndIconMode(int) -> setEndIconMode
    3308:3309:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3331:3333:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3508:3513:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3524:3529:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3362:3367:void setEndIconVisible(boolean) -> setEndIconVisible
    1954:1968:void setError(java.lang.CharSequence) -> setError
    1930:1931:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1819:1820:void setErrorEnabled(boolean) -> setErrorEnabled
    1977:1979:void setErrorIconDrawable(int) -> setErrorIconDrawable
    1988:1990:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    3319:3320:void setErrorIconOnClickListener(android.view.View$OnClickListener) -> setErrorIconOnClickListener
    3344:3346:void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener) -> setErrorIconOnLongClickListener
    2010:2020:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2030:2039:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    4240:4246:void setErrorIconVisible(boolean) -> setErrorIconVisible
    1828:1829:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1833:1834:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    3006:3010:void setExpandedHintEnabled(boolean) -> setExpandedHintEnabled
    1891:1901:void setHelperText(java.lang.CharSequence) -> setHelperText
    1853:1854:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1874:1875:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1848:1849:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1644:1648:void setHint(java.lang.CharSequence) -> setHint
    1658:1659:void setHint(int) -> setHint
    2984:2985:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1695:1724:void setHintEnabled(boolean) -> setHintEnabled
    1662:1670:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1754:1762:void setHintTextAppearance(int) -> setHintTextAppearance
    1769:1780:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    3979:3991:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    3967:3969:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    3973:3975:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    1606:1610:void setMaxWidth(int) -> setMaxWidth
    1622:1623:void setMaxWidthResource(int) -> setMaxWidthResource
    1565:1569:void setMinWidth(int) -> setMinWidth
    1581:1582:void setMinWidthResource(int) -> setMinWidthResource
    3634:3636:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    3651:3652:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    3602:3604:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    3618:3619:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    3704:3711:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    3727:3730:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    3743:3746:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2240:2250:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2358:2362:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2333:2339:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2265:2285:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2383:2386:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2442:2443:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2423:2424:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    3175:3176:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3197:3198:void setStartIconContentDescription(int) -> setStartIconContentDescription
    3211:3214:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3073:3074:void setStartIconDrawable(int) -> setStartIconDrawable
    3086:3096:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3118:3119:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3130:3132:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3239:3244:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3255:3260:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3140:3145:void setStartIconVisible(boolean) -> setStartIconVisible
    2469:2472:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2533:2534:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2514:2515:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2607:2629:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3778:3781:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1328:1338:void setTypeface(android.graphics.Typeface) -> setTypeface
    3923:3926:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    3918:3919:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    965:967:boolean shouldUseEditTextBackgroundForBoxBackground() -> shouldUseEditTextBackgroundForBoxBackground
    2300:2305:void showPlaceholderText() -> showPlaceholderText
    3819:3829:void tintEndIconOnError(boolean) -> tintEndIconOnError
    972:983:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4022:4026:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2183:2186:void updateCounter() -> updateCounter
    2189:2213:void updateCounter(int) -> updateCounter
    2221:2228:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2593:2603:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    4092:4096:void updateCutout() -> updateCutout
    3841:3914:boolean updateDummyDrawables() -> updateDummyDrawables
    2794:2823:void updateEditTextBackground() -> updateEditTextBackground
    3033:3046:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    1483:1492:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1504:1505:void updateLabelState(boolean) -> updateLabelState
    1508:1547:void updateLabelState(boolean,boolean) -> updateLabelState
    3050:3061:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2288:2289:void updatePlaceholderText() -> updatePlaceholderText
    2292:2297:void updatePlaceholderText(int) -> updatePlaceholderText
    2446:2458:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    2413:2415:void updatePrefixTextVisibility() -> updatePrefixTextVisibility
    4221:4237:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    2537:2550:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    2499:2506:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
    4149:4218:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1419:1419:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1422:1429:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1432:1432:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1435:1435:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    2920:2920:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2923:2926:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    3020:3020:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3023:3024:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    4308:4308:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4311:4312:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    4353:4355:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4360:4410:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2871:2871:void <clinit>() -> <clinit>
    2833:2834:void <init>(android.os.Parcelable) -> <init>
    2837:2843:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2858:2859:java.lang.String toString() -> toString
    2847:2853:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
# {"id":"sourceFile","fileName":"TextInputLayout.java"}
    2872:2872:void <init>() -> <init>
    2872:2872:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2872:2872:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2876:2876:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2882:2882:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2872:2872:java.lang.Object[] newArray(int) -> newArray
    2888:2888:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    79:80:void <init>(android.content.Context) -> <init>
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:107:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    119:131:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    134:134:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    172:178:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    141:147:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    111:116:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    156:167:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
    48:51:void <clinit>() -> <clinit>
    45:46:void <init>() -> <init>
    94:99:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:118:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    66:84:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:49:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    49:49:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    145:149:void addInputFilter(android.text.InputFilter) -> addInputFilter
    123:123:java.lang.String formatText(java.lang.CharSequence) -> formatText
    152:152:com.google.android.material.textfield.TextInputLayout getTextInput() -> getTextInput
    92:92:boolean isChecked() -> isChecked
    176:178:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    97:106:void setChecked(boolean) -> setChecked
    156:157:void setChipDelegate(androidx.core.view.AccessibilityDelegateCompat) -> setChipDelegate
    141:142:void setCursorVisible(boolean) -> setCursorVisible
    137:138:void setHelperText(java.lang.CharSequence) -> setHelperText
    128:129:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    133:134:void setTag(int,java.lang.Object) -> setTag
    114:120:void setText(java.lang.CharSequence) -> setText
    110:111:void toggle() -> toggle
    83:88:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
    159:159:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    159:159:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    165:171:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClickActionDelegate -> com.google.android.material.timepicker.ClickActionDelegate:
    28:32:void <init>(android.content.Context,int) -> <init>
    36:38:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
    89:90:void <init>(android.content.Context) -> <init>
    93:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:178:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:62:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    62:62:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    62:62:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    251:266:void findIntersectingTextView() -> findIntersectingTextView
    269:276:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.graphics.RectF) -> getGradientForTextView
    308:308:float max3(float,float,float) -> max3
    221:229:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    241:243:void onLayout(boolean,int,int,int,int) -> onLayout
    292:305:void onMeasure(int,int) -> onMeasure
    284:288:void onRotate(float,boolean) -> onRotate
    246:248:void setHandRotation(float) -> setHandRotation
    233:237:void setRadius(int) -> setRadius
    185:187:void setValues(java.lang.String[],int) -> setValues
    190:217:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
    132:132:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    135:142:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
    149:149:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    153:167:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
    87:88:void <init>(android.content.Context) -> <init>
    91:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:116:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:void access$000(com.google.android.material.timepicker.ClockHandView,float,boolean) -> access$000
    209:210:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    229:252:void drawSelector(android.graphics.Canvas) -> drawSelector
    256:256:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    334:342:int getDegreesFromXY(float,float) -> getDegreesFromXY
    218:218:float getHandRotation() -> getHandRotation
    261:261:int getSelectorRadius() -> getSelectorRadius
    161:176:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    319:330:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    223:226:void onDraw(android.graphics.Canvas) -> onDraw
    120:123:void onLayout(boolean,int,int,int,int) -> onLayout
    276:314:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    205:206:void setAnimateOnTouchUp(boolean) -> setAnimateOnTouchUp
    269:271:void setCircleRadius(int) -> setCircleRadius
    126:127:void setHandRotation(float) -> setHandRotation
    130:158:void setHandRotation(float,boolean) -> setHandRotation
    181:202:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
    213:214:void setOnActionUpListener(com.google.android.material.timepicker.ClockHandView$OnActionUpListener) -> setOnActionUpListener
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
    142:142:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    145:147:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.timepicker.ClockHandView$2 -> com.google.android.material.timepicker.ClockHandView$2:
    150:150:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    153:154:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.MaterialTimePicker -> com.google.android.material.timepicker.MaterialTimePicker:
    59:99:void <init>() -> <init>
    59:59:java.util.Set access$1000(com.google.android.material.timepicker.MaterialTimePicker) -> access$1000
    59:59:com.google.android.material.timepicker.MaterialTimePicker access$1100(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$1100
    59:59:int access$500(com.google.android.material.timepicker.MaterialTimePicker) -> access$500
    59:59:int access$502(com.google.android.material.timepicker.MaterialTimePicker,int) -> access$502
    59:59:com.google.android.material.button.MaterialButton access$600(com.google.android.material.timepicker.MaterialTimePicker) -> access$600
    59:59:void access$700(com.google.android.material.timepicker.MaterialTimePicker,com.google.android.material.button.MaterialButton) -> access$700
    59:59:com.google.android.material.timepicker.TimePickerTextInputPresenter access$800(com.google.android.material.timepicker.MaterialTimePicker) -> access$800
    59:59:java.util.Set access$900(com.google.android.material.timepicker.MaterialTimePicker) -> access$900
    396:396:boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener) -> addOnCancelListener
    420:420:boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener) -> addOnDismissListener
    368:368:boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener) -> addOnNegativeButtonClickListener
    347:347:boolean addOnPositiveButtonClickListener(android.view.View$OnClickListener) -> addOnPositiveButtonClickListener
    412:413:void clearOnCancelListeners() -> clearOnCancelListeners
    436:437:void clearOnDismissListeners() -> clearOnDismissListeners
    384:385:void clearOnNegativeButtonClickListeners() -> clearOnNegativeButtonClickListeners
    363:364:void clearOnPositiveButtonClickListeners() -> clearOnPositiveButtonClickListeners
    330:337:android.util.Pair dataForMode(int) -> dataForMode
    125:125:int getHour() -> getHour
    130:130:int getInputMode() -> getInputMode
    119:119:int getMinute() -> getMinute
    440:444:int getThemeResId() -> getThemeResId
    342:342:com.google.android.material.timepicker.TimePickerClockPresenter getTimePickerClockPresenter() -> getTimePickerClockPresenter
    310:326:com.google.android.material.timepicker.TimePickerPresenter initializeOrRetrieveActivePresenterForMode(int) -> initializeOrRetrieveActivePresenterForMode
    103:114:com.google.android.material.timepicker.MaterialTimePicker newInstance(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> newInstance
    281:285:void onCancel(android.content.DialogInterface) -> onCancel
    174:176:void onCreate(android.os.Bundle) -> onCreate
    136:169:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    209:267:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    289:294:void onDismiss(android.content.DialogInterface) -> onDismiss
    180:186:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    272:277:void onStop() -> onStop
    404:404:boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener) -> removeOnCancelListener
    428:428:boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener) -> removeOnDismissListener
    376:376:boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener) -> removeOnNegativeButtonClickListener
    355:355:boolean removeOnPositiveButtonClickListener(android.view.View$OnClickListener) -> removeOnPositiveButtonClickListener
    189:201:void restoreState(android.os.Bundle) -> restoreState
    297:307:void updateInputMode(com.google.android.material.button.MaterialButton) -> updateInputMode
com.google.android.material.timepicker.MaterialTimePicker$1 -> com.google.android.material.timepicker.MaterialTimePicker$1:
    213:213:void <init>(com.google.android.material.timepicker.MaterialTimePicker) -> <init>
    216:219:void onDoubleTap() -> onDoubleTap
com.google.android.material.timepicker.MaterialTimePicker$2 -> com.google.android.material.timepicker.MaterialTimePicker$2:
    236:236:void <init>(com.google.android.material.timepicker.MaterialTimePicker) -> <init>
    239:243:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.MaterialTimePicker$3 -> com.google.android.material.timepicker.MaterialTimePicker$3:
    248:248:void <init>(com.google.android.material.timepicker.MaterialTimePicker) -> <init>
    251:255:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.MaterialTimePicker$4 -> com.google.android.material.timepicker.MaterialTimePicker$4:
    259:259:void <init>(com.google.android.material.timepicker.MaterialTimePicker) -> <init>
    262:264:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.MaterialTimePicker$Builder -> com.google.android.material.timepicker.MaterialTimePicker$Builder:
    448:455:void <init>() -> <init>
    448:448:com.google.android.material.timepicker.TimeModel access$000(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$000
    448:448:int access$100(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$100
    448:448:int access$200(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$200
    448:448:int access$300(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$300
    448:448:java.lang.CharSequence access$400(com.google.android.material.timepicker.MaterialTimePicker$Builder) -> access$400
    527:527:com.google.android.material.timepicker.MaterialTimePicker build() -> build
    472:473:com.google.android.material.timepicker.MaterialTimePicker$Builder setHour(int) -> setHour
    460:461:com.google.android.material.timepicker.MaterialTimePicker$Builder setInputMode(int) -> setInputMode
    479:480:com.google.android.material.timepicker.MaterialTimePicker$Builder setMinute(int) -> setMinute
    520:521:com.google.android.material.timepicker.MaterialTimePicker$Builder setTheme(int) -> setTheme
    491:496:com.google.android.material.timepicker.MaterialTimePicker$Builder setTimeFormat(int) -> setTimeFormat
    504:505:com.google.android.material.timepicker.MaterialTimePicker$Builder setTitleText(int) -> setTitleText
    513:514:com.google.android.material.timepicker.MaterialTimePicker$Builder setTitleText(java.lang.CharSequence) -> setTitleText
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
    26:28:void <init>(int) -> <init>
    42:52:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    35:35:int getMax() -> getMax
    31:32:void setMax(int) -> setMax
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    94:99:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    80:83:android.graphics.drawable.Drawable createBackground() -> createBackground
    158:158:int getRadius() -> getRadius
    119:121:void onFinishInflate() -> onFinishInflate
    103:106:void onViewRemoved(android.view.View) -> onViewRemoved
    89:90:void setBackgroundColor(int) -> setBackgroundColor
    152:154:void setRadius(int) -> setRadius
    162:162:boolean shouldSkipView(android.view.View) -> shouldSkipView
    125:149:void updateLayoutParams() -> updateLayoutParams
    110:115:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$1 -> com.google.android.material.timepicker.RadialViewGroup$1:
    70:70:void <init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
    73:74:void run() -> run
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
    159:159:void <clinit>() -> <clinit>
    52:53:void <init>() -> <init>
    56:57:void <init>(int) -> <init>
    59:67:void <init>(int,int,int,int) -> <init>
    70:71:void <init>(android.os.Parcel) -> <init>
    147:147:int describeContents() -> describeContents
    130:139:boolean equals(java.lang.Object) -> equals
    183:183:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    187:190:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    99:111:int getHourForDisplay() -> getHourForDisplay
    119:119:com.google.android.material.timepicker.MaxInputValidator getHourInputValidator() -> getHourInputValidator
    115:115:com.google.android.material.timepicker.MaxInputValidator getMinuteInputValidator() -> getMinuteInputValidator
    81:81:int getPeriod(int) -> getPeriod
    124:125:int hashCode() -> hashCode
    86:92:void setHour(int) -> setHour
    75:77:void setHourOfDay(int) -> setHourOfDay
    95:96:void setMinute(int) -> setMinute
    172:180:void setPeriod(int) -> setPeriod
    152:156:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerClockPresenter -> com.google.android.material.timepicker.TimePickerClockPresenter:
    47:53:void <clinit>() -> <clinit>
    64:70:void <init>(com.google.android.material.timepicker.TimePickerView,com.google.android.material.timepicker.TimeModel) -> <init>
    110:110:int getDegreesPerHour() -> getDegreesPerHour
    106:106:java.lang.String[] getHourClockValues() -> getHourClockValues
    102:103:void hide() -> hide
    74:84:void initialize() -> initialize
    88:93:void invalidate() -> invalidate
    174:202:void onActionUp(float,boolean) -> onActionUp
    153:154:void onPeriodChange(int) -> onPeriodChange
    115:137:void onRotate(float,boolean) -> onRotate
    148:149:void onSelectionChanged(int) -> onSelectionChanged
    140:144:void performHapticFeedback(int,int) -> performHapticFeedback
    157:170:void setSelection(int,boolean) -> setSelection
    97:98:void show() -> show
    205:206:void updateTime() -> updateTime
    210:213:void updateValues() -> updateValues
    216:219:void updateValues(java.lang.String[],java.lang.String) -> updateValues
com.google.android.material.timepicker.TimePickerTextInputKeyController -> com.google.android.material.timepicker.TimePickerTextInputKeyController:
    47:56:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.TimeModel) -> <init>
    60:71:void bind() -> bind
    74:77:void moveSelection(int) -> moveSelection
    81:86:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    119:136:boolean onHourKeyPress(int,android.view.KeyEvent,android.widget.EditText) -> onHourKeyPress
    91:102:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    106:115:boolean onMinuteKeyPress(int,android.view.KeyEvent,android.widget.EditText) -> onMinuteKeyPress
com.google.android.material.timepicker.TimePickerTextInputPresenter -> com.google.android.material.timepicker.TimePickerTextInputPresenter:
    58:145:void <init>(android.widget.LinearLayout,com.google.android.material.timepicker.TimeModel) -> <init>
    54:54:com.google.android.material.timepicker.TimeModel access$000(com.google.android.material.timepicker.TimePickerTextInputPresenter) -> access$000
    155:157:void addTextWatchers() -> addTextWatchers
    268:270:void clearCheck() -> clearCheck
    217:229:void hide() -> hide
    149:152:void initialize() -> initialize
    233:234:void invalidate() -> invalidate
    204:208:void onSelectionChanged(int) -> onSelectionChanged
    160:162:void removeTextWatchers() -> removeTextWatchers
    263:265:void resetChecked() -> resetChecked
    243:260:void setCursorDrawableColor(android.widget.EditText,int) -> setCursorDrawableColor
    165:173:void setTime(com.google.android.material.timepicker.TimeModel) -> setTime
    176:189:void setupPeriodToggle() -> setupPeriodToggle
    212:213:void show() -> show
    192:200:void updateSelection() -> updateSelection
com.google.android.material.timepicker.TimePickerTextInputPresenter$1 -> com.google.android.material.timepicker.TimePickerTextInputPresenter$1:
    59:59:void <init>(com.google.android.material.timepicker.TimePickerTextInputPresenter) -> <init>
    63:72:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.TimePickerTextInputPresenter$2 -> com.google.android.material.timepicker.TimePickerTextInputPresenter$2:
    76:76:void <init>(com.google.android.material.timepicker.TimePickerTextInputPresenter) -> <init>
    80:89:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.TimePickerTextInputPresenter$3 -> com.google.android.material.timepicker.TimePickerTextInputPresenter$3:
    117:117:void <init>(com.google.android.material.timepicker.TimePickerTextInputPresenter) -> <init>
    120:121:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerTextInputPresenter$4 -> com.google.android.material.timepicker.TimePickerTextInputPresenter$4:
    179:179:void <init>(com.google.android.material.timepicker.TimePickerTextInputPresenter) -> <init>
    183:185:void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
    91:92:void <init>(android.content.Context) -> <init>
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:122:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    55:55:com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    55:55:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$200(com.google.android.material.timepicker.TimePickerView) -> access$200
    212:213:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    246:248:void onAttachedToWindow() -> onAttachedToWindow
    238:242:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    207:209:void setActiveSelection(int) -> setActiveSelection
    188:189:void setAnimateOnTouchUp(boolean) -> setAnimateOnTouchUp
    180:181:void setHandRotation(float) -> setHandRotation
    184:185:void setHandRotation(float,boolean) -> setHandRotation
    162:163:void setHourClickDelegate(androidx.core.view.AccessibilityDelegateCompat) -> setHourClickDelegate
    158:159:void setMinuteHourDelegate(androidx.core.view.AccessibilityDelegateCompat) -> setMinuteHourDelegate
    216:217:void setOnActionUpListener(com.google.android.material.timepicker.ClockHandView$OnActionUpListener) -> setOnActionUpListener
    229:230:void setOnDoubleTapListener(com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener) -> setOnDoubleTapListener
    220:221:void setOnPeriodChangeListener(com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener) -> setOnPeriodChangeListener
    225:226:void setOnSelectionChangeListener(com.google.android.material.timepicker.TimePickerView$OnSelectionChange) -> setOnSelectionChangeListener
    166:171:void setUpDisplay() -> setUpDisplay
    175:176:void setValues(java.lang.String[],int) -> setValues
    126:155:void setupDoubleTap() -> setupDoubleTap
    233:234:void showToggle() -> showToggle
    194:203:void updateTime(int,int,int) -> updateTime
    251:261:void updateToggleConstraints() -> updateToggleConstraints
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
    77:77:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    80:83:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
    104:104:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    108:112:void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
    129:129:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    132:137:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$4 -> com.google.android.material.timepicker.TimePickerView$4:
    142:142:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    145:149:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.tooltip.TooltipDrawable -> com.google.android.material.tooltip.TooltipDrawable:
    67:68:void <clinit>() -> <clinit>
    72:145:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    65:65:void access$000(com.google.android.material.tooltip.TooltipDrawable,android.view.View) -> access$000
    463:469:float calculatePointerOffset() -> calculatePointerOffset
    524:525:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    508:508:float calculateTextOriginAndAlignment(android.graphics.Rect) -> calculateTextOriginAndAlignment
    133:133:com.google.android.material.tooltip.TooltipDrawable create(android.content.Context) -> create
    118:121:com.google.android.material.tooltip.TooltipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    128:128:com.google.android.material.tooltip.TooltipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet) -> createFromAttributes
    473:478:com.google.android.material.shape.EdgeTreatment createMarkerEdge() -> createMarkerEdge
    387:391:void detachView(android.view.View) -> detachView
    405:432:void draw(android.graphics.Canvas) -> draw
    482:497:void drawText(android.graphics.Canvas) -> drawText
    400:400:int getIntrinsicHeight() -> getIntrinsicHeight
    395:395:int getIntrinsicWidth() -> getIntrinsicWidth
    329:329:int getLayoutMargin() -> getLayoutMargin
    285:285:int getMinHeight() -> getMinHeight
    263:263:int getMinWidth() -> getMinWidth
    197:197:java.lang.CharSequence getText() -> getText
    233:233:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    307:307:int getTextPadding() -> getTextPadding
    500:503:float getTextWidth() -> getTextWidth
    149:188:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    436:442:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    447:447:boolean onStateChange(int[]) -> onStateChange
    452:453:void onTextSizeChange() -> onTextSizeChange
    340:342:void setLayoutMargin(int) -> setLayoutMargin
    296:298:void setMinHeight(int) -> setMinHeight
    274:276:void setMinWidth(int) -> setMinWidth
    373:379:void setRelativeToView(android.view.View) -> setRelativeToView
    359:364:void setRevealFraction(float) -> setRevealFraction
    219:224:void setText(java.lang.CharSequence) -> setText
    253:254:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    243:244:void setTextAppearanceResource(int) -> setTextAppearanceResource
    318:320:void setTextPadding(int) -> setTextPadding
    208:209:void setTextResource(int) -> setTextResource
    456:460:void updateLocationOnScreen(android.view.View) -> updateLocationOnScreen
com.google.android.material.tooltip.TooltipDrawable$1 -> com.google.android.material.tooltip.TooltipDrawable$1:
    80:80:void <init>(com.google.android.material.tooltip.TooltipDrawable) -> <init>
    92:93:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    65:67:void <init>() -> <init>
    65:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    150:155:boolean didStateChange(boolean) -> didStateChange
    139:146:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    168:177:com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class) -> from
    126:133:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:120:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:114:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    46:46:void <init>() -> <init>
    49:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:97:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:87:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    79:89:void <init>() -> <init>
    79:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    668:686:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:628:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    542:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    632:641:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    646:655:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    561:582:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:608:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    612:623:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:532:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:492:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:256:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:222:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:452:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:365:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    774:785:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    751:762:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    267:305:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    735:739:int getBackgroundTint(android.view.View) -> getBackgroundTint
    99:109:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:120:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:193:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:730:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:178:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    342:342:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    345:346:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    353:353:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    362:363:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    357:358:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    405:405:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    410:413:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    788:788:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    52:55:void <init>() -> <init>
    52:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:126:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:103:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:94:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    53:53:void <init>() -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:72:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:127:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.android.material.transformation.TransformationChildCard -> com.google.android.material.transformation.TransformationChildCard:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transformation.TransformationChildLayout -> com.google.android.material.transformation.TransformationChildLayout:
    42:43:void <init>(android.content.Context) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transition.FadeModeEvaluators -> com.google.android.material.transition.FadeModeEvaluators:
    29:62:void <clinit>() -> <clinit>
    91:91:void <init>() -> <init>
    77:87:com.google.android.material.transition.FadeModeEvaluator get(int,boolean) -> get
com.google.android.material.transition.FadeModeEvaluators$1 -> com.google.android.material.transition.FadeModeEvaluators$1:
    30:30:void <init>() -> <init>
    34:36:com.google.android.material.transition.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.FadeModeEvaluators$2 -> com.google.android.material.transition.FadeModeEvaluators$2:
    41:41:void <init>() -> <init>
    45:47:com.google.android.material.transition.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.FadeModeEvaluators$3 -> com.google.android.material.transition.FadeModeEvaluators$3:
    52:52:void <init>() -> <init>
    56:58:com.google.android.material.transition.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.FadeModeEvaluators$4 -> com.google.android.material.transition.FadeModeEvaluators$4:
    63:63:void <init>() -> <init>
    67:72:com.google.android.material.transition.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.FadeModeResult -> com.google.android.material.transition.FadeModeResult:
    32:36:void <init>(int,int,boolean) -> <init>
    29:29:com.google.android.material.transition.FadeModeResult endOnTop(int,int) -> endOnTop
    25:25:com.google.android.material.transition.FadeModeResult startOnTop(int,int) -> startOnTop
com.google.android.material.transition.FadeProvider -> com.google.android.material.transition.FadeProvider:
    32:34:void <init>() -> <init>
    60:61:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    73:74:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    90:107:android.animation.Animator createFadeAnimator(android.view.View,float,float,float,float,float) -> createFadeAnimator
    42:42:float getIncomingEndThreshold() -> getIncomingEndThreshold
    54:55:void setIncomingEndThreshold(float) -> setIncomingEndThreshold
com.google.android.material.transition.FadeProvider$1 -> com.google.android.material.transition.FadeProvider$1:
    92:92:void <init>(android.view.View,float,float,float,float) -> <init>
    95:97:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.FadeProvider$2 -> com.google.android.material.transition.FadeProvider$2:
    100:100:void <init>(android.view.View,float) -> <init>
    104:105:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.FadeThroughProvider -> com.google.android.material.transition.FadeThroughProvider:
    36:40:void <init>() -> <init>
    65:66:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    78:79:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    95:112:android.animation.Animator createFadeThroughAnimator(android.view.View,float,float,float,float,float) -> createFadeThroughAnimator
    49:49:float getProgressThreshold() -> getProgressThreshold
    59:60:void setProgressThreshold(float) -> setProgressThreshold
com.google.android.material.transition.FadeThroughProvider$1 -> com.google.android.material.transition.FadeThroughProvider$1:
    97:97:void <init>(android.view.View,float,float,float,float) -> <init>
    100:102:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.FadeThroughProvider$2 -> com.google.android.material.transition.FadeThroughProvider$2:
    105:105:void <init>(android.view.View,float) -> <init>
    109:110:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.FitModeEvaluators -> com.google.android.material.transition.FitModeEvaluators:
    29:75:void <clinit>() -> <clinit>
    148:148:void <init>() -> <init>
    124:132:com.google.android.material.transition.FitModeEvaluator get(int,boolean,android.graphics.RectF,android.graphics.RectF) -> get
    138:145:boolean shouldAutoFitToWidth(boolean,android.graphics.RectF,android.graphics.RectF) -> shouldAutoFitToWidth
com.google.android.material.transition.FitModeEvaluators$1 -> com.google.android.material.transition.FitModeEvaluators$1:
    30:30:void <init>() -> <init>
    69:72:void applyMask(android.graphics.RectF,float,com.google.android.material.transition.FitModeResult) -> applyMask
    41:53:com.google.android.material.transition.FitModeResult evaluate(float,float,float,float,float,float,float) -> evaluate
    64:64:boolean shouldMaskStartBounds(com.google.android.material.transition.FitModeResult) -> shouldMaskStartBounds
com.google.android.material.transition.FitModeEvaluators$2 -> com.google.android.material.transition.FitModeEvaluators$2:
    76:76:void <init>() -> <init>
    115:119:void applyMask(android.graphics.RectF,float,com.google.android.material.transition.FitModeResult) -> applyMask
    87:99:com.google.android.material.transition.FitModeResult evaluate(float,float,float,float,float,float,float) -> evaluate
    110:110:boolean shouldMaskStartBounds(com.google.android.material.transition.FitModeResult) -> shouldMaskStartBounds
com.google.android.material.transition.FitModeResult -> com.google.android.material.transition.FitModeResult:
    33:40:void <init>(float,float,float,float,float,float) -> <init>
com.google.android.material.transition.Hold -> com.google.android.material.transition.Hold:
    32:32:void <init>() -> <init>
    41:41:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    51:51:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
com.google.android.material.transition.MaskEvaluator -> com.google.android.material.transition.MaskEvaluator:
    37:43:void <init>() -> <init>
    83:89:void clip(android.graphics.Canvas) -> clip
    59:79:void evaluate(float,com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,android.graphics.RectF,android.graphics.RectF,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> evaluate
    96:96:com.google.android.material.shape.ShapeAppearanceModel getCurrentShapeAppearanceModel() -> getCurrentShapeAppearanceModel
    92:92:android.graphics.Path getPath() -> getPath
com.google.android.material.transition.MaterialArcMotion -> com.google.android.material.transition.MaterialArcMotion:
    32:32:void <init>() -> <init>
    46:49:android.graphics.PointF getControlPoint(float,float,float,float) -> getControlPoint
    37:42:android.graphics.Path getPath(float,float,float,float) -> getPath
com.google.android.material.transition.MaterialContainerTransform -> com.google.android.material.transition.MaterialContainerTransform:
    193:223:void <clinit>() -> <clinit>
    232:260:void <init>() -> <init>
    232:265:void <init>(android.content.Context,boolean) -> <init>
    121:121:boolean access$300(com.google.android.material.transition.MaterialContainerTransform) -> access$300
    1045:1050:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup buildThresholdsGroup(boolean) -> buildThresholdsGroup
    1022:1027:android.graphics.RectF calculateDrawableBounds(android.view.View,android.view.View,float,float) -> calculateDrawableBounds
    806:807:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    844:846:com.google.android.material.shape.ShapeAppearanceModel captureShapeAppearance(android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel) -> captureShapeAppearance
    801:802:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    814:837:void captureValues(androidx.transition.TransitionValues,android.view.View,int,com.google.android.material.shape.ShapeAppearanceModel) -> captureValues
    888:1003:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    486:486:int getContainerColor() -> getContainerColor
    458:458:int getDrawingViewId() -> getDrawingViewId
    1017:1017:float getElevationOrDefault(float,android.view.View) -> getElevationOrDefault
    545:545:int getEndContainerColor() -> getEndContainerColor
    442:442:float getEndElevation() -> getEndElevation
    378:378:com.google.android.material.shape.ShapeAppearanceModel getEndShapeAppearanceModel() -> getEndShapeAppearanceModel
    335:335:android.view.View getEndView() -> getEndView
    303:303:int getEndViewId() -> getEndViewId
    632:632:int getFadeMode() -> getFadeMode
    671:671:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds getFadeProgressThresholds() -> getFadeProgressThresholds
    652:652:int getFitMode() -> getFitMode
    713:713:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds getScaleMaskProgressThresholds() -> getScaleMaskProgressThresholds
    692:692:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds getScaleProgressThresholds() -> getScaleProgressThresholds
    586:586:int getScrimColor() -> getScrimColor
    853:871:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance(android.view.View,com.google.android.material.shape.ShapeAppearanceModel) -> getShapeAppearance
    735:735:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds getShapeMaskProgressThresholds() -> getShapeMaskProgressThresholds
    518:518:int getStartContainerColor() -> getStartContainerColor
    422:422:float getStartElevation() -> getStartElevation
    353:353:com.google.android.material.shape.ShapeAppearanceModel getStartShapeAppearanceModel() -> getStartShapeAppearanceModel
    320:320:android.view.View getStartView() -> getStartView
    270:270:int getStartViewId() -> getStartViewId
    1058:1064:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup getThresholdsOrDefault(boolean,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup) -> getThresholdsOrDefault
    614:614:int getTransitionDirection() -> getTransitionDirection
    796:796:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    876:879:int getTransitionShapeAppearanceResId(android.content.Context) -> getTransitionShapeAppearanceResId
    775:775:boolean isDrawDebugEnabled() -> isDrawDebugEnabled
    396:396:boolean isElevationShadowEnabled() -> isElevationShadowEnabled
    1032:1040:boolean isEntering(android.graphics.RectF,android.graphics.RectF) -> isEntering
    756:756:boolean isHoldAtEndEnabled() -> isHoldAtEndEnabled
    1007:1014:void maybeApplyThemeValues(android.content.Context,boolean) -> maybeApplyThemeValues
    575:578:void setAllContainerColors(int) -> setAllContainerColors
    508:509:void setContainerColor(int) -> setContainerColor
    784:785:void setDrawDebugEnabled(boolean) -> setDrawDebugEnabled
    476:477:void setDrawingViewId(int) -> setDrawingViewId
    412:413:void setElevationShadowEnabled(boolean) -> setElevationShadowEnabled
    560:561:void setEndContainerColor(int) -> setEndContainerColor
    452:453:void setEndElevation(float) -> setEndElevation
    388:389:void setEndShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setEndShapeAppearanceModel
    344:345:void setEndView(android.view.View) -> setEndView
    314:315:void setEndViewId(int) -> setEndViewId
    646:647:void setFadeMode(int) -> setFadeMode
    682:683:void setFadeProgressThresholds(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> setFadeProgressThresholds
    661:662:void setFitMode(int) -> setFitMode
    766:767:void setHoldAtEndEnabled(boolean) -> setHoldAtEndEnabled
    789:791:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    725:726:void setScaleMaskProgressThresholds(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> setScaleMaskProgressThresholds
    703:704:void setScaleProgressThresholds(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> setScaleProgressThresholds
    602:603:void setScrimColor(int) -> setScrimColor
    747:748:void setShapeMaskProgressThresholds(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> setShapeMaskProgressThresholds
    535:536:void setStartContainerColor(int) -> setStartContainerColor
    432:433:void setStartElevation(float) -> setStartElevation
    369:370:void setStartShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setStartShapeAppearanceModel
    329:330:void setStartView(android.view.View) -> setStartView
    288:289:void setStartViewId(int) -> setStartViewId
    626:627:void setTransitionDirection(int) -> setTransitionDirection
com.google.android.material.transition.MaterialContainerTransform$1 -> com.google.android.material.transition.MaterialContainerTransform$1:
    968:968:void <init>(com.google.android.material.transition.MaterialContainerTransform,com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable) -> <init>
    971:972:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.MaterialContainerTransform$2 -> com.google.android.material.transition.MaterialContainerTransform$2:
    976:976:void <init>(com.google.android.material.transition.MaterialContainerTransform,android.view.View,com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable,android.view.View,android.view.View) -> <init>
    989:1000:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    980:985:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds -> com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds:
    1540:1543:void <init>(float,float) -> <init>
    1531:1531:float access$1000(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> access$1000
    1531:1531:float access$1100(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> access$1100
    1552:1552:float getEnd() -> getEnd
    1547:1547:float getStart() -> getStart
com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup -> com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup:
    1556:1556:void <init>(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$1) -> <init>
    1566:1571:void <init>(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds) -> <init>
    1556:1556:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds access$400(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup) -> access$400
    1556:1556:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds access$500(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup) -> access$500
    1556:1556:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds access$600(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup) -> access$600
    1556:1556:com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds access$700(com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup) -> access$700
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable -> com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable:
    1071:1071:void <init>(androidx.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.FadeModeEvaluator,com.google.android.material.transition.FitModeEvaluator,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup,boolean,com.google.android.material.transition.MaterialContainerTransform$1) -> <init>
    1094:1211:void <init>(androidx.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.FadeModeEvaluator,com.google.android.material.transition.FitModeEvaluator,com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup,boolean) -> <init>
    1071:1071:void access$200(com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable,float) -> access$200
    1071:1071:android.view.View access$800(com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable) -> access$800
    1071:1071:android.view.View access$900(com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable) -> access$900
    1485:1485:float calculateElevationDxMultiplier(android.graphics.RectF,float) -> calculateElevationDxMultiplier
    1497:1497:float calculateElevationDyMultiplier(android.graphics.RectF,float) -> calculateElevationDyMultiplier
    1215:1247:void draw(android.graphics.Canvas) -> draw
    1502:1511:void drawDebugCumulativePath(android.graphics.Canvas,android.graphics.RectF,android.graphics.Path,int) -> drawDebugCumulativePath
    1514:1516:void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int) -> drawDebugRect
    1251:1261:void drawElevationShadow(android.graphics.Canvas) -> drawElevationShadow
    1278:1287:void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas) -> drawElevationShadowWithMaterialShapeDrawable
    1264:1275:void drawElevationShadowWithPaintShadowLayer(android.graphics.Canvas) -> drawElevationShadowWithPaintShadowLayer
    1309:1323:void drawEndView(android.graphics.Canvas) -> drawEndView
    1291:1305:void drawStartView(android.graphics.Canvas) -> drawStartView
    1467:1467:android.graphics.PointF getMotionPathPoint(android.graphics.RectF) -> getMotionPathPoint
    1345:1345:int getOpacity() -> getOpacity
    1329:1332:void maybeDrawContainerColor(android.graphics.Canvas,android.graphics.Paint) -> maybeDrawContainerColor
    1336:1336:void setAlpha(int) -> setAlpha
    1340:1340:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1349:1352:void setProgress(float) -> setProgress
    1355:1464:void updateProgress(float) -> updateProgress
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$1 -> com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$1:
# {"id":"sourceFile","fileName":"MaterialContainerTransform.java"}
    1299:1299:void <init>(com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable) -> <init>
    1302:1303:void run(android.graphics.Canvas) -> run
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$2 -> com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$2:
# {"id":"sourceFile","fileName":"MaterialContainerTransform.java"}
    1317:1317:void <init>(com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable) -> <init>
    1320:1321:void run(android.graphics.Canvas) -> run
com.google.android.material.transition.MaterialElevationScale -> com.google.android.material.transition.MaterialElevationScale:
    33:35:void <init>(boolean) -> <init>
    26:26:void addAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    26:26:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    42:45:com.google.android.material.transition.ScaleProvider createPrimaryAnimatorProvider(boolean) -> createPrimaryAnimatorProvider
    49:49:com.google.android.material.transition.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    26:26:com.google.android.material.transition.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    38:38:boolean isGrowing() -> isGrowing
    26:26:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    26:26:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    26:26:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    26:26:void setSecondaryAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.MaterialFade -> com.google.android.material.transition.MaterialFade:
    40:45:void <clinit>() -> <clinit>
    48:49:void <init>() -> <init>
    34:34:void addAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    34:34:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    52:54:com.google.android.material.transition.FadeProvider createPrimaryAnimatorProvider() -> createPrimaryAnimatorProvider
    58:61:com.google.android.material.transition.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    81:81:android.animation.TimeInterpolator getDefaultEasingInterpolator(boolean) -> getDefaultEasingInterpolator
    67:67:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    75:75:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    34:34:com.google.android.material.transition.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    34:34:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    34:34:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    34:34:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    34:34:void setSecondaryAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.MaterialFadeThrough -> com.google.android.material.transition.MaterialFadeThrough:
    35:36:void <clinit>() -> <clinit>
    39:40:void <init>() -> <init>
    31:31:void addAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    31:31:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    43:43:com.google.android.material.transition.FadeThroughProvider createPrimaryAnimatorProvider() -> createPrimaryAnimatorProvider
    47:50:com.google.android.material.transition.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    56:56:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    62:62:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    31:31:com.google.android.material.transition.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    31:31:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    31:31:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    31:31:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    31:31:void setSecondaryAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.MaterialSharedAxis -> com.google.android.material.transition.MaterialSharedAxis:
    86:87:void <clinit>() -> <clinit>
    90:93:void <init>(int,boolean) -> <init>
    51:51:void addAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    51:51:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    106:114:com.google.android.material.transition.VisibilityAnimatorProvider createPrimaryAnimatorProvider(int,boolean) -> createPrimaryAnimatorProvider
    119:119:com.google.android.material.transition.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    97:97:int getAxis() -> getAxis
    125:125:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    131:131:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    51:51:com.google.android.material.transition.VisibilityAnimatorProvider getPrimaryAnimatorProvider() -> getPrimaryAnimatorProvider
    51:51:com.google.android.material.transition.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    101:101:boolean isForward() -> isForward
    51:51:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    51:51:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    51:51:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    51:51:void setSecondaryAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.MaterialVisibility -> com.google.android.material.transition.MaterialVisibility:
    40:46:void <init>(com.google.android.material.transition.VisibilityAnimatorProvider,com.google.android.material.transition.VisibilityAnimatorProvider) -> <init>
    87:88:void addAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    147:157:void addAnimatorIfNeeded(java.util.List,com.google.android.material.transition.VisibilityAnimatorProvider,android.view.ViewGroup,android.view.View,boolean) -> addAnimatorIfNeeded
    107:108:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    124:138:android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean) -> createAnimator
    177:177:android.animation.TimeInterpolator getDefaultEasingInterpolator(boolean) -> getDefaultEasingInterpolator
    167:167:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    172:172:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    54:54:com.google.android.material.transition.VisibilityAnimatorProvider getPrimaryAnimatorProvider() -> getPrimaryAnimatorProvider
    65:65:com.google.android.material.transition.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    160:163:void maybeApplyThemeValues(android.content.Context,boolean) -> maybeApplyThemeValues
    113:113:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    119:119:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
    97:97:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    74:75:void setSecondaryAnimatorProvider(com.google.android.material.transition.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.ScaleProvider -> com.google.android.material.transition.ScaleProvider:
    47:48:void <init>() -> <init>
    38:52:void <init>(boolean) -> <init>
    150:153:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    160:167:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    172:189:android.animation.Animator createScaleAnimator(android.view.View,float,float) -> createScaleAnimator
    136:136:float getIncomingEndScale() -> getIncomingEndScale
    120:120:float getIncomingStartScale() -> getIncomingStartScale
    104:104:float getOutgoingEndScale() -> getOutgoingEndScale
    88:88:float getOutgoingStartScale() -> getOutgoingStartScale
    56:56:boolean isGrowing() -> isGrowing
    70:70:boolean isScaleOnDisappear() -> isScaleOnDisappear
    61:62:void setGrowing(boolean) -> setGrowing
    144:145:void setIncomingEndScale(float) -> setIncomingEndScale
    128:129:void setIncomingStartScale(float) -> setIncomingStartScale
    112:113:void setOutgoingEndScale(float) -> setOutgoingEndScale
    96:97:void setOutgoingStartScale(float) -> setOutgoingStartScale
    80:81:void setScaleOnDisappear(boolean) -> setScaleOnDisappear
com.google.android.material.transition.ScaleProvider$1 -> com.google.android.material.transition.ScaleProvider$1:
    182:182:void <init>(android.view.View,float,float) -> <init>
    185:187:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.SlideDistanceProvider -> com.google.android.material.transition.SlideDistanceProvider:
    59:63:void <init>(int) -> <init>
    106:107:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    113:114:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    129:153:android.animation.Animator createTranslationAppearAnimator(android.view.View,android.view.View,int,int) -> createTranslationAppearAnimator
    159:183:android.animation.Animator createTranslationDisappearAnimator(android.view.View,android.view.View,int,int) -> createTranslationDisappearAnimator
    192:203:android.animation.Animator createTranslationXAnimator(android.view.View,float,float,float) -> createTranslationXAnimator
    211:222:android.animation.Animator createTranslationYAnimator(android.view.View,float,float,float) -> createTranslationYAnimator
    82:82:int getSlideDistance() -> getSlideDistance
    118:124:int getSlideDistanceOrDefault(android.content.Context) -> getSlideDistanceOrDefault
    67:67:int getSlideEdge() -> getSlideEdge
    226:226:boolean isRtl(android.view.View) -> isRtl
    95:101:void setSlideDistance(int) -> setSlideDistance
    71:72:void setSlideEdge(int) -> setSlideEdge
com.google.android.material.transition.SlideDistanceProvider$1 -> com.google.android.material.transition.SlideDistanceProvider$1:
    197:197:void <init>(android.view.View,float) -> <init>
    200:201:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.SlideDistanceProvider$2 -> com.google.android.material.transition.SlideDistanceProvider$2:
    216:216:void <init>(android.view.View,float) -> <init>
    219:220:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.TransitionListenerAdapter -> com.google.android.material.transition.TransitionListenerAdapter:
    21:21:void <init>() -> <init>
    30:30:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    27:27:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    33:33:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    36:36:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    24:24:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
com.google.android.material.transition.TransitionUtils -> com.google.android.material.transition.TransitionUtils:
    388:388:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    385:385:float calculateArea(android.graphics.RectF) -> calculateArea
    188:188:com.google.android.material.shape.ShapeAppearanceModel convertToRelativeCornerSizes(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> convertToRelativeCornerSizes
    334:334:android.graphics.Shader createColorShader(int) -> createColorShader
    381:381:java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    346:358:android.view.View findAncestorById(android.view.View,int) -> findAncestorById
    338:342:android.view.View findDescendantOrAncestorById(android.view.View,int) -> findDescendantOrAncestorById
    152:158:float getControlPoint(java.lang.String[],int) -> getControlPoint
    146:148:java.lang.String getEasingContent(java.lang.String,java.lang.String) -> getEasingContent
    370:376:android.graphics.RectF getLocationOnScreen(android.view.View) -> getLocationOnScreen
    362:362:android.graphics.RectF getRelativeBounds(android.view.View) -> getRelativeBounds
    366:366:android.graphics.Rect getRelativeBoundsRect(android.view.View) -> getRelativeBoundsRect
    141:142:boolean isEasingType(java.lang.String,java.lang.String) -> isEasingType
    237:240:boolean isShapeAppearanceSignificant(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> isShapeAppearanceSignificant
    249:249:float lerp(float,float,float) -> lerp
    259:259:float lerp(float,float,float,float,float) -> lerp
    270:280:float lerp(float,float,float,float,float,boolean) -> lerp
    289:296:int lerp(int,int,float,float,float) -> lerp
    307:314:com.google.android.material.shape.ShapeAppearanceModel lerp(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,android.graphics.RectF,float,float,float) -> lerp
    431:434:void maybeAddTransition(androidx.transition.TransitionSet,androidx.transition.Transition) -> maybeAddTransition
    83:90:boolean maybeApplyThemeDuration(androidx.transition.Transition,android.content.Context,int) -> maybeApplyThemeDuration
    72:78:boolean maybeApplyThemeInterpolator(androidx.transition.Transition,android.content.Context,int,android.animation.TimeInterpolator) -> maybeApplyThemeInterpolator
    95:102:boolean maybeApplyThemePath(androidx.transition.Transition,android.content.Context,int) -> maybeApplyThemePath
    437:440:void maybeRemoveTransition(androidx.transition.TransitionSet,androidx.transition.Transition) -> maybeRemoveTransition
    107:137:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
    163:183:androidx.transition.PathMotion resolveThemePath(android.content.Context,int) -> resolveThemePath
    391:395:int saveLayerAlphaCompat(android.graphics.Canvas,android.graphics.Rect,int) -> saveLayerAlphaCompat
    412:424:void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.TransitionUtils$CanvasOperation) -> transform
    210:232:com.google.android.material.shape.ShapeAppearanceModel transformCornerSizes(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,com.google.android.material.transition.TransitionUtils$CornerSizeBinaryOperator) -> transformCornerSizes
com.google.android.material.transition.TransitionUtils$1 -> com.google.android.material.transition.TransitionUtils$1:
    189:189:void <init>(android.graphics.RectF) -> <init>
    193:195:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.transition.TransitionUtils$2 -> com.google.android.material.transition.TransitionUtils$2:
    318:318:void <init>(android.graphics.RectF,android.graphics.RectF,float,float,float) -> <init>
    323:328:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.transition.platform.FadeModeEvaluators -> com.google.android.material.transition.platform.FadeModeEvaluators:
    34:67:void <clinit>() -> <clinit>
    96:96:void <init>() -> <init>
    82:92:com.google.android.material.transition.platform.FadeModeEvaluator get(int,boolean) -> get
com.google.android.material.transition.platform.FadeModeEvaluators$1 -> com.google.android.material.transition.platform.FadeModeEvaluators$1:
    35:35:void <init>() -> <init>
    39:41:com.google.android.material.transition.platform.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.platform.FadeModeEvaluators$2 -> com.google.android.material.transition.platform.FadeModeEvaluators$2:
    46:46:void <init>() -> <init>
    50:52:com.google.android.material.transition.platform.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.platform.FadeModeEvaluators$3 -> com.google.android.material.transition.platform.FadeModeEvaluators$3:
    57:57:void <init>() -> <init>
    61:63:com.google.android.material.transition.platform.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.platform.FadeModeEvaluators$4 -> com.google.android.material.transition.platform.FadeModeEvaluators$4:
    68:68:void <init>() -> <init>
    72:77:com.google.android.material.transition.platform.FadeModeResult evaluate(float,float,float,float) -> evaluate
com.google.android.material.transition.platform.FadeModeResult -> com.google.android.material.transition.platform.FadeModeResult:
    37:41:void <init>(int,int,boolean) -> <init>
    34:34:com.google.android.material.transition.platform.FadeModeResult endOnTop(int,int) -> endOnTop
    30:30:com.google.android.material.transition.platform.FadeModeResult startOnTop(int,int) -> startOnTop
com.google.android.material.transition.platform.FadeProvider -> com.google.android.material.transition.platform.FadeProvider:
    37:39:void <init>() -> <init>
    65:66:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    78:79:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    95:112:android.animation.Animator createFadeAnimator(android.view.View,float,float,float,float,float) -> createFadeAnimator
    47:47:float getIncomingEndThreshold() -> getIncomingEndThreshold
    59:60:void setIncomingEndThreshold(float) -> setIncomingEndThreshold
com.google.android.material.transition.platform.FadeProvider$1 -> com.google.android.material.transition.platform.FadeProvider$1:
    97:97:void <init>(android.view.View,float,float,float,float) -> <init>
    100:102:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.platform.FadeProvider$2 -> com.google.android.material.transition.platform.FadeProvider$2:
    105:105:void <init>(android.view.View,float) -> <init>
    109:110:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.platform.FadeThroughProvider -> com.google.android.material.transition.platform.FadeThroughProvider:
    41:45:void <init>() -> <init>
    70:71:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    83:84:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    100:117:android.animation.Animator createFadeThroughAnimator(android.view.View,float,float,float,float,float) -> createFadeThroughAnimator
    54:54:float getProgressThreshold() -> getProgressThreshold
    64:65:void setProgressThreshold(float) -> setProgressThreshold
com.google.android.material.transition.platform.FadeThroughProvider$1 -> com.google.android.material.transition.platform.FadeThroughProvider$1:
    102:102:void <init>(android.view.View,float,float,float,float) -> <init>
    105:107:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.platform.FadeThroughProvider$2 -> com.google.android.material.transition.platform.FadeThroughProvider$2:
    110:110:void <init>(android.view.View,float) -> <init>
    114:115:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.platform.FitModeEvaluators -> com.google.android.material.transition.platform.FitModeEvaluators:
    34:80:void <clinit>() -> <clinit>
    153:153:void <init>() -> <init>
    129:137:com.google.android.material.transition.platform.FitModeEvaluator get(int,boolean,android.graphics.RectF,android.graphics.RectF) -> get
    143:150:boolean shouldAutoFitToWidth(boolean,android.graphics.RectF,android.graphics.RectF) -> shouldAutoFitToWidth
com.google.android.material.transition.platform.FitModeEvaluators$1 -> com.google.android.material.transition.platform.FitModeEvaluators$1:
    35:35:void <init>() -> <init>
    74:77:void applyMask(android.graphics.RectF,float,com.google.android.material.transition.platform.FitModeResult) -> applyMask
    46:58:com.google.android.material.transition.platform.FitModeResult evaluate(float,float,float,float,float,float,float) -> evaluate
    69:69:boolean shouldMaskStartBounds(com.google.android.material.transition.platform.FitModeResult) -> shouldMaskStartBounds
com.google.android.material.transition.platform.FitModeEvaluators$2 -> com.google.android.material.transition.platform.FitModeEvaluators$2:
    81:81:void <init>() -> <init>
    120:124:void applyMask(android.graphics.RectF,float,com.google.android.material.transition.platform.FitModeResult) -> applyMask
    92:104:com.google.android.material.transition.platform.FitModeResult evaluate(float,float,float,float,float,float,float) -> evaluate
    115:115:boolean shouldMaskStartBounds(com.google.android.material.transition.platform.FitModeResult) -> shouldMaskStartBounds
com.google.android.material.transition.platform.FitModeResult -> com.google.android.material.transition.platform.FitModeResult:
    38:45:void <init>(float,float,float,float,float,float) -> <init>
com.google.android.material.transition.platform.Hold -> com.google.android.material.transition.platform.Hold:
    37:37:void <init>() -> <init>
    46:46:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    56:56:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
com.google.android.material.transition.platform.MaskEvaluator -> com.google.android.material.transition.platform.MaskEvaluator:
    42:48:void <init>() -> <init>
    88:94:void clip(android.graphics.Canvas) -> clip
    64:84:void evaluate(float,com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,android.graphics.RectF,android.graphics.RectF,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> evaluate
    101:101:com.google.android.material.shape.ShapeAppearanceModel getCurrentShapeAppearanceModel() -> getCurrentShapeAppearanceModel
    97:97:android.graphics.Path getPath() -> getPath
com.google.android.material.transition.platform.MaterialArcMotion -> com.google.android.material.transition.platform.MaterialArcMotion:
    37:37:void <init>() -> <init>
    51:54:android.graphics.PointF getControlPoint(float,float,float,float) -> getControlPoint
    42:47:android.graphics.Path getPath(float,float,float,float) -> getPath
com.google.android.material.transition.platform.MaterialContainerTransform -> com.google.android.material.transition.platform.MaterialContainerTransform:
    198:228:void <clinit>() -> <clinit>
    237:265:void <init>() -> <init>
    237:270:void <init>(android.content.Context,boolean) -> <init>
    126:126:boolean access$300(com.google.android.material.transition.platform.MaterialContainerTransform) -> access$300
    1050:1055:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup buildThresholdsGroup(boolean) -> buildThresholdsGroup
    1027:1032:android.graphics.RectF calculateDrawableBounds(android.view.View,android.view.View,float,float) -> calculateDrawableBounds
    811:812:void captureEndValues(android.transition.TransitionValues) -> captureEndValues
    849:851:com.google.android.material.shape.ShapeAppearanceModel captureShapeAppearance(android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel) -> captureShapeAppearance
    806:807:void captureStartValues(android.transition.TransitionValues) -> captureStartValues
    819:842:void captureValues(android.transition.TransitionValues,android.view.View,int,com.google.android.material.shape.ShapeAppearanceModel) -> captureValues
    893:1008:android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues) -> createAnimator
    491:491:int getContainerColor() -> getContainerColor
    463:463:int getDrawingViewId() -> getDrawingViewId
    1022:1022:float getElevationOrDefault(float,android.view.View) -> getElevationOrDefault
    550:550:int getEndContainerColor() -> getEndContainerColor
    447:447:float getEndElevation() -> getEndElevation
    383:383:com.google.android.material.shape.ShapeAppearanceModel getEndShapeAppearanceModel() -> getEndShapeAppearanceModel
    340:340:android.view.View getEndView() -> getEndView
    308:308:int getEndViewId() -> getEndViewId
    637:637:int getFadeMode() -> getFadeMode
    676:676:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds getFadeProgressThresholds() -> getFadeProgressThresholds
    657:657:int getFitMode() -> getFitMode
    718:718:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds getScaleMaskProgressThresholds() -> getScaleMaskProgressThresholds
    697:697:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds getScaleProgressThresholds() -> getScaleProgressThresholds
    591:591:int getScrimColor() -> getScrimColor
    858:876:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance(android.view.View,com.google.android.material.shape.ShapeAppearanceModel) -> getShapeAppearance
    740:740:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds getShapeMaskProgressThresholds() -> getShapeMaskProgressThresholds
    523:523:int getStartContainerColor() -> getStartContainerColor
    427:427:float getStartElevation() -> getStartElevation
    358:358:com.google.android.material.shape.ShapeAppearanceModel getStartShapeAppearanceModel() -> getStartShapeAppearanceModel
    325:325:android.view.View getStartView() -> getStartView
    275:275:int getStartViewId() -> getStartViewId
    1063:1069:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup getThresholdsOrDefault(boolean,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup) -> getThresholdsOrDefault
    619:619:int getTransitionDirection() -> getTransitionDirection
    801:801:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    881:884:int getTransitionShapeAppearanceResId(android.content.Context) -> getTransitionShapeAppearanceResId
    780:780:boolean isDrawDebugEnabled() -> isDrawDebugEnabled
    401:401:boolean isElevationShadowEnabled() -> isElevationShadowEnabled
    1037:1045:boolean isEntering(android.graphics.RectF,android.graphics.RectF) -> isEntering
    761:761:boolean isHoldAtEndEnabled() -> isHoldAtEndEnabled
    1012:1019:void maybeApplyThemeValues(android.content.Context,boolean) -> maybeApplyThemeValues
    580:583:void setAllContainerColors(int) -> setAllContainerColors
    513:514:void setContainerColor(int) -> setContainerColor
    789:790:void setDrawDebugEnabled(boolean) -> setDrawDebugEnabled
    481:482:void setDrawingViewId(int) -> setDrawingViewId
    417:418:void setElevationShadowEnabled(boolean) -> setElevationShadowEnabled
    565:566:void setEndContainerColor(int) -> setEndContainerColor
    457:458:void setEndElevation(float) -> setEndElevation
    393:394:void setEndShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setEndShapeAppearanceModel
    349:350:void setEndView(android.view.View) -> setEndView
    319:320:void setEndViewId(int) -> setEndViewId
    651:652:void setFadeMode(int) -> setFadeMode
    687:688:void setFadeProgressThresholds(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> setFadeProgressThresholds
    666:667:void setFitMode(int) -> setFitMode
    771:772:void setHoldAtEndEnabled(boolean) -> setHoldAtEndEnabled
    794:796:void setPathMotion(android.transition.PathMotion) -> setPathMotion
    730:731:void setScaleMaskProgressThresholds(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> setScaleMaskProgressThresholds
    708:709:void setScaleProgressThresholds(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> setScaleProgressThresholds
    607:608:void setScrimColor(int) -> setScrimColor
    752:753:void setShapeMaskProgressThresholds(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> setShapeMaskProgressThresholds
    540:541:void setStartContainerColor(int) -> setStartContainerColor
    437:438:void setStartElevation(float) -> setStartElevation
    374:375:void setStartShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setStartShapeAppearanceModel
    334:335:void setStartView(android.view.View) -> setStartView
    293:294:void setStartViewId(int) -> setStartViewId
    631:632:void setTransitionDirection(int) -> setTransitionDirection
com.google.android.material.transition.platform.MaterialContainerTransform$1 -> com.google.android.material.transition.platform.MaterialContainerTransform$1:
    973:973:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform,com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable) -> <init>
    976:977:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transition.platform.MaterialContainerTransform$2 -> com.google.android.material.transition.platform.MaterialContainerTransform$2:
    981:981:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform,android.view.View,com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable,android.view.View,android.view.View) -> <init>
    994:1005:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    985:990:void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds -> com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds:
    1545:1548:void <init>(float,float) -> <init>
    1536:1536:float access$1000(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> access$1000
    1536:1536:float access$1100(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> access$1100
    1557:1557:float getEnd() -> getEnd
    1552:1552:float getStart() -> getStart
com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup -> com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup:
    1561:1561:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$1) -> <init>
    1571:1576:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds) -> <init>
    1561:1561:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$400(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup) -> access$400
    1561:1561:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$500(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup) -> access$500
    1561:1561:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$600(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup) -> access$600
    1561:1561:com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds access$700(com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup) -> access$700
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable -> com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable:
    1076:1076:void <init>(android.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.platform.FadeModeEvaluator,com.google.android.material.transition.platform.FitModeEvaluator,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,boolean,com.google.android.material.transition.platform.MaterialContainerTransform$1) -> <init>
    1099:1216:void <init>(android.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.platform.FadeModeEvaluator,com.google.android.material.transition.platform.FitModeEvaluator,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,boolean) -> <init>
    1076:1076:void access$200(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable,float) -> access$200
    1076:1076:android.view.View access$800(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable) -> access$800
    1076:1076:android.view.View access$900(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable) -> access$900
    1490:1490:float calculateElevationDxMultiplier(android.graphics.RectF,float) -> calculateElevationDxMultiplier
    1502:1502:float calculateElevationDyMultiplier(android.graphics.RectF,float) -> calculateElevationDyMultiplier
    1220:1252:void draw(android.graphics.Canvas) -> draw
    1507:1516:void drawDebugCumulativePath(android.graphics.Canvas,android.graphics.RectF,android.graphics.Path,int) -> drawDebugCumulativePath
    1519:1521:void drawDebugRect(android.graphics.Canvas,android.graphics.RectF,int) -> drawDebugRect
    1256:1266:void drawElevationShadow(android.graphics.Canvas) -> drawElevationShadow
    1283:1292:void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas) -> drawElevationShadowWithMaterialShapeDrawable
    1269:1280:void drawElevationShadowWithPaintShadowLayer(android.graphics.Canvas) -> drawElevationShadowWithPaintShadowLayer
    1314:1328:void drawEndView(android.graphics.Canvas) -> drawEndView
    1296:1310:void drawStartView(android.graphics.Canvas) -> drawStartView
    1472:1472:android.graphics.PointF getMotionPathPoint(android.graphics.RectF) -> getMotionPathPoint
    1350:1350:int getOpacity() -> getOpacity
    1334:1337:void maybeDrawContainerColor(android.graphics.Canvas,android.graphics.Paint) -> maybeDrawContainerColor
    1341:1341:void setAlpha(int) -> setAlpha
    1345:1345:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1354:1357:void setProgress(float) -> setProgress
    1360:1469:void updateProgress(float) -> updateProgress
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1 -> com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1:
# {"id":"sourceFile","fileName":"MaterialContainerTransform.java"}
    1304:1304:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable) -> <init>
    1307:1308:void run(android.graphics.Canvas) -> run
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2 -> com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2:
# {"id":"sourceFile","fileName":"MaterialContainerTransform.java"}
    1322:1322:void <init>(com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable) -> <init>
    1325:1326:void run(android.graphics.Canvas) -> run
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback -> com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback:
    52:60:void <init>() -> <init>
    52:52:void access$000(android.view.Window) -> access$000
    52:52:void access$100(android.view.Window) -> access$100
    52:52:java.lang.ref.WeakReference access$200() -> access$200
    52:52:java.lang.ref.WeakReference access$202(java.lang.ref.WeakReference) -> access$202
    172:172:com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeProvider getShapeProvider() -> getShapeProvider
    217:217:boolean isSharedElementReenterTransitionEnabled() -> isSharedElementReenterTransitionEnabled
    193:193:boolean isTransparentWindowBackgroundEnabled() -> isTransparentWindowBackgroundEnabled
    88:89:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    95:106:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    112:126:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    156:167:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    133:149:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:308:void removeWindowBackground(android.view.Window) -> removeWindowBackground
    316:317:void restoreWindowBackground(android.view.Window) -> restoreWindowBackground
    183:184:void setShapeProvider(com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeProvider) -> setShapeProvider
    227:228:void setSharedElementReenterTransitionEnabled(boolean) -> setSharedElementReenterTransitionEnabled
    208:209:void setTransparentWindowBackgroundEnabled(boolean) -> setTransparentWindowBackgroundEnabled
    231:253:void setUpEnterTransform(android.view.Window) -> setUpEnterTransform
    256:289:void setUpReturnTransform(android.app.Activity,android.view.Window) -> setUpReturnTransform
    325:328:void updateBackgroundFadeDuration(android.view.Window,com.google.android.material.transition.platform.MaterialContainerTransform) -> updateBackgroundFadeDuration
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$1 -> com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$1:
    240:240:void <init>(com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback,android.view.Window) -> <init>
    248:249:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    243:244:void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$2 -> com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$2:
    261:261:void <init>(com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback,android.app.Activity) -> <init>
    265:276:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$3 -> com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$3:
    281:281:void <init>(com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback,android.view.Window) -> <init>
    284:285:void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeableViewShapeProvider -> com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeableViewShapeProvider:
    72:72:void <init>() -> <init>
    76:77:com.google.android.material.shape.ShapeAppearanceModel provideShape(android.view.View) -> provideShape
com.google.android.material.transition.platform.MaterialElevationScale -> com.google.android.material.transition.platform.MaterialElevationScale:
    38:40:void <init>(boolean) -> <init>
    30:30:void addAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    30:30:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    47:50:com.google.android.material.transition.platform.ScaleProvider createPrimaryAnimatorProvider(boolean) -> createPrimaryAnimatorProvider
    54:54:com.google.android.material.transition.platform.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    30:30:com.google.android.material.transition.platform.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    43:43:boolean isGrowing() -> isGrowing
    30:30:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    30:30:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
    30:30:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    30:30:void setSecondaryAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.platform.MaterialFade -> com.google.android.material.transition.platform.MaterialFade:
    45:50:void <clinit>() -> <clinit>
    53:54:void <init>() -> <init>
    38:38:void addAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    38:38:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    57:59:com.google.android.material.transition.platform.FadeProvider createPrimaryAnimatorProvider() -> createPrimaryAnimatorProvider
    63:66:com.google.android.material.transition.platform.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    86:86:android.animation.TimeInterpolator getDefaultEasingInterpolator(boolean) -> getDefaultEasingInterpolator
    72:72:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    80:80:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    38:38:com.google.android.material.transition.platform.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    38:38:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    38:38:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
    38:38:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    38:38:void setSecondaryAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.platform.MaterialFadeThrough -> com.google.android.material.transition.platform.MaterialFadeThrough:
    40:41:void <clinit>() -> <clinit>
    44:45:void <init>() -> <init>
    35:35:void addAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    35:35:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    48:48:com.google.android.material.transition.platform.FadeThroughProvider createPrimaryAnimatorProvider() -> createPrimaryAnimatorProvider
    52:55:com.google.android.material.transition.platform.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    61:61:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    67:67:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    35:35:com.google.android.material.transition.platform.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    35:35:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    35:35:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
    35:35:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    35:35:void setSecondaryAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.platform.MaterialSharedAxis -> com.google.android.material.transition.platform.MaterialSharedAxis:
    91:92:void <clinit>() -> <clinit>
    95:98:void <init>(int,boolean) -> <init>
    55:55:void addAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    55:55:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    111:119:com.google.android.material.transition.platform.VisibilityAnimatorProvider createPrimaryAnimatorProvider(int,boolean) -> createPrimaryAnimatorProvider
    124:124:com.google.android.material.transition.platform.VisibilityAnimatorProvider createSecondaryAnimatorProvider() -> createSecondaryAnimatorProvider
    102:102:int getAxis() -> getAxis
    130:130:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    136:136:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    55:55:com.google.android.material.transition.platform.VisibilityAnimatorProvider getPrimaryAnimatorProvider() -> getPrimaryAnimatorProvider
    55:55:com.google.android.material.transition.platform.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    106:106:boolean isForward() -> isForward
    55:55:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    55:55:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
    55:55:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    55:55:void setSecondaryAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.platform.MaterialVisibility -> com.google.android.material.transition.platform.MaterialVisibility:
    45:51:void <init>(com.google.android.material.transition.platform.VisibilityAnimatorProvider,com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> <init>
    92:93:void addAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> addAdditionalAnimatorProvider
    152:162:void addAnimatorIfNeeded(java.util.List,com.google.android.material.transition.platform.VisibilityAnimatorProvider,android.view.ViewGroup,android.view.View,boolean) -> addAnimatorIfNeeded
    112:113:void clearAdditionalAnimatorProvider() -> clearAdditionalAnimatorProvider
    129:143:android.animation.Animator createAnimator(android.view.ViewGroup,android.view.View,boolean) -> createAnimator
    182:182:android.animation.TimeInterpolator getDefaultEasingInterpolator(boolean) -> getDefaultEasingInterpolator
    172:172:int getDurationThemeAttrResId(boolean) -> getDurationThemeAttrResId
    177:177:int getEasingThemeAttrResId(boolean) -> getEasingThemeAttrResId
    59:59:com.google.android.material.transition.platform.VisibilityAnimatorProvider getPrimaryAnimatorProvider() -> getPrimaryAnimatorProvider
    70:70:com.google.android.material.transition.platform.VisibilityAnimatorProvider getSecondaryAnimatorProvider() -> getSecondaryAnimatorProvider
    165:168:void maybeApplyThemeValues(android.content.Context,boolean) -> maybeApplyThemeValues
    118:118:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onAppear
    124:124:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues) -> onDisappear
    102:102:boolean removeAdditionalAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> removeAdditionalAnimatorProvider
    79:80:void setSecondaryAnimatorProvider(com.google.android.material.transition.platform.VisibilityAnimatorProvider) -> setSecondaryAnimatorProvider
com.google.android.material.transition.platform.ScaleProvider -> com.google.android.material.transition.platform.ScaleProvider:
    52:53:void <init>() -> <init>
    43:57:void <init>(boolean) -> <init>
    155:158:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    165:172:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    177:194:android.animation.Animator createScaleAnimator(android.view.View,float,float) -> createScaleAnimator
    141:141:float getIncomingEndScale() -> getIncomingEndScale
    125:125:float getIncomingStartScale() -> getIncomingStartScale
    109:109:float getOutgoingEndScale() -> getOutgoingEndScale
    93:93:float getOutgoingStartScale() -> getOutgoingStartScale
    61:61:boolean isGrowing() -> isGrowing
    75:75:boolean isScaleOnDisappear() -> isScaleOnDisappear
    66:67:void setGrowing(boolean) -> setGrowing
    149:150:void setIncomingEndScale(float) -> setIncomingEndScale
    133:134:void setIncomingStartScale(float) -> setIncomingStartScale
    117:118:void setOutgoingEndScale(float) -> setOutgoingEndScale
    101:102:void setOutgoingStartScale(float) -> setOutgoingStartScale
    85:86:void setScaleOnDisappear(boolean) -> setScaleOnDisappear
com.google.android.material.transition.platform.ScaleProvider$1 -> com.google.android.material.transition.platform.ScaleProvider$1:
    187:187:void <init>(android.view.View,float,float) -> <init>
    190:192:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.platform.SlideDistanceProvider -> com.google.android.material.transition.platform.SlideDistanceProvider:
    64:68:void <init>(int) -> <init>
    111:112:android.animation.Animator createAppear(android.view.ViewGroup,android.view.View) -> createAppear
    118:119:android.animation.Animator createDisappear(android.view.ViewGroup,android.view.View) -> createDisappear
    134:158:android.animation.Animator createTranslationAppearAnimator(android.view.View,android.view.View,int,int) -> createTranslationAppearAnimator
    164:188:android.animation.Animator createTranslationDisappearAnimator(android.view.View,android.view.View,int,int) -> createTranslationDisappearAnimator
    197:208:android.animation.Animator createTranslationXAnimator(android.view.View,float,float,float) -> createTranslationXAnimator
    216:227:android.animation.Animator createTranslationYAnimator(android.view.View,float,float,float) -> createTranslationYAnimator
    87:87:int getSlideDistance() -> getSlideDistance
    123:129:int getSlideDistanceOrDefault(android.content.Context) -> getSlideDistanceOrDefault
    72:72:int getSlideEdge() -> getSlideEdge
    231:231:boolean isRtl(android.view.View) -> isRtl
    100:106:void setSlideDistance(int) -> setSlideDistance
    76:77:void setSlideEdge(int) -> setSlideEdge
com.google.android.material.transition.platform.SlideDistanceProvider$1 -> com.google.android.material.transition.platform.SlideDistanceProvider$1:
    202:202:void <init>(android.view.View,float) -> <init>
    205:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.platform.SlideDistanceProvider$2 -> com.google.android.material.transition.platform.SlideDistanceProvider$2:
    221:221:void <init>(android.view.View,float) -> <init>
    224:225:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transition.platform.TransitionListenerAdapter -> com.google.android.material.transition.platform.TransitionListenerAdapter:
    26:26:void <init>() -> <init>
    35:35:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    32:32:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    38:38:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    41:41:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    29:29:void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.google.android.material.transition.platform.TransitionUtils -> com.google.android.material.transition.platform.TransitionUtils:
    393:393:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    390:390:float calculateArea(android.graphics.RectF) -> calculateArea
    193:193:com.google.android.material.shape.ShapeAppearanceModel convertToRelativeCornerSizes(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> convertToRelativeCornerSizes
    339:339:android.graphics.Shader createColorShader(int) -> createColorShader
    386:386:java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    351:363:android.view.View findAncestorById(android.view.View,int) -> findAncestorById
    343:347:android.view.View findDescendantOrAncestorById(android.view.View,int) -> findDescendantOrAncestorById
    157:163:float getControlPoint(java.lang.String[],int) -> getControlPoint
    151:153:java.lang.String getEasingContent(java.lang.String,java.lang.String) -> getEasingContent
    375:381:android.graphics.RectF getLocationOnScreen(android.view.View) -> getLocationOnScreen
    367:367:android.graphics.RectF getRelativeBounds(android.view.View) -> getRelativeBounds
    371:371:android.graphics.Rect getRelativeBoundsRect(android.view.View) -> getRelativeBoundsRect
    146:147:boolean isEasingType(java.lang.String,java.lang.String) -> isEasingType
    242:245:boolean isShapeAppearanceSignificant(com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> isShapeAppearanceSignificant
    254:254:float lerp(float,float,float) -> lerp
    264:264:float lerp(float,float,float,float,float) -> lerp
    275:285:float lerp(float,float,float,float,float,boolean) -> lerp
    294:301:int lerp(int,int,float,float,float) -> lerp
    312:319:com.google.android.material.shape.ShapeAppearanceModel lerp(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,android.graphics.RectF,float,float,float) -> lerp
    436:439:void maybeAddTransition(android.transition.TransitionSet,android.transition.Transition) -> maybeAddTransition
    88:95:boolean maybeApplyThemeDuration(android.transition.Transition,android.content.Context,int) -> maybeApplyThemeDuration
    77:83:boolean maybeApplyThemeInterpolator(android.transition.Transition,android.content.Context,int,android.animation.TimeInterpolator) -> maybeApplyThemeInterpolator
    100:107:boolean maybeApplyThemePath(android.transition.Transition,android.content.Context,int) -> maybeApplyThemePath
    442:445:void maybeRemoveTransition(android.transition.TransitionSet,android.transition.Transition) -> maybeRemoveTransition
    112:142:android.animation.TimeInterpolator resolveThemeInterpolator(android.content.Context,int,android.animation.TimeInterpolator) -> resolveThemeInterpolator
    168:188:android.transition.PathMotion resolveThemePath(android.content.Context,int) -> resolveThemePath
    396:400:int saveLayerAlphaCompat(android.graphics.Canvas,android.graphics.Rect,int) -> saveLayerAlphaCompat
    417:429:void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.platform.TransitionUtils$CanvasOperation) -> transform
    215:237:com.google.android.material.shape.ShapeAppearanceModel transformCornerSizes(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF,com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator) -> transformCornerSizes
com.google.android.material.transition.platform.TransitionUtils$1 -> com.google.android.material.transition.platform.TransitionUtils$1:
    194:194:void <init>(android.graphics.RectF) -> <init>
    198:200:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.transition.platform.TransitionUtils$2 -> com.google.android.material.transition.platform.TransitionUtils$2:
    323:323:void <init>(android.graphics.RectF,android.graphics.RectF,float,float,float) -> <init>
    328:333:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> apply
com.google.firebase.-$$Lambda$FirebaseApp$9ws5O6gd5EXcjP128HrkgXg52EE -> com.google.firebase.-$$Lambda$FirebaseApp$9ws5O6gd5EXcjP128HrkgXg52EE:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$4z_FoKjSmKejlSwMYYMZeC7LsMo -> com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$4z_FoKjSmKejlSwMYYMZeC7LsMo:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$5K-XEd3fUx19CnAZSAZ0M1s9qGg -> com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$5K-XEd3fUx19CnAZSAZ0M1s9qGg:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$lmqwsm474glUdjxQuX0286DJQr0 -> com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$lmqwsm474glUdjxQuX0286DJQr0:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$sUt18gVyvEV5RL6q8HJBhUltbQU -> com.google.firebase.-$$Lambda$FirebaseCommonRegistrar$sUt18gVyvEV5RL6q8HJBhUltbQU:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.DataCollectionDefaultChange -> com.google.firebase.DataCollectionDefaultChange:
    30:32:void <init>(boolean) -> <init>
com.google.firebase.FirebaseApp -> com.google.firebase.FirebaseApp:
    95:101:void <clinit>() -> <clinit>
    114:436:void <init>(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions) -> <init>
    89:89:java.lang.Object access$300() -> access$300
    89:89:void access$400(com.google.firebase.FirebaseApp) -> access$400
    89:89:java.util.concurrent.atomic.AtomicBoolean access$500(com.google.firebase.FirebaseApp) -> access$500
    89:89:void access$600(com.google.firebase.FirebaseApp,boolean) -> access$600
    476:482:void addBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener) -> addBackgroundStateChangeListener
    517:520:void addLifecycleEventListener(com.google.firebase.FirebaseAppLifecycleListener) -> addLifecycleEventListener
    439:440:void checkNotDeleted() -> checkNotDeleted
    543:546:void clearInstancesForTest() -> clearInstancesForTest
    316:326:void delete() -> delete
    146:149:boolean equals(java.lang.Object) -> equals
    335:336:java.lang.Object get(java.lang.Class) -> get
    562:569:java.util.List getAllAppNames() -> getAllAppNames
    126:127:android.content.Context getApplicationContext() -> getApplicationContext
    165:167:java.util.List getApps(android.content.Context) -> getApps
    177:188:com.google.firebase.FirebaseApp getInstance() -> getInstance
    200:218:com.google.firebase.FirebaseApp getInstance(java.lang.String) -> getInstance
    133:134:java.lang.String getName() -> getName
    140:141:com.google.firebase.FirebaseOptions getOptions() -> getOptions
    502:505:java.lang.String getPersistenceKey() -> getPersistenceKey
    556:558:java.lang.String getPersistenceKey(java.lang.String,com.google.firebase.FirebaseOptions) -> getPersistenceKey
    154:154:int hashCode() -> hashCode
    574:586:void initializeAllApis() -> initializeAllApis
    239:253:com.google.firebase.FirebaseApp initializeApp(android.content.Context) -> initializeApp
    267:267:com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions) -> initializeApp
    283:304:com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String) -> initializeApp
    373:374:boolean isDataCollectionDefaultEnabled() -> isDataCollectionDefaultEnabled
    446:446:boolean isDefaultApp() -> isDefaultApp
    432:435:com.google.firebase.internal.DataCollectionConfigStorage lambda$new$0(android.content.Context) -> lambda$new$0
    590:590:java.lang.String normalize(java.lang.String) -> normalize
    457:461:void notifyBackgroundStateChangeListeners(boolean) -> notifyBackgroundStateChangeListeners
    534:537:void notifyOnAppDeleted() -> notifyOnAppDeleted
    491:493:void removeBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener) -> removeBackgroundStateChangeListener
    525:528:void removeLifecycleEventListener(com.google.firebase.FirebaseAppLifecycleListener) -> removeLifecycleEventListener
    344:360:void setAutomaticResourceManagementEnabled(boolean) -> setAutomaticResourceManagementEnabled
    387:389:void setDataCollectionDefaultEnabled(java.lang.Boolean) -> setDataCollectionDefaultEnabled
    403:404:void setDataCollectionDefaultEnabled(boolean) -> setDataCollectionDefaultEnabled
    159:159:java.lang.String toString() -> toString
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener -> com.google.firebase.FirebaseApp$GlobalBackgroundStateListener:
    664:664:void <clinit>() -> <clinit>
    661:661:void <init>() -> <init>
    661:661:void access$100(android.content.Context) -> access$100
    668:680:void ensureBackgroundStateListenerRegistered(android.content.Context) -> ensureBackgroundStateListenerRegistered
    684:691:void onBackgroundStateChanged(boolean) -> onBackgroundStateChanged
com.google.firebase.FirebaseApp$UiExecutor -> com.google.firebase.FirebaseApp$UiExecutor:
    696:696:void <clinit>() -> <clinit>
    694:694:void <init>() -> <init>
    694:694:void <init>(com.google.firebase.FirebaseApp$1) -> <init>
    700:701:void execute(java.lang.Runnable) -> execute
com.google.firebase.FirebaseApp$UserUnlockReceiver -> com.google.firebase.FirebaseApp$UserUnlockReceiver:
    626:626:void <clinit>() -> <clinit>
    629:631:void <init>(android.content.Context) -> <init>
    624:624:void access$200(android.content.Context) -> access$200
    634:641:void ensureReceiverRegistered(android.content.Context) -> ensureReceiverRegistered
    646:652:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    655:656:void unregister() -> unregister
com.google.firebase.FirebaseCommonRegistrar -> com.google.firebase.FirebaseCommonRegistrar:
    30:30:void <init>() -> <init>
    44:108:java.util.List getComponents() -> getComponents
    57:61:java.lang.String lambda$getComponents$0(android.content.Context) -> lambda$getComponents$0
    67:71:java.lang.String lambda$getComponents$1(android.content.Context) -> lambda$getComponents$1
    77:93:java.lang.String lambda$getComponents$2(android.content.Context) -> lambda$getComponents$2
    99:101:java.lang.String lambda$getComponents$3(android.content.Context) -> lambda$getComponents$3
    112:112:java.lang.String safeValue(java.lang.String) -> safeValue
com.google.firebase.FirebaseException -> com.google.firebase.FirebaseException:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-basement@@17.6.0"}
    1:1:void <init>() -> <init>
    2:2:void <init>(java.lang.String) -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.firebase.FirebaseOptions -> com.google.firebase.FirebaseOptions:
    138:147:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    227:237:boolean equals(java.lang.Object) -> equals
    156:168:com.google.firebase.FirebaseOptions fromResource(android.content.Context) -> fromResource
    177:177:java.lang.String getApiKey() -> getApiKey
    183:183:java.lang.String getApplicationId() -> getApplicationId
    189:189:java.lang.String getDatabaseUrl() -> getDatabaseUrl
    201:201:java.lang.String getGaTrackingId() -> getGaTrackingId
    210:210:java.lang.String getGcmSenderId() -> getGcmSenderId
    222:222:java.lang.String getProjectId() -> getProjectId
    216:216:java.lang.String getStorageBucket() -> getStorageBucket
    242:242:int hashCode() -> hashCode
    248:255:java.lang.String toString() -> toString
com.google.firebase.analytics.FirebaseAnalytics -> com.google.firebase.analytics.FirebaseAnalytics:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:1:void <init>(com.google.android.gms.internal.measurement.zzee) -> <init>
    1:7:com.google.android.gms.tasks.Task getAppInstanceId() -> getAppInstanceId
    1:5:java.lang.String getFirebaseInstanceId() -> getFirebaseInstanceId
    1:3:com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context) -> getInstance
    1:2:com.google.android.gms.measurement.internal.zzhw getScionFrontendApiImplementation(android.content.Context,android.os.Bundle) -> getScionFrontendApiImplementation
    1:1:void logEvent(java.lang.String,android.os.Bundle) -> logEvent
    1:1:void resetAnalyticsData() -> resetAnalyticsData
    1:1:void setAnalyticsCollectionEnabled(boolean) -> setAnalyticsCollectionEnabled
    1:10:void setConsent(java.util.Map) -> setConsent
    1:1:void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String) -> setCurrentScreen
    1:1:void setDefaultEventParameters(android.os.Bundle) -> setDefaultEventParameters
    1:1:void setSessionTimeoutDuration(long) -> setSessionTimeoutDuration
    1:1:void setUserId(java.lang.String) -> setUserId
    1:1:void setUserProperty(java.lang.String,java.lang.String) -> setUserProperty
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus -> com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String) -> valueOf
    1:1:com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values() -> values
com.google.firebase.analytics.FirebaseAnalytics$ConsentType -> com.google.firebase.analytics.FirebaseAnalytics$ConsentType:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String) -> valueOf
    1:1:com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values() -> values
com.google.firebase.analytics.connector.AnalyticsConnector -> com.google.firebase.analytics.connector.AnalyticsConnector:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-measurement-connector@@19.0.0"}
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle -> com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-measurement-connector@@19.0.0"}
com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener -> com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-measurement-connector@@19.0.0"}
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty -> com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-measurement-connector@@19.0.0"}
com.google.firebase.analytics.connector.AnalyticsConnectorImpl -> com.google.firebase.analytics.connector.AnalyticsConnectorImpl:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:2:void <init>(com.google.android.gms.measurement.api.AppMeasurementSdk) -> <init>
    3:14:com.google.firebase.analytics.connector.AnalyticsConnector getInstance(com.google.firebase.FirebaseApp,android.content.Context,com.google.firebase.events.Subscriber) -> getInstance
    1:6:void logEvent(java.lang.String,java.lang.String,android.os.Bundle) -> logEvent
    1:4:void zza(com.google.firebase.events.Event) -> zza
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar -> com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:9:java.util.List getComponents() -> getComponents
    1:4:com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer) -> lambda$getComponents$0
com.google.firebase.analytics.connector.internal.zzb -> com.google.firebase.analytics.connector.internal.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
com.google.firebase.analytics.connector.internal.zzc -> com.google.firebase.analytics.connector.internal.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:8:void <clinit>() -> <clinit>
    1:3:void zze(java.lang.String,java.lang.String,android.os.Bundle) -> zze
    1:8:boolean zzh(java.lang.String,java.lang.String,android.os.Bundle) -> zzh
    1:3:boolean zzj(java.lang.String,android.os.Bundle) -> zzj
    1:1:boolean zzl(java.lang.String) -> zzl
com.google.firebase.analytics.connector.zza -> com.google.firebase.analytics.connector.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
com.google.firebase.analytics.connector.zzb -> com.google.firebase.analytics.connector.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
com.google.firebase.analytics.zza -> com.google.firebase.analytics.zza:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:1:void <init>(com.google.firebase.analytics.FirebaseAnalytics,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue) -> <init>
com.google.firebase.analytics.zzb -> com.google.firebase.analytics.zzb:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:1:java.lang.Object call() -> call
com.google.firebase.analytics.zzc -> com.google.firebase.analytics.zzc:
# {"id":"sourceFile","fileName":"com.google.android.gms:play-services-measurement-api@@19.0.1"}
    1:1:int zza(java.lang.String) -> zza
    1:1:long zzb() -> zzb
    1:1:java.lang.Object zzg(int) -> zzg
    1:1:java.lang.String zzh() -> zzh
    1:1:java.lang.String zzi() -> zzi
    1:1:java.lang.String zzj() -> zzj
    1:1:java.lang.String zzk() -> zzk
    1:1:java.util.List zzm(java.lang.String,java.lang.String) -> zzm
    1:1:java.util.Map zzo(java.lang.String,java.lang.String,boolean) -> zzo
    1:1:void zzp(java.lang.String) -> zzp
    1:1:void zzq(java.lang.String,java.lang.String,android.os.Bundle) -> zzq
    1:1:void zzr(java.lang.String) -> zzr
    1:1:void zzs(java.lang.String,java.lang.String,android.os.Bundle) -> zzs
    1:1:void zzt(java.lang.String,java.lang.String,android.os.Bundle,long) -> zzt
    1:1:void zzv(android.os.Bundle) -> zzv
com.google.firebase.auth.FirebaseAuthException -> com.google.firebase.auth.FirebaseAuthException:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
    1:2:void <init>(java.lang.String,java.lang.String) -> <init>
com.google.firebase.auth.GetTokenResult -> com.google.firebase.auth.GetTokenResult:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
    1:1:long getAuthTimestamp() -> getAuthTimestamp
    1:1:long getExpirationTimestamp() -> getExpirationTimestamp
    1:1:long getIssuedAtTimestamp() -> getIssuedAtTimestamp
    1:2:java.lang.String getSignInProvider() -> getSignInProvider
    1:2:java.lang.String getSignInSecondFactor() -> getSignInSecondFactor
    1:2:long zza(java.lang.String) -> zza
com.google.firebase.auth.internal.IdTokenListener -> com.google.firebase.auth.internal.IdTokenListener:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
com.google.firebase.auth.internal.InternalAuthProvider -> com.google.firebase.auth.internal.InternalAuthProvider:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
com.google.firebase.components.-$$Lambda$Component$Esgy7uzOaQwa9tXOn9zh_b3kuIw -> com.google.firebase.components.-$$Lambda$Component$Esgy7uzOaQwa9tXOn9zh_b3kuIw:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$Component$KryL7UebsJ6sFV-CDK2Yw3_BWQc -> com.google.firebase.components.-$$Lambda$Component$KryL7UebsJ6sFV-CDK2Yw3_BWQc:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$ComponentDiscovery$g7eF8YtNQOk49-ub0JV5u7HvrjE -> com.google.firebase.components.-$$Lambda$ComponentDiscovery$g7eF8YtNQOk49-ub0JV5u7HvrjE:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$ComponentRuntime$4FqOW9eOQsvFYo-HpMfxCOnPQr0 -> com.google.firebase.components.-$$Lambda$ComponentRuntime$4FqOW9eOQsvFYo-HpMfxCOnPQr0:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$ComponentRuntime$Builder$zALdpHRUq1MLquOd6LSJTHoIM3w -> com.google.firebase.components.-$$Lambda$ComponentRuntime$Builder$zALdpHRUq1MLquOd6LSJTHoIM3w:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$ComponentRuntime$Y75lFCmLX6L7I9D2ho_1zXa-Rkw -> com.google.firebase.components.-$$Lambda$ComponentRuntime$Y75lFCmLX6L7I9D2ho_1zXa-Rkw:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$ComponentRuntime$rYmcV5pGrXiNpLs8c89q9g50iDU -> com.google.firebase.components.-$$Lambda$ComponentRuntime$rYmcV5pGrXiNpLs8c89q9g50iDU:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$EventBus$_CMgUGVhhqkeRvGUrALJVsHZDM4 -> com.google.firebase.components.-$$Lambda$EventBus$_CMgUGVhhqkeRvGUrALJVsHZDM4:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$JenbCIFSyDrsXj6dZkV_P-yGdZs -> com.google.firebase.components.-$$Lambda$JenbCIFSyDrsXj6dZkV_P-yGdZs:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$OptionalProvider$ILPY1nlr_ULZNpsKMbNjkBMT0Ec -> com.google.firebase.components.-$$Lambda$OptionalProvider$ILPY1nlr_ULZNpsKMbNjkBMT0Ec:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.-$$Lambda$OptionalProvider$fPOTfPXm7DpPlmwdyImHVqtycpI -> com.google.firebase.components.-$$Lambda$OptionalProvider$fPOTfPXm7DpPlmwdyImHVqtycpI:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.components.AbstractComponentContainer -> com.google.firebase.components.AbstractComponentContainer:
    20:20:void <init>() -> <init>
    23:27:java.lang.Object get(java.lang.Class) -> get
    32:32:java.util.Set setOf(java.lang.Class) -> setOf
com.google.firebase.components.Component -> com.google.firebase.components.Component:
    34:34:void <init>(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1) -> <init>
    92:99:void <init>(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set) -> <init>
    173:173:com.google.firebase.components.Component$Builder builder(java.lang.Class) -> builder
    180:180:com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[]) -> builder
    112:112:java.util.Set getDependencies() -> getDependencies
    117:117:com.google.firebase.components.ComponentFactory getFactory() -> getFactory
    107:107:java.util.Set getProvidedInterfaces() -> getProvidedInterfaces
    121:121:java.util.Set getPublishedEvents() -> getPublishedEvents
    217:217:com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class) -> intoSet
    207:207:com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class) -> intoSetBuilder
    139:139:boolean isAlwaysEager() -> isAlwaysEager
    148:148:boolean isEagerInDefaultApp() -> isEagerInDefaultApp
    153:153:boolean isValue() -> isValue
    217:217:java.lang.Object lambda$intoSet$2(java.lang.Object,com.google.firebase.components.ComponentContainer) -> lambda$intoSet$2
    197:197:java.lang.Object lambda$of$1(java.lang.Object,com.google.firebase.components.ComponentContainer) -> lambda$of$1
    197:197:com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[]) -> of
    158:168:java.lang.String toString() -> toString
com.google.firebase.components.Component$Builder -> com.google.firebase.components.Component$Builder:
    221:221:void <init>(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1) -> <init>
    222:237:void <init>(java.lang.Class,java.lang.Class[]) -> <init>
    221:221:com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder) -> access$100
    241:244:com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency) -> add
    289:290:com.google.firebase.components.Component build() -> build
    254:254:com.google.firebase.components.Component$Builder eagerInDefaultApp() -> eagerInDefaultApp
    278:279:com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory) -> factory
    283:284:com.google.firebase.components.Component$Builder intoSet() -> intoSet
    264:267:com.google.firebase.components.Component$Builder setInstantiation(int) -> setInstantiation
    271:274:void validateInterface(java.lang.Class) -> validateInterface
com.google.firebase.components.ComponentDiscovery -> com.google.firebase.components.ComponentDiscovery:
    68:71:void <init>(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever) -> <init>
    110:114:java.util.List discoverLazy() -> discoverLazy
    64:64:com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class) -> forContext
    120:142:com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String) -> instantiate
    112:112:com.google.firebase.components.ComponentRegistrar lambda$discoverLazy$0(java.lang.String) -> lambda$discoverLazy$0
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever -> com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever:
    146:146:void <init>(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1) -> <init>
    150:152:void <init>(java.lang.Class) -> <init>
    175:190:android.os.Bundle getMetadata(android.content.Context) -> getMetadata
    146:146:java.util.List retrieve(java.lang.Object) -> retrieve
    156:170:java.util.List retrieve(android.content.Context) -> retrieve
com.google.firebase.components.ComponentRuntime -> com.google.firebase.components.ComponentRuntime:
    46:46:void <clinit>() -> <clinit>
    45:45:void <init>(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1) -> <init>
    47:92:void <init>(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection) -> <init>
    70:70:com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor) -> builder
    101:145:void discoverComponents(java.util.List) -> discoverComponents
    286:296:void doInitializeEagerComponents(java.util.Map,boolean) -> doInitializeEagerComponents
    45:45:java.lang.Object get(java.lang.Class) -> get
    232:234:com.google.firebase.inject.Provider getProvider(java.lang.Class) -> getProvider
    270:282:void initializeEagerComponents(boolean) -> initializeEagerComponents
    164:168:java.util.List iterableToList(java.lang.Iterable) -> iterableToList
    130:132:java.lang.Object lambda$discoverComponents$0(com.google.firebase.components.Component) -> lambda$discoverComponents$0
    188:188:void lambda$processInstanceComponents$2(com.google.firebase.components.OptionalProvider,com.google.firebase.inject.Provider) -> lambda$processInstanceComponents$2
    223:223:void lambda$processSetComponents$3(com.google.firebase.components.LazySet,com.google.firebase.inject.Provider) -> lambda$processSetComponents$3
    148:152:void maybeInitializeEagerComponents() -> maybeInitializeEagerComponents
    317:333:void processDependencies() -> processDependencies
    172:192:java.util.List processInstanceComponents(java.util.List) -> processInstanceComponents
    197:227:java.util.List processSetComponents() -> processSetComponents
    45:45:java.util.Set setOf(java.lang.Class) -> setOf
    251:256:com.google.firebase.inject.Provider setOfProvider(java.lang.Class) -> setOfProvider
com.google.firebase.components.ComponentRuntime$Builder -> com.google.firebase.components.ComponentRuntime$Builder:
    337:342:void <init>(java.util.concurrent.Executor) -> <init>
    355:356:com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component) -> addComponent
    350:351:com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar) -> addComponentRegistrar
    345:346:com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection) -> addLazyComponentRegistrars
    360:360:com.google.firebase.components.ComponentRuntime build() -> build
    350:350:com.google.firebase.components.ComponentRegistrar lambda$addComponentRegistrar$0(com.google.firebase.components.ComponentRegistrar) -> lambda$addComponentRegistrar$0
com.google.firebase.components.CycleDetector -> com.google.firebase.components.CycleDetector:
    100:131:void detect(java.util.List) -> detect
    182:188:java.util.Set getRoots(java.util.Set) -> getRoots
    135:177:java.util.Set toGraph(java.util.List) -> toGraph
com.google.firebase.components.CycleDetector$ComponentNode -> com.google.firebase.components.CycleDetector$ComponentNode:
    56:61:void <init>(com.google.firebase.components.Component) -> <init>
    64:65:void addDependency(com.google.firebase.components.CycleDetector$ComponentNode) -> addDependency
    68:69:void addDependent(com.google.firebase.components.CycleDetector$ComponentNode) -> addDependent
    80:80:com.google.firebase.components.Component getComponent() -> getComponent
    72:72:java.util.Set getDependencies() -> getDependencies
    88:88:boolean isLeaf() -> isLeaf
    84:84:boolean isRoot() -> isRoot
    76:77:void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode) -> removeDependent
com.google.firebase.components.CycleDetector$Dep -> com.google.firebase.components.CycleDetector$Dep:
    26:26:void <init>(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1) -> <init>
    30:33:void <init>(java.lang.Class,boolean) -> <init>
    26:26:boolean access$100(com.google.firebase.components.CycleDetector$Dep) -> access$100
    37:41:boolean equals(java.lang.Object) -> equals
    46:50:int hashCode() -> hashCode
com.google.firebase.components.Dependency -> com.google.firebase.components.Dependency:
    44:48:void <init>(java.lang.Class,int,int) -> <init>
    184:192:java.lang.String describeInjection(int) -> describeInjection
    152:156:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Class getInterface() -> getInterface
    161:167:int hashCode() -> hashCode
    147:147:boolean isDeferred() -> isDeferred
    143:143:boolean isDirectInjection() -> isDirectInjection
    135:135:boolean isRequired() -> isRequired
    139:139:boolean isSet() -> isSet
    104:104:com.google.firebase.components.Dependency optionalProvider(java.lang.Class) -> optionalProvider
    83:83:com.google.firebase.components.Dependency required(java.lang.Class) -> required
    94:94:com.google.firebase.components.Dependency setOf(java.lang.Class) -> setOf
    172:180:java.lang.String toString() -> toString
com.google.firebase.components.DependencyCycleException -> com.google.firebase.components.DependencyCycleException:
    25:27:void <init>(java.util.List) -> <init>
com.google.firebase.components.DependencyException -> com.google.firebase.components.DependencyException:
    20:21:void <init>(java.lang.String) -> <init>
com.google.firebase.components.EventBus -> com.google.firebase.components.EventBus:
    41:54:void <init>(java.util.concurrent.Executor) -> <init>
    121:133:void enablePublishingAndFlushPending() -> enablePublishingAndFlushPending
    75:77:java.util.Set getHandlers(com.google.firebase.events.Event) -> getHandlers
    71:71:void lambda$publish$0(java.util.Map$Entry,com.google.firebase.events.Event) -> lambda$publish$0
    58:73:void publish(com.google.firebase.events.Event) -> publish
    82:93:void subscribe(java.lang.Class,java.util.concurrent.Executor,com.google.firebase.events.EventHandler) -> subscribe
com.google.firebase.components.InvalidRegistrarException -> com.google.firebase.components.InvalidRegistrarException:
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.firebase.components.Lazy -> com.google.firebase.components.Lazy:
    31:31:void <clinit>() -> <clinit>
    33:43:void <init>(com.google.firebase.inject.Provider) -> <init>
    48:64:java.lang.Object get() -> get
com.google.firebase.components.LazySet -> com.google.firebase.components.LazySet:
    34:39:void <init>(java.util.Collection) -> <init>
    60:66:void add(com.google.firebase.inject.Provider) -> add
    43:44:com.google.firebase.components.LazySet fromCollection(java.util.Collection) -> fromCollection
    31:31:java.lang.Object get() -> get
    49:57:java.util.Set get() -> get
    68:73:void updateSet() -> updateSet
com.google.firebase.components.MissingDependencyException -> com.google.firebase.components.MissingDependencyException:
    20:21:void <init>(java.lang.String) -> <init>
com.google.firebase.components.OptionalProvider -> com.google.firebase.components.OptionalProvider:
    31:32:void <clinit>() -> <clinit>
    39:42:void <init>(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Provider) -> <init>
    46:46:com.google.firebase.components.OptionalProvider empty() -> empty
    55:55:java.lang.Object get() -> get
    31:31:void lambda$static$0(com.google.firebase.inject.Provider) -> lambda$static$0
    32:32:java.lang.Object lambda$static$1() -> lambda$static$1
    60:70:void set(com.google.firebase.inject.Provider) -> set
com.google.firebase.components.Preconditions -> com.google.firebase.components.Preconditions:
    20:23:void checkArgument(boolean,java.lang.String) -> checkArgument
    26:29:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    33:36:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    40:43:void checkState(boolean,java.lang.String) -> checkState
com.google.firebase.components.RestrictedComponentContainer -> com.google.firebase.components.RestrictedComponentContainer:
    38:71:void <init>(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer) -> <init>
    80:96:java.lang.Object get(java.lang.Class) -> get
    106:111:com.google.firebase.inject.Provider getProvider(java.lang.Class) -> getProvider
    146:150:java.util.Set setOf(java.lang.Class) -> setOf
    131:136:com.google.firebase.inject.Provider setOfProvider(java.lang.Class) -> setOfProvider
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher -> com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher:
    161:164:void <init>(java.util.Set,com.google.firebase.events.Publisher) -> <init>
    168:173:void publish(com.google.firebase.events.Event) -> publish
com.google.firebase.dynamiclinks.DynamicLink -> com.google.firebase.dynamiclinks.DynamicLink:
    34:36:void <init>(android.os.Bundle) -> <init>
    46:46:android.net.Uri getUri() -> getUri
com.google.firebase.dynamiclinks.DynamicLink$Builder -> com.google.firebase.dynamiclinks.DynamicLink$Builder:
    94:101:void <init>(com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl) -> <init>
    278:279:com.google.firebase.dynamiclinks.DynamicLink buildDynamicLink() -> buildDynamicLink
    291:292:com.google.android.gms.tasks.Task buildShortDynamicLink() -> buildShortDynamicLink
    306:308:com.google.android.gms.tasks.Task buildShortDynamicLink(int) -> buildShortDynamicLink
    192:192:java.lang.String getDomainUriPrefix() -> getDomainUriPrefix
    142:146:android.net.Uri getLink() -> getLink
    118:122:android.net.Uri getLongLink() -> getLongLink
    203:204:com.google.firebase.dynamiclinks.DynamicLink$Builder setAndroidParameters(com.google.firebase.dynamiclinks.DynamicLink$AndroidParameters) -> setAndroidParameters
    181:186:com.google.firebase.dynamiclinks.DynamicLink$Builder setDomainUriPrefix(java.lang.String) -> setDomainUriPrefix
    161:169:com.google.firebase.dynamiclinks.DynamicLink$Builder setDynamicLinkDomain(java.lang.String) -> setDynamicLinkDomain
    227:228:com.google.firebase.dynamiclinks.DynamicLink$Builder setGoogleAnalyticsParameters(com.google.firebase.dynamiclinks.DynamicLink$GoogleAnalyticsParameters) -> setGoogleAnalyticsParameters
    214:215:com.google.firebase.dynamiclinks.DynamicLink$Builder setIosParameters(com.google.firebase.dynamiclinks.DynamicLink$IosParameters) -> setIosParameters
    240:241:com.google.firebase.dynamiclinks.DynamicLink$Builder setItunesConnectAnalyticsParameters(com.google.firebase.dynamiclinks.DynamicLink$ItunesConnectAnalyticsParameters) -> setItunesConnectAnalyticsParameters
    135:136:com.google.firebase.dynamiclinks.DynamicLink$Builder setLink(android.net.Uri) -> setLink
    111:112:com.google.firebase.dynamiclinks.DynamicLink$Builder setLongLink(android.net.Uri) -> setLongLink
    266:267:com.google.firebase.dynamiclinks.DynamicLink$Builder setNavigationInfoParameters(com.google.firebase.dynamiclinks.DynamicLink$NavigationInfoParameters) -> setNavigationInfoParameters
    253:254:com.google.firebase.dynamiclinks.DynamicLink$Builder setSocialMetaTagParameters(com.google.firebase.dynamiclinks.DynamicLink$SocialMetaTagParameters) -> setSocialMetaTagParameters
    312:315:void verifyApiKey() -> verifyApiKey
com.google.firebase.dynamiclinks.FirebaseDynamicLinks -> com.google.firebase.dynamiclinks.FirebaseDynamicLinks:
    49:49:void <init>() -> <init>
    61:61:com.google.firebase.dynamiclinks.FirebaseDynamicLinks getInstance() -> getInstance
    66:66:com.google.firebase.dynamiclinks.FirebaseDynamicLinks getInstance(com.google.firebase.FirebaseApp) -> getInstance
com.google.firebase.dynamiclinks.PendingDynamicLinkData -> com.google.firebase.dynamiclinks.PendingDynamicLinkData:
    44:56:void <init>(com.google.firebase.dynamiclinks.internal.DynamicLinkData) -> <init>
    67:71:void <init>(java.lang.String,int,long,android.net.Uri) -> <init>
    148:151:long getClickTimestamp() -> getClickTimestamp
    85:88:android.os.Bundle getExtensions() -> getExtensions
    101:108:android.net.Uri getLink() -> getLink
    135:138:int getMinimumAppVersion() -> getMinimumAppVersion
    164:167:android.net.Uri getRedirectUrl() -> getRedirectUrl
    192:210:android.content.Intent getUpdateAppIntent(android.content.Context) -> getUpdateAppIntent
    119:123:android.os.Bundle getUtmParameters() -> getUtmParameters
com.google.firebase.dynamiclinks.internal.-$$Lambda$FirebaseDynamicLinkRegistrar$9AzdSXjbbbUZm_4Go9ALk9dSjCE -> com.google.firebase.dynamiclinks.internal.-$$Lambda$FirebaseDynamicLinkRegistrar$9AzdSXjbbbUZm_4Go9ALk9dSjCE:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.dynamiclinks.internal.DynamicLinkData -> com.google.firebase.dynamiclinks.internal.DynamicLinkData:
    108:108:void <clinit>() -> <clinit>
    39:124:void <init>(java.lang.String,java.lang.String,int,long,android.os.Bundle,android.net.Uri) -> <init>
    77:77:long getClickTimestamp() -> getClickTimestamp
    61:61:java.lang.String getDeepLink() -> getDeepLink
    52:52:java.lang.String getDynamicLink() -> getDynamicLink
    85:85:android.os.Bundle getExtensionBundle() -> getExtensionBundle
    69:69:int getMinVersion() -> getMinVersion
    94:94:android.net.Uri getRedirectUrl() -> getRedirectUrl
    81:82:void setClickTimestamp(long) -> setClickTimestamp
    65:66:void setDeepLink(java.lang.String) -> setDeepLink
    56:57:void setDynamicLink(java.lang.String) -> setDynamicLink
    105:106:void setExtensionData(android.os.Bundle) -> setExtensionData
    73:74:void setMinVersion(int) -> setMinVersion
    89:90:void setRedirectUrl(android.net.Uri) -> setRedirectUrl
    129:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.firebase.dynamiclinks.internal.DynamicLinkDataCreator -> com.google.firebase.dynamiclinks.internal.DynamicLinkDataCreator:
    28:28:void <init>() -> <init>
    25:25:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    31:95:com.google.firebase.dynamiclinks.internal.DynamicLinkData createFromParcel(android.os.Parcel) -> createFromParcel
    25:25:java.lang.Object[] newArray(int) -> newArray
    99:99:com.google.firebase.dynamiclinks.internal.DynamicLinkData[] newArray(int) -> newArray
    103:118:void writeToParcel(com.google.firebase.dynamiclinks.internal.DynamicLinkData,android.os.Parcel,int) -> writeToParcel
com.google.firebase.dynamiclinks.internal.DynamicLinkUTMParams -> com.google.firebase.dynamiclinks.internal.DynamicLinkUTMParams:
    45:48:void <init>(com.google.firebase.dynamiclinks.internal.DynamicLinkData) -> <init>
    52:52:android.os.Bundle asBundle() -> asBundle
    89:93:void checkAndAdd(java.lang.String,java.lang.String,android.os.Bundle,android.os.Bundle) -> checkAndAdd
    57:77:android.os.Bundle initUTMParamsBundle(com.google.firebase.dynamiclinks.internal.DynamicLinkData) -> initUTMParamsBundle
com.google.firebase.dynamiclinks.internal.DynamicLinksApi -> com.google.firebase.dynamiclinks.internal.DynamicLinksApi:
    31:49:void <clinit>() -> <clinit>
    67:68:void <init>(android.content.Context) -> <init>
com.google.firebase.dynamiclinks.internal.DynamicLinksApi$1 -> com.google.firebase.dynamiclinks.internal.DynamicLinksApi$1:
    35:35:void <init>() -> <init>
    35:35:com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> buildClient
    44:44:com.google.firebase.dynamiclinks.internal.DynamicLinksClient buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.Api$ApiOptions$NoOptions,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> buildClient
com.google.firebase.dynamiclinks.internal.DynamicLinksClient -> com.google.firebase.dynamiclinks.internal.DynamicLinksClient:
    44:51:void <init>(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> <init>
    29:29:android.os.IInterface createServiceInterface(android.os.IBinder) -> createServiceInterface
    68:68:com.google.firebase.dynamiclinks.internal.IDynamicLinksService createServiceInterface(android.os.IBinder) -> createServiceInterface
    81:85:void createShortDynamicLink(com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks$Stub,android.os.Bundle) -> createShortDynamicLink
    73:77:void getDynamicLink(com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks$Stub,java.lang.String) -> getDynamicLink
    93:93:int getMinApkVersion() -> getMinApkVersion
    62:62:java.lang.String getServiceDescriptor() -> getServiceDescriptor
    56:56:java.lang.String getStartServiceAction() -> getStartServiceAction
    98:98:boolean usesClientTelemetry() -> usesClientTelemetry
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar:
    37:37:void <init>() -> <init>
    42:53:java.util.List getComponents() -> getComponents
    48:50:com.google.firebase.dynamiclinks.FirebaseDynamicLinks lambda$getComponents$0(com.google.firebase.components.ComponentContainer) -> lambda$getComponents$0
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl:
    67:68:void <init>(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider) -> <init>
    75:92:void <init>(com.google.android.gms.common.api.GoogleApi,com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider) -> <init>
    126:126:com.google.firebase.dynamiclinks.DynamicLink$Builder createDynamicLink() -> createDynamicLink
    130:152:android.net.Uri createDynamicLink(android.os.Bundle) -> createDynamicLink
    156:157:com.google.android.gms.tasks.Task createShortDynamicLink(android.os.Bundle) -> createShortDynamicLink
    108:116:com.google.android.gms.tasks.Task getDynamicLink(android.content.Intent) -> getDynamicLink
    121:121:com.google.android.gms.tasks.Task getDynamicLink(android.net.Uri) -> getDynamicLink
    95:95:com.google.firebase.FirebaseApp getFirebaseApp() -> getFirebaseApp
    100:103:com.google.firebase.dynamiclinks.PendingDynamicLinkData getPendingDynamicLinkData(android.content.Intent) -> getPendingDynamicLinkData
    161:167:void verifyDomainUriPrefix(android.os.Bundle) -> verifyDomainUriPrefix
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$AbstractDynamicLinkCallbacks -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$AbstractDynamicLinkCallbacks:
    210:210:void <init>() -> <init>
    220:220:void onCreateShortDynamicLink(com.google.android.gms.common.api.Status,com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl) -> onCreateShortDynamicLink
    214:214:void onGetDynamicLink(com.google.android.gms.common.api.Status,com.google.firebase.dynamiclinks.internal.DynamicLinkData) -> onGetDynamicLink
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$CreateShortDynamicLinkCallbacks -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$CreateShortDynamicLinkCallbacks:
    267:269:void <init>(com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    274:275:void onCreateShortDynamicLink(com.google.android.gms.common.api.Status,com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl) -> onCreateShortDynamicLink
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$CreateShortDynamicLinkImpl -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$CreateShortDynamicLinkImpl:
    196:198:void <init>(android.os.Bundle) -> <init>
    190:190:void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource) -> doExecute
    205:207:void doExecute(com.google.firebase.dynamiclinks.internal.DynamicLinksClient,com.google.android.gms.tasks.TaskCompletionSource) -> doExecute
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$DynamicLinkCallbacks -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$DynamicLinkCallbacks:
    230:233:void <init>(com.google.firebase.inject.Provider,com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    238:261:void onGetDynamicLink(com.google.android.gms.common.api.Status,com.google.firebase.dynamiclinks.internal.DynamicLinkData) -> onGetDynamicLink
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$GetDynamicLinkImpl -> com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinksImpl$GetDynamicLinkImpl:
    176:179:void <init>(com.google.firebase.inject.Provider,java.lang.String) -> <init>
    169:169:void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource) -> doExecute
    186:187:void doExecute(com.google.firebase.dynamiclinks.internal.DynamicLinksClient,com.google.android.gms.tasks.TaskCompletionSource) -> doExecute
com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks$Stub -> com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks$Stub:
    14:16:void <init>() -> <init>
    34:34:android.os.IBinder asBinder() -> asBinder
    38:88:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.firebase.dynamiclinks.internal.IDynamicLinksService$Stub -> com.google.firebase.dynamiclinks.internal.IDynamicLinksService$Stub:
    23:30:com.google.firebase.dynamiclinks.internal.IDynamicLinksService asInterface(android.os.IBinder) -> asInterface
com.google.firebase.dynamiclinks.internal.IDynamicLinksService$Stub$Proxy -> com.google.firebase.dynamiclinks.internal.IDynamicLinksService$Stub$Proxy:
# {"id":"sourceFile","fileName":"IDynamicLinksService.java"}
    83:85:void <init>(android.os.IBinder) -> <init>
    88:88:android.os.IBinder asBinder() -> asBinder
    112:131:void createShortDynamicLink(com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks,android.os.Bundle) -> createShortDynamicLink
    96:109:void getDynamicLink(com.google.firebase.dynamiclinks.internal.IDynamicLinksCallbacks,java.lang.String) -> getDynamicLink
com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl -> com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl:
    30:30:void <clinit>() -> <clinit>
    47:51:void <init>(android.net.Uri,android.net.Uri,java.util.List) -> <init>
    62:62:android.net.Uri getPreviewLink() -> getPreviewLink
    56:56:android.net.Uri getShortLink() -> getShortLink
    67:67:java.util.List getWarnings() -> getWarnings
    72:73:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl -> com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl:
    79:79:void <clinit>() -> <clinit>
    86:88:void <init>(java.lang.String) -> <init>
    99:99:java.lang.String getMessage() -> getMessage
    104:105:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImplCreator -> com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImplCreator:
    28:28:void <init>() -> <init>
    25:25:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    31:72:com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl createFromParcel(android.os.Parcel) -> createFromParcel
    25:25:java.lang.Object[] newArray(int) -> newArray
    76:76:com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl[] newArray(int) -> newArray
    80:89:void writeToParcel(com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl,android.os.Parcel,int) -> writeToParcel
com.google.firebase.dynamiclinks.internal.WarningImplCreator -> com.google.firebase.dynamiclinks.internal.WarningImplCreator:
    26:26:void <init>() -> <init>
    23:23:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    29:51:com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl createFromParcel(android.os.Parcel) -> createFromParcel
    23:23:java.lang.Object[] newArray(int) -> newArray
    55:55:com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl[] newArray(int) -> newArray
    59:64:void writeToParcel(com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl,android.os.Parcel,int) -> writeToParcel
com.google.firebase.events.Event -> com.google.firebase.events.Event:
    30:33:void <init>(java.lang.Class,java.lang.Object) -> <init>
    42:42:java.lang.Object getPayload() -> getPayload
    37:37:java.lang.Class getType() -> getType
    47:47:java.lang.String toString() -> toString
com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$1Q21IbGcrjKFfJt9vQbGxqGVgmM -> com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$1Q21IbGcrjKFfJt9vQbGxqGVgmM:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$EOsKwj7WsaU6wH5Y-JWq4kiFAgs -> com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$EOsKwj7WsaU6wH5Y-JWq4kiFAgs:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$uBe3Vi_40XEX86u78BnJDpBSTDI -> com.google.firebase.heartbeatinfo.-$$Lambda$DefaultHeartBeatInfo$uBe3Vi_40XEX86u78BnJDpBSTDI:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo -> com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo:
    44:44:void <clinit>() -> <clinit>
    50:55:void <init>(android.content.Context,java.util.Set) -> <init>
    61:65:void <init>(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor) -> <init>
    136:141:com.google.firebase.components.Component component() -> component
    69:80:com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat getHeartBeatCode(java.lang.String) -> getHeartBeatCode
    140:140:com.google.firebase.heartbeatinfo.HeartBeatInfo lambda$component$4(com.google.firebase.components.ComponentContainer) -> lambda$component$4
    51:51:com.google.firebase.heartbeatinfo.HeartBeatInfoStorage lambda$new$1(android.content.Context) -> lambda$new$1
    45:45:java.lang.Thread lambda$static$0(java.lang.Runnable) -> lambda$static$0
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat -> com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat:
    33:37:void <clinit>() -> <clinit>
    41:43:void <init>(java.lang.String,int,int) -> <init>
    46:46:int getCode() -> getCode
    33:33:com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String) -> valueOf
    33:33:com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values() -> values
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage -> com.google.firebase.heartbeatinfo.HeartBeatInfoStorage:
    34:44:void <clinit>() -> <clinit>
    52:57:void <init>(android.content.Context) -> <init>
    73:77:com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context) -> getInstance
    131:133:boolean isSameDateUtc(long,long) -> isSameDateUtc
    159:159:boolean shouldSendGlobalHeartBeat(long) -> shouldSendGlobalHeartBeat
    141:150:boolean shouldSendSdkHeartBeat(java.lang.String,long) -> shouldSendSdkHeartBeat
com.google.firebase.installations.-$$Lambda$FirebaseInstallations$VZq1h0TBcWNH8Y5yY86ujrFFyLo -> com.google.firebase.installations.-$$Lambda$FirebaseInstallations$VZq1h0TBcWNH8Y5yY86ujrFFyLo:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.installations.-$$Lambda$FirebaseInstallations$eaLCK67D8Fb7nKlx6_m7igW5oxM -> com.google.firebase.installations.-$$Lambda$FirebaseInstallations$eaLCK67D8Fb7nKlx6_m7igW5oxM:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.installations.-$$Lambda$FirebaseInstallations$i0IwN5aIp7QK3OfW8Xr4QToHfTU -> com.google.firebase.installations.-$$Lambda$FirebaseInstallations$i0IwN5aIp7QK3OfW8Xr4QToHfTU:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.installations.-$$Lambda$FirebaseInstallations$ukIZcZ_XlkiT9OCDxQIhblgD6_Y -> com.google.firebase.installations.-$$Lambda$FirebaseInstallations$ukIZcZ_XlkiT9OCDxQIhblgD6_Y:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.installations.-$$Lambda$FirebaseInstallationsRegistrar$S-TGqLUnPeNlFWH4x9vB3gPxkgs -> com.google.firebase.installations.-$$Lambda$FirebaseInstallationsRegistrar$S-TGqLUnPeNlFWH4x9vB3gPxkgs:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.installations.AutoValue_InstallationTokenResult -> com.google.firebase.installations.AutoValue_InstallationTokenResult:
    8:8:void <init>(java.lang.String,long,long,com.google.firebase.installations.AutoValue_InstallationTokenResult$1) -> <init>
    19:23:void <init>(java.lang.String,long,long) -> <init>
    54:63:boolean equals(java.lang.Object) -> equals
    28:28:java.lang.String getToken() -> getToken
    40:40:long getTokenCreationTimestamp() -> getTokenCreationTimestamp
    34:34:long getTokenExpirationTimestamp() -> getTokenExpirationTimestamp
    68:75:int hashCode() -> hashCode
    80:80:com.google.firebase.installations.InstallationTokenResult$Builder toBuilder() -> toBuilder
    45:45:java.lang.String toString() -> toString
com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder -> com.google.firebase.installations.AutoValue_InstallationTokenResult$Builder:
    83:83:void <init>(com.google.firebase.installations.InstallationTokenResult,com.google.firebase.installations.AutoValue_InstallationTokenResult$1) -> <init>
    87:88:void <init>() -> <init>
    89:93:void <init>(com.google.firebase.installations.InstallationTokenResult) -> <init>
    114:130:com.google.firebase.installations.InstallationTokenResult build() -> build
    96:100:com.google.firebase.installations.InstallationTokenResult$Builder setToken(java.lang.String) -> setToken
    109:110:com.google.firebase.installations.InstallationTokenResult$Builder setTokenCreationTimestamp(long) -> setTokenCreationTimestamp
    104:105:com.google.firebase.installations.InstallationTokenResult$Builder setTokenExpirationTimestamp(long) -> setTokenExpirationTimestamp
com.google.firebase.installations.BuildConfig -> com.google.firebase.installations.BuildConfig:
    6:6:void <init>() -> <init>
com.google.firebase.installations.CrossProcessLock -> com.google.firebase.installations.CrossProcessLock:
    32:35:void <init>(java.nio.channels.FileChannel,java.nio.channels.FileLock) -> <init>
    46:80:com.google.firebase.installations.CrossProcessLock acquire(android.content.Context,java.lang.String) -> acquire
    87:93:void releaseAndClose() -> releaseAndClose
com.google.firebase.installations.FirebaseInstallations -> com.google.firebase.installations.FirebaseInstallations:
    86:94:void <clinit>() -> <clinit>
    130:145:void <init>(com.google.firebase.FirebaseApp,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider) -> <init>
    71:170:void <init>(java.util.concurrent.ExecutorService,com.google.firebase.FirebaseApp,com.google.firebase.installations.remote.FirebaseInstallationServiceClient,com.google.firebase.installations.local.PersistedInstallation,com.google.firebase.installations.Utils,com.google.firebase.installations.local.IidStore,com.google.firebase.installations.RandomFidGenerator) -> <init>
    308:312:com.google.android.gms.tasks.Task addGetAuthTokenListener() -> addGetAuthTokenListener
    301:304:com.google.android.gms.tasks.Task addGetIdListener() -> addGetIdListener
    316:319:void addStateListeners(com.google.firebase.installations.StateListener) -> addStateListeners
    278:278:com.google.android.gms.tasks.Task delete() -> delete
    597:608:java.lang.Void deleteFirebaseInstallationId() -> deleteFirebaseInstallationId
    381:423:void doNetworkCallIfNecessary(boolean) -> doNetworkCallIfNecessary
    366:378:void doRegistrationOrRefresh(boolean) -> doRegistrationOrRefresh
    565:586:com.google.firebase.installations.local.PersistedInstallationEntry fetchAuthTokenFromServer(com.google.firebase.installations.local.PersistedInstallationEntry) -> fetchAuthTokenFromServer
    224:224:java.lang.String getApiKey() -> getApiKey
    218:218:java.lang.String getApplicationId() -> getApplicationId
    352:352:java.lang.String getCacheFid() -> getCacheFid
    240:250:com.google.android.gms.tasks.Task getId() -> getId
    199:200:com.google.firebase.installations.FirebaseInstallations getInstance() -> getInstance
    211:212:com.google.firebase.installations.FirebaseInstallations getInstance(com.google.firebase.FirebaseApp) -> getInstance
    619:635:com.google.firebase.installations.local.PersistedInstallationEntry getMultiProcessSafePrefs() -> getMultiProcessSafePrefs
    473:501:com.google.firebase.installations.local.PersistedInstallationEntry getPrefsWithGeneratedIdMultiProcessSafe() -> getPrefsWithGeneratedIdMultiProcessSafe
    189:189:java.lang.String getProjectIdentifier() -> getProjectIdentifier
    264:267:com.google.android.gms.tasks.Task getToken(boolean) -> getToken
    442:457:void insertOrUpdatePrefs(com.google.firebase.installations.local.PersistedInstallationEntry) -> insertOrUpdatePrefs
    377:377:void lambda$doRegistrationOrRefresh$2(boolean) -> lambda$doRegistrationOrRefresh$2
    249:249:void lambda$getId$0() -> lambda$getId$0
    266:266:void lambda$getToken$1(boolean) -> lambda$getToken$1
    178:184:void preConditionChecks() -> preConditionChecks
    506:515:java.lang.String readExistingIidOrCreateFid(com.google.firebase.installations.local.PersistedInstallationEntry) -> readExistingIidOrCreateFid
    288:290:com.google.firebase.installations.internal.FidListenerHandle registerFidListener(com.google.firebase.installations.internal.FidListener) -> registerFidListener
    523:551:com.google.firebase.installations.local.PersistedInstallationEntry registerFidWithServer(com.google.firebase.installations.local.PersistedInstallationEntry) -> registerFidWithServer
    335:345:void triggerOnException(java.lang.Exception) -> triggerOnException
    322:332:void triggerOnStateReached(com.google.firebase.installations.local.PersistedInstallationEntry) -> triggerOnStateReached
    347:349:void updateCacheFid(java.lang.String) -> updateCacheFid
    426:434:void updateFidListener(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.PersistedInstallationEntry) -> updateFidListener
com.google.firebase.installations.FirebaseInstallations$1 -> com.google.firebase.installations.FirebaseInstallations$1:
    95:96:void <init>() -> <init>
    100:101:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.firebase.installations.FirebaseInstallations$2 -> com.google.firebase.installations.FirebaseInstallations$2:
    290:290:void <init>(com.google.firebase.installations.FirebaseInstallations,com.google.firebase.installations.internal.FidListener) -> <init>
com.google.firebase.installations.FirebaseInstallations$3 -> com.google.firebase.installations.FirebaseInstallations$3:
    540:572:void <clinit>() -> <clinit>
com.google.firebase.installations.FirebaseInstallationsException -> com.google.firebase.installations.FirebaseInstallationsException:
    46:48:void <init>(com.google.firebase.installations.FirebaseInstallationsException$Status) -> <init>
    51:53:void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status) -> <init>
    57:59:void <init>(java.lang.String,com.google.firebase.installations.FirebaseInstallationsException$Status,java.lang.Throwable) -> <init>
    68:68:com.google.firebase.installations.FirebaseInstallationsException$Status getStatus() -> getStatus
com.google.firebase.installations.FirebaseInstallationsException$Status -> com.google.firebase.installations.FirebaseInstallationsException$Status:
    26:41:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    26:26:com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String) -> valueOf
    26:26:com.google.firebase.installations.FirebaseInstallationsException$Status[] values() -> values
com.google.firebase.installations.FirebaseInstallationsRegistrar -> com.google.firebase.installations.FirebaseInstallationsRegistrar:
    30:30:void <init>() -> <init>
    34:46:java.util.List getComponents() -> getComponents
    41:44:com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer) -> lambda$getComponents$0
com.google.firebase.installations.GetAuthTokenListener -> com.google.firebase.installations.GetAuthTokenListener:
    25:28:void <init>(com.google.firebase.installations.Utils,com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    48:49:boolean onException(java.lang.Exception) -> onException
    33:43:boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry) -> onStateReached
com.google.firebase.installations.GetIdListener -> com.google.firebase.installations.GetIdListener:
    27:29:void <init>(com.google.android.gms.tasks.TaskCompletionSource) -> <init>
    46:46:boolean onException(java.lang.Exception) -> onException
    33:41:boolean onStateReached(com.google.firebase.installations.local.PersistedInstallationEntry) -> onStateReached
com.google.firebase.installations.InstallationTokenResult -> com.google.firebase.installations.InstallationTokenResult:
    22:22:void <init>() -> <init>
    52:52:com.google.firebase.installations.InstallationTokenResult$Builder builder() -> builder
com.google.firebase.installations.InstallationTokenResult$Builder -> com.google.firebase.installations.InstallationTokenResult$Builder:
    57:57:void <init>() -> <init>
com.google.firebase.installations.RandomFidGenerator -> com.google.firebase.installations.RandomFidGenerator:
    29:35:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    52:55:java.lang.String createRandomFid() -> createRandomFid
    69:76:java.lang.String encodeFidBase64UrlSafe(byte[]) -> encodeFidBase64UrlSafe
    80:83:byte[] getBytesFromUUID(java.util.UUID,byte[]) -> getBytesFromUUID
com.google.firebase.installations.Utils -> com.google.firebase.installations.Utils:
    32:34:void <clinit>() -> <clinit>
    38:40:void <init>(com.google.firebase.installations.time.Clock) -> <init>
    83:83:long currentTimeInMillis() -> currentTimeInMillis
    77:77:long currentTimeInSecs() -> currentTimeInSecs
    44:44:com.google.firebase.installations.Utils getInstance() -> getInstance
    53:56:com.google.firebase.installations.Utils getInstance(com.google.firebase.installations.time.Clock) -> getInstance
    104:104:long getRandomDelayForSyncPrevention() -> getRandomDelayForSyncPrevention
    64:71:boolean isAuthTokenExpired(com.google.firebase.installations.local.PersistedInstallationEntry) -> isAuthTokenExpired
    91:91:boolean isValidApiKeyFormat(java.lang.String) -> isValidApiKeyFormat
    87:87:boolean isValidAppIdFormat(java.lang.String) -> isValidAppIdFormat
com.google.firebase.installations.interop.BuildConfig -> com.google.firebase.installations.interop.BuildConfig:
    6:6:void <init>() -> <init>
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry -> com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry:
    9:9:void <init>(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1) -> <init>
    32:40:void <init>(java.lang.String,com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus,java.lang.String,java.lang.String,long,long,java.lang.String) -> <init>
    97:110:boolean equals(java.lang.Object) -> equals
    57:57:java.lang.String getAuthToken() -> getAuthToken
    68:68:long getExpiresInSecs() -> getExpiresInSecs
    45:45:java.lang.String getFirebaseInstallationId() -> getFirebaseInstallationId
    79:79:java.lang.String getFisError() -> getFisError
    63:63:java.lang.String getRefreshToken() -> getRefreshToken
    51:51:com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus getRegistrationStatus() -> getRegistrationStatus
    73:73:long getTokenCreationEpochInSecs() -> getTokenCreationEpochInSecs
    115:130:int hashCode() -> hashCode
    135:135:com.google.firebase.installations.local.PersistedInstallationEntry$Builder toBuilder() -> toBuilder
    84:84:java.lang.String toString() -> toString
com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder -> com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$Builder:
    138:138:void <init>(com.google.firebase.installations.local.PersistedInstallationEntry,com.google.firebase.installations.local.AutoValue_PersistedInstallationEntry$1) -> <init>
    146:147:void <init>() -> <init>
    148:156:void <init>(com.google.firebase.installations.local.PersistedInstallationEntry) -> <init>
    197:216:com.google.firebase.installations.local.PersistedInstallationEntry build() -> build
    172:173:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setAuthToken(java.lang.String) -> setAuthToken
    182:183:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setExpiresInSecs(long) -> setExpiresInSecs
    159:160:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFirebaseInstallationId(java.lang.String) -> setFirebaseInstallationId
    192:193:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setFisError(java.lang.String) -> setFisError
    177:178:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRefreshToken(java.lang.String) -> setRefreshToken
    164:168:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setRegistrationStatus(com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus) -> setRegistrationStatus
    187:188:com.google.firebase.installations.local.PersistedInstallationEntry$Builder setTokenCreationEpochInSecs(long) -> setTokenCreationEpochInSecs
com.google.firebase.installations.local.IidStore -> com.google.firebase.installations.local.IidStore:
    50:50:void <clinit>() -> <clinit>
    57:64:void <init>(com.google.firebase.FirebaseApp) -> <init>
    67:70:void <init>(android.content.SharedPreferences,java.lang.String) -> <init>
    97:97:java.lang.String createTokenKey(java.lang.String,java.lang.String) -> createTokenKey
    74:93:java.lang.String getDefaultSenderId(com.google.firebase.FirebaseApp) -> getDefaultSenderId
    177:195:java.lang.String getIdFromPublicKey(java.security.PublicKey) -> getIdFromPublicKey
    118:121:java.lang.String parseIidTokenFromJson(java.lang.String) -> parseIidTokenFromJson
    203:209:java.security.PublicKey parseKey(java.lang.String) -> parseKey
    127:143:java.lang.String readIid() -> readIid
    148:150:java.lang.String readInstanceIdFromLocalStorage() -> readInstanceIdFromLocalStorage
    155:167:java.lang.String readPublicKeyFromLocalStorageAndCalculateInstanceId() -> readPublicKeyFromLocalStorageAndCalculateInstanceId
    102:112:java.lang.String readToken() -> readToken
com.google.firebase.installations.local.PersistedInstallation -> com.google.firebase.installations.local.PersistedInstallation:
    79:87:void <init>(com.google.firebase.FirebaseApp) -> <init>
    176:177:void clearForTesting() -> clearForTesting
    141:171:com.google.firebase.installations.local.PersistedInstallationEntry insertOrUpdatePersistedInstallationEntry(com.google.firebase.installations.local.PersistedInstallationEntry) -> insertOrUpdatePersistedInstallationEntry
    115:127:org.json.JSONObject readJSONFromFile() -> readJSONFromFile
    91:111:com.google.firebase.installations.local.PersistedInstallationEntry readPersistedInstallationEntryValue() -> readPersistedInstallationEntryValue
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus -> com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus:
    40:67:void <clinit>() -> <clinit>
    40:40:void <init>(java.lang.String,int) -> <init>
    40:40:com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String) -> valueOf
    40:40:com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values() -> values
com.google.firebase.installations.local.PersistedInstallationEntry -> com.google.firebase.installations.local.PersistedInstallationEntry:
    51:51:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    133:136:com.google.firebase.installations.local.PersistedInstallationEntry$Builder builder() -> builder
    58:58:boolean isErrored() -> isErrored
    66:67:boolean isNotGenerated() -> isNotGenerated
    54:54:boolean isRegistered() -> isRegistered
    62:62:boolean isUnregistered() -> isUnregistered
    71:71:boolean shouldAttemptMigration() -> shouldAttemptMigration
    115:119:com.google.firebase.installations.local.PersistedInstallationEntry withAuthToken(java.lang.String,long,long) -> withAuthToken
    124:124:com.google.firebase.installations.local.PersistedInstallationEntry withClearedAuthToken() -> withClearedAuthToken
    101:104:com.google.firebase.installations.local.PersistedInstallationEntry withFisError(java.lang.String) -> withFisError
    109:109:com.google.firebase.installations.local.PersistedInstallationEntry withNoGeneratedFid() -> withNoGeneratedFid
    89:96:com.google.firebase.installations.local.PersistedInstallationEntry withRegisteredFid(java.lang.String,java.lang.String,long,java.lang.String,long) -> withRegisteredFid
    76:79:com.google.firebase.installations.local.PersistedInstallationEntry withUnregisteredFid(java.lang.String) -> withUnregisteredFid
com.google.firebase.installations.local.PersistedInstallationEntry$Builder -> com.google.firebase.installations.local.PersistedInstallationEntry$Builder:
    140:140:void <init>() -> <init>
com.google.firebase.installations.remote.AutoValue_InstallationResponse -> com.google.firebase.installations.remote.AutoValue_InstallationResponse:
    8:8:void <init>(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode,com.google.firebase.installations.remote.AutoValue_InstallationResponse$1) -> <init>
    25:31:void <init>(java.lang.String,java.lang.String,java.lang.String,com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.InstallationResponse$ResponseCode) -> <init>
    76:87:boolean equals(java.lang.Object) -> equals
    54:54:com.google.firebase.installations.remote.TokenResult getAuthToken() -> getAuthToken
    42:42:java.lang.String getFid() -> getFid
    48:48:java.lang.String getRefreshToken() -> getRefreshToken
    60:60:com.google.firebase.installations.remote.InstallationResponse$ResponseCode getResponseCode() -> getResponseCode
    36:36:java.lang.String getUri() -> getUri
    92:103:int hashCode() -> hashCode
    108:108:com.google.firebase.installations.remote.InstallationResponse$Builder toBuilder() -> toBuilder
    65:65:java.lang.String toString() -> toString
com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder -> com.google.firebase.installations.remote.AutoValue_InstallationResponse$Builder:
    111:111:void <init>(com.google.firebase.installations.remote.InstallationResponse,com.google.firebase.installations.remote.AutoValue_InstallationResponse$1) -> <init>
    117:118:void <init>() -> <init>
    119:125:void <init>(com.google.firebase.installations.remote.InstallationResponse) -> <init>
    153:153:com.google.firebase.installations.remote.InstallationResponse build() -> build
    143:144:com.google.firebase.installations.remote.InstallationResponse$Builder setAuthToken(com.google.firebase.installations.remote.TokenResult) -> setAuthToken
    133:134:com.google.firebase.installations.remote.InstallationResponse$Builder setFid(java.lang.String) -> setFid
    138:139:com.google.firebase.installations.remote.InstallationResponse$Builder setRefreshToken(java.lang.String) -> setRefreshToken
    148:149:com.google.firebase.installations.remote.InstallationResponse$Builder setResponseCode(com.google.firebase.installations.remote.InstallationResponse$ResponseCode) -> setResponseCode
    128:129:com.google.firebase.installations.remote.InstallationResponse$Builder setUri(java.lang.String) -> setUri
com.google.firebase.installations.remote.AutoValue_TokenResult -> com.google.firebase.installations.remote.AutoValue_TokenResult:
    9:9:void <init>(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode,com.google.firebase.installations.remote.AutoValue_TokenResult$1) -> <init>
    20:24:void <init>(java.lang.String,long,com.google.firebase.installations.remote.TokenResult$ResponseCode) -> <init>
    55:64:boolean equals(java.lang.Object) -> equals
    41:41:com.google.firebase.installations.remote.TokenResult$ResponseCode getResponseCode() -> getResponseCode
    29:29:java.lang.String getToken() -> getToken
    35:35:long getTokenExpirationTimestamp() -> getTokenExpirationTimestamp
    69:76:int hashCode() -> hashCode
    81:81:com.google.firebase.installations.remote.TokenResult$Builder toBuilder() -> toBuilder
    46:46:java.lang.String toString() -> toString
com.google.firebase.installations.remote.AutoValue_TokenResult$Builder -> com.google.firebase.installations.remote.AutoValue_TokenResult$Builder:
    84:84:void <init>(com.google.firebase.installations.remote.TokenResult,com.google.firebase.installations.remote.AutoValue_TokenResult$1) -> <init>
    88:89:void <init>() -> <init>
    90:94:void <init>(com.google.firebase.installations.remote.TokenResult) -> <init>
    112:121:com.google.firebase.installations.remote.TokenResult build() -> build
    107:108:com.google.firebase.installations.remote.TokenResult$Builder setResponseCode(com.google.firebase.installations.remote.TokenResult$ResponseCode) -> setResponseCode
    97:98:com.google.firebase.installations.remote.TokenResult$Builder setToken(java.lang.String) -> setToken
    102:103:com.google.firebase.installations.remote.TokenResult$Builder setTokenExpirationTimestamp(long) -> setTokenExpirationTimestamp
com.google.firebase.installations.remote.FirebaseInstallationServiceClient -> com.google.firebase.installations.remote.FirebaseInstallationServiceClient:
    103:106:void <clinit>() -> <clinit>
    124:129:void <init>(android.content.Context,com.google.firebase.inject.Provider,com.google.firebase.inject.Provider) -> <init>
    620:622:java.lang.String availableFirebaseOptions(java.lang.String,java.lang.String,java.lang.String) -> availableFirebaseOptions
    267:274:org.json.JSONObject buildCreateFirebaseInstallationRequestBody(java.lang.String,java.lang.String) -> buildCreateFirebaseInstallationRequestBody
    294:301:org.json.JSONObject buildGenerateAuthTokenRequestBody() -> buildGenerateAuthTokenRequestBody
    157:213:com.google.firebase.installations.remote.InstallationResponse createFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createFirebaseInstallation
    320:356:void deleteFirebaseInstallation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> deleteFirebaseInstallation
    397:452:com.google.firebase.installations.remote.TokenResult generateAuthToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateAuthToken
    577:587:java.lang.String getFingerprintHashForPackage() -> getFingerprintHashForPackage
    364:369:java.net.URL getFullyQualifiedRequestUri(java.lang.String) -> getFullyQualifiedRequestUri
    234:234:byte[] getJsonBytes(org.json.JSONObject) -> getJsonBytes
    458:458:boolean isSuccessfulResponseCode(int) -> isSuccessfulResponseCode
    462:468:void logBadConfigError() -> logBadConfigError
    611:616:void logFisCommunicationError(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.lang.String) -> logFisCommunicationError
    474:500:java.net.HttpURLConnection openHttpURLConnection(java.net.URL,java.lang.String) -> openHttpURLConnection
    598:603:long parseTokenExpirationTimestamp(java.lang.String) -> parseTokenExpirationTimestamp
    506:543:com.google.firebase.installations.remote.InstallationResponse readCreateResponse(java.net.HttpURLConnection) -> readCreateResponse
    628:650:java.lang.String readErrorResponse(java.net.HttpURLConnection) -> readErrorResponse
    549:569:com.google.firebase.installations.remote.TokenResult readGenerateAuthTokenResponse(java.net.HttpURLConnection) -> readGenerateAuthTokenResponse
    221:223:void writeFIDCreateRequestBodyToOutputStream(java.net.HttpURLConnection,java.lang.String,java.lang.String) -> writeFIDCreateRequestBodyToOutputStream
    280:282:void writeGenerateAuthTokenRequestBodyToOutputStream(java.net.HttpURLConnection) -> writeGenerateAuthTokenRequestBodyToOutputStream
    239:254:void writeRequestBodyToOutputStream(java.net.URLConnection,byte[]) -> writeRequestBodyToOutputStream
com.google.firebase.installations.remote.InstallationResponse -> com.google.firebase.installations.remote.InstallationResponse:
    23:23:void <init>() -> <init>
    54:54:com.google.firebase.installations.remote.InstallationResponse$Builder builder() -> builder
com.google.firebase.installations.remote.InstallationResponse$Builder -> com.google.firebase.installations.remote.InstallationResponse$Builder:
    58:58:void <init>() -> <init>
com.google.firebase.installations.remote.InstallationResponse$ResponseCode -> com.google.firebase.installations.remote.InstallationResponse$ResponseCode:
    25:30:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String) -> valueOf
    25:25:com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values() -> values
com.google.firebase.installations.remote.RequestLimiter -> com.google.firebase.installations.remote.RequestLimiter:
    28:31:void <clinit>() -> <clinit>
    45:48:void <init>() -> <init>
    67:75:long getBackoffDuration(int) -> getBackoffDuration
    99:99:boolean isRequestAllowed() -> isRequestAllowed
    82:82:boolean isRetryableError(int) -> isRetryableError
    90:90:boolean isSuccessfulOrRequiresNewFidCreation(int) -> isSuccessfulOrRequiresNewFidCreation
    62:64:void resetBackoffStrategy() -> resetBackoffStrategy
    52:60:void setNextRequestTime(int) -> setNextRequestTime
com.google.firebase.installations.remote.TokenResult -> com.google.firebase.installations.remote.TokenResult:
    27:27:void <init>() -> <init>
    56:56:com.google.firebase.installations.remote.TokenResult$Builder builder() -> builder
com.google.firebase.installations.remote.TokenResult$Builder -> com.google.firebase.installations.remote.TokenResult$Builder:
    60:60:void <init>() -> <init>
com.google.firebase.installations.remote.TokenResult$ResponseCode -> com.google.firebase.installations.remote.TokenResult$ResponseCode:
    29:37:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String) -> valueOf
    29:29:com.google.firebase.installations.remote.TokenResult$ResponseCode[] values() -> values
com.google.firebase.installations.time.SystemClock -> com.google.firebase.installations.time.SystemClock:
    30:30:void <init>() -> <init>
    44:44:long currentTimeMillis() -> currentTimeMillis
    34:37:com.google.firebase.installations.time.SystemClock getInstance() -> getInstance
com.google.firebase.internal.DataCollectionConfigStorage -> com.google.firebase.internal.DataCollectionConfigStorage:
    42:49:void <init>(android.content.Context,java.lang.String,com.google.firebase.events.Publisher) -> <init>
    52:55:android.content.Context directBootSafe(android.content.Context) -> directBootSafe
    59:59:boolean isEnabled() -> isEnabled
    102:105:boolean readAutoDataCollectionEnabled() -> readAutoDataCollectionEnabled
    84:98:boolean readManifestDataCollectionEnabled() -> readManifestDataCollectionEnabled
    70:80:void setEnabled(java.lang.Boolean) -> setEnabled
    62:68:void updateDataCollectionDefaultEnabled(boolean) -> updateDataCollectionDefaultEnabled
com.google.firebase.internal.InternalTokenProvider -> com.google.firebase.internal.InternalTokenProvider:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
com.google.firebase.internal.InternalTokenResult -> com.google.firebase.internal.InternalTokenResult:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.google.firebase.internal.api.FirebaseNoSignedInUserException -> com.google.firebase.internal.api.FirebaseNoSignedInUserException:
# {"id":"sourceFile","fileName":"com.google.firebase:firebase-auth-interop@@20.0.0"}
    1:1:void <init>(java.lang.String) -> <init>
com.google.firebase.platforminfo.-$$Lambda$DefaultUserAgentPublisher$4ig3kBSwJpLAUmRXJRn9olP8BdE -> com.google.firebase.platforminfo.-$$Lambda$DefaultUserAgentPublisher$4ig3kBSwJpLAUmRXJRn9olP8BdE:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.platforminfo.-$$Lambda$LibraryVersionComponent$Dl2UOJASySXKbW5tJLYAdrR74MU -> com.google.firebase.platforminfo.-$$Lambda$LibraryVersionComponent$Dl2UOJASySXKbW5tJLYAdrR74MU:
# {"id":"sourceFile","fileName":"lambda"}
com.google.firebase.platforminfo.AutoValue_LibraryVersion -> com.google.firebase.platforminfo.AutoValue_LibraryVersion:
    16:25:void <init>(java.lang.String,java.lang.String) -> <init>
    49:57:boolean equals(java.lang.Object) -> equals
    30:30:java.lang.String getLibraryName() -> getLibraryName
    36:36:java.lang.String getVersion() -> getVersion
    62:67:int hashCode() -> hashCode
    41:41:java.lang.String toString() -> toString
com.google.firebase.platforminfo.DefaultUserAgentPublisher -> com.google.firebase.platforminfo.DefaultUserAgentPublisher:
    33:36:void <init>(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar) -> <init>
    68:74:com.google.firebase.components.Component component() -> component
    46:50:java.lang.String getUserAgent() -> getUserAgent
    72:73:com.google.firebase.platforminfo.UserAgentPublisher lambda$component$0(com.google.firebase.components.ComponentContainer) -> lambda$component$0
    54:63:java.lang.String toUserAgent(java.util.Set) -> toUserAgent
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar -> com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar:
    29:32:void <init>() -> <init>
    54:63:com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance() -> getInstance
    47:49:java.util.Set getRegisteredVersions() -> getRegisteredVersions
com.google.firebase.platforminfo.KotlinDetector -> com.google.firebase.platforminfo.KotlinDetector:
    31:33:java.lang.String detectVersion() -> detectVersion
com.google.firebase.platforminfo.LibraryVersion -> com.google.firebase.platforminfo.LibraryVersion:
    22:22:void <init>() -> <init>
    24:24:com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String) -> create
com.google.firebase.platforminfo.LibraryVersionComponent -> com.google.firebase.platforminfo.LibraryVersionComponent:
    31:31:com.google.firebase.components.Component create(java.lang.String,java.lang.String) -> create
    35:38:com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor) -> fromContext
    37:37:com.google.firebase.platforminfo.LibraryVersion lambda$fromContext$0(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor,com.google.firebase.components.ComponentContainer) -> lambda$fromContext$0
com.google.firebase.provider.FirebaseInitProvider -> com.google.firebase.provider.FirebaseInitProvider:
    32:32:void <init>() -> <init>
    44:46:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    64:70:void checkContentProviderAuthority(android.content.pm.ProviderInfo) -> checkContentProviderAuthority
    98:98:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    86:86:java.lang.String getType(android.net.Uri) -> getType
    92:92:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    51:56:boolean onCreate() -> onCreate
    80:80:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    107:107:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.xamarin.forms.platform.android.FormsViewGroup -> com.xamarin.forms.platform.android.FormsViewGroup:
    20:22:void <init>(android.content.Context) -> <init>
    25:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:32:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:boolean getInputTransparent() -> getInputTransparent
    36:38:void measureAndLayout(int,int,int,int,int,int) -> measureAndLayout
    59:62:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    42:42:void onLayout(boolean,int,int,int,int) -> onLayout
    68:71:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    87:104:void sendBatchUpdate(float,float,int,boolean,float,float,float,float,float,float,float,float) -> sendBatchUpdate
    120:137:void sendViewBatchUpdate(android.view.View,float,float,int,boolean,float,float,float,float,float,float,float,float) -> sendViewBatchUpdate
    48:49:void setInputTransparent(boolean) -> setInputTransparent
com.xamarin.java_interop.ManagedPeer -> com.xamarin.java_interop.ManagedPeer:
    4:5:void <init>() -> <init>
com.xamarin.java_interop.internal.JavaProxyObject -> com.xamarin.java_interop.internal.JavaProxyObject:
    13:17:void <clinit>() -> <clinit>
    7:19:void <init>() -> <init>
    32:33:void jiAddManagedReference(java.lang.Object) -> jiAddManagedReference
    37:38:void jiClearManagedReferences() -> jiClearManagedReferences
com.xamarin.java_interop.internal.JavaProxyThrowable -> com.xamarin.java_interop.internal.JavaProxyThrowable:
    13:17:void <clinit>() -> <clinit>
    19:22:void <init>() -> <init>
    19:26:void <init>(java.lang.String) -> <init>
    30:31:void jiAddManagedReference(java.lang.Object) -> jiAddManagedReference
    35:36:void jiClearManagedReferences() -> jiClearManagedReferences
crc6411fee9de66e16618.FirebaseAnalyticsService -> crc6411fee9de66e16618.FirebaseAnalyticsService:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc6411fee9de66e16618.OnFailureListener -> crc6411fee9de66e16618.OnFailureListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFailure(java.lang.Exception) -> onFailure
crc6411fee9de66e16618.OnSuccessListener -> crc6411fee9de66e16618.OnSuccessListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSuccess(java.lang.Object) -> onSuccess
crc6414252951f3f66c67.CarouselViewAdapter_2 -> crc6414252951f3f66c67.CarouselViewAdapter_2:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:30:int getItemCount() -> getItemCount
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
crc6414252951f3f66c67.RecyclerViewScrollListener_2 -> crc6414252951f3f66c67.RecyclerViewScrollListener_2:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
crc6414fa209700c2b9f3.CachedImageFastRenderer -> crc6414fa209700c2b9f3.CachedImageFastRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onLayout(boolean,int,int,int,int) -> onLayout
    46:46:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc6414fa209700c2b9f3.CachedImageRenderer -> crc6414fa209700c2b9f3.CachedImageRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc6414fa209700c2b9f3.CachedImageView -> crc6414fa209700c2b9f3.CachedImageView:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:46:void invalidate() -> invalidate
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc64177c89b4d112e17b.ZXingBarcodeImageViewRenderer -> crc64177c89b4d112e17b.ZXingBarcodeImageViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64177c89b4d112e17b.ZXingScannerViewRenderer -> crc64177c89b4d112e17b.ZXingScannerViewRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64208e3b354a871c0e.CardsGestureListener -> crc64208e3b354a871c0e.CardsGestureListener:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
crc64208e3b354a871c0e.CardsViewRenderer -> crc64208e3b354a871c0e.CardsViewRenderer:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    55:55:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    63:63:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64277aaf30c19245d6.ToDosRemoteViewsFactory -> crc64277aaf30c19245d6.ToDosRemoteViewsFactory:
    13:25:void <clinit>() -> <clinit>
    30:33:void <init>() -> <init>
    37:40:void <init>(android.content.Context,android.content.Intent) -> <init>
    45:45:int getCount() -> getCount
    77:77:long getItemId(int) -> getItemId
    61:61:android.widget.RemoteViews getLoadingView() -> getLoadingView
    85:85:android.widget.RemoteViews getViewAt(int) -> getViewAt
    69:69:int getViewTypeCount() -> getViewTypeCount
    53:53:boolean hasStableIds() -> hasStableIds
    117:120:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    124:126:void monodroidClearReferences() -> monodroidClearReferences
    93:94:void onCreate() -> onCreate
    101:102:void onDataSetChanged() -> onDataSetChanged
    109:110:void onDestroy() -> onDestroy
crc64277aaf30c19245d6.ToDosWidgetProvider -> crc64277aaf30c19245d6.ToDosWidgetProvider:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    58:59:void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle) -> onAppWidgetOptionsChanged
    34:35:void onDeleted(android.content.Context,int[]) -> onDeleted
    42:43:void onDisabled(android.content.Context) -> onDisabled
    50:51:void onEnabled(android.content.Context) -> onEnabled
    66:67:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    74:75:void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
crc64277aaf30c19245d6.ToDosWidgetService -> crc64277aaf30c19245d6.ToDosWidgetService:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onCreate() -> onCreate
    30:30:android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent) -> onGetViewFactory
crc642e1c7a98bdb5c44a.AutoFitTextureView -> crc642e1c7a98bdb5c44a.AutoFitTextureView:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onMeasure(int,int) -> onMeasure
crc642e1c7a98bdb5c44a.CameraCaptureStateListener -> crc642e1c7a98bdb5c44a.CameraCaptureStateListener:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    38:39:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
crc642e1c7a98bdb5c44a.CameraFragment -> crc642e1c7a98bdb5c44a.CameraFragment:
    13:25:void <clinit>() -> <clinit>
    30:33:void <init>() -> <init>
    38:41:void <init>(int) -> <init>
    118:121:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    125:127:void monodroidClearReferences() -> monodroidClearReferences
    46:46:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    70:71:void onPause() -> onPause
    78:79:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    62:63:void onResume() -> onResume
    86:87:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    94:94:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    102:103:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    110:111:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    54:55:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
crc642e1c7a98bdb5c44a.CameraStateListener -> crc642e1c7a98bdb5c44a.CameraStateListener:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    40:41:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    48:49:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    32:33:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
crc642e1c7a98bdb5c44a.CameraViewRenderer -> crc642e1c7a98bdb5c44a.CameraViewRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    61:64:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    68:70:void monodroidClearReferences() -> monodroidClearReferences
    53:53:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc642e1c7a98bdb5c44a.DrawingViewRenderer -> crc642e1c7a98bdb5c44a.DrawingViewRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onDraw(android.graphics.Canvas) -> onDraw
    72:72:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    48:49:void onSizeChanged(int,int,int,int) -> onSizeChanged
    64:64:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc642e1c7a98bdb5c44a.FormsVideoView -> crc642e1c7a98bdb5c44a.FormsVideoView:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void setVideoPath(java.lang.String) -> setVideoPath
    54:55:void setVideoURI(android.net.Uri,java.util.Map) -> setVideoURI
crc642e1c7a98bdb5c44a.ImageAvailableListener -> crc642e1c7a98bdb5c44a.ImageAvailableListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
crc642e1c7a98bdb5c44a.MediaElementRenderer -> crc642e1c7a98bdb5c44a.MediaElementRenderer:
    16:25:void <clinit>() -> <clinit>
    30:33:void <init>(android.content.Context) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    62:62:float getAlpha() -> getAlpha
    110:113:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    117:119:void monodroidClearReferences() -> monodroidClearReferences
    78:79:void onCompletion(android.media.MediaPlayer) -> onCompletion
    102:102:boolean onError(android.media.MediaPlayer,int,int) -> onError
    86:86:boolean onInfo(android.media.MediaPlayer,int,int) -> onInfo
    94:95:void onPrepared(android.media.MediaPlayer) -> onPrepared
    70:71:void setAlpha(float) -> setAlpha
crc642e1c7a98bdb5c44a.PopupRenderer -> crc642e1c7a98bdb5c44a.PopupRenderer:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    39:40:void onCancel(android.content.DialogInterface) -> onCancel
    31:32:void show() -> show
crc642e1c7a98bdb5c44a.SemanticOrderViewRenderer -> crc642e1c7a98bdb5c44a.SemanticOrderViewRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onLayout(boolean,int,int,int,int) -> onLayout
crc642e1c7a98bdb5c44a.TextSwitcherRenderer -> crc642e1c7a98bdb5c44a.TextSwitcherRenderer:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:56:android.view.View makeView() -> makeView
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    40:41:void onLayout(boolean,int,int,int,int) -> onLayout
    48:48:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc642e1c7a98bdb5c44a.ThumbFrameRenderer -> crc642e1c7a98bdb5c44a.ThumbFrameRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643dd37f507f3d9710.PopupPageRenderer -> crc643dd37f507f3d9710.PopupPageRenderer:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>(android.content.Context) -> <init>
    34:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    98:101:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    105:107:void monodroidClearReferences() -> monodroidClearReferences
    58:59:void onAttachedToWindow() -> onAttachedToWindow
    66:67:void onDetachedFromWindow() -> onDetachedFromWindow
    50:51:void onLayout(boolean,int,int,int,int) -> onLayout
    90:90:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    74:75:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
crc643eead1a2954d3917.CameraEventsListener -> crc643eead1a2954d3917.CameraEventsListener:
    14:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    48:51:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:57:void monodroidClearReferences() -> monodroidClearReferences
    40:41:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    32:33:void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
crc643f46942d9dd1fff9.AHorizontalScrollView -> crc643f46942d9dd1fff9.AHorizontalScrollView:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>(android.content.Context) -> <init>
    34:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:75:void draw(android.graphics.Canvas) -> draw
    82:82:boolean isHorizontalScrollBarEnabled() -> isHorizontalScrollBarEnabled
    98:101:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    105:107:void monodroidClearReferences() -> monodroidClearReferences
    50:50:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    66:67:void onScrollChanged(int,int,int,int) -> onScrollChanged
    58:58:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:91:void setHorizontalScrollBarEnabled(boolean) -> setHorizontalScrollBarEnabled
crc643f46942d9dd1fff9.AccessibilityDelegateAutomationId -> crc643f46942d9dd1fff9.AccessibilityDelegateAutomationId:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
crc643f46942d9dd1fff9.ActionSheetRenderer -> crc643f46942d9dd1fff9.ActionSheetRenderer:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:34:void cancel() -> cancel
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    41:42:void onAttachedToWindow() -> onAttachedToWindow
    57:58:void onClick(android.view.View) -> onClick
    49:50:void onCreate(android.os.Bundle) -> onCreate
crc643f46942d9dd1fff9.ActivityIndicatorRenderer -> crc643f46942d9dd1fff9.ActivityIndicatorRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.AndroidActivity -> crc643f46942d9dd1fff9.AndroidActivity:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.BaseCellView -> crc643f46942d9dd1fff9.BaseCellView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.BorderDrawable -> crc643f46942d9dd1fff9.BorderDrawable:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    50:51:void draw(android.graphics.Canvas) -> draw
    42:42:int getOpacity() -> getOpacity
    34:34:boolean isStateful() -> isStateful
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    74:74:boolean onStateChange(int[]) -> onStateChange
    58:59:void setAlpha(int) -> setAlpha
    66:67:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
crc643f46942d9dd1fff9.BoxRenderer -> crc643f46942d9dd1fff9.BoxRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.ButtonRenderer -> crc643f46942d9dd1fff9.ButtonRenderer:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:75:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    79:81:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void onLayout(boolean,int,int,int,int) -> onLayout
    56:57:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    64:65:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
crc643f46942d9dd1fff9.ButtonRenderer_ButtonClickListener -> crc643f46942d9dd1fff9.ButtonRenderer_ButtonClickListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc643f46942d9dd1fff9.ButtonRenderer_ButtonTouchListener -> crc643f46942d9dd1fff9.ButtonRenderer_ButtonTouchListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
crc643f46942d9dd1fff9.CarouselPageAdapter -> crc643f46942d9dd1fff9.CarouselPageAdapter:
    13:24:void <clinit>() -> <clinit>
    29:32:void <init>() -> <init>
    45:46:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    37:37:int getCount() -> getCount
    53:53:int getItemPosition(java.lang.Object) -> getItemPosition
    61:61:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    69:69:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    101:104:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    108:110:void monodroidClearReferences() -> monodroidClearReferences
    77:78:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    85:86:void onPageScrolled(int,float,int) -> onPageScrolled
    93:94:void onPageSelected(int) -> onPageSelected
crc643f46942d9dd1fff9.CarouselPageRenderer -> crc643f46942d9dd1fff9.CarouselPageRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void onAttachedToWindow() -> onAttachedToWindow
    56:57:void onDetachedFromWindow() -> onDetachedFromWindow
    64:65:void onLayout(boolean,int,int,int,int) -> onLayout
    72:73:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.CarouselSpacingItemDecoration -> crc643f46942d9dd1fff9.CarouselSpacingItemDecoration:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:30:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.CarouselViewRenderer -> crc643f46942d9dd1fff9.CarouselViewRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    54:54:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.CarouselViewRenderer_CarouselViewOnScrollListener -> crc643f46942d9dd1fff9.CarouselViewRenderer_CarouselViewOnScrollListener:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    38:39:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
crc643f46942d9dd1fff9.CarouselViewRenderer_CarouselViewwOnGlobalLayoutListener -> crc643f46942d9dd1fff9.CarouselViewRenderer_CarouselViewwOnGlobalLayoutListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGlobalLayout() -> onGlobalLayout
crc643f46942d9dd1fff9.CellAdapter -> crc643f46942d9dd1fff9.CellAdapter:
    16:29:void <clinit>() -> <clinit>
    34:37:void <init>() -> <init>
    41:44:void <init>(android.content.Context) -> <init>
    129:132:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    136:138:void monodroidClearReferences() -> monodroidClearReferences
    57:57:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    97:97:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    65:65:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    105:105:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    73:74:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    113:114:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    89:90:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    49:49:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    81:81:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    121:121:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
crc643f46942d9dd1fff9.CellRenderer_RendererHolder -> crc643f46942d9dd1fff9.CellRenderer_RendererHolder:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.CenterSnapHelper -> crc643f46942d9dd1fff9.CenterSnapHelper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:29:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.CheckBoxDesignerRenderer -> crc643f46942d9dd1fff9.CheckBoxDesignerRenderer:
    14:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    48:49:void onFocusChange(android.view.View,boolean) -> onFocusChange
crc643f46942d9dd1fff9.CheckBoxRenderer -> crc643f46942d9dd1fff9.CheckBoxRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.CheckBoxRendererBase -> crc643f46942d9dd1fff9.CheckBoxRendererBase:
    14:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    48:49:void onFocusChange(android.view.View,boolean) -> onFocusChange
crc643f46942d9dd1fff9.CircularProgress -> crc643f46942d9dd1fff9.CircularProgress:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void draw(android.graphics.Canvas) -> draw
    54:55:void layout(int,int,int,int) -> layout
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.CollectionViewRenderer -> crc643f46942d9dd1fff9.CollectionViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ColorChangeRevealDrawable -> crc643f46942d9dd1fff9.ColorChangeRevealDrawable:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:30:void draw(android.graphics.Canvas) -> draw
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ConditionalFocusLayout -> crc643f46942d9dd1fff9.ConditionalFocusLayout:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
crc643f46942d9dd1fff9.ContainerView -> crc643f46942d9dd1fff9.ContainerView:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.CustomFrameLayout -> crc643f46942d9dd1fff9.CustomFrameLayout:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    61:64:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    68:70:void monodroidClearReferences() -> monodroidClearReferences
    53:53:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
crc643f46942d9dd1fff9.DataChangeObserver -> crc643f46942d9dd1fff9.DataChangeObserver:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    34:35:void onChanged() -> onChanged
    50:51:void onItemRangeChanged(int,int) -> onItemRangeChanged
    58:59:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    42:43:void onItemRangeInserted(int,int) -> onItemRangeInserted
    74:75:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    66:67:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
crc643f46942d9dd1fff9.DatePickerRenderer -> crc643f46942d9dd1fff9.DatePickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.DatePickerRendererBase_1 -> crc643f46942d9dd1fff9.DatePickerRendererBase_1:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.DragAndDropGestureHandler -> crc643f46942d9dd1fff9.DragAndDropGestureHandler:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onDrag(android.view.View,android.view.DragEvent) -> onDrag
crc643f46942d9dd1fff9.DragAndDropGestureHandler_CustomLocalStateData -> crc643f46942d9dd1fff9.DragAndDropGestureHandler_CustomLocalStateData:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EdgeSnapHelper -> crc643f46942d9dd1fff9.EdgeSnapHelper:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EditorEditText -> crc643f46942d9dd1fff9.EditorEditText:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EditorRenderer -> crc643f46942d9dd1fff9.EditorRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onAttachedToWindow() -> onAttachedToWindow
crc643f46942d9dd1fff9.EditorRendererBase_1 -> crc643f46942d9dd1fff9.EditorRendererBase_1:
    14:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:50:void afterTextChanged(android.text.Editable) -> afterTextChanged
    57:58:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    65:66:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
crc643f46942d9dd1fff9.EllipseRenderer -> crc643f46942d9dd1fff9.EllipseRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EllipseView -> crc643f46942d9dd1fff9.EllipseView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EmptyViewAdapter -> crc643f46942d9dd1fff9.EmptyViewAdapter:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:33:int getItemCount() -> getItemCount
    65:65:int getItemViewType(int) -> getItemViewType
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    57:57:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    41:42:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
crc643f46942d9dd1fff9.EndSingleSnapHelper -> crc643f46942d9dd1fff9.EndSingleSnapHelper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:29:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EndSnapHelper -> crc643f46942d9dd1fff9.EndSnapHelper:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:30:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    38:38:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EntryAccessibilityDelegate -> crc643f46942d9dd1fff9.EntryAccessibilityDelegate:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
crc643f46942d9dd1fff9.EntryCellEditText -> crc643f46942d9dd1fff9.EntryCellEditText:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    46:46:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
crc643f46942d9dd1fff9.EntryCellView -> crc643f46942d9dd1fff9.EntryCellView:
    16:24:void <clinit>() -> <clinit>
    29:32:void <init>(android.content.Context) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void afterTextChanged(android.text.Editable) -> afterTextChanged
    61:62:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    93:96:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    100:102:void monodroidClearReferences() -> monodroidClearReferences
    85:85:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    77:78:void onFocusChange(android.view.View,boolean) -> onFocusChange
    69:70:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
crc643f46942d9dd1fff9.EntryEditText -> crc643f46942d9dd1fff9.EntryEditText:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EntryRenderer -> crc643f46942d9dd1fff9.EntryRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.EntryRendererBase_1 -> crc643f46942d9dd1fff9.EntryRendererBase_1:
    15:22:void <clinit>() -> <clinit>
    27:30:void <init>(android.content.Context) -> <init>
    35:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:52:void afterTextChanged(android.text.Editable) -> afterTextChanged
    59:60:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    83:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    90:92:void monodroidClearReferences() -> monodroidClearReferences
    75:75:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    67:68:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
crc643f46942d9dd1fff9.FlyoutPageContainer -> crc643f46942d9dd1fff9.FlyoutPageContainer:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    55:56:void onAttachedToWindow() -> onAttachedToWindow
    63:63:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    47:48:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.FlyoutPageRenderer -> crc643f46942d9dd1fff9.FlyoutPageRenderer:
    13:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:111:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    115:117:void monodroidClearReferences() -> monodroidClearReferences
    52:53:void onAttachedToWindow() -> onAttachedToWindow
    60:61:void onDetachedFromWindow() -> onDetachedFromWindow
    76:77:void onDrawerClosed(android.view.View) -> onDrawerClosed
    84:85:void onDrawerOpened(android.view.View) -> onDrawerOpened
    92:93:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    100:101:void onDrawerStateChanged(int) -> onDrawerStateChanged
    68:69:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.FlyoutPageRendererNonAppCompat -> crc643f46942d9dd1fff9.FlyoutPageRendererNonAppCompat:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.FormattedStringExtensions_FontSpan -> crc643f46942d9dd1fff9.FormattedStringExtensions_FontSpan:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void updateDrawState(android.text.TextPaint) -> updateDrawState
    38:39:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
crc643f46942d9dd1fff9.FormattedStringExtensions_LineHeightSpan -> crc643f46942d9dd1fff9.FormattedStringExtensions_LineHeightSpan:
    15:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    31:34:void <init>(android.widget.TextView,double) -> <init>
    39:40:void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt) -> chooseHeight
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.FormattedStringExtensions_TextDecorationSpan -> crc643f46942d9dd1fff9.FormattedStringExtensions_TextDecorationSpan:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void updateDrawState(android.text.TextPaint) -> updateDrawState
    38:39:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
crc643f46942d9dd1fff9.FormsAnimationDrawable -> crc643f46942d9dd1fff9.FormsAnimationDrawable:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    32:32:boolean isRunning() -> isRunning
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    56:56:boolean selectDrawable(int) -> selectDrawable
    40:41:void start() -> start
    48:49:void stop() -> stop
crc643f46942d9dd1fff9.FormsAppCompatActivity -> crc643f46942d9dd1fff9.FormsAppCompatActivity:
    12:27:void <clinit>() -> <clinit>
    32:35:void <init>() -> <init>
    40:43:void <init>(int) -> <init>
    144:147:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    151:153:void monodroidClearReferences() -> monodroidClearReferences
    72:73:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    48:49:void onBackPressed() -> onBackPressed
    56:57:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    80:81:void onCreate(android.os.Bundle) -> onCreate
    88:89:void onDestroy() -> onDestroy
    96:97:void onNewIntent(android.content.Intent) -> onNewIntent
    64:64:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    104:105:void onPause() -> onPause
    112:113:void onRestart() -> onRestart
    120:121:void onResume() -> onResume
    128:129:void onStart() -> onStart
    136:137:void onStop() -> onStop
crc643f46942d9dd1fff9.FormsApplicationActivity -> crc643f46942d9dd1fff9.FormsApplicationActivity:
    12:27:void <clinit>() -> <clinit>
    32:35:void <init>() -> <init>
    136:139:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    143:145:void monodroidClearReferences() -> monodroidClearReferences
    72:73:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    40:41:void onBackPressed() -> onBackPressed
    48:49:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    80:81:void onCreate(android.os.Bundle) -> onCreate
    88:89:void onDestroy() -> onDestroy
    56:56:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    96:97:void onPause() -> onPause
    64:64:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    104:105:void onRestart() -> onRestart
    112:113:void onResume() -> onResume
    120:121:void onStart() -> onStart
    128:129:void onStop() -> onStop
crc643f46942d9dd1fff9.FormsEditText -> crc643f46942d9dd1fff9.FormsEditText:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    54:55:void onSelectionChanged(int,int) -> onSelectionChanged
crc643f46942d9dd1fff9.FormsEditTextBase -> crc643f46942d9dd1fff9.FormsEditTextBase:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
crc643f46942d9dd1fff9.FormsImageView -> crc643f46942d9dd1fff9.FormsImageView:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:46:void invalidate() -> invalidate
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.FormsSeekBar -> crc643f46942d9dd1fff9.FormsSeekBar:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:boolean isPressed() -> isPressed
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    47:47:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    63:64:void setPressed(boolean) -> setPressed
crc643f46942d9dd1fff9.FormsTextView -> crc643f46942d9dd1fff9.FormsTextView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.FormsVideoView -> crc643f46942d9dd1fff9.FormsVideoView:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void setVideoPath(java.lang.String) -> setVideoPath
    55:56:void setVideoURI(android.net.Uri,java.util.Map) -> setVideoURI
    63:64:void setVideoURI(android.net.Uri) -> setVideoURI
crc643f46942d9dd1fff9.FormsWebChromeClient -> crc643f46942d9dd1fff9.FormsWebChromeClient:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
crc643f46942d9dd1fff9.FormsWebViewClient -> crc643f46942d9dd1fff9.FormsWebViewClient:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    33:36:void <init>(crc643f46942d9dd1fff9.WebViewRenderer) -> <init>
    89:92:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    96:98:void monodroidClearReferences() -> monodroidClearReferences
    65:66:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    57:58:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    73:74:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    81:82:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    41:41:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    49:49:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest) -> shouldOverrideUrlLoading
crc643f46942d9dd1fff9.FrameRenderer -> crc643f46942d9dd1fff9.FrameRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.FrameRenderer_FrameDrawable -> crc643f46942d9dd1fff9.FrameRenderer_FrameDrawable:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    50:51:void draw(android.graphics.Canvas) -> draw
    42:42:int getOpacity() -> getOpacity
    34:34:boolean isStateful() -> isStateful
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    74:74:boolean onStateChange(int[]) -> onStateChange
    58:59:void setAlpha(int) -> setAlpha
    66:67:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
crc643f46942d9dd1fff9.GenericAnimatorListener -> crc643f46942d9dd1fff9.GenericAnimatorListener:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:57:void finalize() -> finalize
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    40:41:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    48:49:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
crc643f46942d9dd1fff9.GenericGlobalLayoutListener -> crc643f46942d9dd1fff9.GenericGlobalLayoutListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGlobalLayout() -> onGlobalLayout
crc643f46942d9dd1fff9.GenericMenuClickListener -> crc643f46942d9dd1fff9.GenericMenuClickListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
crc643f46942d9dd1fff9.GestureManager_TapAndPanGestureDetector -> crc643f46942d9dd1fff9.GestureManager_TapAndPanGestureDetector:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.GradientStrokeDrawable -> crc643f46942d9dd1fff9.GradientStrokeDrawable:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint) -> onDraw
crc643f46942d9dd1fff9.GradientStrokeDrawable_GradientShaderFactory -> crc643f46942d9dd1fff9.GradientStrokeDrawable_GradientShaderFactory:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:android.graphics.Shader resize(int,int) -> resize
crc643f46942d9dd1fff9.GridLayoutSpanSizeLookup -> crc643f46942d9dd1fff9.GridLayoutSpanSizeLookup:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:29:int getSpanSize(int) -> getSpanSize
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.GroupableItemsViewAdapter_2 -> crc643f46942d9dd1fff9.GroupableItemsViewAdapter_2:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:31:int getItemViewType(int) -> getItemViewType
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
crc643f46942d9dd1fff9.GroupableItemsViewRenderer_3 -> crc643f46942d9dd1fff9.GroupableItemsViewRenderer_3:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.GroupedListViewAdapter -> crc643f46942d9dd1fff9.GroupedListViewAdapter:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    31:34:void <init>(android.content.Context) -> <init>
    39:39:int getPositionForSection(int) -> getPositionForSection
    47:47:int getSectionForPosition(int) -> getSectionForPosition
    55:55:java.lang.Object[] getSections() -> getSections
    63:66:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    70:72:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ImageButtonRenderer -> crc643f46942d9dd1fff9.ImageButtonRenderer:
    15:25:void <clinit>() -> <clinit>
    30:33:void <init>(android.content.Context) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:71:void draw(android.graphics.Canvas) -> draw
    62:63:void invalidate() -> invalidate
    110:113:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    117:119:void monodroidClearReferences() -> monodroidClearReferences
    94:95:void onClick(android.view.View) -> onClick
    86:87:void onFocusChange(android.view.View,boolean) -> onFocusChange
    54:55:void onLayout(boolean,int,int,int,int) -> onLayout
    102:102:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    78:78:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.ImageCache_CacheEntry -> crc643f46942d9dd1fff9.ImageCache_CacheEntry:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ImageCache_FormsLruCache -> crc643f46942d9dd1fff9.ImageCache_FormsLruCache:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(int) -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
crc643f46942d9dd1fff9.ImageRenderer -> crc643f46942d9dd1fff9.ImageRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.IndicatorViewRenderer -> crc643f46942d9dd1fff9.IndicatorViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.InnerGestureListener -> crc643f46942d9dd1fff9.InnerGestureListener:
    14:26:void <clinit>() -> <clinit>
    31:34:void <init>() -> <init>
    111:114:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    118:120:void monodroidClearReferences() -> monodroidClearReferences
    87:87:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    95:95:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    39:39:boolean onDown(android.view.MotionEvent) -> onDown
    47:47:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    55:56:void onLongPress(android.view.MotionEvent) -> onLongPress
    63:63:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    71:72:void onShowPress(android.view.MotionEvent) -> onShowPress
    103:103:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    79:79:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
crc643f46942d9dd1fff9.InnerScaleListener -> crc643f46942d9dd1fff9.InnerScaleListener:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    39:39:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    47:48:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
crc643f46942d9dd1fff9.ItemContentView -> crc643f46942d9dd1fff9.ItemContentView:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.ItemsViewAdapter_2 -> crc643f46942d9dd1fff9.ItemsViewAdapter_2:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    57:57:int getItemCount() -> getItemCount
    65:65:int getItemViewType(int) -> getItemViewType
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    41:42:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    49:49:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    33:34:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
crc643f46942d9dd1fff9.ItemsViewRenderer_3 -> crc643f46942d9dd1fff9.ItemsViewRenderer_3:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.LabelRenderer -> crc643f46942d9dd1fff9.LabelRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:54:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.LineRenderer -> crc643f46942d9dd1fff9.LineRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.LineView -> crc643f46942d9dd1fff9.LineView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ListViewAdapter -> crc643f46942d9dd1fff9.ListViewAdapter:
    12:24:void <clinit>() -> <clinit>
    29:32:void <init>() -> <init>
    36:39:void <init>(android.content.Context) -> <init>
    76:76:boolean areAllItemsEnabled() -> areAllItemsEnabled
    44:44:int getCount() -> getCount
    60:60:java.lang.Object getItem(int) -> getItem
    84:84:long getItemId(int) -> getItemId
    92:92:int getItemViewType(int) -> getItemViewType
    100:100:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    68:68:int getViewTypeCount() -> getViewTypeCount
    52:52:boolean hasStableIds() -> hasStableIds
    108:108:boolean isEnabled(int) -> isEnabled
    116:119:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    123:125:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ListViewRenderer -> crc643f46942d9dd1fff9.ListViewRenderer:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void onAttachedToWindow() -> onAttachedToWindow
    57:58:void onDetachedFromWindow() -> onDetachedFromWindow
    65:66:void onLayout(boolean,int,int,int,int) -> onLayout
    73:74:void onRefresh() -> onRefresh
crc643f46942d9dd1fff9.ListViewRenderer_Container -> crc643f46942d9dd1fff9.ListViewRenderer_Container:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.ListViewRenderer_ListViewScrollDetector -> crc643f46942d9dd1fff9.ListViewRenderer_ListViewScrollDetector:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    30:33:void <init>(crc643f46942d9dd1fff9.ListViewRenderer) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    46:47:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
crc643f46942d9dd1fff9.ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling -> crc643f46942d9dd1fff9.ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:75:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    79:81:void monodroidClearReferences() -> monodroidClearReferences
    40:40:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    64:65:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    48:49:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    56:57:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
crc643f46942d9dd1fff9.LocalizedDigitsKeyListener -> crc643f46942d9dd1fff9.LocalizedDigitsKeyListener:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    30:33:void <init>(int,char) -> <init>
    54:54:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    46:46:char[] getAcceptedChars() -> getAcceptedChars
    38:38:int getInputType() -> getInputType
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.MasterDetailContainer -> crc643f46942d9dd1fff9.MasterDetailContainer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    54:55:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.MasterDetailRenderer -> crc643f46942d9dd1fff9.MasterDetailRenderer:
    13:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:111:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    115:117:void monodroidClearReferences() -> monodroidClearReferences
    52:53:void onAttachedToWindow() -> onAttachedToWindow
    60:61:void onDetachedFromWindow() -> onDetachedFromWindow
    76:77:void onDrawerClosed(android.view.View) -> onDrawerClosed
    84:85:void onDrawerOpened(android.view.View) -> onDrawerOpened
    92:93:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    100:101:void onDrawerStateChanged(int) -> onDrawerStateChanged
    68:69:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.NativeViewWrapperRenderer -> crc643f46942d9dd1fff9.NativeViewWrapperRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.NavigationRenderer -> crc643f46942d9dd1fff9.NavigationRenderer:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void onAttachedToWindow() -> onAttachedToWindow
    55:56:void onDetachedFromWindow() -> onDetachedFromWindow
    63:64:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.NongreedySnapHelper -> crc643f46942d9dd1fff9.NongreedySnapHelper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:30:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.NongreedySnapHelper_InitialScrollListener -> crc643f46942d9dd1fff9.NongreedySnapHelper_InitialScrollListener:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    28:31:void <init>(crc643f46942d9dd1fff9.NongreedySnapHelper) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
    36:37:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
crc643f46942d9dd1fff9.ObjectJavaBox_1 -> crc643f46942d9dd1fff9.ObjectJavaBox_1:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.OpenGLViewRenderer -> crc643f46942d9dd1fff9.OpenGLViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.OpenGLViewRenderer_Renderer -> crc643f46942d9dd1fff9.OpenGLViewRenderer_Renderer:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    40:41:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    48:49:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
crc643f46942d9dd1fff9.PageContainer -> crc643f46942d9dd1fff9.PageContainer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.PageExtensions_EmbeddedFragment -> crc643f46942d9dd1fff9.PageExtensions_EmbeddedFragment:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(int) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:37:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
crc643f46942d9dd1fff9.PageExtensions_EmbeddedSupportFragment -> crc643f46942d9dd1fff9.PageExtensions_EmbeddedSupportFragment:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(int) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:37:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
crc643f46942d9dd1fff9.PageRenderer -> crc643f46942d9dd1fff9.PageRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onAttachedToWindow() -> onAttachedToWindow
    64:65:void onDetachedFromWindow() -> onDetachedFromWindow
    72:73:void onLayout(boolean,int,int,int,int) -> onLayout
    48:48:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.PathRenderer -> crc643f46942d9dd1fff9.PathRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PathView -> crc643f46942d9dd1fff9.PathView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PickerEditText -> crc643f46942d9dd1fff9.PickerEditText:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    46:46:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.PickerManager_PickerListener -> crc643f46942d9dd1fff9.PickerManager_PickerListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc643f46942d9dd1fff9.PickerRenderer -> crc643f46942d9dd1fff9.PickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PlatformRenderer -> crc643f46942d9dd1fff9.PlatformRenderer:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    71:74:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    78:80:void monodroidClearReferences() -> monodroidClearReferences
    55:56:void onLayout(boolean,int,int,int,int) -> onLayout
    63:64:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.Platform_DefaultRenderer -> crc643f46942d9dd1fff9.Platform_DefaultRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    72:73:void onLayout(boolean,int,int,int,int) -> onLayout
    48:48:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    64:65:void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
crc643f46942d9dd1fff9.PolygonRenderer -> crc643f46942d9dd1fff9.PolygonRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PolygonView -> crc643f46942d9dd1fff9.PolygonView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PolylineRenderer -> crc643f46942d9dd1fff9.PolylineRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PolylineView -> crc643f46942d9dd1fff9.PolylineView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PositionalSmoothScroller -> crc643f46942d9dd1fff9.PositionalSmoothScroller:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    47:47:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    39:39:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    31:31:int getVerticalSnapPreference() -> getVerticalSnapPreference
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.PowerSaveModeBroadcastReceiver -> crc643f46942d9dd1fff9.PowerSaveModeBroadcastReceiver:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
crc643f46942d9dd1fff9.ProgressBarRenderer -> crc643f46942d9dd1fff9.ProgressBarRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.RadioButtonRenderer -> crc643f46942d9dd1fff9.RadioButtonRenderer:
    14:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    65:66:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    57:58:void onFocusChange(android.view.View,boolean) -> onFocusChange
    49:49:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.RectView -> crc643f46942d9dd1fff9.RectView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.RectangleRenderer -> crc643f46942d9dd1fff9.RectangleRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.RecyclerViewContainer -> crc643f46942d9dd1fff9.RecyclerViewContainer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.RefreshViewRenderer -> crc643f46942d9dd1fff9.RefreshViewRenderer:
    13:21:void <clinit>() -> <clinit>
    26:29:void <init>(android.content.Context) -> <init>
    34:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:58:boolean canChildScrollUp() -> canChildScrollUp
    42:42:boolean isRefreshing() -> isRefreshing
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    66:67:void onLayout(boolean,int,int,int,int) -> onLayout
    74:75:void onRefresh() -> onRefresh
    50:51:void setRefreshing(boolean) -> setRefreshing
crc643f46942d9dd1fff9.ScrollHelper -> crc643f46942d9dd1fff9.ScrollHelper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    28:31:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
    36:37:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
crc643f46942d9dd1fff9.ScrollLayoutManager -> crc643f46942d9dd1fff9.ScrollLayoutManager:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    37:40:void <init>(android.content.Context,int,boolean) -> <init>
    45:45:boolean canScrollVertically() -> canScrollVertically
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ScrollViewContainer -> crc643f46942d9dd1fff9.ScrollViewContainer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.ScrollViewRenderer -> crc643f46942d9dd1fff9.ScrollViewRenderer:
    12:22:void <clinit>() -> <clinit>
    27:30:void <init>(android.content.Context) -> <init>
    35:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:52:void draw(android.graphics.Canvas) -> draw
    107:110:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    114:116:void monodroidClearReferences() -> monodroidClearReferences
    75:76:void onAttachedToWindow() -> onAttachedToWindow
    83:84:void onDetachedFromWindow() -> onDetachedFromWindow
    59:59:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    91:92:void onLayout(boolean,int,int,int,int) -> onLayout
    99:100:void onScrollChanged(int,int,int,int) -> onScrollChanged
    67:67:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.SearchBarRenderer -> crc643f46942d9dd1fff9.SearchBarRenderer:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:66:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    70:72:void monodroidClearReferences() -> monodroidClearReferences
    47:47:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    55:55:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
crc643f46942d9dd1fff9.SelectableItemsViewAdapter_2 -> crc643f46942d9dd1fff9.SelectableItemsViewAdapter_2:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    38:39:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
crc643f46942d9dd1fff9.SelectableItemsViewRenderer_3 -> crc643f46942d9dd1fff9.SelectableItemsViewRenderer_3:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.SelectableViewHolder -> crc643f46942d9dd1fff9.SelectableViewHolder:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.view.View) -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc643f46942d9dd1fff9.ShapeRenderer_2 -> crc643f46942d9dd1fff9.ShapeRenderer_2:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShapeView -> crc643f46942d9dd1fff9.ShapeView:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onDraw(android.graphics.Canvas) -> onDraw
crc643f46942d9dd1fff9.ShellContentFragment -> crc643f46942d9dd1fff9.ShellContentFragment:
    13:24:void <clinit>() -> <clinit>
    29:32:void <init>() -> <init>
    37:40:void <init>(int) -> <init>
    109:112:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    116:118:void monodroidClearReferences() -> monodroidClearReferences
    85:86:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    93:94:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    101:102:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    61:61:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    69:69:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    77:78:void onDestroy() -> onDestroy
    45:46:void onResume() -> onResume
    53:54:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
crc643f46942d9dd1fff9.ShellFlyoutLayout -> crc643f46942d9dd1fff9.ShellFlyoutLayout:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter -> crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:33:int getItemCount() -> getItemCount
    41:41:int getItemViewType(int) -> getItemViewType
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    57:58:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    65:65:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    49:50:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter_ElementViewHolder -> crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter_ElementViewHolder:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.view.View) -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus -> crc643f46942d9dd1fff9.ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:45:android.view.View focusSearch(int) -> focusSearch
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShellFlyoutRenderer -> crc643f46942d9dd1fff9.ShellFlyoutRenderer:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>(android.content.Context) -> <init>
    35:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    99:102:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    106:108:void monodroidClearReferences() -> monodroidClearReferences
    67:68:void onDrawerClosed(android.view.View) -> onDrawerClosed
    75:76:void onDrawerOpened(android.view.View) -> onDrawerOpened
    83:84:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    91:92:void onDrawerStateChanged(int) -> onDrawerStateChanged
    51:51:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
crc643f46942d9dd1fff9.ShellFlyoutTemplatedContentRenderer -> crc643f46942d9dd1fff9.ShellFlyoutTemplatedContentRenderer:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
crc643f46942d9dd1fff9.ShellFlyoutTemplatedContentRenderer_HeaderContainer -> crc643f46942d9dd1fff9.ShellFlyoutTemplatedContentRenderer_HeaderContainer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShellFragmentPagerAdapter -> crc643f46942d9dd1fff9.ShellFragmentPagerAdapter:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    34:37:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    42:42:int getCount() -> getCount
    50:50:androidx.fragment.app.Fragment getItem(int) -> getItem
    58:58:long getItemId(int) -> getItemId
    66:66:int getItemPosition(java.lang.Object) -> getItemPosition
    74:74:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    90:93:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    97:99:void monodroidClearReferences() -> monodroidClearReferences
    82:83:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
crc643f46942d9dd1fff9.ShellItemRenderer -> crc643f46942d9dd1fff9.ShellItemRenderer:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    32:35:void <init>(int) -> <init>
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    40:40:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    48:49:void onDestroy() -> onDestroy
    56:56:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
crc643f46942d9dd1fff9.ShellItemRendererBase -> crc643f46942d9dd1fff9.ShellItemRendererBase:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(int) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onDestroy() -> onDestroy
crc643f46942d9dd1fff9.ShellPageContainer -> crc643f46942d9dd1fff9.ShellPageContainer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.ShellRenderer_SplitDrawable -> crc643f46942d9dd1fff9.ShellRenderer_SplitDrawable:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    40:41:void draw(android.graphics.Canvas) -> draw
    32:32:int getOpacity() -> getOpacity
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void setAlpha(int) -> setAlpha
    56:57:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
crc643f46942d9dd1fff9.ShellSearchView -> crc643f46942d9dd1fff9.ShellSearchView:
    15:25:void <clinit>() -> <clinit>
    30:33:void <init>(android.content.Context) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    94:95:void afterTextChanged(android.text.Editable) -> afterTextChanged
    102:103:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    118:121:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    125:127:void monodroidClearReferences() -> monodroidClearReferences
    62:63:void onAttachedToWindow() -> onAttachedToWindow
    86:86:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    70:71:void onLayout(boolean,int,int,int,int) -> onLayout
    78:79:void onMeasure(int,int) -> onMeasure
    110:111:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
crc643f46942d9dd1fff9.ShellSearchViewAdapter -> crc643f46942d9dd1fff9.ShellSearchViewAdapter:
    13:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    34:34:int getCount() -> getCount
    66:66:android.widget.Filter getFilter() -> getFilter
    42:42:java.lang.Object getItem(int) -> getItem
    50:50:long getItemId(int) -> getItemId
    58:58:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    74:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:83:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShellSearchViewAdapter_CustomFilter -> crc643f46942d9dd1fff9.ShellSearchViewAdapter_CustomFilter:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(android.widget.BaseAdapter) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    37:37:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    45:46:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
crc643f46942d9dd1fff9.ShellSearchViewAdapter_ObjectWrapper -> crc643f46942d9dd1fff9.ShellSearchViewAdapter_ObjectWrapper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:java.lang.String toString() -> toString
crc643f46942d9dd1fff9.ShellSearchView_ClipDrawableWrapper -> crc643f46942d9dd1fff9.ShellSearchView_ClipDrawableWrapper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.graphics.drawable.Drawable) -> <init>
    29:30:void draw(android.graphics.Canvas) -> draw
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ShellSectionRenderer -> crc643f46942d9dd1fff9.ShellSectionRenderer:
    14:23:void <clinit>() -> <clinit>
    28:31:void <init>() -> <init>
    36:39:void <init>(int) -> <init>
    92:95:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    99:101:void monodroidClearReferences() -> monodroidClearReferences
    84:85:void onClick(android.view.View) -> onClick
    44:44:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    52:53:void onDestroy() -> onDestroy
    60:61:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    68:69:void onPageScrolled(int,float,int) -> onPageScrolled
    76:77:void onPageSelected(int) -> onPageSelected
crc643f46942d9dd1fff9.ShellToolbarTracker -> crc643f46942d9dd1fff9.ShellToolbarTracker:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc643f46942d9dd1fff9.ShellToolbarTracker_FlyoutIconDrawerDrawable -> crc643f46942d9dd1fff9.ShellToolbarTracker_FlyoutIconDrawerDrawable:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:30:void draw(android.graphics.Canvas) -> draw
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.SimpleViewHolder -> crc643f46942d9dd1fff9.SimpleViewHolder:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.view.View) -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.SingleSnapHelper -> crc643f46942d9dd1fff9.SingleSnapHelper:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:30:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    38:38:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.SizedItemContentView -> crc643f46942d9dd1fff9.SizedItemContentView:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.SliderRenderer -> crc643f46942d9dd1fff9.SliderRenderer:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void onLayout(boolean,int,int,int,int) -> onLayout
    57:58:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    65:66:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    73:74:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
crc643f46942d9dd1fff9.SpacingItemDecoration -> crc643f46942d9dd1fff9.SpacingItemDecoration:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:30:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.StartSingleSnapHelper -> crc643f46942d9dd1fff9.StartSingleSnapHelper:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:29:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.StartSnapHelper -> crc643f46942d9dd1fff9.StartSnapHelper:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:30:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    38:38:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.StepperRenderer -> crc643f46942d9dd1fff9.StepperRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.StepperRendererManager_StepperListener -> crc643f46942d9dd1fff9.StepperRendererManager_StepperListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc643f46942d9dd1fff9.StructuredItemsViewAdapter_2 -> crc643f46942d9dd1fff9.StructuredItemsViewAdapter_2:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:31:int getItemViewType(int) -> getItemViewType
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
crc643f46942d9dd1fff9.StructuredItemsViewRenderer_3 -> crc643f46942d9dd1fff9.StructuredItemsViewRenderer_3:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.SwipeViewRenderer -> crc643f46942d9dd1fff9.SwipeViewRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:72:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void onAttachedToWindow() -> onAttachedToWindow
    64:64:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    56:56:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.SwitchCellView -> crc643f46942d9dd1fff9.SwitchCellView:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
crc643f46942d9dd1fff9.SwitchRenderer -> crc643f46942d9dd1fff9.SwitchRenderer:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
crc643f46942d9dd1fff9.TabbedRenderer -> crc643f46942d9dd1fff9.TabbedRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onAttachedToWindow() -> onAttachedToWindow
    54:55:void onDetachedFromWindow() -> onDetachedFromWindow
crc643f46942d9dd1fff9.TableViewModelRenderer -> crc643f46942d9dd1fff9.TableViewModelRenderer:
    12:22:void <clinit>() -> <clinit>
    27:30:void <init>() -> <init>
    34:37:void <init>(android.content.Context) -> <init>
    66:66:boolean areAllItemsEnabled() -> areAllItemsEnabled
    42:42:int getCount() -> getCount
    50:50:java.lang.Object getItem(int) -> getItem
    74:74:long getItemId(int) -> getItemId
    82:82:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    58:58:int getViewTypeCount() -> getViewTypeCount
    90:90:boolean isEnabled(int) -> isEnabled
    98:101:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    105:107:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.TableViewRenderer -> crc643f46942d9dd1fff9.TableViewRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onAttachedToWindow() -> onAttachedToWindow
crc643f46942d9dd1fff9.TemplatedItemViewHolder -> crc643f46942d9dd1fff9.TemplatedItemViewHolder:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.view.View) -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.TextCellRenderer_TextCellView -> crc643f46942d9dd1fff9.TextCellRenderer_TextCellView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.TextViewHolder -> crc643f46942d9dd1fff9.TextViewHolder:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.view.View) -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.TimePickerRenderer -> crc643f46942d9dd1fff9.TimePickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.TimePickerRendererBase_1 -> crc643f46942d9dd1fff9.TimePickerRendererBase_1:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer -> crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    48:48:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    64:65:void onLayout(boolean,int,int,int,int) -> onLayout
    72:73:void onMeasure(int,int) -> onMeasure
crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer_LongPressGestureListener -> crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer_LongPressGestureListener:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>() -> <init>
    83:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    90:92:void monodroidClearReferences() -> monodroidClearReferences
    35:35:boolean onDown(android.view.MotionEvent) -> onDown
    43:43:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    51:52:void onLongPress(android.view.MotionEvent) -> onLongPress
    59:59:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    67:68:void onShowPress(android.view.MotionEvent) -> onShowPress
    75:75:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer_TapGestureListener -> crc643f46942d9dd1fff9.ViewCellRenderer_ViewCellContainer_TapGestureListener:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>() -> <init>
    83:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    90:92:void monodroidClearReferences() -> monodroidClearReferences
    35:35:boolean onDown(android.view.MotionEvent) -> onDown
    43:43:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    51:52:void onLongPress(android.view.MotionEvent) -> onLongPress
    59:59:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    67:68:void onShowPress(android.view.MotionEvent) -> onShowPress
    75:75:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
crc643f46942d9dd1fff9.ViewRenderer -> crc643f46942d9dd1fff9.ViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.ViewRenderer_2 -> crc643f46942d9dd1fff9.ViewRenderer_2:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context) -> <init>
    31:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:66:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    70:72:void monodroidClearReferences() -> monodroidClearReferences
    55:56:void onFocusChange(android.view.View,boolean) -> onFocusChange
    47:48:void onLayout(boolean,int,int,int,int) -> onLayout
crc643f46942d9dd1fff9.VisualElementRenderer_1 -> crc643f46942d9dd1fff9.VisualElementRenderer_1:
    12:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    68:68:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    100:101:void draw(android.graphics.Canvas) -> draw
    76:76:android.view.View focusSearch(android.view.View,int) -> focusSearch
    116:119:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    123:125:void monodroidClearReferences() -> monodroidClearReferences
    84:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    60:60:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    92:93:void onLayout(boolean,int,int,int,int) -> onLayout
    108:109:void onMeasure(int,int) -> onMeasure
    52:52:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc643f46942d9dd1fff9.VisualElementTracker_AttachTracker -> crc643f46942d9dd1fff9.VisualElementTracker_AttachTracker:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    39:40:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
crc643f46942d9dd1fff9.WebViewRenderer -> crc643f46942d9dd1fff9.WebViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc643f46942d9dd1fff9.WebViewRenderer_JavascriptResult -> crc643f46942d9dd1fff9.WebViewRenderer_JavascriptResult:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onReceiveValue(java.lang.Object) -> onReceiveValue
crc6441892ff0080d8587.TimeLineRemoteViewsFactory -> crc6441892ff0080d8587.TimeLineRemoteViewsFactory:
    13:25:void <clinit>() -> <clinit>
    30:33:void <init>() -> <init>
    37:40:void <init>(android.content.Context,android.content.Intent) -> <init>
    45:45:int getCount() -> getCount
    77:77:long getItemId(int) -> getItemId
    61:61:android.widget.RemoteViews getLoadingView() -> getLoadingView
    85:85:android.widget.RemoteViews getViewAt(int) -> getViewAt
    69:69:int getViewTypeCount() -> getViewTypeCount
    53:53:boolean hasStableIds() -> hasStableIds
    117:120:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    124:126:void monodroidClearReferences() -> monodroidClearReferences
    93:94:void onCreate() -> onCreate
    101:102:void onDataSetChanged() -> onDataSetChanged
    109:110:void onDestroy() -> onDestroy
crc6441892ff0080d8587.TimeLineWidgetProvider -> crc6441892ff0080d8587.TimeLineWidgetProvider:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    82:85:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    89:91:void monodroidClearReferences() -> monodroidClearReferences
    58:59:void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle) -> onAppWidgetOptionsChanged
    34:35:void onDeleted(android.content.Context,int[]) -> onDeleted
    42:43:void onDisabled(android.content.Context) -> onDisabled
    50:51:void onEnabled(android.content.Context) -> onEnabled
    66:67:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    74:75:void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
crc6441892ff0080d8587.TimeLineWidgetService -> crc6441892ff0080d8587.TimeLineWidgetService:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onCreate() -> onCreate
    30:30:android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent) -> onGetViewFactory
crc6442b3a6049c8c0399.SelectableLabelRenderer -> crc6442b3a6049c8c0399.SelectableLabelRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc6442b3a6049c8c0399.SelectableLabelRenderer_CustomInsertionActionModeCallback -> crc6442b3a6049c8c0399.SelectableLabelRenderer_CustomInsertionActionModeCallback:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:33:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    41:41:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    49:50:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    57:57:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
crc6442b3a6049c8c0399.SelectableLabelRenderer_CustomSelectionActionModeCallback -> crc6442b3a6049c8c0399.SelectableLabelRenderer_CustomSelectionActionModeCallback:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:33:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    41:41:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    49:50:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    57:57:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
crc64435a5ac349fa9fda.ActivityLifecycleContextListener -> crc64435a5ac349fa9fda.ActivityLifecycleContextListener:
    13:37:void <clinit>() -> <clinit>
    42:45:void <init>() -> <init>
    218:221:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    225:227:void monodroidClearReferences() -> monodroidClearReferences
    50:51:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    58:59:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    66:67:void onActivityPaused(android.app.Activity) -> onActivityPaused
    106:107:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    114:115:void onActivityPostDestroyed(android.app.Activity) -> onActivityPostDestroyed
    122:123:void onActivityPostPaused(android.app.Activity) -> onActivityPostPaused
    130:131:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    138:139:void onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPostSaveInstanceState
    146:147:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    154:155:void onActivityPostStopped(android.app.Activity) -> onActivityPostStopped
    162:163:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    170:171:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    178:179:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    186:187:void onActivityPreResumed(android.app.Activity) -> onActivityPreResumed
    194:195:void onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPreSaveInstanceState
    202:203:void onActivityPreStarted(android.app.Activity) -> onActivityPreStarted
    210:211:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    74:75:void onActivityResumed(android.app.Activity) -> onActivityResumed
    82:83:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    90:91:void onActivityStarted(android.app.Activity) -> onActivityStarted
    98:99:void onActivityStopped(android.app.Activity) -> onActivityStopped
crc644bcdcf6d99873ace.FFAnimatedDrawable -> crc644bcdcf6d99873ace.FFAnimatedDrawable:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void <init>(android.content.res.Resources) -> <init>
    36:39:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    44:47:void <init>(android.content.res.Resources,java.io.InputStream) -> <init>
    52:55:void <init>(android.content.res.Resources,java.lang.String) -> <init>
    60:63:void <init>(android.graphics.Bitmap) -> <init>
    68:71:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    75:77:void monodroidClearReferences() -> monodroidClearReferences
crc644bcdcf6d99873ace.FFBitmapDrawable -> crc644bcdcf6d99873ace.FFBitmapDrawable:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    32:35:void <init>(android.content.res.Resources) -> <init>
    40:43:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    48:51:void <init>(android.content.res.Resources,java.io.InputStream) -> <init>
    56:59:void <init>(android.content.res.Resources,java.lang.String) -> <init>
    64:67:void <init>(android.graphics.Bitmap) -> <init>
    80:81:void draw(android.graphics.Canvas) -> draw
    104:107:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    111:113:void monodroidClearReferences() -> monodroidClearReferences
    72:73:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    88:89:void setAlpha(int) -> setAlpha
    96:97:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
crc644bcdcf6d99873ace.SelfDisposingBitmapDrawable -> crc644bcdcf6d99873ace.SelfDisposingBitmapDrawable:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void <init>(android.content.res.Resources) -> <init>
    37:40:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    45:48:void <init>(android.content.res.Resources,java.io.InputStream) -> <init>
    53:56:void <init>(android.content.res.Resources,java.lang.String) -> <init>
    61:64:void <init>(android.graphics.Bitmap) -> <init>
    69:70:void finalize() -> finalize
    77:80:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    84:86:void monodroidClearReferences() -> monodroidClearReferences
crc6450cc8034ea828c43.CustomPancakeViewRenderer -> crc6450cc8034ea828c43.CustomPancakeViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc6450cc8034ea828c43.MyWebViewRenderer -> crc6450cc8034ea828c43.MyWebViewRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:45:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc6450cc8034ea828c43.MyWebViewRenderer_MyFormsWebViewClient -> crc6450cc8034ea828c43.MyWebViewRenderer_MyFormsWebViewClient:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    30:33:void <init>(crc643f46942d9dd1fff9.WebViewRenderer) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    46:47:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    38:39:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
crc6450cc8034ea828c43.NoLineEntryRender -> crc6450cc8034ea828c43.NoLineEntryRender:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64515ee83f00766c60.PlatformShadowEffect_ShadowOutlineProvider -> crc64515ee83f00766c60.PlatformShadowEffect_ShadowOutlineProvider:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    28:31:void <init>(float,float,float) -> <init>
    36:37:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64515ee83f00766c60.PlatformTouchEffect_AccessibilityListener -> crc64515ee83f00766c60.PlatformTouchEffect_AccessibilityListener:
    14:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    48:51:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    55:57:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
    40:41:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
crc64515ee83f00766c60.VisualFeedbackEffectRouter_FastRendererOnLayoutChangeListener -> crc64515ee83f00766c60.VisualFeedbackEffectRouter_FastRendererOnLayoutChangeListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
crc645826731010de2e56.ProgressRingRenderer -> crc645826731010de2e56.ProgressRingRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onDraw(android.graphics.Canvas) -> onDraw
crc645b8ccbad6ecd7dce.SideMenuViewRenderer -> crc645b8ccbad6ecd7dce.SideMenuViewRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    54:54:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc6461e2ff30350109dc.AndroidAutoSuggestBox -> crc6461e2ff30350109dc.AndroidAutoSuggestBox:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:49:boolean enoughToFilter() -> enoughToFilter
    89:92:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    96:98:void monodroidClearReferences() -> monodroidClearReferences
    73:74:void onEditorAction(int) -> onEditorAction
    57:58:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    65:66:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    81:82:void replaceText(java.lang.CharSequence) -> replaceText
crc6461e2ff30350109dc.AndroidAutoSuggestBox_SuggestCompleteAdapter -> crc6461e2ff30350109dc.AndroidAutoSuggestBox_SuggestCompleteAdapter:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context,int) -> <init>
    33:33:int getCount() -> getCount
    41:41:android.widget.Filter getFilter() -> getFilter
    49:49:java.lang.Object getItem(int) -> getItem
    57:57:long getItemId(int) -> getItemId
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
crc6461e2ff30350109dc.AndroidAutoSuggestBox_SuggestCompleteAdapter_SuggestFilter -> crc6461e2ff30350109dc.AndroidAutoSuggestBox_SuggestCompleteAdapter_SuggestFilter:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:30:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    38:39:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
crc6461e2ff30350109dc.AutoSuggestBoxRenderer -> crc6461e2ff30350109dc.AutoSuggestBoxRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64692a67b1ffd85ce9.ActivityLifecycleCallbacks -> crc64692a67b1ffd85ce9.ActivityLifecycleCallbacks:
    13:37:void <clinit>() -> <clinit>
    42:45:void <init>() -> <init>
    218:221:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    225:227:void monodroidClearReferences() -> monodroidClearReferences
    50:51:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    58:59:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    66:67:void onActivityPaused(android.app.Activity) -> onActivityPaused
    106:107:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    114:115:void onActivityPostDestroyed(android.app.Activity) -> onActivityPostDestroyed
    122:123:void onActivityPostPaused(android.app.Activity) -> onActivityPostPaused
    130:131:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    138:139:void onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPostSaveInstanceState
    146:147:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    154:155:void onActivityPostStopped(android.app.Activity) -> onActivityPostStopped
    162:163:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    170:171:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    178:179:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    186:187:void onActivityPreResumed(android.app.Activity) -> onActivityPreResumed
    194:195:void onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPreSaveInstanceState
    202:203:void onActivityPreStarted(android.app.Activity) -> onActivityPreStarted
    210:211:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    74:75:void onActivityResumed(android.app.Activity) -> onActivityResumed
    82:83:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    90:91:void onActivityStarted(android.app.Activity) -> onActivityStarted
    98:99:void onActivityStopped(android.app.Activity) -> onActivityStopped
crc646957603ea1820544.MediaPickerActivity -> crc646957603ea1820544.MediaPickerActivity:
    13:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    74:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:83:void monodroidClearReferences() -> monodroidClearReferences
    50:51:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    42:43:void onCreate(android.os.Bundle) -> onCreate
    58:59:void onDestroy() -> onDestroy
    34:35:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    66:67:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
crc64720bb2db43a66fe9.ButtonRenderer -> crc64720bb2db43a66fe9.ButtonRenderer:
    15:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    92:95:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    99:101:void monodroidClearReferences() -> monodroidClearReferences
    76:77:void onClick(android.view.View) -> onClick
    52:53:void onLayout(boolean,int,int,int,int) -> onLayout
    84:84:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    60:61:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    68:69:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
crc64720bb2db43a66fe9.CarouselPageRenderer -> crc64720bb2db43a66fe9.CarouselPageRenderer:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>(android.content.Context) -> <init>
    35:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    99:102:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    106:108:void monodroidClearReferences() -> monodroidClearReferences
    51:52:void onAttachedToWindow() -> onAttachedToWindow
    59:60:void onDetachedFromWindow() -> onDetachedFromWindow
    67:68:void onLayout(boolean,int,int,int,int) -> onLayout
    75:76:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    83:84:void onPageScrolled(int,float,int) -> onPageScrolled
    91:92:void onPageSelected(int) -> onPageSelected
crc64720bb2db43a66fe9.FormsFragmentPagerAdapter_1 -> crc64720bb2db43a66fe9.FormsFragmentPagerAdapter_1:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    34:37:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    42:42:int getCount() -> getCount
    50:50:androidx.fragment.app.Fragment getItem(int) -> getItem
    58:58:long getItemId(int) -> getItemId
    66:66:int getItemPosition(java.lang.Object) -> getItemPosition
    74:74:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    90:93:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    97:99:void monodroidClearReferences() -> monodroidClearReferences
    82:83:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
crc64720bb2db43a66fe9.FormsViewPager -> crc64720bb2db43a66fe9.FormsViewPager:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    38:38:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    46:46:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64720bb2db43a66fe9.FragmentContainer -> crc64720bb2db43a66fe9.FragmentContainer:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:36:void <init>(int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    41:41:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    49:50:void onDestroyView() -> onDestroyView
    57:58:void onHiddenChanged(boolean) -> onHiddenChanged
    65:66:void onPause() -> onPause
    73:74:void onResume() -> onResume
crc64720bb2db43a66fe9.FrameRenderer -> crc64720bb2db43a66fe9.FrameRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64720bb2db43a66fe9.MasterDetailPageRenderer -> crc64720bb2db43a66fe9.MasterDetailPageRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64720bb2db43a66fe9.NavigationPageRenderer -> crc64720bb2db43a66fe9.NavigationPageRenderer:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void onAttachedToWindow() -> onAttachedToWindow
    73:74:void onClick(android.view.View) -> onClick
    57:58:void onDetachedFromWindow() -> onDetachedFromWindow
    65:66:void onLayout(boolean,int,int,int,int) -> onLayout
crc64720bb2db43a66fe9.NavigationPageRenderer_ClickListener -> crc64720bb2db43a66fe9.NavigationPageRenderer_ClickListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
crc64720bb2db43a66fe9.NavigationPageRenderer_Container -> crc64720bb2db43a66fe9.NavigationPageRenderer_Container:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:55:void onMeasure(int,int) -> onMeasure
crc64720bb2db43a66fe9.NavigationPageRenderer_DrawerMultiplexedListener -> crc64720bb2db43a66fe9.NavigationPageRenderer_DrawerMultiplexedListener:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onDrawerClosed(android.view.View) -> onDrawerClosed
    41:42:void onDrawerOpened(android.view.View) -> onDrawerOpened
    49:50:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    57:58:void onDrawerStateChanged(int) -> onDrawerStateChanged
crc64720bb2db43a66fe9.PickerRenderer -> crc64720bb2db43a66fe9.PickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64720bb2db43a66fe9.PickerRendererBase_1 -> crc64720bb2db43a66fe9.PickerRendererBase_1:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64720bb2db43a66fe9.Platform_ModalContainer -> crc64720bb2db43a66fe9.Platform_ModalContainer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:46:void onLayout(boolean,int,int,int,int) -> onLayout
crc64720bb2db43a66fe9.ShellFragmentContainer -> crc64720bb2db43a66fe9.ShellFragmentContainer:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:34:void <init>(int) -> <init>
    63:66:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    70:72:void monodroidClearReferences() -> monodroidClearReferences
    39:39:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    55:56:void onDestroy() -> onDestroy
    47:48:void onDestroyView() -> onDestroyView
crc64720bb2db43a66fe9.SwitchRenderer -> crc64720bb2db43a66fe9.SwitchRenderer:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
crc64720bb2db43a66fe9.TabbedPageRenderer -> crc64720bb2db43a66fe9.TabbedPageRenderer:
    15:28:void <clinit>() -> <clinit>
    33:36:void <init>(android.content.Context) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:140:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    144:146:void monodroidClearReferences() -> monodroidClearReferences
    57:58:void onAttachedToWindow() -> onAttachedToWindow
    65:66:void onDetachedFromWindow() -> onDetachedFromWindow
    73:74:void onLayout(boolean,int,int,int,int) -> onLayout
    129:129:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
    105:106:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    113:114:void onPageScrolled(int,float,int) -> onPageScrolled
    121:122:void onPageSelected(int) -> onPageSelected
    81:82:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    89:90:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    97:98:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
crc64720bb2db43a66fe9.ViewRenderer_2 -> crc64720bb2db43a66fe9.ViewRenderer_2:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.BaselineSpan -> crc647c3ddcd418b664a1.BaselineSpan:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(float) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void updateDrawState(android.text.TextPaint) -> updateDrawState
    45:46:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
crc647c3ddcd418b664a1.ClipboardContentProvider -> crc647c3ddcd418b664a1.ClipboardContentProvider:
    12:42:void <clinit>() -> <clinit>
    47:50:void <init>() -> <init>
    143:143:android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    151:152:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    159:159:int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    167:167:android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle) -> call
    119:119:android.net.Uri canonicalize(android.net.Uri) -> canonicalize
    55:55:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    175:176:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    127:127:java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String) -> getStreamTypes
    63:63:java.lang.String getType(android.net.Uri) -> getType
    71:71:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    135:135:boolean isTemporary() -> isTemporary
    271:274:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    278:280:void monodroidClearReferences() -> monodroidClearReferences
    263:264:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    79:79:boolean onCreate() -> onCreate
    215:215:android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String) -> openAssetFile
    223:223:android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openAssetFile
    231:231:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    239:239:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFile
    183:183:android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter) -> openPipeHelper
    199:199:android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle) -> openTypedAssetFile
    207:207:android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal) -> openTypedAssetFile
    87:87:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    95:95:android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal) -> query
    103:103:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> query
    255:255:boolean refresh(android.net.Uri,android.os.Bundle,android.os.CancellationSignal) -> refresh
    191:192:void shutdown() -> shutdown
    247:247:android.net.Uri uncanonicalize(android.net.Uri) -> uncanonicalize
    111:111:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
crc647c3ddcd418b664a1.ColorGradientBoxRenderer -> crc647c3ddcd418b664a1.ColorGradientBoxRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.CustomTypefaceSpan -> crc647c3ddcd418b664a1.CustomTypefaceSpan:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(android.graphics.Typeface) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void updateDrawState(android.text.TextPaint) -> updateDrawState
    45:46:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
crc647c3ddcd418b664a1.EnhancedListViewRenderer -> crc647c3ddcd418b664a1.EnhancedListViewRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:54:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
crc647c3ddcd418b664a1.F9PTextView -> crc647c3ddcd418b664a1.F9PTextView:
    12:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:61:void invalidate() -> invalidate
    116:119:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    123:125:void monodroidClearReferences() -> monodroidClearReferences
    100:101:void onDraw(android.graphics.Canvas) -> onDraw
    92:93:void onDrawForeground(android.graphics.Canvas) -> onDrawForeground
    76:77:void onLayout(boolean,int,int,int,int) -> onLayout
    68:69:void onMeasure(int,int) -> onMeasure
    108:108:boolean onPreDraw() -> onPreDraw
    84:85:void onSizeChanged(int,int,int,int) -> onSizeChanged
    52:53:void requestLayout() -> requestLayout
crc647c3ddcd418b664a1.HardwareKeyPageRenderer -> crc647c3ddcd418b664a1.HardwareKeyPageRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.IListCursor -> crc647c3ddcd418b664a1.IListCursor:
    12:26:void <clinit>() -> <clinit>
    31:34:void <init>() -> <init>
    47:47:int getColumnCount() -> getColumnCount
    55:55:java.lang.String[] getColumnNames() -> getColumnNames
    39:39:int getCount() -> getCount
    63:63:double getDouble(int) -> getDouble
    71:71:float getFloat(int) -> getFloat
    79:79:int getInt(int) -> getInt
    87:87:long getLong(int) -> getLong
    95:95:short getShort(int) -> getShort
    103:103:java.lang.String getString(int) -> getString
    119:119:int getType(int) -> getType
    111:111:boolean isNull(int) -> isNull
    127:130:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    134:136:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.JavaScriptEvaluator -> crc647c3ddcd418b664a1.JavaScriptEvaluator:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(android.webkit.WebView,java.lang.String) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onReceiveValue(java.lang.Object) -> onReceiveValue
crc647c3ddcd418b664a1.LabelRenderer -> crc647c3ddcd418b664a1.LabelRenderer:
    12:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:61:void invalidate() -> invalidate
    76:77:void measureAndLayout(int,int,int,int,int,int) -> measureAndLayout
    116:119:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    123:125:void monodroidClearReferences() -> monodroidClearReferences
    84:85:void onDraw(android.graphics.Canvas) -> onDraw
    92:93:void onDrawForeground(android.graphics.Canvas) -> onDrawForeground
    68:69:void onLayout(boolean,int,int,int,int) -> onLayout
    100:101:void onMeasure(int,int) -> onMeasure
    108:109:void onSizeChanged(int,int,int,int) -> onSizeChanged
    52:53:void requestLayout() -> requestLayout
crc647c3ddcd418b664a1.OnDrawableTouchListener -> crc647c3ddcd418b664a1.OnDrawableTouchListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
crc647c3ddcd418b664a1.OnTextChangedListener -> crc647c3ddcd418b664a1.OnTextChangedListener:
    14:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    32:35:void <init>(android.widget.EditText) -> <init>
    40:41:void afterTextChanged(android.text.Editable) -> afterTextChanged
    48:49:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    56:57:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
crc647c3ddcd418b664a1.PopupPageRenderer -> crc647c3ddcd418b664a1.PopupPageRenderer:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>(android.content.Context) -> <init>
    34:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    98:101:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    105:107:void monodroidClearReferences() -> monodroidClearReferences
    58:59:void onAttachedToWindow() -> onAttachedToWindow
    66:67:void onDetachedFromWindow() -> onDetachedFromWindow
    50:51:void onLayout(boolean,int,int,int,int) -> onLayout
    90:90:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    74:75:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
crc647c3ddcd418b664a1.PrimativeCursor -> crc647c3ddcd418b664a1.PrimativeCursor:
    12:27:void <clinit>() -> <clinit>
    32:35:void <init>() -> <init>
    120:120:byte[] getBlob(int) -> getBlob
    48:48:int getColumnCount() -> getColumnCount
    56:56:java.lang.String[] getColumnNames() -> getColumnNames
    40:40:int getCount() -> getCount
    64:64:double getDouble(int) -> getDouble
    72:72:float getFloat(int) -> getFloat
    80:80:int getInt(int) -> getInt
    88:88:long getLong(int) -> getLong
    96:96:short getShort(int) -> getShort
    104:104:java.lang.String getString(int) -> getString
    128:128:int getType(int) -> getType
    112:112:boolean isNull(int) -> isNull
    136:139:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    143:145:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.RgGestureDetectorListener -> crc647c3ddcd418b664a1.RgGestureDetectorListener:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
crc647c3ddcd418b664a1.RootLayoutListener -> crc647c3ddcd418b664a1.RootLayoutListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(android.view.View) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onGlobalLayout() -> onGlobalLayout
crc647c3ddcd418b664a1.ScrollListener -> crc647c3ddcd418b664a1.ScrollListener:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    39:40:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
crc647c3ddcd418b664a1.SeekBarListener -> crc647c3ddcd418b664a1.SeekBarListener:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    40:41:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    48:49:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
crc647c3ddcd418b664a1.ToPdfService -> crc647c3ddcd418b664a1.ToPdfService:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.ToPngService -> crc647c3ddcd418b664a1.ToPngService:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc647c3ddcd418b664a1.WebViewCallBack -> crc647c3ddcd418b664a1.WebViewCallBack:
    12:24:void <clinit>() -> <clinit>
    29:32:void <init>() -> <init>
    109:112:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    116:118:void monodroidClearReferences() -> monodroidClearReferences
    77:78:void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    85:86:void onPageCommitVisible(android.webkit.WebView,java.lang.String) -> onPageCommitVisible
    45:46:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    37:38:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    53:54:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    61:62:void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse) -> onReceivedHttpError
    69:69:boolean onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail) -> onRenderProcessGone
    101:102:void onUnhandledInputEvent(android.webkit.WebView,android.view.InputEvent) -> onUnhandledInputEvent
    93:94:void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
crc647c4c06b10f3352ff.MaterialActivityIndicatorRenderer -> crc647c4c06b10f3352ff.MaterialActivityIndicatorRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    61:64:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    68:70:void monodroidClearReferences() -> monodroidClearReferences
    53:53:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialButtonRenderer -> crc647c4c06b10f3352ff.MaterialButtonRenderer:
    16:29:void <clinit>() -> <clinit>
    34:37:void <init>(android.content.Context) -> <init>
    42:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:53:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:59:void draw(android.graphics.Canvas) -> draw
    82:82:boolean isEnabled() -> isEnabled
    138:141:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    145:147:void monodroidClearReferences() -> monodroidClearReferences
    122:123:void onClick(android.view.View) -> onClick
    114:115:void onFocusChange(android.view.View,boolean) -> onFocusChange
    74:75:void onLayout(boolean,int,int,int,int) -> onLayout
    130:130:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    66:66:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    98:99:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    106:107:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    90:91:void setEnabled(boolean) -> setEnabled
crc647c4c06b10f3352ff.MaterialCheckBoxRenderer -> crc647c4c06b10f3352ff.MaterialCheckBoxRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialContextThemeWrapper -> crc647c4c06b10f3352ff.MaterialContextThemeWrapper:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context,int) -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialDatePickerRenderer -> crc647c4c06b10f3352ff.MaterialDatePickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialEditorRenderer -> crc647c4c06b10f3352ff.MaterialEditorRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialEntryRenderer -> crc647c4c06b10f3352ff.MaterialEntryRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialFormsEditText -> crc647c4c06b10f3352ff.MaterialFormsEditText:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:46:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    54:55:void onSelectionChanged(int,int) -> onSelectionChanged
crc647c4c06b10f3352ff.MaterialFormsEditTextBase -> crc647c4c06b10f3352ff.MaterialFormsEditTextBase:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
crc647c4c06b10f3352ff.MaterialFormsTextInputLayout -> crc647c4c06b10f3352ff.MaterialFormsTextInputLayout:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialFormsTextInputLayoutBase -> crc647c4c06b10f3352ff.MaterialFormsTextInputLayoutBase:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:45:android.widget.EditText getEditText() -> getEditText
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialFrameRenderer -> crc647c4c06b10f3352ff.MaterialFrameRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onLayout(boolean,int,int,int,int) -> onLayout
    46:46:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialPickerEditText -> crc647c4c06b10f3352ff.MaterialPickerEditText:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    54:55:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    46:46:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialPickerRenderer -> crc647c4c06b10f3352ff.MaterialPickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialPickerTextInputLayout -> crc647c4c06b10f3352ff.MaterialPickerTextInputLayout:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc647c4c06b10f3352ff.MaterialProgressBarRenderer -> crc647c4c06b10f3352ff.MaterialProgressBarRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialSliderRenderer -> crc647c4c06b10f3352ff.MaterialSliderRenderer:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>(android.content.Context) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    57:58:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    65:66:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    73:74:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    49:49:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialStepperRenderer -> crc647c4c06b10f3352ff.MaterialStepperRenderer:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>(android.content.Context) -> <init>
    29:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    45:45:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc647c4c06b10f3352ff.MaterialTimePickerRenderer -> crc647c4c06b10f3352ff.MaterialTimePickerRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc6480997b3ef81bf9b2.ZXingSurfaceView -> crc6480997b3ef81bf9b2.ZXingSurfaceView:
    13:23:void <clinit>() -> <clinit>
    28:31:void <init>(android.content.Context) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:111:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    115:117:void monodroidClearReferences() -> monodroidClearReferences
    60:61:void onAttachedToWindow() -> onAttachedToWindow
    52:52:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    76:77:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    68:69:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    84:85:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    92:93:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    100:101:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
crc648e35430423bd4943.GLTextureView -> crc648e35430423bd4943.GLTextureView:
    14:24:void <clinit>() -> <clinit>
    29:32:void <init>(android.content.Context) -> <init>
    37:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:112:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    116:118:void monodroidClearReferences() -> monodroidClearReferences
    53:54:void onAttachedToWindow() -> onAttachedToWindow
    61:62:void onDetachedFromWindow() -> onDetachedFromWindow
    101:102:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    69:70:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    77:77:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    85:86:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    93:94:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
crc648e35430423bd4943.GLTextureView_LogWriter -> crc648e35430423bd4943.GLTextureView_LogWriter:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:32:void close() -> close
    39:40:void flush() -> flush
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void write(char[],int,int) -> write
crc648e35430423bd4943.SKCanvasView -> crc648e35430423bd4943.SKCanvasView:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    72:73:void onAttachedToWindow() -> onAttachedToWindow
    64:65:void onDetachedFromWindow() -> onDetachedFromWindow
    48:49:void onDraw(android.graphics.Canvas) -> onDraw
    56:57:void onSizeChanged(int,int,int,int) -> onSizeChanged
crc648e35430423bd4943.SKGLTextureView -> crc648e35430423bd4943.SKGLTextureView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc648e35430423bd4943.SKGLTextureViewRenderer -> crc648e35430423bd4943.SKGLTextureViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc648e35430423bd4943.SKGLTextureView_InternalRenderer -> crc648e35430423bd4943.SKGLTextureView_InternalRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc6495d4f5d63cc5c882.AwaitableTaskCompleteListener_1 -> crc6495d4f5d63cc5c882.AwaitableTaskCompleteListener_1:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onComplete(com.google.android.gms.tasks.Task) -> onComplete
crc64975da797b0da1ef8.Alarm -> crc64975da797b0da1ef8.Alarm:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
crc64975da797b0da1ef8.AutoStart -> crc64975da797b0da1ef8.AutoStart:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
crc64975da797b0da1ef8.NotificationService -> crc64975da797b0da1ef8.NotificationService:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    40:40:android.os.IBinder onBind(android.content.Intent) -> onBind
    56:57:void onCreate() -> onCreate
    48:48:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    32:32:android.content.ComponentName startForegroundService(android.content.Intent) -> startForegroundService
crc64a0e0a82d0db9a07d.ActivityLifecycleContextListener -> crc64a0e0a82d0db9a07d.ActivityLifecycleContextListener:
    13:37:void <clinit>() -> <clinit>
    42:45:void <init>() -> <init>
    218:221:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    225:227:void monodroidClearReferences() -> monodroidClearReferences
    50:51:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    58:59:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    66:67:void onActivityPaused(android.app.Activity) -> onActivityPaused
    106:107:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    114:115:void onActivityPostDestroyed(android.app.Activity) -> onActivityPostDestroyed
    122:123:void onActivityPostPaused(android.app.Activity) -> onActivityPostPaused
    130:131:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    138:139:void onActivityPostSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPostSaveInstanceState
    146:147:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    154:155:void onActivityPostStopped(android.app.Activity) -> onActivityPostStopped
    162:163:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    170:171:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    178:179:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    186:187:void onActivityPreResumed(android.app.Activity) -> onActivityPreResumed
    194:195:void onActivityPreSaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivityPreSaveInstanceState
    202:203:void onActivityPreStarted(android.app.Activity) -> onActivityPreStarted
    210:211:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    74:75:void onActivityResumed(android.app.Activity) -> onActivityResumed
    82:83:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    90:91:void onActivityStarted(android.app.Activity) -> onActivityStarted
    98:99:void onActivityStopped(android.app.Activity) -> onActivityStopped
crc64a0e0a82d0db9a07d.IntermediateActivity -> crc64a0e0a82d0db9a07d.IntermediateActivity:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    47:48:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    31:32:void onCreate(android.os.Bundle) -> onCreate
    39:40:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
crc64b75d9ddab39d6c30.LRUCache -> crc64b75d9ddab39d6c30.LRUCache:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(int) -> <init>
    38:39:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    46:49:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    53:55:void monodroidClearReferences() -> monodroidClearReferences
    30:30:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
crc64b76f6e8b2d8c8db1.AbstractAppCompatDialogFragment_1 -> crc64b76f6e8b2d8c8db1.AbstractAppCompatDialogFragment_1:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    39:39:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    47:48:void onDetach() -> onDetach
    31:32:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
crc64b76f6e8b2d8c8db1.AlertAppCompatDialogFragment -> crc64b76f6e8b2d8c8db1.AlertAppCompatDialogFragment:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
crc64b82ae58feea5a8fa.MainActivity -> crc64b82ae58feea5a8fa.MainActivity:
    12:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    34:37:void <init>(int) -> <init>
    90:93:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    97:99:void monodroidClearReferences() -> monodroidClearReferences
    74:75:void onCreate(android.os.Bundle) -> onCreate
    66:66:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    82:83:void onNewIntent(android.content.Intent) -> onNewIntent
    50:51:void onRestart() -> onRestart
    58:59:void onResume() -> onResume
    42:43:void onStart() -> onStart
crc64b82ae58feea5a8fa.SplashActivity -> crc64b82ae58feea5a8fa.SplashActivity:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:33:void <init>(int) -> <init>
    54:57:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    61:63:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onCreate(android.os.Bundle) -> onCreate
    46:47:void onNewIntent(android.content.Intent) -> onNewIntent
crc64b9e5e2149aacc2c3.KeyboardUtils -> crc64b9e5e2149aacc2c3.KeyboardUtils:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGlobalLayout() -> onGlobalLayout
crc64bb223c2be3a01e03.SKCanvasViewRenderer -> crc64bb223c2be3a01e03.SKCanvasViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64bb223c2be3a01e03.SKCanvasViewRendererBase_2 -> crc64bb223c2be3a01e03.SKCanvasViewRendererBase_2:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64bb223c2be3a01e03.SKGLViewRenderer -> crc64bb223c2be3a01e03.SKGLViewRenderer:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64bb223c2be3a01e03.SKGLViewRendererBase_2 -> crc64bb223c2be3a01e03.SKGLViewRendererBase_2:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
crc64bf50e3bee6fd2c98.NativeGestureDetector -> crc64bf50e3bee6fd2c98.NativeGestureDetector:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    39:39:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    31:31:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64bf50e3bee6fd2c98.NativeGestureListener -> crc64bf50e3bee6fd2c98.NativeGestureListener:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onDown(android.view.MotionEvent) -> onDown
    47:47:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    39:39:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
crc64bf50e3bee6fd2c98.OnTouchListener -> crc64bf50e3bee6fd2c98.OnTouchListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
crc64cea48322b3427ae9.ConnectivityChangeBroadcastReceiver -> crc64cea48322b3427ae9.ConnectivityChangeBroadcastReceiver:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
crc64dcc46dac8f5e9432.OnUpdateSuccesListener -> crc64dcc46dac8f5e9432.OnUpdateSuccesListener:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(com.google.android.play.core.appupdate.AppUpdateManager,android.app.Activity) -> <init>
    45:48:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    52:54:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onSuccess(java.lang.Object) -> onSuccess
crc64e6d0b84c6264ccdd.AuthenticationHandler -> crc64e6d0b84c6264ccdd.AuthenticationHandler:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    41:42:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    49:50:void onAuthenticationFailed() -> onAuthenticationFailed
    33:34:void onAuthenticationSucceeded(androidx.biometric.BiometricPrompt$AuthenticationResult) -> onAuthenticationSucceeded
    57:58:void onClick(android.content.DialogInterface,int) -> onClick
crc64eabf91e267755506.CustomPrintDocumentAdapter -> crc64eabf91e267755506.CustomPrintDocumentAdapter:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    29:32:void <init>(java.lang.String) -> <init>
    53:56:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    60:62:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    45:46:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
crc64eabf91e267755506.MainActivity -> crc64eabf91e267755506.MainActivity:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:36:void <init>(int) -> <init>
    81:84:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    88:90:void monodroidClearReferences() -> monodroidClearReferences
    41:42:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    57:58:void onCreate(android.os.Bundle) -> onCreate
    73:74:void onDestroy() -> onDestroy
    49:49:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    65:66:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
crc64ee486da937c010f4.ButtonRenderer -> crc64ee486da937c010f4.ButtonRenderer:
    16:27:void <clinit>() -> <clinit>
    32:35:void <init>(android.content.Context) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:57:void draw(android.graphics.Canvas) -> draw
    120:123:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    127:129:void monodroidClearReferences() -> monodroidClearReferences
    104:105:void onClick(android.view.View) -> onClick
    96:97:void onFocusChange(android.view.View,boolean) -> onFocusChange
    72:73:void onLayout(boolean,int,int,int,int) -> onLayout
    112:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    64:64:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    80:81:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    88:89:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
crc64ee486da937c010f4.FrameRenderer -> crc64ee486da937c010f4.FrameRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:57:void draw(android.graphics.Canvas) -> draw
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void onLayout(boolean,int,int,int,int) -> onLayout
    72:73:void onSizeChanged(int,int,int,int) -> onSizeChanged
    64:64:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64ee486da937c010f4.ImageRenderer -> crc64ee486da937c010f4.ImageRenderer:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>(android.content.Context) -> <init>
    32:35:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    40:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:65:void draw(android.graphics.Canvas) -> draw
    56:57:void invalidate() -> invalidate
    80:83:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    87:89:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void onLayout(boolean,int,int,int,int) -> onLayout
    72:72:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64ee486da937c010f4.LabelRenderer -> crc64ee486da937c010f4.LabelRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onLayout(boolean,int,int,int,int) -> onLayout
    54:54:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
crc64f8908e42fa42e603.PancakeDrawable -> crc64f8908e42fa42e603.PancakeDrawable:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    41:42:void draw(android.graphics.Canvas) -> draw
    33:33:int getOpacity() -> getOpacity
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    65:65:boolean onStateChange(int[]) -> onStateChange
    49:50:void setAlpha(int) -> setAlpha
    57:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
crc64f8908e42fa42e603.PancakeViewRenderer -> crc64f8908e42fa42e603.PancakeViewRenderer:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:54:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onDraw(android.graphics.Canvas) -> onDraw
crc64f8908e42fa42e603.RoundedCornerOutlineProvider -> crc64f8908e42fa42e603.RoundedCornerOutlineProvider:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:30:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
crc64fdbeeba101bd56dc.RgGestureDetectorListener -> crc64fdbeeba101bd56dc.RgGestureDetectorListener:
    12:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    37:40:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    44:46:void monodroidClearReferences() -> monodroidClearReferences
    29:29:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
ffimageloading.cross.MvxCachedImageView -> ffimageloading.cross.MvxCachedImageView:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>(android.content.Context) -> <init>
    28:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:47:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    51:53:void monodroidClearReferences() -> monodroidClearReferences
ffimageloading.views.ImageViewAsync -> ffimageloading.views.ImageViewAsync:
    12:17:void <clinit>() -> <clinit>
    22:25:void <init>(android.content.Context) -> <init>
    30:33:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    69:71:void monodroidClearReferences() -> monodroidClearReferences
    46:47:void onMeasure(int,int) -> onMeasure
    54:54:boolean setFrame(int,int,int,int) -> setFrame
mono.MonoPackageManager -> mono.MonoPackageManager:
    21:21:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    28:109:void LoadApplication(android.content.Context,android.content.pm.ApplicationInfo,java.lang.String[]) -> LoadApplication
    146:146:java.lang.String[] getAssemblies() -> getAssemblies
    151:151:java.lang.String[] getDependencies() -> getDependencies
    134:134:java.lang.String getNativeLibraryPath(android.content.Context) -> getNativeLibraryPath
    139:141:java.lang.String getNativeLibraryPath(android.content.pm.ApplicationInfo) -> getNativeLibraryPath
    118:124:boolean isEmulator() -> isEmulator
    130:130:void setContext(android.content.Context) -> setContext
mono.MonoPackageManager_Resources -> mono.MonoPackageManager_Resources:
    3:118:void <clinit>() -> <clinit>
    2:2:void <init>() -> <init>
mono.MonoRuntimeProvider -> mono.MonoRuntimeProvider:
    9:10:void <init>() -> <init>
    22:38:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    61:61:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    49:49:java.lang.String getType(android.net.Uri) -> getType
    55:55:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    15:15:boolean onCreate() -> onCreate
    43:43:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    67:67:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
mono.android.BuildConfig -> mono.android.BuildConfig:
    4:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
mono.android.DebugRuntime -> mono.android.DebugRuntime:
    5:5:void <init>() -> <init>
mono.android.GCUserPeer -> mono.android.GCUserPeer:
    3:4:void <init>() -> <init>
    8:11:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    15:17:void monodroidClearReferences() -> monodroidClearReferences
mono.android.MultiDexLoader -> mono.android.MultiDexLoader:
    63:63:void <init>() -> <init>
    74:89:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    118:118:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    92:93:java.util.List getDexList(java.lang.String) -> getDexList
    106:106:java.lang.String getType(android.net.Uri) -> getType
    112:112:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    68:68:boolean onCreate() -> onCreate
    100:100:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    124:124:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
mono.android.Runtime -> mono.android.Runtime:
    7:15:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
mono.android.TypeManager -> mono.android.TypeManager:
    13:17:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    7:8:void Activate(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object[]) -> Activate
mono.android.XamarinUncaughtExceptionHandler -> mono.android.XamarinUncaughtExceptionHandler:
# {"id":"sourceFile","fileName":"Runtime.java"}
    32:34:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    39:43:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
mono.android.accessibilityservice.AccessibilityService_MagnificationController_OnMagnificationChangedListenerImplementor -> mono.android.accessibilityservice.AccessibilityService_MagnificationController_OnMagnificationChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMagnificationChanged(android.accessibilityservice.AccessibilityService$MagnificationController,android.graphics.Region,float,float,float) -> onMagnificationChanged
mono.android.accessibilityservice.AccessibilityService_SoftKeyboardController_OnShowModeChangedListenerImplementor -> mono.android.accessibilityservice.AccessibilityService_SoftKeyboardController_OnShowModeChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onShowModeChanged(android.accessibilityservice.AccessibilityService$SoftKeyboardController,int) -> onShowModeChanged
mono.android.accounts.OnAccountsUpdateListenerImplementor -> mono.android.accounts.OnAccountsUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
mono.android.animation.AnimatorEventDispatcher -> mono.android.animation.AnimatorEventDispatcher:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    41:42:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    49:50:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    57:58:void onAnimationStart(android.animation.Animator) -> onAnimationStart
mono.android.animation.Animator_AnimatorListenerImplementor -> mono.android.animation.Animator_AnimatorListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    41:42:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    49:50:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    57:58:void onAnimationStart(android.animation.Animator) -> onAnimationStart
mono.android.animation.Animator_AnimatorPauseListenerImplementor -> mono.android.animation.Animator_AnimatorPauseListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    39:40:void onAnimationResume(android.animation.Animator) -> onAnimationResume
mono.android.animation.LayoutTransition_TransitionListenerImplementor -> mono.android.animation.LayoutTransition_TransitionListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:32:void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> endTransition
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    39:40:void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int) -> startTransition
mono.android.animation.TimeAnimator_TimeListenerImplementor -> mono.android.animation.TimeAnimator_TimeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTimeUpdate(android.animation.TimeAnimator,long,long) -> onTimeUpdate
mono.android.animation.ValueAnimator_AnimatorUpdateListenerImplementor -> mono.android.animation.ValueAnimator_AnimatorUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
mono.android.app.ActionBar_OnMenuVisibilityListenerImplementor -> mono.android.app.ActionBar_OnMenuVisibilityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
mono.android.app.ActionBar_OnNavigationListenerImplementor -> mono.android.app.ActionBar_OnNavigationListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
mono.android.app.ActionBar_TabListenerImplementor -> mono.android.app.ActionBar_TabListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    40:41:void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    48:49:void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
mono.android.app.AlarmManager_OnAlarmListenerImplementor -> mono.android.app.AlarmManager_OnAlarmListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAlarm() -> onAlarm
mono.android.app.AppOpsManager_OnOpActiveChangedListenerImplementor -> mono.android.app.AppOpsManager_OnOpActiveChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onOpActiveChanged(java.lang.String,int,java.lang.String,boolean) -> onOpActiveChanged
mono.android.app.AppOpsManager_OnOpChangedListenerImplementor -> mono.android.app.AppOpsManager_OnOpChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onOpChanged(java.lang.String,java.lang.String) -> onOpChanged
mono.android.app.ApplicationRegistration -> mono.android.app.ApplicationRegistration:
    3:3:void <init>() -> <init>
    9:9:void registerApplications() -> registerApplications
mono.android.app.Application_OnProvideAssistDataListenerImplementor -> mono.android.app.Application_OnProvideAssistDataListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onProvideAssistData(android.app.Activity,android.os.Bundle) -> onProvideAssistData
mono.android.app.DatePickerDialog_OnDateSetListenerImplementor -> mono.android.app.DatePickerDialog_OnDateSetListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
mono.android.app.FragmentBreadCrumbs_OnBreadCrumbClickListenerImplementor -> mono.android.app.FragmentBreadCrumbs_OnBreadCrumbClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onBreadCrumbClick(android.app.FragmentManager$BackStackEntry,int) -> onBreadCrumbClick
mono.android.app.FragmentManager_OnBackStackChangedListenerImplementor -> mono.android.app.FragmentManager_OnBackStackChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBackStackChanged() -> onBackStackChanged
mono.android.app.IntentService -> mono.android.app.IntentService:
    6:7:void <init>() -> <init>
    11:12:void <init>(java.lang.String) -> <init>
    17:20:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    24:26:void monodroidClearReferences() -> monodroidClearReferences
mono.android.app.NotifyTimeZoneChanges -> mono.android.app.NotifyTimeZoneChanges:
    3:3:void <init>() -> <init>
    6:7:void onReceive(android.content.Context,android.content.Intent) -> onReceive
mono.android.app.SearchManager_OnCancelListenerImplementor -> mono.android.app.SearchManager_OnCancelListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCancel() -> onCancel
mono.android.app.SearchManager_OnDismissListenerImplementor -> mono.android.app.SearchManager_OnDismissListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDismiss() -> onDismiss
mono.android.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor -> mono.android.app.SharedElementCallback_OnSharedElementsReadyListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSharedElementsReady() -> onSharedElementsReady
mono.android.app.TabEventDispatcher -> mono.android.app.TabEventDispatcher:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    40:41:void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    48:49:void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
mono.android.app.TimePickerDialog_OnTimeSetListenerImplementor -> mono.android.app.TimePickerDialog_OnTimeSetListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
mono.android.app.UiAutomation_OnAccessibilityEventListenerImplementor -> mono.android.app.UiAutomation_OnAccessibilityEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
mono.android.app.WallpaperManager_OnColorsChangedListenerImplementor -> mono.android.app.WallpaperManager_OnColorsChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onColorsChanged(android.app.WallpaperColors,int) -> onColorsChanged
mono.android.app.admin.DevicePolicyManager_OnClearApplicationUserDataListenerImplementor -> mono.android.app.admin.DevicePolicyManager_OnClearApplicationUserDataListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onApplicationUserDataCleared(java.lang.String,boolean) -> onApplicationUserDataCleared
mono.android.bluetooth.BluetoothProfile_ServiceListenerImplementor -> mono.android.bluetooth.BluetoothProfile_ServiceListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    39:40:void onServiceDisconnected(int) -> onServiceDisconnected
mono.android.content.ClipboardManager_OnPrimaryClipChangedListenerImplementor -> mono.android.content.ClipboardManager_OnPrimaryClipChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onPrimaryClipChanged() -> onPrimaryClipChanged
mono.android.content.DialogInterface_OnCancelListenerImplementor -> mono.android.content.DialogInterface_OnCancelListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCancel(android.content.DialogInterface) -> onCancel
mono.android.content.DialogInterface_OnClickListenerImplementor -> mono.android.content.DialogInterface_OnClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.content.DialogInterface,int) -> onClick
mono.android.content.DialogInterface_OnDismissListenerImplementor -> mono.android.content.DialogInterface_OnDismissListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDismiss(android.content.DialogInterface) -> onDismiss
mono.android.content.DialogInterface_OnKeyListenerImplementor -> mono.android.content.DialogInterface_OnKeyListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
mono.android.content.DialogInterface_OnMultiChoiceClickListenerImplementor -> mono.android.content.DialogInterface_OnMultiChoiceClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.content.DialogInterface,int,boolean) -> onClick
mono.android.content.DialogInterface_OnShowListenerImplementor -> mono.android.content.DialogInterface_OnShowListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onShow(android.content.DialogInterface) -> onShow
mono.android.content.Loader_OnLoadCanceledListenerImplementor -> mono.android.content.Loader_OnLoadCanceledListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onLoadCanceled(android.content.Loader) -> onLoadCanceled
mono.android.content.Loader_OnLoadCompleteListenerImplementor -> mono.android.content.Loader_OnLoadCompleteListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onLoadComplete(android.content.Loader,java.lang.Object) -> onLoadComplete
mono.android.content.SharedPreferences_OnSharedPreferenceChangeListenerImplementor -> mono.android.content.SharedPreferences_OnSharedPreferenceChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
mono.android.database.sqlite.SQLiteTransactionListenerImplementor -> mono.android.database.sqlite.SQLiteTransactionListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onBegin() -> onBegin
    40:41:void onCommit() -> onCommit
    48:49:void onRollback() -> onRollback
mono.android.drm.DrmManagerClient_OnErrorListenerImplementor -> mono.android.drm.DrmManagerClient_OnErrorListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent) -> onError
mono.android.drm.DrmManagerClient_OnEventListenerImplementor -> mono.android.drm.DrmManagerClient_OnEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent) -> onEvent
mono.android.drm.DrmManagerClient_OnInfoListenerImplementor -> mono.android.drm.DrmManagerClient_OnInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent) -> onInfo
mono.android.gesture.GestureOverlayView_OnGestureListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGestureListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGesture
    41:42:void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureCancelled
    49:50:void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureEnded
    57:58:void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureStarted
mono.android.gesture.GestureOverlayView_OnGesturePerformedListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGesturePerformedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
mono.android.gesture.GestureOverlayView_OnGesturingListenerImplementor -> mono.android.gesture.GestureOverlayView_OnGesturingListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onGesturingEnded(android.gesture.GestureOverlayView) -> onGesturingEnded
    39:40:void onGesturingStarted(android.gesture.GestureOverlayView) -> onGesturingStarted
mono.android.graphics.ImageDecoder_OnHeaderDecodedListenerImplementor -> mono.android.graphics.ImageDecoder_OnHeaderDecodedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
mono.android.graphics.ImageDecoder_OnPartialImageListenerImplementor -> mono.android.graphics.ImageDecoder_OnPartialImageListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onPartialImage(android.graphics.ImageDecoder$DecodeException) -> onPartialImage
mono.android.graphics.SurfaceTexture_OnFrameAvailableListenerImplementor -> mono.android.graphics.SurfaceTexture_OnFrameAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
mono.android.graphics.drawable.Icon_OnDrawableLoadedListenerImplementor -> mono.android.graphics.drawable.Icon_OnDrawableLoadedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDrawableLoaded(android.graphics.drawable.Drawable) -> onDrawableLoaded
mono.android.hardware.Camera_FaceDetectionListenerImplementor -> mono.android.hardware.Camera_FaceDetectionListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFaceDetection(android.hardware.Camera$Face[],android.hardware.Camera) -> onFaceDetection
mono.android.hardware.Camera_OnZoomChangeListenerImplementor -> mono.android.hardware.Camera_OnZoomChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onZoomChange(int,boolean,android.hardware.Camera) -> onZoomChange
mono.android.hardware.SensorEventListenerImplementor -> mono.android.hardware.SensorEventListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    39:40:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
mono.android.hardware.SensorListenerImplementor -> mono.android.hardware.SensorListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onAccuracyChanged(int,int) -> onAccuracyChanged
    39:40:void onSensorChanged(int,float[]) -> onSensorChanged
mono.android.hardware.display.DisplayManager_DisplayListenerImplementor -> mono.android.hardware.display.DisplayManager_DisplayListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onDisplayAdded(int) -> onDisplayAdded
    40:41:void onDisplayChanged(int) -> onDisplayChanged
    48:49:void onDisplayRemoved(int) -> onDisplayRemoved
mono.android.hardware.input.InputManager_InputDeviceListenerImplementor -> mono.android.hardware.input.InputManager_InputDeviceListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onInputDeviceAdded(int) -> onInputDeviceAdded
    40:41:void onInputDeviceChanged(int) -> onInputDeviceChanged
    48:49:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
mono.android.incrementaldeployment.IncrementalClassLoader -> mono.android.incrementaldeployment.IncrementalClassLoader:
    35:41:void <init>(java.lang.ClassLoader,java.lang.String,java.io.File,java.lang.String,java.util.List) -> <init>
    65:79:mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader createDelegateClassLoader(java.io.File,java.lang.String,java.util.List,java.lang.ClassLoader) -> createDelegateClassLoader
    45:45:java.lang.Class findClass(java.lang.String) -> findClass
    100:103:void inject(java.lang.ClassLoader,java.lang.String,java.io.File,java.lang.String,java.util.List) -> inject
    85:95:void setParent(java.lang.ClassLoader,java.lang.ClassLoader) -> setParent
mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader -> mono.android.incrementaldeployment.IncrementalClassLoader$DelegateClassLoader:
    51:51:void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader,mono.android.incrementaldeployment.IncrementalClassLoader$1) -> <init>
    54:55:void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    59:59:java.lang.Class findClass(java.lang.String) -> findClass
mono.android.incrementaldeployment.Placeholder -> mono.android.incrementaldeployment.Placeholder:
    24:24:void <init>() -> <init>
mono.android.inputmethodservice.KeyboardView_OnKeyboardActionListenerImplementor -> mono.android.inputmethodservice.KeyboardView_OnKeyboardActionListenerImplementor:
    13:24:void <clinit>() -> <clinit>
    29:32:void <init>() -> <init>
    101:104:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    108:110:void monodroidClearReferences() -> monodroidClearReferences
    37:38:void onKey(int,int[]) -> onKey
    45:46:void onPress(int) -> onPress
    53:54:void onRelease(int) -> onRelease
    61:62:void onText(java.lang.CharSequence) -> onText
    69:70:void swipeDown() -> swipeDown
    77:78:void swipeLeft() -> swipeLeft
    85:86:void swipeRight() -> swipeRight
    93:94:void swipeUp() -> swipeUp
mono.android.location.GnssAntennaInfo_ListenerImplementor -> mono.android.location.GnssAntennaInfo_ListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGnssAntennaInfoReceived(java.util.List) -> onGnssAntennaInfoReceived
mono.android.location.GpsStatus_ListenerImplementor -> mono.android.location.GpsStatus_ListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGpsStatusChanged(int) -> onGpsStatusChanged
mono.android.location.GpsStatus_NmeaListenerImplementor -> mono.android.location.GpsStatus_NmeaListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
mono.android.location.LocationListenerImplementor -> mono.android.location.LocationListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onLocationChanged(android.location.Location) -> onLocationChanged
    41:42:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    49:50:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    57:58:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
mono.android.location.OnNmeaMessageListenerImplementor -> mono.android.location.OnNmeaMessageListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNmeaMessage(java.lang.String,long) -> onNmeaMessage
mono.android.media.AudioManager_OnAudioFocusChangeListenerImplementor -> mono.android.media.AudioManager_OnAudioFocusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAudioFocusChange(int) -> onAudioFocusChange
mono.android.media.AudioRecord_OnRecordPositionUpdateListenerImplementor -> mono.android.media.AudioRecord_OnRecordPositionUpdateListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onMarkerReached(android.media.AudioRecord) -> onMarkerReached
    39:40:void onPeriodicNotification(android.media.AudioRecord) -> onPeriodicNotification
mono.android.media.AudioRouting_OnRoutingChangedListenerImplementor -> mono.android.media.AudioRouting_OnRoutingChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onRoutingChanged(android.media.AudioRouting) -> onRoutingChanged
mono.android.media.AudioTrack_OnCodecFormatChangedListenerImplementor -> mono.android.media.AudioTrack_OnCodecFormatChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCodecFormatChanged(android.media.AudioTrack,android.media.AudioMetadataReadMap) -> onCodecFormatChanged
mono.android.media.AudioTrack_OnPlaybackPositionUpdateListenerImplementor -> mono.android.media.AudioTrack_OnPlaybackPositionUpdateListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onMarkerReached(android.media.AudioTrack) -> onMarkerReached
    39:40:void onPeriodicNotification(android.media.AudioTrack) -> onPeriodicNotification
mono.android.media.ImageReader_OnImageAvailableListenerImplementor -> mono.android.media.ImageReader_OnImageAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
mono.android.media.ImageWriter_OnImageReleasedListenerImplementor -> mono.android.media.ImageWriter_OnImageReleasedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onImageReleased(android.media.ImageWriter) -> onImageReleased
mono.android.media.JetPlayer_OnJetEventListenerImplementor -> mono.android.media.JetPlayer_OnJetEventListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte) -> onJetEvent
    41:42:void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int) -> onJetNumQueuedSegmentUpdate
    49:50:void onJetPauseUpdate(android.media.JetPlayer,int) -> onJetPauseUpdate
    57:58:void onJetUserIdUpdate(android.media.JetPlayer,int,int) -> onJetUserIdUpdate
mono.android.media.MediaCas_EventListenerImplementor -> mono.android.media.MediaCas_EventListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onEvent(android.media.MediaCas,int,int,byte[]) -> onEvent
    41:42:void onPluginStatusUpdate(android.media.MediaCas,int,int) -> onPluginStatusUpdate
    49:50:void onResourceLost(android.media.MediaCas) -> onResourceLost
    57:58:void onSessionEvent(android.media.MediaCas,android.media.MediaCas$Session,int,int,byte[]) -> onSessionEvent
mono.android.media.MediaCodec_OnFrameRenderedListenerImplementor -> mono.android.media.MediaCodec_OnFrameRenderedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFrameRendered(android.media.MediaCodec,long,long) -> onFrameRendered
mono.android.media.MediaDrm_OnEventListenerImplementor -> mono.android.media.MediaDrm_OnEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEvent(android.media.MediaDrm,byte[],int,int,byte[]) -> onEvent
mono.android.media.MediaDrm_OnExpirationUpdateListenerImplementor -> mono.android.media.MediaDrm_OnExpirationUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onExpirationUpdate(android.media.MediaDrm,byte[],long) -> onExpirationUpdate
mono.android.media.MediaDrm_OnKeyStatusChangeListenerImplementor -> mono.android.media.MediaDrm_OnKeyStatusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onKeyStatusChange(android.media.MediaDrm,byte[],java.util.List,boolean) -> onKeyStatusChange
mono.android.media.MediaDrm_OnSessionLostStateListenerImplementor -> mono.android.media.MediaDrm_OnSessionLostStateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSessionLostState(android.media.MediaDrm,byte[]) -> onSessionLostState
mono.android.media.MediaPlayer_OnBufferingUpdateListenerImplementor -> mono.android.media.MediaPlayer_OnBufferingUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
mono.android.media.MediaPlayer_OnCompletionListenerImplementor -> mono.android.media.MediaPlayer_OnCompletionListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCompletion(android.media.MediaPlayer) -> onCompletion
mono.android.media.MediaPlayer_OnDrmInfoListenerImplementor -> mono.android.media.MediaPlayer_OnDrmInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDrmInfo(android.media.MediaPlayer,android.media.MediaPlayer$DrmInfo) -> onDrmInfo
mono.android.media.MediaPlayer_OnDrmPreparedListenerImplementor -> mono.android.media.MediaPlayer_OnDrmPreparedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDrmPrepared(android.media.MediaPlayer,int) -> onDrmPrepared
mono.android.media.MediaPlayer_OnErrorListenerImplementor -> mono.android.media.MediaPlayer_OnErrorListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onError(android.media.MediaPlayer,int,int) -> onError
mono.android.media.MediaPlayer_OnInfoListenerImplementor -> mono.android.media.MediaPlayer_OnInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onInfo(android.media.MediaPlayer,int,int) -> onInfo
mono.android.media.MediaPlayer_OnMediaTimeDiscontinuityListenerImplementor -> mono.android.media.MediaPlayer_OnMediaTimeDiscontinuityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMediaTimeDiscontinuity(android.media.MediaPlayer,android.media.MediaTimestamp) -> onMediaTimeDiscontinuity
mono.android.media.MediaPlayer_OnPreparedListenerImplementor -> mono.android.media.MediaPlayer_OnPreparedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onPrepared(android.media.MediaPlayer) -> onPrepared
mono.android.media.MediaPlayer_OnSeekCompleteListenerImplementor -> mono.android.media.MediaPlayer_OnSeekCompleteListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
mono.android.media.MediaPlayer_OnSubtitleDataListenerImplementor -> mono.android.media.MediaPlayer_OnSubtitleDataListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSubtitleData(android.media.MediaPlayer,android.media.SubtitleData) -> onSubtitleData
mono.android.media.MediaPlayer_OnTimedMetaDataAvailableListenerImplementor -> mono.android.media.MediaPlayer_OnTimedMetaDataAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTimedMetaDataAvailable(android.media.MediaPlayer,android.media.TimedMetaData) -> onTimedMetaDataAvailable
mono.android.media.MediaPlayer_OnTimedTextListenerImplementor -> mono.android.media.MediaPlayer_OnTimedTextListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTimedText(android.media.MediaPlayer,android.media.TimedText) -> onTimedText
mono.android.media.MediaPlayer_OnVideoSizeChangedListenerImplementor -> mono.android.media.MediaPlayer_OnVideoSizeChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
mono.android.media.MediaRecorder_OnErrorListenerImplementor -> mono.android.media.MediaRecorder_OnErrorListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onError(android.media.MediaRecorder,int,int) -> onError
mono.android.media.MediaRecorder_OnInfoListenerImplementor -> mono.android.media.MediaRecorder_OnInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onInfo(android.media.MediaRecorder,int,int) -> onInfo
mono.android.media.MediaRouter2_OnGetControllerHintsListenerImplementor -> mono.android.media.MediaRouter2_OnGetControllerHintsListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:android.os.Bundle onGetControllerHints(android.media.MediaRoute2Info) -> onGetControllerHints
mono.android.media.MediaScannerConnection_OnScanCompletedListenerImplementor -> mono.android.media.MediaScannerConnection_OnScanCompletedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
mono.android.media.MediaSync_OnErrorListenerImplementor -> mono.android.media.MediaSync_OnErrorListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onError(android.media.MediaSync,int,int) -> onError
mono.android.media.RemoteControlClient_OnGetPlaybackPositionListenerImplementor -> mono.android.media.RemoteControlClient_OnGetPlaybackPositionListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:long onGetPlaybackPosition() -> onGetPlaybackPosition
mono.android.media.RemoteControlClient_OnMetadataUpdateListenerImplementor -> mono.android.media.RemoteControlClient_OnMetadataUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
mono.android.media.RemoteControlClient_OnPlaybackPositionUpdateListenerImplementor -> mono.android.media.RemoteControlClient_OnPlaybackPositionUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
mono.android.media.RemoteController_OnClientUpdateListenerImplementor -> mono.android.media.RemoteController_OnClientUpdateListenerImplementor:
    13:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    74:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:83:void monodroidClearReferences() -> monodroidClearReferences
    34:35:void onClientChange(boolean) -> onClientChange
    42:43:void onClientMetadataUpdate(android.media.RemoteController$MetadataEditor) -> onClientMetadataUpdate
    50:51:void onClientPlaybackStateUpdate(int) -> onClientPlaybackStateUpdate
    58:59:void onClientPlaybackStateUpdate(int,long,long,float) -> onClientPlaybackStateUpdate
    66:67:void onClientTransportControlUpdate(int) -> onClientTransportControlUpdate
mono.android.media.SoundPool_OnLoadCompleteListenerImplementor -> mono.android.media.SoundPool_OnLoadCompleteListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
mono.android.media.audiofx.AudioEffect_OnControlStatusChangeListenerImplementor -> mono.android.media.audiofx.AudioEffect_OnControlStatusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onControlStatusChange(android.media.audiofx.AudioEffect,boolean) -> onControlStatusChange
mono.android.media.audiofx.AudioEffect_OnEnableStatusChangeListenerImplementor -> mono.android.media.audiofx.AudioEffect_OnEnableStatusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean) -> onEnableStatusChange
mono.android.media.audiofx.BassBoost_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.BassBoost_OnParameterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onParameterChange(android.media.audiofx.BassBoost,int,int,short) -> onParameterChange
mono.android.media.audiofx.EnvironmentalReverb_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.EnvironmentalReverb_OnParameterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int) -> onParameterChange
mono.android.media.audiofx.Equalizer_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.Equalizer_OnParameterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int) -> onParameterChange
mono.android.media.audiofx.PresetReverb_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.PresetReverb_OnParameterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onParameterChange(android.media.audiofx.PresetReverb,int,int,short) -> onParameterChange
mono.android.media.audiofx.Virtualizer_OnParameterChangeListenerImplementor -> mono.android.media.audiofx.Virtualizer_OnParameterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onParameterChange(android.media.audiofx.Virtualizer,int,int,short) -> onParameterChange
mono.android.media.audiofx.Visualizer_OnDataCaptureListenerImplementor -> mono.android.media.audiofx.Visualizer_OnDataCaptureListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
    39:40:void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
mono.android.media.effect.EffectUpdateListenerImplementor -> mono.android.media.effect.EffectUpdateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEffectUpdated(android.media.effect.Effect,java.lang.Object) -> onEffectUpdated
mono.android.media.midi.MidiManager_OnDeviceOpenedListenerImplementor -> mono.android.media.midi.MidiManager_OnDeviceOpenedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDeviceOpened(android.media.midi.MidiDevice) -> onDeviceOpened
mono.android.media.session.MediaSessionManager_OnActiveSessionsChangedListenerImplementor -> mono.android.media.session.MediaSessionManager_OnActiveSessionsChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onActiveSessionsChanged(java.util.List) -> onActiveSessionsChanged
mono.android.media.session.MediaSessionManager_OnSession2TokensChangedListenerImplementor -> mono.android.media.session.MediaSessionManager_OnSession2TokensChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSession2TokensChanged(java.util.List) -> onSession2TokensChanged
mono.android.media.tv.TvView_OnUnhandledInputEventListenerImplementor -> mono.android.media.tv.TvView_OnUnhandledInputEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onUnhandledInputEvent(android.view.InputEvent) -> onUnhandledInputEvent
mono.android.net.ConnectivityManager_OnNetworkActiveListenerImplementor -> mono.android.net.ConnectivityManager_OnNetworkActiveListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNetworkActive() -> onNetworkActive
mono.android.net.nsd.NsdManager_DiscoveryListenerImplementor -> mono.android.net.nsd.NsdManager_DiscoveryListenerImplementor:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>() -> <init>
    83:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    90:92:void monodroidClearReferences() -> monodroidClearReferences
    35:36:void onDiscoveryStarted(java.lang.String) -> onDiscoveryStarted
    43:44:void onDiscoveryStopped(java.lang.String) -> onDiscoveryStopped
    51:52:void onServiceFound(android.net.nsd.NsdServiceInfo) -> onServiceFound
    59:60:void onServiceLost(android.net.nsd.NsdServiceInfo) -> onServiceLost
    67:68:void onStartDiscoveryFailed(java.lang.String,int) -> onStartDiscoveryFailed
    75:76:void onStopDiscoveryFailed(java.lang.String,int) -> onStopDiscoveryFailed
mono.android.net.nsd.NsdManager_RegistrationListenerImplementor -> mono.android.net.nsd.NsdManager_RegistrationListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int) -> onRegistrationFailed
    41:42:void onServiceRegistered(android.net.nsd.NsdServiceInfo) -> onServiceRegistered
    49:50:void onServiceUnregistered(android.net.nsd.NsdServiceInfo) -> onServiceUnregistered
    57:58:void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int) -> onUnregistrationFailed
mono.android.net.nsd.NsdManager_ResolveListenerImplementor -> mono.android.net.nsd.NsdManager_ResolveListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onResolveFailed(android.net.nsd.NsdServiceInfo,int) -> onResolveFailed
    39:40:void onServiceResolved(android.net.nsd.NsdServiceInfo) -> onServiceResolved
mono.android.net.sip.SipRegistrationListenerImplementor -> mono.android.net.sip.SipRegistrationListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onRegistering(java.lang.String) -> onRegistering
    40:41:void onRegistrationDone(java.lang.String,long) -> onRegistrationDone
    48:49:void onRegistrationFailed(java.lang.String,int,java.lang.String) -> onRegistrationFailed
mono.android.net.wifi.WifiManager_SuggestionConnectionStatusListenerImplementor -> mono.android.net.wifi.WifiManager_SuggestionConnectionStatusListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onConnectionStatus(android.net.wifi.WifiNetworkSuggestion,int) -> onConnectionStatus
mono.android.net.wifi.p2p.WifiP2pManager_ActionListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ActionListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onFailure(int) -> onFailure
    39:40:void onSuccess() -> onSuccess
mono.android.net.wifi.p2p.WifiP2pManager_ChannelListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ChannelListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onChannelDisconnected() -> onChannelDisconnected
mono.android.net.wifi.p2p.WifiP2pManager_ConnectionInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ConnectionInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo) -> onConnectionInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DeviceInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DeviceInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDeviceInfoAvailable(android.net.wifi.p2p.WifiP2pDevice) -> onDeviceInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DiscoveryStateListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DiscoveryStateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDiscoveryStateAvailable(int) -> onDiscoveryStateAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DnsSdServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DnsSdServiceResponseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice) -> onDnsSdServiceAvailable
mono.android.net.wifi.p2p.WifiP2pManager_DnsSdTxtRecordListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_DnsSdTxtRecordListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice) -> onDnsSdTxtRecordAvailable
mono.android.net.wifi.p2p.WifiP2pManager_GroupInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_GroupInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup) -> onGroupInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_NetworkInfoListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_NetworkInfoListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNetworkInfoAvailable(android.net.NetworkInfo) -> onNetworkInfoAvailable
mono.android.net.wifi.p2p.WifiP2pManager_P2pStateListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_P2pStateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onP2pStateAvailable(int) -> onP2pStateAvailable
mono.android.net.wifi.p2p.WifiP2pManager_PeerListListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_PeerListListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList) -> onPeersAvailable
mono.android.net.wifi.p2p.WifiP2pManager_ServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_ServiceResponseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice) -> onServiceAvailable
mono.android.net.wifi.p2p.WifiP2pManager_UpnpServiceResponseListenerImplementor -> mono.android.net.wifi.p2p.WifiP2pManager_UpnpServiceResponseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice) -> onUpnpServiceAvailable
mono.android.nfc.NfcAdapter_OnTagRemovedListenerImplementor -> mono.android.nfc.NfcAdapter_OnTagRemovedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTagRemoved() -> onTagRemoved
mono.android.os.ActionHandlerCallback -> mono.android.os.ActionHandlerCallback:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:30:boolean handleMessage(android.os.Message) -> handleMessage
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.os.CancellationSignal_OnCancelListenerImplementor -> mono.android.os.CancellationSignal_OnCancelListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCancel() -> onCancel
mono.android.os.FileUtils_ProgressListenerImplementor -> mono.android.os.FileUtils_ProgressListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onProgress(long) -> onProgress
mono.android.os.MessageQueue_OnFileDescriptorEventListenerImplementor -> mono.android.os.MessageQueue_OnFileDescriptorEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:int onFileDescriptorEvents(java.io.FileDescriptor,int) -> onFileDescriptorEvents
mono.android.os.ParcelFileDescriptor_OnCloseListenerImplementor -> mono.android.os.ParcelFileDescriptor_OnCloseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClose(java.io.IOException) -> onClose
mono.android.os.PowerManager_OnThermalStatusChangedListenerImplementor -> mono.android.os.PowerManager_OnThermalStatusChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onThermalStatusChanged(int) -> onThermalStatusChanged
mono.android.os.RecoverySystem_ProgressListenerImplementor -> mono.android.os.RecoverySystem_ProgressListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onProgress(int) -> onProgress
mono.android.os.StrictMode_OnThreadViolationListenerImplementor -> mono.android.os.StrictMode_OnThreadViolationListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onThreadViolation(android.os.strictmode.Violation) -> onThreadViolation
mono.android.os.StrictMode_OnVmViolationListenerImplementor -> mono.android.os.StrictMode_OnVmViolationListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onVmViolation(android.os.strictmode.Violation) -> onVmViolation
mono.android.preference.PreferenceManager_OnActivityDestroyListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityDestroyListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onActivityDestroy() -> onActivityDestroy
mono.android.preference.PreferenceManager_OnActivityResultListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityResultListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
mono.android.preference.PreferenceManager_OnActivityStopListenerImplementor -> mono.android.preference.PreferenceManager_OnActivityStopListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onActivityStop() -> onActivityStop
mono.android.preference.Preference_OnPreferenceChangeListenerImplementor -> mono.android.preference.Preference_OnPreferenceChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
mono.android.preference.Preference_OnPreferenceClickListenerImplementor -> mono.android.preference.Preference_OnPreferenceClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
mono.android.renderscript.Allocation_OnBufferAvailableListenerImplementor -> mono.android.renderscript.Allocation_OnBufferAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBufferAvailable(android.renderscript.Allocation) -> onBufferAvailable
mono.android.runtime.InputStreamAdapter -> mono.android.runtime.InputStreamAdapter:
    12:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    32:33:void close() -> close
    64:67:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    71:73:void monodroidClearReferences() -> monodroidClearReferences
    40:40:int read() -> read
    48:48:int read(byte[]) -> read
    56:56:int read(byte[],int,int) -> read
mono.android.runtime.JavaObject -> mono.android.runtime.JavaObject:
    12:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    39:39:int hashCode() -> hashCode
    55:58:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    62:64:void monodroidClearReferences() -> monodroidClearReferences
    47:47:java.lang.String toString() -> toString
mono.android.runtime.OutputStreamAdapter -> mono.android.runtime.OutputStreamAdapter:
    12:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:34:void close() -> close
    41:42:void flush() -> flush
    73:76:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    80:82:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void write(byte[]) -> write
    57:58:void write(byte[],int,int) -> write
    65:66:void write(int) -> write
mono.android.sax.EndElementListenerImplementor -> mono.android.sax.EndElementListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:31:void end() -> end
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.sax.EndTextElementListenerImplementor -> mono.android.sax.EndTextElementListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    30:31:void end(java.lang.String) -> end
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
mono.android.sax.StartElementListenerImplementor -> mono.android.sax.StartElementListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void start(org.xml.sax.Attributes) -> start
mono.android.se.omapi.SEService_OnConnectedListenerImplementor -> mono.android.se.omapi.SEService_OnConnectedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onConnected() -> onConnected
mono.android.speech.RecognitionListenerImplementor -> mono.android.speech.RecognitionListenerImplementor:
    13:25:void <clinit>() -> <clinit>
    30:33:void <init>() -> <init>
    110:113:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    117:119:void monodroidClearReferences() -> monodroidClearReferences
    38:39:void onBeginningOfSpeech() -> onBeginningOfSpeech
    46:47:void onBufferReceived(byte[]) -> onBufferReceived
    54:55:void onEndOfSpeech() -> onEndOfSpeech
    62:63:void onError(int) -> onError
    70:71:void onEvent(int,android.os.Bundle) -> onEvent
    78:79:void onPartialResults(android.os.Bundle) -> onPartialResults
    86:87:void onReadyForSpeech(android.os.Bundle) -> onReadyForSpeech
    94:95:void onResults(android.os.Bundle) -> onResults
    102:103:void onRmsChanged(float) -> onRmsChanged
mono.android.speech.tts.TextToSpeech_OnInitListenerImplementor -> mono.android.speech.tts.TextToSpeech_OnInitListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onInit(int) -> onInit
mono.android.speech.tts.TextToSpeech_OnUtteranceCompletedListenerImplementor -> mono.android.speech.tts.TextToSpeech_OnUtteranceCompletedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
mono.android.text.TextWatcherImplementor -> mono.android.text.TextWatcherImplementor:
    14:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    33:34:void afterTextChanged(android.text.Editable) -> afterTextChanged
    41:42:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    57:60:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    64:66:void monodroidClearReferences() -> monodroidClearReferences
    49:50:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
mono.android.transition.Transition_TransitionListenerImplementor -> mono.android.transition.Transition_TransitionListenerImplementor:
    13:21:void <clinit>() -> <clinit>
    26:29:void <init>() -> <init>
    74:77:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    81:83:void monodroidClearReferences() -> monodroidClearReferences
    34:35:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    42:43:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    50:51:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    58:59:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    66:67:void onTransitionStart(android.transition.Transition) -> onTransitionStart
mono.android.view.ActionProvider_VisibilityListenerImplementor -> mono.android.view.ActionProvider_VisibilityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
mono.android.view.GestureDetector_OnContextClickListenerImplementor -> mono.android.view.GestureDetector_OnContextClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onContextClick(android.view.MotionEvent) -> onContextClick
mono.android.view.GestureDetector_OnDoubleTapListenerImplementor -> mono.android.view.GestureDetector_OnDoubleTapListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    40:40:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    48:48:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
mono.android.view.GestureDetector_OnGestureListenerImplementor -> mono.android.view.GestureDetector_OnGestureListenerImplementor:
    13:22:void <clinit>() -> <clinit>
    27:30:void <init>() -> <init>
    83:86:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    90:92:void monodroidClearReferences() -> monodroidClearReferences
    35:35:boolean onDown(android.view.MotionEvent) -> onDown
    43:43:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    51:52:void onLongPress(android.view.MotionEvent) -> onLongPress
    59:59:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    67:68:void onShowPress(android.view.MotionEvent) -> onShowPress
    75:75:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
mono.android.view.MenuItem_OnActionExpandListenerImplementor -> mono.android.view.MenuItem_OnActionExpandListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    39:39:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
mono.android.view.MenuItem_OnMenuItemClickListenerImplementor -> mono.android.view.MenuItem_OnMenuItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.view.PixelCopy_OnPixelCopyFinishedListenerImplementor -> mono.android.view.PixelCopy_OnPixelCopyFinishedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onPixelCopyFinished(int) -> onPixelCopyFinished
mono.android.view.ScaleGestureDetector_OnScaleGestureListenerImplementor -> mono.android.view.ScaleGestureDetector_OnScaleGestureListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    40:40:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    48:49:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
mono.android.view.TextureView_SurfaceTextureListenerImplementor -> mono.android.view.TextureView_SurfaceTextureListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    41:41:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    49:50:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    57:58:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
mono.android.view.ViewGroup_OnHierarchyChangeListenerImplementor -> mono.android.view.ViewGroup_OnHierarchyChangeListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    39:40:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
mono.android.view.ViewStub_OnInflateListenerImplementor -> mono.android.view.ViewStub_OnInflateListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onInflate(android.view.ViewStub,android.view.View) -> onInflate
mono.android.view.ViewTreeObserver_OnDrawListenerImplementor -> mono.android.view.ViewTreeObserver_OnDrawListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDraw() -> onDraw
mono.android.view.ViewTreeObserver_OnGlobalFocusChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnGlobalFocusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGlobalFocusChanged(android.view.View,android.view.View) -> onGlobalFocusChanged
mono.android.view.ViewTreeObserver_OnGlobalLayoutListenerImplementor -> mono.android.view.ViewTreeObserver_OnGlobalLayoutListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGlobalLayout() -> onGlobalLayout
mono.android.view.ViewTreeObserver_OnPreDrawListenerImplementor -> mono.android.view.ViewTreeObserver_OnPreDrawListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onPreDraw() -> onPreDraw
mono.android.view.ViewTreeObserver_OnScrollChangedListenerImplementor -> mono.android.view.ViewTreeObserver_OnScrollChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScrollChanged() -> onScrollChanged
mono.android.view.ViewTreeObserver_OnTouchModeChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnTouchModeChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTouchModeChanged(boolean) -> onTouchModeChanged
mono.android.view.ViewTreeObserver_OnWindowAttachListenerImplementor -> mono.android.view.ViewTreeObserver_OnWindowAttachListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onWindowAttached() -> onWindowAttached
    39:40:void onWindowDetached() -> onWindowDetached
mono.android.view.ViewTreeObserver_OnWindowFocusChangeListenerImplementor -> mono.android.view.ViewTreeObserver_OnWindowFocusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
mono.android.view.View_OnApplyWindowInsetsListenerImplementor -> mono.android.view.View_OnApplyWindowInsetsListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
mono.android.view.View_OnAttachStateChangeListenerImplementor -> mono.android.view.View_OnAttachStateChangeListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    39:40:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
mono.android.view.View_OnCapturedPointerListenerImplementor -> mono.android.view.View_OnCapturedPointerListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onCapturedPointer(android.view.View,android.view.MotionEvent) -> onCapturedPointer
mono.android.view.View_OnClickListenerImplementor -> mono.android.view.View_OnClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onClick(android.view.View) -> onClick
mono.android.view.View_OnContextClickListenerImplementor -> mono.android.view.View_OnContextClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onContextClick(android.view.View) -> onContextClick
mono.android.view.View_OnCreateContextMenuListenerImplementor -> mono.android.view.View_OnCreateContextMenuListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
mono.android.view.View_OnDragListenerImplementor -> mono.android.view.View_OnDragListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onDrag(android.view.View,android.view.DragEvent) -> onDrag
mono.android.view.View_OnFocusChangeListenerImplementor -> mono.android.view.View_OnFocusChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFocusChange(android.view.View,boolean) -> onFocusChange
mono.android.view.View_OnGenericMotionListenerImplementor -> mono.android.view.View_OnGenericMotionListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
mono.android.view.View_OnHoverListenerImplementor -> mono.android.view.View_OnHoverListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
mono.android.view.View_OnKeyListenerImplementor -> mono.android.view.View_OnKeyListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
mono.android.view.View_OnLayoutChangeListenerImplementor -> mono.android.view.View_OnLayoutChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
mono.android.view.View_OnLongClickListenerImplementor -> mono.android.view.View_OnLongClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onLongClick(android.view.View) -> onLongClick
mono.android.view.View_OnScrollChangeListenerImplementor -> mono.android.view.View_OnScrollChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScrollChange(android.view.View,int,int,int,int) -> onScrollChange
mono.android.view.View_OnSystemUiVisibilityChangeListenerImplementor -> mono.android.view.View_OnSystemUiVisibilityChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
mono.android.view.View_OnTouchListenerImplementor -> mono.android.view.View_OnTouchListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
mono.android.view.View_OnUnhandledKeyEventListenerImplementor -> mono.android.view.View_OnUnhandledKeyEventListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
mono.android.view.WindowInsetsAnimationControlListenerImplementor -> mono.android.view.WindowInsetsAnimationControlListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onCancelled(android.view.WindowInsetsAnimationController) -> onCancelled
    40:41:void onFinished(android.view.WindowInsetsAnimationController) -> onFinished
    48:49:void onReady(android.view.WindowInsetsAnimationController,int) -> onReady
mono.android.view.WindowInsetsController_OnControllableInsetsChangedListenerImplementor -> mono.android.view.WindowInsetsController_OnControllableInsetsChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onControllableInsetsChanged(android.view.WindowInsetsController,int) -> onControllableInsetsChanged
mono.android.view.Window_OnFrameMetricsAvailableListenerImplementor -> mono.android.view.Window_OnFrameMetricsAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
mono.android.view.Window_OnRestrictedCaptionAreaChangedListenerImplementor -> mono.android.view.Window_OnRestrictedCaptionAreaChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onRestrictedCaptionAreaChanged(android.graphics.Rect) -> onRestrictedCaptionAreaChanged
mono.android.view.accessibility.AccessibilityManager_AccessibilityStateChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_AccessibilityStateChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
mono.android.view.accessibility.AccessibilityManager_TouchExplorationStateChangeListenerImplementor -> mono.android.view.accessibility.AccessibilityManager_TouchExplorationStateChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
mono.android.view.animation.Animation_AnimationListenerImplementor -> mono.android.view.animation.Animation_AnimationListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    40:41:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    48:49:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
mono.android.view.textservice.SpellCheckerSession_SpellCheckerSessionListenerImplementor -> mono.android.view.textservice.SpellCheckerSession_SpellCheckerSessionListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[]) -> onGetSentenceSuggestions
    39:40:void onGetSuggestions(android.view.textservice.SuggestionsInfo[]) -> onGetSuggestions
mono.android.webkit.DownloadListenerImplementor -> mono.android.webkit.DownloadListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
mono.android.webkit.WebIconDatabase_IconListenerImplementor -> mono.android.webkit.WebIconDatabase_IconListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onReceivedIcon(java.lang.String,android.graphics.Bitmap) -> onReceivedIcon
mono.android.webkit.WebView_FindListenerImplementor -> mono.android.webkit.WebView_FindListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFindResultReceived(int,int,boolean) -> onFindResultReceived
mono.android.webkit.WebView_PictureListenerImplementor -> mono.android.webkit.WebView_PictureListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
mono.android.widget.AbsListView_OnScrollListenerImplementor -> mono.android.widget.AbsListView_OnScrollListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    39:40:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
mono.android.widget.AbsListView_RecyclerListenerImplementor -> mono.android.widget.AbsListView_RecyclerListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMovedToScrapHeap(android.view.View) -> onMovedToScrapHeap
mono.android.widget.ActionMenuView_OnMenuItemClickListenerImplementor -> mono.android.widget.ActionMenuView_OnMenuItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.AdapterView_OnItemClickListenerImplementor -> mono.android.widget.AdapterView_OnItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
mono.android.widget.AdapterView_OnItemLongClickListenerImplementor -> mono.android.widget.AdapterView_OnItemLongClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
mono.android.widget.AdapterView_OnItemSelectedListenerImplementor -> mono.android.widget.AdapterView_OnItemSelectedListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    39:40:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
mono.android.widget.AutoCompleteTextView_OnDismissListenerImplementor -> mono.android.widget.AutoCompleteTextView_OnDismissListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDismiss() -> onDismiss
mono.android.widget.CalendarView_OnDateChangeListenerImplementor -> mono.android.widget.CalendarView_OnDateChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSelectedDayChange(android.widget.CalendarView,int,int,int) -> onSelectedDayChange
mono.android.widget.Chronometer_OnChronometerTickListenerImplementor -> mono.android.widget.Chronometer_OnChronometerTickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onChronometerTick(android.widget.Chronometer) -> onChronometerTick
mono.android.widget.CompoundButton_OnCheckedChangeListenerImplementor -> mono.android.widget.CompoundButton_OnCheckedChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
mono.android.widget.DatePicker_OnDateChangedListenerImplementor -> mono.android.widget.DatePicker_OnDateChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDateChanged(android.widget.DatePicker,int,int,int) -> onDateChanged
mono.android.widget.ExpandableListView_OnChildClickListenerImplementor -> mono.android.widget.ExpandableListView_OnChildClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
mono.android.widget.ExpandableListView_OnGroupClickListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
mono.android.widget.ExpandableListView_OnGroupCollapseListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupCollapseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGroupCollapse(int) -> onGroupCollapse
mono.android.widget.ExpandableListView_OnGroupExpandListenerImplementor -> mono.android.widget.ExpandableListView_OnGroupExpandListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onGroupExpand(int) -> onGroupExpand
mono.android.widget.Filter_FilterListenerImplementor -> mono.android.widget.Filter_FilterListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onFilterComplete(int) -> onFilterComplete
mono.android.widget.NumberPicker_OnScrollListenerImplementor -> mono.android.widget.NumberPicker_OnScrollListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScrollStateChange(android.widget.NumberPicker,int) -> onScrollStateChange
mono.android.widget.NumberPicker_OnValueChangeListenerImplementor -> mono.android.widget.NumberPicker_OnValueChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
mono.android.widget.PopupMenu_OnDismissListenerImplementor -> mono.android.widget.PopupMenu_OnDismissListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDismiss(android.widget.PopupMenu) -> onDismiss
mono.android.widget.PopupMenu_OnMenuItemClickListenerImplementor -> mono.android.widget.PopupMenu_OnMenuItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.PopupWindow_OnDismissListenerImplementor -> mono.android.widget.PopupWindow_OnDismissListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDismiss() -> onDismiss
mono.android.widget.RadioGroup_OnCheckedChangeListenerImplementor -> mono.android.widget.RadioGroup_OnCheckedChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
mono.android.widget.RatingBar_OnRatingBarChangeListenerImplementor -> mono.android.widget.RatingBar_OnRatingBarChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
mono.android.widget.SearchView_OnCloseListenerImplementor -> mono.android.widget.SearchView_OnCloseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onClose() -> onClose
mono.android.widget.SearchView_OnQueryTextListenerImplementor -> mono.android.widget.SearchView_OnQueryTextListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    39:39:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
mono.android.widget.SearchView_OnSuggestionListenerImplementor -> mono.android.widget.SearchView_OnSuggestionListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:31:boolean onSuggestionClick(int) -> onSuggestionClick
    39:39:boolean onSuggestionSelect(int) -> onSuggestionSelect
mono.android.widget.SeekBar_OnSeekBarChangeListenerImplementor -> mono.android.widget.SeekBar_OnSeekBarChangeListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    40:41:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    48:49:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
mono.android.widget.ShareActionProvider_OnShareTargetSelectedListenerImplementor -> mono.android.widget.ShareActionProvider_OnShareTargetSelectedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
mono.android.widget.SlidingDrawer_OnDrawerCloseListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerCloseListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDrawerClosed() -> onDrawerClosed
mono.android.widget.SlidingDrawer_OnDrawerOpenListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerOpenListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDrawerOpened() -> onDrawerOpened
mono.android.widget.SlidingDrawer_OnDrawerScrollListenerImplementor -> mono.android.widget.SlidingDrawer_OnDrawerScrollListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onScrollEnded() -> onScrollEnded
    39:40:void onScrollStarted() -> onScrollStarted
mono.android.widget.TabHost_OnTabChangeListenerImplementor -> mono.android.widget.TabHost_OnTabChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTabChanged(java.lang.String) -> onTabChanged
mono.android.widget.TextView_OnEditorActionListenerImplementor -> mono.android.widget.TextView_OnEditorActionListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
mono.android.widget.TimePicker_OnTimeChangedListenerImplementor -> mono.android.widget.TimePicker_OnTimeChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onTimeChanged(android.widget.TimePicker,int,int) -> onTimeChanged
mono.android.widget.Toolbar_OnMenuItemClickListenerImplementor -> mono.android.widget.Toolbar_OnMenuItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.android.widget.ZoomButtonsController_OnZoomListenerImplementor -> mono.android.widget.ZoomButtonsController_OnZoomListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onVisibilityChanged(boolean) -> onVisibilityChanged
    39:40:void onZoom(boolean) -> onZoom
mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor -> mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onContextAvailable(android.content.Context) -> onContextAvailable
mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor -> mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor -> mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor -> mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor -> mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor -> mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onControllableInsetsChanged(androidx.core.view.WindowInsetsControllerCompat,int) -> onControllableInsetsChanged
mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor -> mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor -> mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor:
    13:20:void <clinit>() -> <clinit>
    25:28:void <init>() -> <init>
    65:68:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    72:74:void monodroidClearReferences() -> monodroidClearReferences
    33:34:void onDrawerClosed(android.view.View) -> onDrawerClosed
    41:42:void onDrawerOpened(android.view.View) -> onDrawerOpened
    49:50:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    57:58:void onDrawerStateChanged(int) -> onDrawerStateChanged
mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor -> mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBackStackChanged() -> onBackStackChanged
mono.androidx.fragment.app.FragmentOnAttachListenerImplementor -> mono.androidx.fragment.app.FragmentOnAttachListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor -> mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor:
    13:18:void <clinit>() -> <clinit>
    23:26:void <init>() -> <init>
    47:50:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    54:56:void monodroidClearReferences() -> monodroidClearReferences
    31:32:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    39:40:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor -> mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:32:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    40:41:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    48:49:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor -> mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor -> mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onRefresh() -> onRefresh
mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor -> mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor -> mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    40:41:void onPageScrolled(int,float,int) -> onPageScrolled
    48:49:void onPageSelected(int) -> onPageSelected
mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor -> mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onComplete(com.google.android.gms.common.api.Status) -> onComplete
mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor -> mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor -> mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> onCheckedChanged
mono.com.google.android.material.card.MaterialCardView_OnCheckedChangeListenerImplementor -> mono.com.google.android.material.card.MaterialCardView_OnCheckedChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean) -> onCheckedChanged
mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor -> mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onNavigationItemReselected(android.view.MenuItem) -> onNavigationItemReselected
mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor -> mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:30:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor -> mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    32:33:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    40:41:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    48:49:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
mono.com.google.android.material.textfield.TextInputLayout_OnEditTextAttachedListenerImplementor -> mono.com.google.android.material.textfield.TextInputLayout_OnEditTextAttachedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
mono.com.google.android.material.textfield.TextInputLayout_OnEndIconChangedListenerImplementor -> mono.com.google.android.material.textfield.TextInputLayout_OnEndIconChangedListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
mono.com.google.firebase.FirebaseAppLifecycleListenerImplementor -> mono.com.google.firebase.FirebaseAppLifecycleListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onDeleted(java.lang.String,com.google.firebase.FirebaseOptions) -> onDeleted
mono.com.google.firebase.FirebaseApp_BackgroundStateChangeListenerImplementor -> mono.com.google.firebase.FirebaseApp_BackgroundStateChangeListenerImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void onBackgroundStateChanged(boolean) -> onBackgroundStateChanged
mono.java.lang.Runnable -> mono.java.lang.Runnable:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void run() -> run
mono.java.lang.RunnableImplementor -> mono.java.lang.RunnableImplementor:
    13:17:void <clinit>() -> <clinit>
    22:25:void <init>() -> <init>
    38:41:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    45:47:void monodroidClearReferences() -> monodroidClearReferences
    30:31:void run() -> run
mono.java.util.EventListenerImplementor -> mono.java.util.EventListenerImplementor:
    13:16:void <clinit>() -> <clinit>
    21:24:void <init>() -> <init>
    29:32:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    36:38:void monodroidClearReferences() -> monodroidClearReferences
mono.javax.xml.transform.ErrorListenerImplementor -> mono.javax.xml.transform.ErrorListenerImplementor:
    13:19:void <clinit>() -> <clinit>
    24:27:void <init>() -> <init>
    32:33:void error(javax.xml.transform.TransformerException) -> error
    40:41:void fatalError(javax.xml.transform.TransformerException) -> fatalError
    56:59:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    63:65:void monodroidClearReferences() -> monodroidClearReferences
    48:49:void warning(javax.xml.transform.TransformerException) -> warning
xamarin.essentials.fileProvider -> xamarin.essentials.fileProvider:
    12:15:void <clinit>() -> <clinit>
    20:23:void <init>() -> <init>
    28:31:void monodroidAddReference(java.lang.Object) -> monodroidAddReference
    35:37:void monodroidClearReferences() -> monodroidClearReferences
